# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: tag
description: Modify tags on snapshots
flags:
    --add*=: '`tags` which will be added to the existing tags in the format `tag[,tag,...]` (can be given multiple times)'
    --path*=: only consider snapshots which include this (absolute) `path`, when no snapshot-ID is given
    --remove*=: '`tags` which will be removed from the existing tags in the format `tag[,tag,...]` (can be given multiple times)'
    --set*=: '`tags` which will replace the existing tags in the format `tag[,tag,...]` (can be given multiple times)'
    --tag*=: only consider snapshots which include this `taglist`, when no snapshot-ID is given
    -H, --host*=: only consider snapshots for this `host`, when no snapshot ID is given (can be specified multiple times)
documentation:
    command: '[AI] The `restic tag` command is used in the data backup tool, Restic, to create or manage tags for backups. A tag is a label that can be assigned to a specific backup version or set of versions. This command allows you to create, list, update, or delete tags associated with your backups. For instance, you may use it to mark certain backup points as "production," "development," or any other meaningful labels for organizational purposes. The exact usage of the `tag` command depends on the desired outcome: creating a new tag (`restic tag BOOK <TAG>`), listing all available tags (`restic tags BOOK`), updating an existing tag (`restic tag UPDATE BOOK@<TAG> <NEW_TAG>`), or deleting a tag (`restic tag DELETE BOOK@<TAG>`).'
    flag:
        add: '[AI] The `restic tag add` command is used in the data backup and sync tool, `restic`. This command is responsible for adding a new tag or label to an existing archive or snapshot in `restic`. When you run this command with the appropriate arguments, such as the path to the archive, the tag name, and the repository context, `restic` will update its metadata to associate the specified tag with the selected archive. This allows for easy identification and retrieval of specific versions of data in the future.'
        host: '[AI] `restic tag --host` is a command used in the data backup and sync tool, `restic`. The `tag` subcommand is used to create or manage tags, which are labels or names given to specific backups for easier identification. The `--host` option specifies the hostname or IP address of the remote server where the tag resides or should be replicated to. This command creates a new tag with the specified name and stores it on the remote server.'
        path: '[AI] The `restic tag --path` command in the `restic` backup tool is used to get the file path of a specific backup tag. This command takes a tag as an argument and returns the path to the data that was backed up under that tag. In other words, it allows you to retrieve the location of restored data within your backups.'
        remove: '[AI] `restic tag --remove` is a command used in the data backup and sync tool, `restic`. This command is used to remove a specific tag from a backed-up file or set of files. When you run this command, restic searches for the specified tag in your backups and removes it, effectively deleting the associated snapshot from your backups. It''s essential to be sure that you really want to delete the tag before executing this command, as the data cannot be recovered once it has been removed.'
        set: '[AI] `restic tag --set` is a command used in the data backup and sync tool, `restic`. This command sets the value of a specific key-value pair for a given backup tag. The `tag` argument specifies the name of the tag, while `--set` indicates that a new value should be set for the specified key. For example, `restic tag mytag --set key1=value1 key2=value2` sets the values of `key1` and `key2` to `value1` and `value2`, respectively, for the backup tag named `mytag`.'
        tag: '[AI] `restic tag --tag` is a command used in the data backup and sync tool, `restic`. This command is used to create or update a new tag for an existing archive with the specified tag name. A tag is a label or identifier that helps users easily locate and restore specific versions of backed-up data. By using the `--tag` option followed by the desired tag name, you can create a new tag associated with the archive in the repository. This command does not affect the actual data in the backup; it only updates metadata to reflect the new tag.'
