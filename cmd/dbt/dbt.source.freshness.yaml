# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: freshness
description: source freshness
flags:
    --exclude*=: Specify the models to exclude
    --profile=: Which profile to load. Overrides setting in dbt_project.yml
    --project-dir=: Which directory to look in for the dbt_project.yml file
    --selector=: The selector name to use, as defined in selectors.yml
    --state=: Use the given directory as the source for json files to compare with this project.
    --threads=: Specify number of threads to use.
    --vars=: Supply variables to the project.
    -o, --output=: Specify the output path for the json report.
    -s, --select*=: Specify the nodes to include
    -t, --target=: Which target to load for the given profile
documentation:
    command: '[AI] `dbt source freshness` is a command in dbt (Data Build Tool), an open-source data transformation toolkit, that checks the freshness of external data sources used in your dbt project. It compares the last modified timestamp or checksums of the files in the `sources` directory with those of the linked files in the `ref/external` directory and reports any discrepancies. The primary purpose is to ensure that the data being read from external sources remains consistent and up-to-date, thus maintaining data integrity in your data transformation workflows.'
    flag:
        exclude: '[AI] The `dbt source freshness --exclude` command is used in dbt (Data Build Tool), an open-source data transformation and testing toolkit, to check the freshness of external data sources while excluding specific models or artifacts from the check. This helps ensure that only desired data is being compared against the source, reducing unnecessary comparisons and potential false positives. The command returns a report indicating which sources have been marked as "out-of-date" based on the specified comparison settings.'
        output: '[AI] `dbt source freshness --output` is a command used in dbt (Data Build Tool), an open-source data transformation toolkit. This command checks the freshness of references to external sources (like databases or files) in dbt models and produces an output indicating which sources are outdated. It helps ensure that data used in dbt models is up-to-date, enabling reliable and accurate data transformations.'
        profile: '[AI] `dbt source freshness` is a command in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This command checks the freshness of sources used in dbt projects, ensuring that the data being used is up-to-date. The `--profile` flag is optional and specifies which profile to use when running the command. A profile defines connection configurations for various data sources like databases or files. Using a specific profile with this command ensures that the correct configuration is applied when checking source freshness.'
        project-dir: '[AI] `dbt source freshness --project-dir` is a command used in dbt (Data Build Tool), an open-source data transformation and testing tool. This specific command checks the freshness of external sources (like databases or files) that dbt models depend on. The `--project-dir` argument specifies the directory containing the dbt project file (`.dbt/projects.yml`). The output provides information about which sources are outdated and need to be refreshed for the models to use the latest data.'
        select: '[AI] `dbt source freshness --select` is a command used in dbt (Data Build Tool), an open-source data transformation toolkit. This command checks the freshness of references to external data sources defined in dbt projects and selectively refreshes them based on user input. It helps ensure that the data being used for analysis is up-to-date, improving the accuracy of downstream data transformations and reports.'
        selector: '[AI] `dbt source freshness --selector` is a command in dbt (Data Build Tool), which checks the freshness of data sources used in your dbt project. The `--selector` option allows you to specify selectors, i.e., filters, for choosing specific sources based on their configuration properties. This command helps ensure that the data being used is up-to-date and assists in maintaining data consistency within your data pipeline.'
        state: |-
            [AI] `dbt source freshness --state` is a command used in dbt (Data Build Tool), an open-source data transformation and testing toolkit. This command provides information about the freshness state of external data sources used by dbt models.

            The `--state` option displays the current state of source checks, which includes whether each source is considered "fresh" or not. A source is considered fresh if its metadata matches what is expected based on the configuration in the dbt project file (i.e., `profiles.yml`). If there's a discrepancy between the source metadata and the expected configuration, the source is marked as stale. The output of this command provides details such as the name, connection profile, last checked time, and status (fresh or stale) for each data source.
        target: '[AI] `dbt source freshness --target` is a command in dbt (Data Build Tool), which checks the freshness of data sources used in a dbt project. The `--target` option specifies the specific target database or data warehouse where the freshness check should be performed. The result shows whether the data in the target is up-to-date compared to the defined sources, helping ensure data consistency and accuracy.'
        threads: '[AI] The `dbt source freshness --threads` command is used in dbt (Data Build Tool), an open-source data transformation and testing tool, to check the freshness of external data sources or references that your dbt models depend on. This command runs with a specified number of threads to increase the concurrency of the checks, potentially reducing the overall time it takes for the process to complete. By default, this command performs an MD5 hash comparison between the locally cached metadata and the remote source metadata. If there are differences detected, dbt will attempt to fetch and cache the updated metadata from the source.'
        vars: '[AI] `dbt source freshness --vars` is a command used in dbt (Data Build Tool), an open-source data transformation and testing tool, to check the freshness of external data sources referenced in dbt models. The `--vars` option allows you to pass custom variables during command execution. Specifically, it sets variable values that are used to configure data source-related settings such as credentials or connection strings. By running this command, dbt assesses whether the external data sources are up-to-date based on the last modification time or other defined criteria, helping ensure data consistency and accuracy in your analytical workflows.'
