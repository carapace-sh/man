# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: lslocks
description: List local system locks
flags:
    --output-all: output all columns
    -J, --json: use JSON output format
    -V, --version: display version
    -b, --bytes: print SIZE in bytes rather than in human readable format
    -h, --help: display this help
    -i, --noinaccessible: ignore locks without read permissions
    -n, --noheadings: don't print headings
    -o, --output=: define which output columns to use
    -p, --pid=: display only locks held by this process
    -r, --raw: use the raw output format
    -u, --notruncate: don't truncate text in columns
documentation:
    command: '[AI] The `lslocks` command is not a standard Unix or Linux command. It seems to be specific to certain NFS (Network File System) implementations, such as Sun''s NFS server. This command is used to list the files and directories on an NFS mounted file system along with the locks currently held on them by various processes or clients. The output of `lslocks` includes the file path, lock owner, process ID, and the type of lock (read or write). It helps in monitoring and troubleshooting concurrent access issues on shared files and directories using NFS.'
    flag:
        bytes: '[AI] `lslocks --bytes` is a command used in Linux file systems to list the files with extended attributes that have locked bytes set. The `--bytes` option displays the number of locked bytes for each file. Extended attributes are key-value pairs associated with files or directories that can be used to store custom data. Locked bytes represent a type of extended attribute that locks a specific portion of a file''s data. This command helps in identifying files with locked bytes and understanding the amount of data affected by these locks.'
        help: |-
            [AI] `lslocks --help` is a command used in Linux systems to display information about the `lslocks` utility. It provides brief usage instructions and options, allowing users to understand how to use this tool effectively.

            The `--help` option is a standard argument that many Unix-like commands use for providing help and usage information. When you run `lslocks --help`, it will display the following:

            1. Brief description of the command: "Display file lock information."
            2. Synopsis (usage example): `lslocks [OPTIONS] [FILE...]`
            3. A list of available options with their descriptions:
               - `-a, --alldevs`: Show all device names, not just the last one.
               - `-d, --directory`: Only lock and display directories.
               - `-i, --interactive`: Prompt for confirmation before taking each action.
               - `-l, --long`: Show detailed lock information.
               - `--quiet`: Suppress normal output; only display errors.
            4. An explanation of the exit codes returned by the command.
            5. A note about reporting bugs or requesting features.

            This help message aims to give users a clear understanding of how to use the `lslocks` utility, what its options do, and when they might be useful.
        json: |-
            [AI] `lslocks --json` is a command used in Linux file systems, specifically within the GNU Coreutils package. It's designed to list all file locks (both advisory and mandatory) in a JSON format for further processing or analysis.

            Here's a brief explanation:

            - 'lslocks' is a command-line utility that displays currently open file locks on files and records in the file system.
            - The '--json' option instructs 'lslocks' to output the lock information in JSON format, which is a popular data interchange format with a well-defined structure.
            - Each JSON object represents an individual lock and includes key-value pairs for details such as process ID (PID), lock type, file name, and lock owner.

            For instance: `{"type":"EX","file":"/var/log/syslog","pid":12345,"owner":"username"}`.

            The 'EX' in the example above represents an exclusive lock, but there are other types like 'RW' for read-write locks and 'RL' for read locks. The JSON output allows easy integration with various data processing tools and scripts.
        noheadings: '[AI] `lslocks --noheadings` is a command in Linux used with the `findutils` package to list file locks created by various processes. The `--noheadings` option suppresses the display of column headers, resulting in only data being displayed, making the output more focused on the file locks and their details.'
        noinaccessible: '[AI] The `lslocks --noinaccessible` command is a Linux utility used to list file and record locks in a file system. The `--noinaccessible` option tells the command to only display locks on files and records that are currently accessible, i.e., not locked by a process running on a remote or unreachable NFS server. It helps administrators diagnose and manage file locking issues related to concurrent access to shared files across a network.'
        notruncate: '[AI] `ls locks --notruncate` is a command used in Linux file systems, specifically with the GNU `findutils` package''s `ls` and `locks` utilities. This command lists files with locks or lock files, i.e., files indicating that a process holds a lock on a resource. The `--notruncate` option prevents the output from being truncated if it cannot fit in the terminal. In other words, it ensures the entire output is displayed without getting cut off at the end of the terminal window.'
        output: '[AI] `ls locks --output` is a command used in Linux file systems, specifically within the GNU Coreutils package. This command displays information about file locks created by processes in a terse format. The `--output` option specifies that only the output should be displayed and not the progress bar or other additional information. The output will list the process ID (PID), the name of the locked file, and the type of lock (e.g., record or shared).'
        output-all: '[AI] `lslocks --output-all` is a command used in Linux file systems, specifically those using the Locks Manager for managing file locks. The `--output-all` option instructs the `lslocks` command to display all available lock information for files and directories. This includes the process ID (PID) of the processes holding each lock, lock type, and lock mode. The output can help identify which processes have open locks on specific files, potentially useful for troubleshooting issues with concurrent access or understanding lock behavior within a system.'
        pid: '[AI] The `ls locks --pid` command is a utility from the Linux Inotify-tools package, used to list file locks managed by the Linux kernel''s `flock(1)` or `fcntl(2) LOCK_EX/LOCK_SH` mechanisms. It displays information about the files and processes holding the locks, along with their PIDs (Process Identifiers). This command can be helpful in debugging concurrent access to files, ensuring proper locking protocols are being followed.'
        raw: |-
            [AI] `lslocks --raw` is a command used in Linux to list file locks set by processes. The `--raw` option displays the output in a raw format that includes the process ID (PID), the lock type, and the file name. This can be useful for troubleshooting issues related to concurrent access of files. For example:

            ```
            LOCK TYPE 1128324659.000227 PID 12345 FILENAME /var/log/syslog
            ```

            This line indicates that process with PID 12345 holds a lock type 1 on the file `/var/log/syslog`.
        version: '[AI] `lslocks --version` is a command used in Linux file systems to display version information about the locks package. Locks are used to manage concurrent access to files or other resources, preventing data corruption and inconsistencies. The `--version` option is used to print out the current version number of the installed locks package, allowing users to check if they have the latest version or not.'
