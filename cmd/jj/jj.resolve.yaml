# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: resolve
description: Resolve a conflicted file with an external merge tool
flags:
    -h, --help: Print help (see more with '--help')
    -l, --list: Instead of resolving one conflict, list all the conflicts
    -q, --quiet: Do not print the list of remaining conflicts (if any) after resolving a conflict
    -r, --revision=: ""
documentation:
    command: '[AI] The `jj resolve` command is used in Jupyter Notebooks to download and install dependencies listed in a project''s `requirements.txt` or `environment.yml` file. It is part of the Jupyter Notebook extension called "Jupyterlab Extension for Conda". This command retrieves the necessary packages from Anaconda or other Conda repositories and creates a new environment with those dependencies.'
    flag:
        help: '[AI] `jj resolve --help` is a command used in Jira, specifically with the Jira CLI tool (Command Line Interface) named "jj". This command displays help information about the `resolve` sub-command, which is used for resolving issues in Jira projects. It provides detailed information on how to use this command with different options and arguments. It can help users understand what issues they can resolve, how to specify the issues, and other relevant details.'
        list: '[AI] `jj resolve --list` is a command used with the Jira Java library (JJ) to interact with Jira repositories programmatically. This specific command displays a list of unresolved issues, i.e., issues that have not been linked or fixed yet in your project. By executing this command, you can obtain information about the IDs and other relevant details of these issues, helping you manage and prioritize your work more effectively.'
        quiet: '[AI] The `jj resolve --quiet` command is used in Jira, a project management tool by Atlassian. It''s a quiet resolution of an issue, meaning it will attempt to automatically apply the next available resolution without displaying any dialog boxes or notifications that are usually shown during the process. This can be useful when you want to resolve issues programmatically or in large batches without manual intervention.'
        revision: '[AI] `jj resolve --revision` is a command used in the JetBrains IntelliJ IDEA version control system integration, specifically with Git. This command resolves any merge conflicts that might have occurred during a Git commit or pull request by automatically merging the changes from the specified revision into your current branch. The `--revision` option specifies the exact Git commit hash or branch name to use for the merge resolution.'
