# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: yank
description: Remove a pushed crate from the index
flags:
    --index=: Registry index to yank from
    --registry=: Registry to use
    --token=: API token to use when authenticating
    --undo: Undo a yank, putting a version back into the index
    --version=: The version to yank or un-yank
    -h, --help: Print help
    -q, --quiet: Do not print cargo log messages
documentation:
    command: '[AI] `cargo yank` is a Cargo subcommand used to remove dependencies from your project''s `Cargo.toml` file and check out older versions if desired, with the intention of resolving dependency conflicts or downgrading problematic updates. When you run `cargo yank <package>`, it will attempt to find a version that is compatible with all other dependencies and write an updated `Cargo.toml`. If you specify a particular version number, Cargo will check out that version and add it to the git repository for your project, allowing you to easily revert back if necessary.'
    flag:
        help: |-
            [AI] `cargo yank` is a Cargo sub-command used to manage dependency versions in Rust projects. The `--help` flag provides information on how to use this command effectively. It prints out usage instructions, available options, and their descriptions. Here's a brief summary:

            `cargo yank [options] [DEPENDENCY]...`

            - Updates the dependencies listed in the argument to the latest patch version in the project's `Cargo.toml`.
            - You can specify multiple dependency names separated by spaces.
            - Use `--features` or `--no-features` flags to include/exclude specific dependency features.
            - Use `--locked` flag to lock dependencies at their current versions.
            - `cargo yank --help` will print the command usage and available options with descriptions.
        index: '[AI] `cargo yank --index` is a command used in Rust programming with Cargo build tool. It interacts with the project''s dependency graph to remove (yank) a specific dependency and its transitive dependencies from the current project''s Cargo.toml file, while keeping the version numbers of other dependencies unchanged. This command helps manage project dependencies more fine-grainedly by allowing developers to experiment with different versions or isolate issues related to particular dependencies.'
        quiet: '[AI] `cargo yank --quiet` is a command used in Rust programming language''s package manager, Cargo. It is used to remove a dependency from the current project''s `Cargo.toml` file. The `--quiet` flag suppresses informational messages during the execution of the command, making the output display only error messages if any occur.'
        registry: '[AI] `cargo yank --registry` is a command used in Rust programming language''s Cargo build tool. This command is used to replace dependencies of a project with specific versions from the Crates.io registry. The `--registry` flag tells Cargo to search for replacement versions only on the Crates.io registry, instead of checking other sources like local or Git dependencies. By default, Cargo tries to find the best version that satisfies dependency constraints, but you can also provide specific versions to be used with the command.'
        token: '[AI] `cargo yank --token` is a command used in Rust programming language''s Cargo build tool. This command is responsible for removing dependencies from the `Cargo.toml` file, specifically it removes dependencies along with their version tokens. The `--token` flag ensures that only the dependency''s token (version number) is removed, leaving its name unchanged in the manifest file.'
        undo: '[AI] `cargo yank --undo` is a command used in Rust programming language''s package manager, Cargo. It undoes the last crate version removal or update operation performed with `cargo yank`. In other words, it reinstates the previously removed or downgraded crate and its dependencies back to their previous versions. This command is useful when one mistakenly removes or downgrades a dependency and wants to restore the original state.'
        version: '[AI] `cargo yank --version` is a command used in Rust programming language''s package manager, Cargo. This command displays the version number of Cargo''s `yank` subcommand, which is a feature that helps manage dependencies by installing a newer version or rolling back to a previous version. It provides information about the specific version of this functionality being used in your project.'
