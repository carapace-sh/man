# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: unbottled
description: Show the unbottled dependents of formulae
group: developer
flags:
    --debug: Display any debugging information.
    --dependents: Skip getting analytics data and sort by number of dependents instead.
    --eval-all: Evaluate all available formulae and casks, whether installed or not, to check them. Implied if `HOMEBREW_EVAL_ALL` is set.
    --help: Show this message.
    --lost: Print the `homebrew/core` commits where bottles were lost in the last week.
    --quiet: Make some output more quiet.
    --tag: Use the specified bottle tag (e.g. `big_sur`) instead of the current OS.
    --total: Print the number of unbottled and total formulae.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew unbottled` is a Homebrew command used to install theHEAD (or latest changes) of a Git repository managed by Homebrew instead of using a pre-built bottle. This command retrieves the source code directly from the Git repository, compiles it, and installs the package locally. It''s particularly useful when you want to use the very latest version of a package that might not be available in the Homebrew tap yet.'
    flag:
        debug: '[AI] `brew unbottled` is a command used in Homebrew, a popular package manager for macOS. This command retrieves the source code of a Homebrew formula from its Git repository and attempts to compile it locally. The `--debug` flag is an optional argument that enables more detailed debugging information during the build process. It can help identify issues with dependencies or configuration options, making it useful when troubleshooting complex installations.'
        dependents: '[AI] `brew unbottle` is a command used in Homebrew, a popular package manager for macOS. The `--dependents` option specifies that the command should not only install the specified formula (package) but also its dependencies. In other words, it will install both the main formula and any formulas that are required as dependencies. This can be useful when you want to ensure that all necessary components for a particular package are installed.'
        eval-all: '[AI] `brew unbottled` is a command used in Homebrew, a popular package manager for macOS. It retrieves the source code of an already bottled (packaged) formula and compiles it from source instead. The `--eval-all` option is used to evaluate all formulas listed in the given tap or repository, meaning that all dependencies and their dependencies will also be built and installed. This can be useful when updating or installing packages with unmet dependencies.'
        help: |-
            [AI] The `brew unbottle` command is a utility provided by Homebrew, a popular package manager for macOS. This command is used to install software from bottle files, which are precompiled packages that include the necessary dependencies and libraries for the installed software.

            When you run `brew unbottle --help`, you'll see a brief explanation of how to use this command:

            ```ruby
            Usage: brew unbottle [FORMULA|CASK] [BOTTLE|REPOSITORY/BOTTLE]

            Install the software described by a bottle file. The BOTTLE can be either a local file or a remote URL. If no argument is provided, the latest bottle for the installed formula will be used.
            ```

            Here's a breakdown of the usage:

            - `[FORMULA|CASK]` refers to the Homebrew Formula or Cask (for macOS applications) that you want to install from a bottle file. You can find the name of the formula or cask by running `brew info [FORMULA_OR_CASK]`.
            - `[BOTTLE|REPOSITORY/BOTTLE]` is the bottle file itself, which can be either a local file on your system or a remote URL pointing to the bottle file. The bottle file usually has a `.bottle` extension.

            For example, if you want to install MySQL using a bottled package, you could run:

            ```sh
            brew unbottle mysql
            ```

            This command would download and install the latest available bottled package for MySQL. If you have a specific bottle file in mind, you can provide its path or URL instead:

            ```sh
            brew unbottle /Users/username/Downloads/mysql57-latest.bottle
            ```

            or

            ```sh
            brew unbottle https://homebrew.bintray.com/bottles/mysql-5.7.31.highsierra.bottle.tar.gz
            ```
        lost: |-
            [AI] The command `brew unbottle --lost` in Homebrew, a popular package manager for macOS, is used to force install an already-downloaded but not installed bottle (precompiled binary package). The `--lost` flag indicates that the installation should proceed even if Homebrew cannot find the required formula or dependency files.

            In simpler terms, this command is used when Homebrew fails to automatically install a previously downloaded package due to missing dependencies or formulae. By using the `--lost` flag, Homebrew will attempt to install the package despite these missing components.
        quiet: '[AI] `brew unbottled` is a command used with Homebrew, a popular package manager for macOS. The `--quiet` option is passed to this command to suppress informational output during the installation process of an unbottled formula (a formula that installs software from source). Essentially, it runs the command with minimal output, making the installation process less noisy.'
        tag: '[AI] The `brew unbottle --tag` command in Homebrew (a popular package manager for macOS) is used to install an already bottled version of a Homebrew formula from local storage or a custom URL, instead of downloading and building it from source. The `--tag` option specifies the name or the hash of the particular bottle to be installed. When you run `brew install` for a formula, Homebrew will automatically manage downloading, bottling, and installing the package. But with `brew unbottle`, you can manually select an existing bottle. This command is helpful when dealing with large binary packages, or when you want to use a specific version of a software that''s available in the local Homebrew repository but not yet available on tap (Homebrew''s remote repository).'
        total: '[AI] `brew unbottle --total` is a command used in Homebrew, a popular package manager for macOS. This command unbottles all currently uninstalled formulae that have a bottled pkg-config file, meaning it will download and build the software from source. The `--total` option displays the total number of formulas to be processed but does not actually start the installation process until you press Enter. It''s useful for getting an overview of how many packages will be built before committing to the actual installations.'
        verbose: '[AI] `brew unbottled` is a command used in Homebrew, a popular package manager for macOS. This command with the `--verbose` option is used to install software from Homebrew''s tap (a repository of formulae) as an already-built binary package instead of building it from source. The `--verbose` flag increases the amount of output during the installation process, providing more detailed information about each step taken, making it helpful for troubleshooting or for better understanding of the installation process.'
