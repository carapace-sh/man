# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: parse
description: Parse stdin
flags:
    --no-dump: Suppress printing
documentation:
    command: '[AI] `rust-analyzer parse` is a Rust language tool command used to analyze and check the syntax of a single Rust file or multiple files in a project. It invokes the Rust compiler frontend, rustc, under the hood, but provides more features and flexibility than a simple compile command. These features include providing richer error messages, offering suggestions for corrections, and allowing incremental parsing. This allows developers to catch syntax errors early and understand potential issues in their codebase without having to run a full build.'
    flag:
        no-dump: |-
            [AI] `rust-analyzer parse --no-dump` is a command used in Rust programming language development. The `rust-analyzer` tool is a powerful compiler and linter for Rust.

            The `parse` subcommand instructs `rust-analyzer` to perform a syntax analysis of a given Rust source file without executing any code or generating diagnostic messages. This can be useful for preprocessing files or for integrating `rust-analyzer` into other development tools.

            The `--no-dump` flag prevents the generation of intermediate data during the parse step, which can help reduce disk usage and improve performance in automated workflows. This means that no output is printed to stdout or saved as a file during parsing.
