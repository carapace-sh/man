# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: info
description: Show info about cache or info related to source file
flags:
    --cert=: Load certificate authority from PEM encoded file
    --import-map=: Load import map file
    --json: 'UNSTABLE: Outputs the information in JSON format'
    --location=: Show files used for origin bound APIs like the Web Storage API when running a script with '--location=<HREF>'
    -r, --reload?: Reload source code cache (recompile TypeScript)
documentation:
    command: '[AI] `deno info` is a Deno command used to display project metadata and dependency information. It provides details about the Deno project, including its name, version, dependencies, and their versions. This can help in understanding the project''s structure and ensuring that all required dependencies are correctly installed for proper execution.'
    flag:
        cert: '[AI] `deno info --cert` is a command used in Deno, a modern and secure TypeScript runtime. This command retrieves information about a specific SSL/TLS certificate for a given URL. The output includes details such as the certificate''s issuer, validity period, serial number, and public key. This can be helpful for verifying the authenticity of a website or checking the certificate''s expiration date.'
        import-map: '[AI] The `deno info --import-map` command is a tool provided by Deno, a modern and secure runtime for JavaScript and TypeScript. This command generates an import map file, which is a JSON file that describes the resolution strategy for a Deno project. It lists all the dependencies with their corresponding entry points and version numbers. The import map allows Deno to efficiently load and manage external modules, enhancing the build time performance and flexibility of your Deno projects.'
        json: '[AI] `deno info --json` is a command-line utility provided by Deno, a modern and secure TypeScript runtime. This command generates output in JSON format containing detailed information about the installed Deno version, the available system dependencies, and the running environment. This data can be used for various purposes such as automation, integration testing, or for comparing different Deno setups.'
        location: |-
            [AI] `deno info` is a command-line tool provided by Deno, a modern runtime for JavaScript and TypeScript. The `--location` flag is an option that can be passed to this command to output detailed information about the current Deno project's location.

            Specifically, it will print out the following:

            1. Project name: Displays the name of the current Deno project, usually derived from the `deno.json` or `package.json` file in the project directory.
            2. Version: The Deno version being used to run the command.
            3. Location: The absolute path to the current Deno project directory.
            4. Import map: A JSON representation of the import map for the project, which is a file that maps external module imports to their local paths or URLs.

            For example, if you have a Deno project located at `/my_project`, running `deno info --location` would output something like:

            ```json
            {
              "name": "my_project",
              "version": "0.128.0",
              "location": "/path/to/my_project",
              "import_map": {
                "deno": "/.deno/deno.js",
                "https": "https://deno.land/x/",
                "file:/": "/path/to/my_project/"
              }
            }
            ```
        reload: '[AI] `deno info --reload` is a command-line tool provided by Deno, a modern JavaScript runtime. It''s used to fetch metadata about a Deno project, including its dependencies and their versions. The `--reload` flag tells Deno to keep checking for updates of the project''s dependencies in real-time. This allows developers to quickly see if there are any new dependency updates available and apply them without leaving the terminal.'
