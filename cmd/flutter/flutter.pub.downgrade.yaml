# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: downgrade
description: Downgrade the current package's dependencies to oldest versions
flags:
    --no-offline: Do not use cached packages instead of accessing the network.
    --offline: Use cached packages instead of accessing the network.
    -C, --directory=: Run this in the directory<dir>.
    -h, --help: Print this usage information.
    -n, --dry-run: Report what dependencies would change but don't change any.
documentation:
    command: '[AI] The `flutter pub downgrade` command is used to downgrade the version of a specified dependency in a Flutter project''s `pubspec.yaml` file. When you run this command followed by the package name, for instance, `flutter pub downgrade --save-exact flutter_bloc:^3.0.1`, it will update your `pubspec.yaml` to list that dependency at the specified version instead of its current or latest version. It''s important to note that using an outdated package might introduce security vulnerabilities and compatibility issues, so consider the potential risks before downgrading.'
    flag:
        directory: '[AI] The `flutter pub downgrade` command is used in Flutter development to downgrade specific dependencies listed in the `pubspec.yaml` file to their previous versions. The `--directory` option specifies the directory path where the Flutter project is located. When you run `flutter pub downgrade --directory <path_to_project>`, it will search for the specified dependencies within that project''s `pubspec.yaml` file and downgrade them to their previous versions, as indicated in their respective `version` fields. This can be useful when encountering compatibility issues or when working with outdated third-party packages.'
        dry-run: '[AI] `flutter pub downgrade --dry-run` is a command used in Flutter development to simulate downgrading dependencies in the project''s `pubspec.yaml` file without actually making any changes. This can be helpful for assessing potential impacts of dependency version downgrades before applying them, which may include breaking other packages or introducing security vulnerabilities. The `--dry-run` option simply performs the specified action without making any persistent changes to the filesystem.'
        help: '[AI] `flutter pub downgrade` is a command-line tool provided by the Flutter framework for managing dependencies in a Flutter project. The `downgrade` sub-command is used to downgrade the version of a specific package mentioned in the `pubspec.yaml` file to an earlier version. The `--help` option displays detailed help information about how to use this command, including available options and their usage. So, `flutter pub downgrade --help` will show you how to downgrade Flutter packages using the Flutter CLI with various available options.'
        no-offline: '[AI] `flutter pub downgrade --no-offline` is a command used in Flutter development to downgrade a specific dependency in the project''s `pubspec.yaml` file without storing the older version offline. This means that when you run this command, the dependency will be downloaded and installed from the remote package registry again instead of using a previously cached version. It is useful when you want to use an older version temporarily for testing or debugging purposes.'
        offline: '[AI] `flutter pub downgrade --offline` is a command used in Flutter development for manually downgrading dependencies listed in the `pubspec.yaml` file without connecting to the internet. The `--offline` flag ensures that no network connection is required during the process, making it useful when working offline or when encountering network issues. This can help prevent unexpected updates or version conflicts within a project.'
