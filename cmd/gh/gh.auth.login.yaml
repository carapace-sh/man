# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: login
description: Log in to a GitHub account
flags:
    --insecure-storage: Save authentication credentials in plain text instead of credential store
    --secure-storage&: Save authentication credentials in secure credential store
    --with-token: Read token from standard input
    -h, --hostname=: The hostname of the GitHub instance to authenticate with
    -p, --git-protocol=: 'The protocol to use for git operations on this host: {ssh|https}'
    -s, --scopes*=: Additional authentication scopes to request
    -w, --web: Open a browser to authenticate
documentation:
    command: '[AI] `gh auth login` is a GitHub CLI (Command Line Interface) command used to authenticate and link your local development environment with a specific GitHub account for easier collaboration on repositories and projects. When executed, it opens a web page in your default web browser where you''ll be prompted to log in or allow access if the machine is already associated with an existing GitHub account. After successful authentication, the CLI tool generates and stores a secure SSH key or personal access token for seamless Git operations without requiring re-entering your credentials every time.'
    flag:
        git-protocol: '[AI] `gh auth login --git-protocol` is a command used with the GitHub CLI (gh) to authenticate and authorize a new machine or repository to access your GitHub account. The `--git-protocol` option specifies the use of SSH key-based authentication via Git over HTTPS, providing an extra layer of security by encrypting the communication between the client and the server. This method is recommended for securely managing and deploying code to GitHub repositories.'
        hostname: |-
            [AI] `gh auth login --hostname` is a command used in GitHub's Git-over-SSH configuration. This command is used to authenticate and authorize a new machine or environment to access GitHub repositories using SSH keys.

            The `--hostname` option specifies the hostname (or IP address) of the current machine, which will be associated with the new SSH key for future Git operations. This helps GitHub distinguish between different machines or environments that are accessing your account.

            Once you run this command, you'll be prompted to open a web page in your default web browser and sign in to your GitHub account. After signing in, you'll approve the new SSH key for the given hostname. This process sets up the new machine or environment with secure access to your GitHub repositories using SSH keys.
        insecure-storage: '[AI] `gh auth login --insecure-storage` is a command used with the GitHub CLI (Git Hub Command Line Interface) to log in to GitHub using a personal access token stored in your operating system''s keychain or other insecure storage, bypassing the standard two-factor authentication for added convenience. It can pose a security risk, as the tokens are not encrypted at rest and may be accessible if your machine is compromised.'
        scopes: '[AI] `gh auth login --scopes` is a command used in GitHub''s command-line tool (GitHub CLI) to authenticate and link your local machine with your GitHub account for better integration with GitHub services. The `--scopes` option allows you to specify particular access scopes that you want to grant to the application requesting authentication, such as `repo:status`, `code:read_source`, or others. These scopes define the level of permissions the authenticated application will have on your GitHub resources.'
        secure-storage: '[AI] `gh auth login --secure-storage` is a command used with GitHub''s git-for-windows (gh) tool to authenticate and store your GitHub access token securely in your Windows Credential Manager. This command interacts with the GitHub authentication system, prompts you for consent if necessary, and then securely saves the token so it can be automatically used when making GitHub API calls or pushing/pulling code from GitHub repositories within that environment.'
        web: '[AI] `gh auth login --web` is a command used in GitHub''s Git CLI (git-hub) for authentication. It initiates a web-based authentication flow in your default web browser, allowing you to log in or link a new account to your local Git configuration. After successful authorization, the command stores the necessary tokens and configurations for seamless Git operations with the authenticated GitHub account.'
        with-token: '[AI] The `gh auth login --with-token` command is used in GitHub''s git client (Git for Windows or Linux) to authenticate with GitHub using a personal access token instead of typical username and password authentication. This method provides an extra layer of security as the token is longer lived than a password and can be revoked or updated if compromised. The command prompts you to enter your token, then sets up the necessary configuration for Git to authenticate with GitHub using this token.'
