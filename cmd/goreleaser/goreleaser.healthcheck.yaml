# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: healthcheck
aliases:
    - hc
description: Checks if needed tools are installed
flags:
    -f, --config=: Configuration file
    -q, --quiet: 'Quiet mode: no output'
documentation:
    command: '[AI] `goreleaser healthcheck` is a command provided by GoReleaser, a popular tool for packaging and releasing Go projects. This command checks the build and release environment for common issues that might prevent successful builds or releases. It runs a series of tests, such as checking the version number, Go installation, and dependencies, to ensure a clean and stable build process. The output is a summary of any detected issues with suggested solutions, helping developers address potential problems before proceeding with a new release.'
    flag:
        config: '[AI] `goreleaser` is a popular tool used for simplifying the process of building, testing, and releasing Go projects. The command `goreleaser healthcheck --config` is used to check the status and validity of the configuration file used by `goreleaser`. This command examines the provided configuration file (specified through flags or a file path), ensuring that all necessary sections and settings are present and correctly formatted. The output will indicate whether the configuration passes validation, providing peace of mind before executing other commands like building or releasing.'
        quiet: '[AI] `goreleaser` is a popular tool used in Go development for automated building, testing, and releasing. The `healthcheck` command is specifically used to check the status of your project before or after a release process. The `--quiet` flag is an optional argument that silences the output of any progress messages or logs during the healthcheck process. It''s useful if you want to run multiple healthchecks in sequence without interruptions from previous outputs. In summary, using `goreleaser healthcheck --quiet` ensures a quiet and focused healthcheck process with minimal output.'
