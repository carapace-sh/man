# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: version
description: Apply a new version to the current package
group: general
flags:
    -d, --deferred: Prepare the version to be bumped during the next release cycle
    -i, --immediate: Bump the version immediately
documentation:
    command: '[AI] `yarn version` is a command used with Yarn, a popular JavaScript package manager. It automates the process of updating the project''s `package.json` file with a new version number for the specified package(s). The user can specify a new version number or let Yarn increment it automatically based on a defined semantic versioning strategy (major, minor, patch, or pre-release tags). This command makes maintaining and updating versions of a project easier and more consistent.'
    flag:
        deferred: '[AI] `yarn version --deferred` is a command used with Yarn, a popular JavaScript package manager. This command helps manage dependencies'' major versions during the application versioning process. It generates or updates the `package-lock.json` file with specific, deferred version numbers for each direct dependency in your project. These deferred versions do not change unless their corresponding main application version is bumped. The primary purpose of using this command is to ensure that dependent packages'' major versions stay consistent during semantic versioning updates while allowing the flexibility to update them independently when needed.'
        immediate: '[AI] The `yarn version --immediate` command is used to update only the immediate dependencies of your project in your Yarn package manager. This means that only the packages directly listed as dependencies in your `package.json` file will be updated, while their own dependencies remain unchanged. It''s useful when you want to ensure compatibility between the versions of the direct dependencies without affecting other parts of the dependency tree.'
