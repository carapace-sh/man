# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: turbo
description: The build system that makes ship happen
flags:
    --cache-dir=: Override the filesystem cache directory
    --cache-workers=: 'Set the number of concurrent cache operations (default 10) [default: 10]'
    --concurrency=: Limit the concurrency of task execution. Use 1 for serial (i.e. one-at-a-time) execution
    --continue: Continue execution even if a task exits with an error or non-zero exit code
    --dry-run=: '[possible values: text, json]'
    --filter=: Use the given selector to specify package(s) to act as entry points
    --force: Ignore the existing cache (to force execution)
    --global-deps=: Specify glob of global filesystem dependencies to be hashed
    --graph=: Generate a graph of the task execution and output to a file when a filename is specified
    --ignore=: Files to ignore when calculating changed files (i.e. --since). Supports globs
    --include-dependencies: Include the dependencies of tasks in execution
    --log-prefix=: Use "none" to remove prefixes from task logs
    --no-cache: Avoid saving task results to the cache. Useful for development/watch tasks
    --no-daemon: Run without using turbo's daemon process
    --no-deps: Exclude dependent task consumers from execution
    --output-logs=: Set type of process output logging.
    --parallel: Execute all tasks in parallel
    --profile=: File to write turbo's performance profile output into
    --remote-only: Ignore the local filesystem cache for all tasks
    --scope=: Specify package(s) to act as entry points for task execution. Supports globs
    --since=: Limit/Set scope to changed packages since a mergebase
persistentflags:
    --api=: Override the endpoint for API calls
    --color: Force color usage in the terminal
    --cpuprofile=: Specify a file to save a cpu profile
    --cwd=: The directory in which to run turbo
    --heap=: Specify a file to save a pprof heap profile
    --login=: Override the login endpoint
    --no-color: Suppress color usage in the terminal
    --preflight: When enabled, turbo will precede HTTP requests with an OPTIONS request for authorization
    --single-package: Run turbo in single-package mode
    --skip-infer: Skip any attempts to infer which version of Turbo the project is configured to use
    --team=: Set the team slug for API calls
    --token=: Set the auth token for API calls
    --trace=: Specify a file to save a pprof trace
    --verbosity=: Verbosity level
    --version: ""
    -h, --help: Print help
documentation:
    command: '[AI] The term "turbo" is commonly used to refer to a type of engine supercharger called a turbocharger. A turbocharger uses exhaust gas pressure to force air into an engine''s combustion chamber, increasing power and efficiency. It provides better fuel economy and performance compared to naturally aspirated engines by compressing the air entering the engine. In summary, "turbo" is a term for a forced induction system that enhances engine power and efficiency using exhaust gas pressure.'
    flag:
        cache-dir: '[AI] The `--cache-dir` option in the `npm` command with `Turbo` as a prefix creates or specifies a directory where npm will cache downloaded packages for faster installation and build processes. The flag value is the path to the desired cache directory. Using this flag can improve the performance of npm installations by reducing the time needed to download packages that have already been installed before.'
        cache-workers: '[AI] The `--cache-workers` flag for NPM''s `turbo` feature is used to configure the number of worker threads that will be employed during the installation or build process for caching and reusing assets. This helps speed up the npm operation by parallelizing the tasks, thus reducing the overall time taken for the command to complete. The default value for this flag is 5.'
        concurrency: '[AI] The `--concurrency` flag in Turbo, a Rust build tool for creating and managing Cargo projects, specifies the maximum number of tasks that can be run concurrently during a build process. This means that Turbo will try to execute up to the specified number of tasks at the same time, which can help speed up the build process if your machine has multiple cores or processes. By default, `--concurrency` is set to 1, meaning only one task runs at a time, but you can increase it for parallel processing.'
        continue: '[AI] The `--continue` flag used with Git''s `git turbo` command is utilized to instruct Git to resume a previously failed or interrupted git push operation. When you encounter network issues, Git may not be able to complete the push. In such cases, you can use the `git turbo --continue` command to resume the interrupted push from where it left off instead of starting over. This flag helps save time and resources by avoiding unnecessary re-transferring of data that has already been pushed successfully.'
        dry-run: '[AI] The `--dry-run` flag in Turbo is a command-line option used to test or simulate the effects of a given Turbo command without actually executing it. It provides feedback on what changes would be made if the command were run for real, allowing users to review and confirm the intended actions before committing to them. This can help prevent unintended consequences and ensure that commands are used correctly.'
        filter: '[AI] The `--filter` option in Turbo, a command-line tool for processing and transforming data, is used to specify filters or actions to be applied on input data. These filters are small reusable components that perform specific tasks like selecting certain records, mapping values, or aggregating data. By providing one or more filter expressions separated by the pipe symbol `|`, you can chain multiple filters together to build complex transformations on your data.'
        force: |-
            [AI] The `--flag turbo` and `--flag force` are separate command-line options.

            `--flag turbo` is an optimization flag used in various software applications, especially in compilers or build tools. It enables fast-compilation modes that prioritize execution speed over other factors like debugging information or comprehensive optimizations. This flag can lead to quicker builds but may result in less efficient or less robust code.

            `--flag force`, on the other hand, is a force option used in various contexts. It forces an action to proceed without asking for confirmation or checking for potential errors or conflicts. Using this flag may bypass important safety checks and can lead to unintended consequences if not used carefully.
        global-deps: |-
            [AI] The `--flag turbo --global-deps` is a command-line option used with Yarn, a popular package manager for JavaScript projects. This flag enables TurboMode and sets global dependencies to be installed outside of the current project's node_modules directory.

            TurboMode is a performance improvement feature in Yarn that speeds up installation times by caching previously downloaded packages. Global dependencies are packages installed with the `-g` or `--global` flag, which are not scoped to a specific project but can be used across multiple projects on your system. By default, global dependencies are installed within each project's node_modules directory. However, using the `--global-deps` flag instructs Yarn to install these packages globally but in a dedicated directory, usually under `~/.yarn-global`.

            Using this flag can save disk space and simplify dependency management by keeping all global dependencies in one place. It also makes it easier to switch between projects that require different versions of the same global package without interfering with each other.
        graph: '[AI] The `--graph` flag in Turbo, a graph query engine for Apache Drill, is used to generate and display the execution plan of a graph query as a Directed Acyclic Graph (DAG). This visualization helps users understand how data is processed during query execution, identifying potential performance bottlenecks or optimization opportunities.'
        ignore: '[AI] The `--ignore` flag used with the Turbo build tool is optional and modifies the build process by specifying a list of files or directories that should be ignored during the build. This means those files will not be processed, compiled, or included in the output. It can be useful for excluding large or unnecessary files from the build to save time or resources. For example, `turbo build --ignore my_large_file.txt` would exclude that file from being built.'
        include-dependencies: '[AI] The `--flag turbo --include-dependencies` is a command-line option used with some build systems, such as Autotools or CMake, to accelerate the build process by preemptively compiling and linking all dependencies instead of repeating this step for each individual project during the main build. This can significantly reduce build times, especially in complex projects with numerous interconnected components.'
        log-prefix: '[AI] The `--log-prefix` flag in Turbo, a Redis database client for Node.js, is used to specify a custom prefix for log messages generated by the client when interacting with Redis servers. By default, Turbo logs include the command name and arguments, but you can use this flag to add additional text before the log message, which can be helpful for identifying specific log entries in large logs or for debugging purposes. For example, you could set `--log-prefix="[INFO]:"` to prefix all log messages with "[INFO]:".'
        no-cache: '[AI] The `--no-cache` flag in Turbo mode is a command-line option used with various software tools, typically web browsers or caching systems. This flag disables the use of cached data, meaning that all requests will be sent to the server instead of being served from local storage. By doing so, it ensures that the most up-to-date data is retrieved and processed, which can be beneficial when testing new features, debugging issues, or working on websites with frequently changing content.'
        no-daemon: |-
            [AI] The `--flag turbo` and `--flag no-daemon` are options used with Docker Compose.

            The `--flag turbo` is an experimental feature that aims to improve the start time of services by reducing the number of network checks during container startup. It's meant to be useful in environments where containers often start and stop rapidly, such as development or testing.

            The `--flag no-daemon` means that Docker Compose will build the images for your services but not run them as background services. Instead, it will print out the container names you can use to manually start them with the `docker start` command.
        no-deps: '[AI] `flag "turbo" --no-deps` is a command-line flag used in some package managers, such as Go''s `go get` or Yarn, to accelerate the installation process by disabling the check for and installation of dependencies (recursive packages required by the main package). The `--no-deps` flag shortens the installation time, but it may lead to issues if the missing dependencies are crucial for the correct functioning of the project.'
        output-logs: '[AI] The `--output-logs` flag in the context of a Turbo build tool refers to an option that specifies where to save the logs generated during the build process. When used with the `turbo build` command, this flag takes a file path argument and writes the build logs to the specified file instead of printing them to the console. This can be useful for saving and reviewing the build process details in detail later, or for integrating the logs into other systems or workflows.'
        parallel: '[AI] The `--parallel` flag in a Turbo build system refers to a mode that enables parallel processing of tasks. When using this flag, multiple tasks can be executed simultaneously, allowing for faster build times. This can be particularly useful for large projects or when working with multiple files or components that need to be built independently. By default, tasks are executed sequentially, but enabling parallelism with `--parallel` allows the system to leverage multiple CPU cores and improve overall efficiency.'
        profile: |-
            [AI] The `--profile turbo` flag is used in Node.js to enable the TurboFan and IgniteJIT compilers for profiling. These compilers are part of the V8 JavaScript engine that Node.js uses, and they are designed to provide faster and more efficient execution of JavaScript code.

            By using `--profile turbo`, the Node.js process generates detailed performance profiles of the executed JavaScript code. This information can then be used for further analysis, such as identifying bottlenecks and optimizing the code. The output is written to a profiling report file (usually with a .json extension) that can be analyzed using various tools, like the Node.js built-in `--inspect` flag or third-party tools like Chrome DevTools or Node.js's `v8-profiler`.
        remote-only: '[AI] The `--remote-only` flag in Git is used with the `git fetch` or `git pull` commands when working with remote repositories. This option instructs Git to only download new commits and branches from the remote repository, without merging them into your local branch. It does not affect the working directory or the index. By using `--remote-only`, you can keep your local repository up-to-date with the latest changes in the remote repository without modifying your local code.'
        scope: '[AI] The `--scope` flag in the `turbo` command is used to specify the project or file scope for the operation being performed. It indicates which part of a larger project Turbo should focus on when executing tasks such as testing, building, or linting. By providing the correct scope, Turbo can efficiently process only the relevant files and dependencies, saving time and resources.'
        since: '[AI] The `--since` flag in Turbo, a Git tool for fetching and merging changes from remote repositories, specifies a date or commit hash to only pull changes made after that point. This can be useful for quickly updating your local repository with the latest changes while excluding older ones.'
