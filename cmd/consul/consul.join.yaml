# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: join
description: Tell Consul agent to join cluster
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
    --wan: Joins a server to another server in the WAN pool.
documentation:
    command: '[AI] `consul join` is a command used in Hashicorp Consul, a service discovery and configuration management tool. This command is used to add a new member node to an existing Consul cluster. When executed, it provides the joining node with the necessary information, such as the server addresses of the Consul cluster, allowing it to securely join and become a part of the distributed Consul system.'
    flag:
        ca-file: '[AI] `consul join --ca-file` is a command used in Hashicorp Consul, an open-source distributed, highly-available, and data center-aware solution to connect and configure applications, monitor their health, and coordinate logic between the applications. This command is utilized when adding a new server or client to an existing Consul cluster. The `--ca-file` flag specifies the path to a file containing the CA (Certificate Authority) certificates that will be used during the join process to authenticate and encrypt communication between the new node and the cluster. These certificates are essential to maintain security within the Consul cluster.'
        ca-path: '[AI] `consul join --ca-path` is a command-line option used with Consul, an open-source tool for service discovery, configuration, and orchestration. When starting a new Consul agent, this option specifies the path to the CA (Certificate Authority) bundle file. The CA bundle contains the X.509 certificates required to sign and verify the agent''s SSL/TLS communication. By providing the custom CA-path, you can configure Consul agents to trust specific CA certificates when communicating with each other in a secure cluster environment.'
        client-cert: '[AI] The `consul join --client-cert` flag is used with Hashicorp''s Consul service discovery and configuration management tool. This flag specifies that a new node joining the Consul cluster will provide its own X.509 client certificate for secure communication between nodes. This approach is useful when managing a large number of nodes or when enforcing strict security policies, as it allows fine-grained control over which certificates are allowed to join the cluster.'
        client-key: '[AI] `consul join --client-key` is a command used in Hashicorp Consul, an open-source distributed, highly available, and data center aware solution to connect and secure services. This command is used to instruct Consul agent to join a Consul cluster as a new member using a specific client key. The `--client-key` flag provides the key that identifies this agent to the Consul server, allowing only authorized agents with valid keys to join the cluster and access its features. This helps maintain security in a multi-agent environment by controlling which agents can communicate with each other and participate in service discovery and configuration management.'
        http-addr: '[AI] `consul join --http-addr` is a command used in Hashicorp Consul, an open-source distributed, highly available, and data center aware solution connecting and coordinating applications across any infrastructure, to instruct it to join a Consul cluster using a specific HTTP address. This option allows specifying the IP address and port of the Consul agent that will act as a server in the cluster. Once joined, the agent begins serving RPC requests from other members and replicates data from them, helping to ensure high availability and consistency across the cluster.'
        tls-server-name: '[AI] The `consul join --tls-server-name` flag is used with Consul, a popular service discovery and configuration management tool. This option specifies a TLS server name for Consul agents joining a cluster. When multiple Consul servers are using TLS encryption for secure communication, each server should have a unique server certificate with its corresponding name. By setting the `--tls-server-name` flag during agent join, it ensures that the agent connects to the correct encrypted server and becomes part of the intended Consul cluster.'
        token: '[AI] `consul join --token` is a command used in Consul, a Connect and configure service discovery, configuration, and orchestration tool. This command is utilized to add a new node to an existing Consul cluster. The `--token` option specifies the ACL token for joining the cluster. The token must be generated from another consul server and passed as an argument to this command in order to join the cluster as a new member.'
        token-file: '[AI] `consul join --token-file` is a command used with Hashicorp''s Consul service discovery and configuration management tool. This command is used to join an agent to a Consul cluster. The `--token-file` option specifies the path to a file containing a join token, which is required for an agent to securely join an existing Consul datacenter. The token ensures that only authorized agents can join the cluster and maintain its security.'
        wan: '[AI] `consul join --wan` is a command used in Hashicorp Consul, an open-source distributed, highly available, and data center-aware solution to connect and configure applications. The `join` subcommand is used to add a new member to a Consul cluster. The `--wan` flag specifies that the new member will join the cluster using wide area network (WAN) transport mode. This mode allows members in different data centers to communicate over long distances, enabling the creation of multi-data center Consul clusters.'
