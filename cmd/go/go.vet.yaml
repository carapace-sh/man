# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: vet
description: report likely mistakes in packages
flags:
    -n: print commands that would be executed
    -x: print commands as they are executed
documentation:
    command: '[AI] `go vet` is a command-line tool in the Go programming language used for static analysis of Go source code. It checks the codebase for potential issues, such as unused imports, misused types or interfaces, and inconsistent naming conventions, among others. The goal is to find and address coding errors before running tests or building the project. This improves code quality and reduces bugs in production.'
    flag:
        "n": '[AI] `go vet -n` is a command-line tool used in the Go programming language for performing static analysis of Go source code. The `-n` flag stands for "no-errors" mode, meaning that it will only print out suggestions for potential issues and will not stop the build process if errors are found. Instead, it will continue to compile and run as usual while displaying the suggested improvements in the terminal. This can be useful for catching potential issues early on in the development process without interrupting ongoing workflows.'
        x: '[AI] `go vet -x` is a command in Go programming language used for static analysis of Go source code. The `go vet` tool checks the correctness and completeness of Go code by scanning it for potential errors, inconsistencies, and security vulnerabilities. The `-x` flag is optional and is used to display detailed information about each issue found during the analysis. It lists the file name, line number, and a brief description of the problem. This information can be useful for understanding and fixing the issues.'
