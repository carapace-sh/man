# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ls [OPTIONS]
aliases:
    - list
description: List nodes in the swarm
flags:
    --format=: 'Format output using a custom template:'
    -f, --filter=: Filter output based on conditions provided
    -q, --quiet: Only display IDs
documentation:
    command: '[AI] `docker node ls` is a command used in Docker Swarm mode to list the currently registered nodes in your swarm cluster. Each line of output displays the node ID, IP address, and the status of the node (either "reached" if it''s part of the cluster and running tasks or "out-of-cluster" if it''s not).'
    flag:
        filter: '[AI] `docker node ls --filter` is a command used in Docker Swarm to list the nodes that match specific filters. The `--filter` option allows you to filter the output based on certain labels or other criteria. For example, `--filter addr.rmq.external=true` would return a list of nodes with an "addr.rmq.external" label set to "true". This command helps in managing and identifying nodes in your Docker Swarm cluster based on specific requirements.'
        format: '[AI] `docker node ls --format` is a command used in Docker Swarm mode to list information about available nodes in the swarm cluster. The `--format` option allows specifying an output format using Go template syntax, enabling customized display of node data. For instance, you might use `--format ''{{range .Nodes}}{{.ID}}: {{.Attributes.Ports}}{{end}}''` to print each node''s ID and its exposed ports.'
        quiet: '[AI] `docker node ls --quiet` is a command used in Docker Swarm to list all available nodes in a swarm cluster with minimal output. The `--quiet` flag instructs the command to return only the essential information, usually in the form of one or two columns containing the node ID and name. This can be useful for scripts or automation tasks that require a quick assessment of the active nodes in the Docker Swarm.'
