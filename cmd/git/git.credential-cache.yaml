# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: credential-cache
description: Helper to temporarily store passwords in memory
group: low-level helper
flags:
    --socket=: path of cache-daemon socket
    --timeout=: number of seconds to cache credentials
documentation:
    command: |-
        [AI] `git credential-cache` is a Git command used to manage the credential helper cache, which securely stores authentication credentials (username and password) for remote repositories. This command allows users to avoid entering their credentials repeatedly when pushing or pulling from those repositories. It provides two main functionalities:

        1. `git credential-cache init`: Initializes a new credential helper cache, which creates a new file (usually located at ~/.git-credentials) for storing the credentials.
        2. `git credential-cache [fill|store] [user] [password]`: Fills or stores the username and password in the credential helper cache. This command is often used in scripts, CI/CD pipelines, or other automated workflows to provide temporary access to remote repositories without requiring manual user input.
        3. `git credential-cache [get|show]`: Retrieves or displays the stored credentials for a specific remote (identified by its URL).
        4. `git config --global credential.helper 'store --file=/path/to/your/credentials'`: Configures Git to use the credential helper cache, setting the default helper to store the credentials in a file located at /path/to/your/credentials.
    flag:
        socket: |-
            [AI] The `git credential-cache --socket` command is used to manage Git's credential cache using a Unix domain socket instead of a file. This option is particularly useful in environments where multiple instances of Git are running and need to share the same credential cache, or when working with Git over a network.

            The `--socket` option specifies the path to the Unix domain socket file, which can be accessed by other processes running on the same system without the need for file I/O or inter-process communication complexities. When using this option, Git will automatically create and use the socket file if it doesn't exist.

            This approach offers improved performance and security as the credential cache data remains local to the system, and is only accessible by processes that have proper access to the socket.
        timeout: '[AI] `git credential-cache --timeout` is a Git command used to manage the credential cache, which stores authentication credentials for securely storing and reusing them during Git operations. The `--timeout` option sets the time-to-live (TTL) of these cached credentials in seconds. By default, it''s set to 7 days (604800 seconds). Using this command with a specific timeout value allows you to adjust the length of time that the credentials will be cached. For instance, `git credential-cache --timeout=1h` sets the timeout to 1 hour (3600 seconds). This is helpful in cases where you want more frequent credential refreshes or improved security.'
