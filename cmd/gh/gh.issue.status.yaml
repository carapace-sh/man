# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: status
description: Show status of relevant issues
group: General commands
flags:
    --json*=: Output JSON with the specified `fields`
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] The `gh issue status` command is used with the GitHub CLI (github-cli) to check the current status of an issue in a repository. You can specify the issue number using the `<issue_number>` placeholder. For example, `gh issue status <issue_number>` will display information about the specified issue such as its current state (open or closed), labels, and assignee.'
    flag:
        jq: '[AI] `gh issue status --jq` is a command used with GitHub''s CLI (Command Line Interface) tool, gh. This command fetches information about issues in a specific repository, but it uses the JQ processor for filtering and manipulating JSON data. The "--jq" option passes a JQ query to process the output of gh issue status. It helps in extracting specific fields or applying conditional filters on the retrieved issues'' statuses.'
        json: '[AI] `gh issue status --json` is a command used in the GitHub CLI (git-hub) tool to retrieve the JSON representation of issues and their associated statuses from a GitHub repository. It allows users to programmatically access the current status of an issue, such as "open" or "closed," along with other related information like the issue number, title, and creation date. This command can be useful for automating workflows or analyzing issues data in scripts or applications.'
        template: '[AI] The `gh issue status --template` command is used with GitHub''s `gh` CLI (Command Line Interface) tool to retrieve the current status of one or more issues, displaying the output in a customizable template format. The template defines how the issue data should be displayed, including fields such as issue number, title, state, labels, assignee, and due dates. This command helps users quickly view relevant information about their GitHub issues from the terminal.'
