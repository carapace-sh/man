# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update
description: Update the current environment based on environment file
flags:
    --json: Report all output as json
    --prune: remove installed packages not defined in environment.yml
    --solver=: Choose which solver backend to use
    -f, --file=: environment definition
    -h, --help: Show this help message and exit
    -n, --name=: Name of environment
    -p, --prefix=: Full path to environment location
    -q, --quiet: Do not display progress bar
    -v, --verbose: Use once for info, twice for debug, three times for trace
documentation:
    command: '[AI] The `conda-env update` command is used to update all the dependencies in a Conda environment, ensuring they are at their latest versions. It modifies the environment file (usually named `environment.yml` or `environment.json`) and updates the packages specified therein. This can be particularly useful when you want to keep your environments up-to-date with the latest package versions. However, it''s important to note that updating packages in an environment might sometimes lead to compatibility issues with other packages, so proceed with caution.'
    flag:
        file: '[AI] The `conda-env update --file` command is used in Anaconda or Miniconda environments to update the specified environment based on a given YAML file. This file contains a definition of the packages, their versions, and other settings for the environment. Running this command applies any updates or changes in the file to the specified environment. It helps maintain consistent and reproducible environments across different systems.'
        help: |-
            [AI] `conda-env update` is a command used in Anaconda or Miniconda environments for managing and updating specific conda environments. The `--help` flag is optional and provides detailed information about the command's usage. When you run `conda-env update --help`, you will see an output displaying:

            1. Brief description: A short explanation of what the command does.
            2. Usage: Syntax to use the command along with required arguments and their descriptions.
            3. Options: Additional available options and their meanings.
            4. Examples: Use cases and examples illustrating different scenarios.

            In summary, `conda-env update --help` displays comprehensive information about how to use the conda environment update command with various options.
        json: '[AI] `conda-env update --json` is a command used in Anaconda or Miniconda environments to update the specified conda environment''s metadata file (often named `environment.yml` or `environment.json`) with the latest version numbers of all currently installed packages. This command writes the updated metadata to a JSON file, preserving the environment''s dependencies and their versions for future use.'
        name: '[AI] The `conda-env update` is a command used in Anaconda or Miniconda environments for managing Python and other dependencies. The specific form `update --name <env_name>` updates an existing conda environment with that name, installing any missing packages and updating current ones to their latest versions. This command does not modify the base environment, but instead modifies the specified named environment.'
        prefix: '[AI] `conda-env update --prefix` is a command used in Anaconda or Miniconda environments for managing and updating specifications files (also known as environment configurations) in conda environments. The `--prefix` argument specifies the root directory of the conda installation, which by default is typically `~/anaconda3` or `~/miniconda3`. This command updates the conda environment, ensuring that all installed packages are using their latest versions and rewriting the environment file to reflect these changes. It''s particularly useful when you want to keep your environments up-to-date while preserving their current package configurations.'
        prune: '[AI] `conda-env update --prune` is a command used in Anaconda or Miniconda environments to manage and clean up the dependencies of a conda environment. The `--prune` option tells Conda to remove any packages that are not explicitly listed in the environment YAML file, but were installed as dependencies of other packages. This helps keep the environment lean and efficient by removing packages that are no longer needed, while ensuring that all necessary dependencies for the explicitly listed packages remain installed.'
        quiet: '[AI] `conda-env update --quiet` is a command used in Anaconda or Miniconda environments for updating all packages within an active conda environment to their latest versions without displaying progress messages. The `--quiet` option suppresses the output of the progress bar and other informational messages during the update process, making it useful for automated scripts or batch processing where silent execution is desired.'
        solver: '[AI] The `conda-env update --solver` command is used in Anaconda or Miniconda environments to update the Conda solver. The solver is responsible for resolving dependency conflicts when installing packages. By running this command, Conda will check for and download any available updates to the solver package, ensuring that your environment has the latest dependency resolution capabilities. This can help prevent dependency issues and improve the functionality of your conda environments.'
        verbose: '[AI] `conda-env update --verbose` is a command used in Anaconda or Miniconda environments for updating specific conda environments with more detailed output. The `--verbose` option increases the level of output, displaying progress messages and additional details during the update process, which helps users monitor the environment modification steps.'
