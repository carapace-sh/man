# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: delete
description: Delete codespaces
flags:
    --all: Delete all codespaces
    --days=: Delete codespaces older than `N` days
    -f, --force: Skip confirmation for codespaces that contain unsaved changes
    -o, --org=: The `login` handle of the organization (admin-only)
    -r, --repo-deprecated&=: (Deprecated) Shorthand for --repo
    -u, --user=: The `username` to delete codespaces for (used with --org)
persistentflags:
    --repo-owner=: Filter codespace selection by repository owner (username or org)
    -R, --repo=: Filter codespace selection by repository name (user/repo)
    -c, --codespace=: Name of the codespace
documentation:
    command: '[AI] `gh codespace delete` is a GitHub CLI (Command Line Interface) command used to delete a running GitHubCodespaces environment. This command allows developers to clean up unused environments, reduce costs, and free up resources when they''re no longer needed. To use this command, you must provide the unique ID or name of the codespace you want to delete as an argument. For example: `gh codespace delete <codespace-id>` or `gh codespace delete <codespace-name>`. Deleting a codespace will remove all data associated with it, including any unsaved changes in your editor.'
    flag:
        all: '[AI] `gh codespace delete --all` is a command used in the GitHub Codespaces tool, which allows users to create and manage cloud-based development environments directly within GitHub. The `delete` subcommand removes existing codespaces, while the `--all` flag deletes all of them. This command helps in terminating all running codespaces associated with the current repository, which can be useful when you no longer need them or want to save resources.'
        days: '[AI] `gh codespace delete --days` is a command used in the GitHub CLI (Command Line Interface) tool to delete GitHub Codespaces that have been idle for a specified number of days. The "--days" option sets the number of days after which an idle Codespace will be deleted. For example, `gh codespace delete --days 7` would delete any Codespaces that have not been used for more than 7 days. This command helps manage and keep unused Codespaces from incurring unnecessary costs.'
        force: '[AI] `gh codespace delete --force` is a command used in the GitHub Codespaces tool. It deletes an existing codespace forcefully without any confirmation prompt. When using the `--force` flag, the operation cannot be undone and all unsaved changes will be lost. This command is useful when you want to delete a codespace permanently and are certain that there''s no need for it anymore.'
        org: '[AI] The `gh codespace delete --org` command is used in the GitHub CLI (gh) to delete a codespace for an organization. A codespace is a disposable development environment provided by GitHub for running and testing code in isolation. By using `--org`, you specify that you want to delete a codespace associated with an organization instead of a personal one.'
        repo-deprecated: '[AI] The `gh codespace delete` command is a GitHub CLI (gh) utility to delete a codespace in GitHub''s GitPod environment. The `--repo` option specifies the repository associated with the codespace, and `--deprecated` is a filter flag that targets codespaces that are deprecated or no longer needed based on certain conditions, such as being unused for an extended period or having conflicting configurations. Together, these flags delete any deprecated codespaces within the specified repository.'
        user: '[AI] The `gh codespace delete --user` command is used in the GitHub CLI (gh) to delete a specific user''s codespace for a repository. A codespace is an isolated development environment hosted by GitHub. By running this command with the `--user` flag, you are specifying that you want to delete the codespace associated with a particular user and not your own. This action can be useful when collaborators no longer need access to the codespace or if a codespace was created in error.'
