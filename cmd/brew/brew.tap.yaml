# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: tap
description: Tap a formula repository
group: main
flags:
    --custom-remote: Install or change a tap with a custom remote. Useful for mirrors.
    --debug: Display any debugging information.
    --eval-all: Evaluate all the formulae, casks and aliases in the new tap to check validity. Implied if `HOMEBREW_EVAL_ALL` is set.
    --force: Force install core taps even under API mode.
    --force-auto-update: Auto-update tap even if it is not hosted on GitHub. By default, only taps hosted on GitHub are auto-updated (for performance reasons).
    --help: Show this message.
    --no-force-auto-update: Auto-update tap even if it is not hosted on GitHub. By default, only taps hosted on GitHub are auto-updated (for performance reasons).
    --quiet: Make some output more quiet.
    --repair: Migrate tapped formulae from symlink-based to directory-based structure.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew tap` is a Homebrew command used to install or manage taps, which are external repositories of custom Homebrew formulas. The command adds a new tap source to your Homebrew configuration, allowing you to install software not available in the default Homebrew repository. For example, `brew tap homebrew/cask` adds the Cask tap for installing macOS applications using Homebrew.'
    flag:
        custom-remote: '[AI] `brew tap --custom-remote` is a command in Homebrew, a popular package manager for macOS. This command is used to add a custom repository (remote) to Homebrew''s list of repositories. The `--custom-remote` flag indicates that the URL provided is not a public Homebrew repository, but rather a private or custom one. Once added, Homebrew can fetch and install packages from this custom remote using regular brew commands like `brew install`.'
        debug: '[AI] `brew tap --debug` is a command used in Homebrew, a popular package manager for macOS. This command enables debug mode for a specific Homebrew Tap (a repository of software packages). In debug mode, Homebrew prints detailed information about the operations it performs while installing or updating a package from that Tap, which can be helpful for troubleshooting and understanding the underlying processes.'
        eval-all: '[AI] `brew tap --eval-all` is a Homebrew (a popular package manager for macOS) command used to apply all the taps (external repositories of custom Homebrew formulas) that have been added to your system. The `--eval-all` flag instructs Homebrew to evaluate and install all the formulas present in those taps, effectively updating or installing the software packages managed by those taps. This command can be useful when you want to ensure that all the custom software repositories are up to date with their respective packages.'
        force: '[AI] `brew tap --force` is a command in Homebrew, a popular package manager for macOS. This command is used to update or reinstall a specific Homebrew tap (a GitHub-like repository of Homebrew recipes). The `--force` flag forces the installation or update process even if there are existing files that might prevent the operation. It overwrites any conflicting files with the ones from the tap, potentially losing local modifications.'
        force-auto-update: '[AI] `brew tap --force-auto-update` is a command used in Homebrew, a popular package manager for macOS. This command forces an update of all tapped repositories (external sources of Homebrew formulas) to their latest versions. By using the `--force` flag, it overrides any existing local changes or errors that might prevent the update. It helps keep your Homebrew installations up-to-date with the latest available formulas from the specified taps.'
        help: '[AI] `brew tap help` is a command used in Homebrew, a popular package manager for macOS. This command displays information about using the `tap` subcommand with Homebrew. A "tap" is a Homebrew repository where you can install custom, third-party Homebrew Formulas. The `help` option provides details on how to use this tap command effectively, including how to add and manage taps.'
        no-force-auto-update: '[AI] The `brew tap --no-form-auto-update` command is used in Homebrew, a popular package manager for macOS. This command prevents Homebrew from automatically updating installed taps (repositories of Homebrew recipes) when running `brew update`. The `--no-force-auto-update` flag disables the force update of taps, ensuring that only the manual update or installation of new taps is carried out.'
        quiet: '[AI] `brew tap --quiet` is a command used with Homebrew, a popular package manager for macOS. This command is used to fetch or update a specific Homebrew tap (a repository of software packages) without displaying the progress bar or any messages. The `--quiet` option suppresses output, making the process run in the background with no interruptions.'
        repair: '[AI] `brew tap --repair` is a command used in Homebrew, a popular package manager for macOS. This command scans through your Homebrew installation and repairs any damaged or incomplete installations by re-downloading, verifying checksums, and installing the correct version of the formula (the recipe file) for the specified repository (tap). It helps maintain the consistency and functionality of installed packages in Homebrew.'
        verbose: '[AI] `brew tap --verbose` is a command used in Homebrew, a popular package manager for macOS. The `tap` sub-command is responsible for managing Homebrew taps, which are repositories of Homebrew recipes. The `--verbose` option increases the amount of output displayed during the command execution. As a result, this command will show detailed information about each tap that is being downloaded or updated, including progress bars and HTTP requests logs.'
