# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: deps
description: Print package dependencies
flags:
    --dev: Include dev dependencies.
    --executables: List all available executables.
    --json: Output dependency information in a json format.
    --no-dev: Do not include dev dependencies.
    -C, --directory=: Run this in the directory<dir>
    -h, --help: Print this usage information.
    -s, --style=: How output should be displayed.
documentation:
    command: '[AI] The `flutter pub deps` command is used to fetch, update, or show the dependencies defined in a Flutter project''s `pubspec.yaml` file. When run without any arguments, it displays the list of current dependencies and their versions. If followed by the name of a dependency, it updates that specific dependency to its latest version. If preceded by `get`, it fetches new dependencies or updates existing ones.'
    flag:
        dev: '[AI] `flutter pub deps --dev` is a command used in Flutter development to add dependencies to the `pubspec.yaml` file in the dev dependencies section. Dev dependencies are packages that are required for development and testing, but not for running the application in production. By using this command, you can easily manage and update these packages without affecting the production code.'
        directory: '[AI] `flutter pub deps --directory` is a command used in Flutter development to manage and update the dependency packages listed in the `pubspec.yaml` file for an entire project, rather than just the current package. The `--directory` option specifies the root directory of the project containing multiple packages, allowing the command to update dependencies across all packages within that directory simultaneously.'
        executables: '[AI] The `flutter pub depss --executables` command is used in Flutter development to install and manage executable packages that have binary dependencies. These are packages that include binaries or tools which need to be installed separately, rather than just importing libraries. By running this command in the terminal from within a Flutter project directory, you can add, remove, or update these executable dependencies as specified in the `pubspec.yaml` file. This helps ensure that your project has access to the required tools and binaries to build and run correctly.'
        help: '[AI] `flutter pub deps --help` is a command used in Flutter development to get help about using the `pub dep` sub-command of the `flutter pub` tool. This command displays detailed information about how to manage and update dependencies declared in a `pubspec.yaml` file, including installing, upgrading, downgrading, and resolving dependency conflicts. It also provides options for specifying a project directory or using offline mode for offline dependency downloads.'
        json: '[AI] `flutter pub deps --json` is a command used in Flutter development to generate a JSON output of the project''s published and dependencies specified in the `pubspec.yaml` file. The command retrieves the latest version numbers for all specified dependencies, creating a lockfile that ensures consistent dependencies across different environments. This can be helpful when managing large projects with multiple developers or for automating deployment processes.'
        no-dev: '[AI] The `flutter pub deps --no-dev` command is used in Flutter development to get a list of the project''s direct dependencies without including development dependencies (marked with `dev:` prefix). It retrieves the latest version definitions for the listed dependencies from the `pubspec.yaml` file and saves them to the `flutter_tools/cache/` directory, making sure that the project uses consistent versions across its dependencies.'
        style: |-
            [AI] `flutter pub deps --style` is a command used in Flutter development to specify the format for the dependency version numbers in the `pubspec.yaml` file. The available styles are: `none`, `dev`, and `pinned`.

            * `none` means no automatic management of dependencies.
            * `dev` automatically pins all dependencies except for dev_dependencies.
            * `pinned` pins all dependencies to the exact version specified in the `pubspec.yaml`.

            By default, Flutter uses the `dev` style. If you want to change it, use `flutter pub deps --style none`, or `flutter pub deps --style pinned`.
