# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: nl
description: number lines of files
flags:
    --help: display this help and exit
    --version: output version information and exit
    -b, --body-numbering=: use STYLE for numbering body lines
    -d, --section-delimiter=: use CC for logical page delimiters
    -f, --footer-numbering=: use STYLE for numbering footer lines
    -h, --header-numbering=: use STYLE for numbering header lines
    -i, --line-increment=: line number increment at each line
    -l, --join-blank-lines=: group of NUMBER empty lines counted as one
    -n, --number-format=: insert line numbers according to FORMAT
    -p, --no-renumber: do not reset line numbers for each section
    -s, --number-separator=: add STRING after (possible) line number
    -v, --starting-line-number=: first line number for each section
    -w, --number-width=: use NUMBER columns for line numbers
documentation:
    command: '[AI] The `nl` command is a Unix utility used to number lines in a text file or input. By default, it numbers each line with an ascending sequential number starting from 1. It can take input from a file or standard input. Additionally, options allow customization of the output format, such as prefixing numbers with zeros to maintain a fixed column width.'
    flag:
        body-numbering: '[AI] The `nl --body-numbering` command in Unix or Linux is used to number the lines of text in the standard input (or a file) with numbers that correspond only to the bodies of the input data, and not to the headers or blank lines. This means that if there are repeating groups of data where each group has a header line or multiple blank lines, those lines will not be numbered. The numbering starts from 1 after any leading empty lines or header lines.'
        footer-numbering: '[AI] The `--footer-numbering` option in `nl` is used to display line numbers in the output footer instead of the prefix in each line. With this option, the line number is printed only at the end of each page or at the end of the output. This can be useful when you want to see the line numbers without cluttering the actual lines of text.'
        header-numbering: '[AI] `nl --header-numbering` is a command in Unix-like operating systems, specifically in the GNU Core Utilities package. This option modifies the output of the `nl` (newline) command, which by default adds line numbers to each line in its input. With the `--header-numbering` option, only the lines that make up the header (first 6 lines by default) receive numbering. The rest of the lines retain their original line numbers. This feature allows for clearer identification and organization of headers within larger text files or outputs.'
        help: '[AI] The `nl` command with the `--help` option in Unix-like operating systems displays detailed help information about the `nl` utility itself. This includes a brief description of what `nl` does, its usage syntax, and a list of available options with their descriptions. Using this option allows users to understand how to effectively use `nl` for numbering lines or columns in various text files.'
        join-blank-lines: '[AI] The `nl --join-blank-lines` command in Unix is used to number lines in files and join blank lines together into a single line with a delimiter between them. This means that if there are multiple consecutive blank lines in the input file, they will be merged into a single blank line in the output. The delimiter can be specified using the `-w` option followed by the width of the delimiter character. For example, `nl --join-blank-lines -w 3 input_file > output_file` would merge all consecutive blank lines with a delimiter of three spaces between them in the output file.'
        line-increment: '[AI] The `nl --line-increment` command in Unix-based systems is a filter used to add line numbers to every line of input, with an optional increment value. By default, the line number starts at 1 for each new file or input stream. However, by using the `--line-increment` option, you can specify a custom starting value for the line numbers. For instance, if you want the first line to have a line number of 5, you would use the command `nl --line-start=5 <input>`. This can be useful in various text processing tasks to better identify specific lines within large files or streams.'
        no-renumber: '[AI] The `nl --no-renumber` command in Unix or Linux is used to number lines in text files without renumbering if there are already existing line numbers present. By default, when using the `nl` command without any options, it will renumber lines starting from 1. But with the `--no-renumber` option, it skips this behavior and only adds new line numbers without altering the existing ones.'
        number-format: '[AI] The `nl --number-format` command in Unix is used to add numbered lines or columns to input data. The `--number-format` option allows specifying how numbers are displayed, such as starting at a specific line or column, using a custom format like "%-5d" for left-justified five-digit numbers. It can be helpful for formatting tables or debugging files.'
        number-separator: '[AI] The `--number-separator` option is a flag used with the `nl` command in Unix-like operating systems. It is used to change the character that is printed before numbers when the `nl` command is used to number lines or columns of text. By default, this character is a tab character (`\t`). With the `--number-separator=CHAR` option, you can specify any other character (e.g., `--number-separator='' ''` for a space character). This flag helps in customizing the output format of `nl` command according to specific requirements.'
        number-width: '[AI] The `--number-width` option in `nl` (newline and numbering) command in Unix or Linux is used to specify the maximum width for printed numbers in numbered lists or tabular outputs. It helps ensure that all numbers are aligned neatly within a given column width, improving the overall appearance of the output.'
        section-delimiter: '[AI] The `--section-delimiter` option in GNU `nl` command is used to specify a custom character as a section delimiter when generating numbered lists from input files. By default, nl uses `:` as the section delimiter. With this option, you can change it to any other character by providing the option followed by the desired delimiter character. For example, `nl --section-delimiter=''>'' file.txt` will generate a list with `>` as the section delimiter instead of the default `:`.'
        starting-line-number: '[AI] The `nl --starting-line-number` command in Unix-based operating systems is used to add line numbers to the beginning of each line in text files. The option `--starting-line-number` specifies that numbering should begin at a given line number instead of starting from 1 by default. For instance, using `nl --starting-line-number=5 inputfile.txt` would add line numbers starting with the fifth line in the `inputfile.txt`.'
        version: '[AI] The `nl --version` command is used in Unix-like operating systems to display version information about the `nl` utility, which stands for "number lines." When executed, it prints out a message containing the name of the utility, its version number, and often some additional information such as compilation dates or other build details.'
