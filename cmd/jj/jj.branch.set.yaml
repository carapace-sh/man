# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: set [OPTIONS] <NAMES>...
aliases:
    - s
description: Update a given branch to point to a certain commit
flags:
    -B, --allow-backwards: Allow moving the branch backwards or sideways
    -h, --help: Print help (see more with '--help')
    -r, --revision=: The branch's target revision
documentation:
    command: '[AI] The `jj` command with the `branch set` argument is used in Git to create and switch to a new branch based on the current head. This is equivalent to running both `git checkout -b <new_branch>` and `git push origin <new_branch>:<new_branch>` (assuming you''re working on a remote repository). It''s an alias for this command combination often used in workflows like GitFlow or feature branches.'
    flag:
        allow-backwards: '[AI] The `git jj branch set --allow-backwards` command is used in Git to allow or disallow creating and switching to branches that are located before the current one in the commit history. By default, Git does not allow this behavior for security reasons to prevent unintended branch manipulations. However, when using the `--allow-backwards` option, Git permits the creation and switching of such branches. This command is often used when working with complex or historical branches where it''s necessary to go back in commit history.'
        help: '[AI] `jj` is a Git extension for faster and more efficient branching and checking out in Git. The command `jj branch set --help` displays the help information for the `set` sub-command under the `branch` category. This specific command is used to create or update branches in JJ, providing options such as creating a new branch from an existing one, setting the initial commit message, and creating the branch locally or remotely. You can find more detailed explanations of each option by reading the help output.'
        revision: '[AI] The `git jj branch set --revision` command is used to set the head of a Git branch to a specific commit revision instead of the current tip or local branch. This command can be useful for force-pushing a new branch to a remote repository with a specific commit, or for resetting a branch to a known good state. The syntax is `git jj branch set <branch_name> <commit_revision>`. Note that using this command will discard any local changes in the branch.'
