# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: init
description: initializes a new Vagrant environment by creating a Vagrantfile
flags:
    --box-version=: Version of the box to add
    --output=: Output path for the box. '-' for stdout
    --template=: Path to custom Vagrantfile template
    -f, --force: Overwrite existing Vagrantfile
    -m, --minimal: Use minimal Vagrantfile template (no help comments). Ignored with --template
documentation:
    command: '[AI] `vagrant init` is a Vagrant command used to create a new Vagrantfile in the current directory. This file defines the settings for your Vagrant project, such as the box (virtual machine image) to use, the provider (e.g., VirtualBox or VMware), and any custom configurations. After running `vagrant init`, you can use other Vagrant commands, like `up` or `provison`, to build and configure your virtual environment.'
    flag:
        box-version: '[AI] The `vagrant init --box-version` command is used to initialize a new Vagrant project and specify the desired version of the base box (pre-configured virtual machine image) to be used. When you run this command in your terminal, it creates a new directory with the necessary Vagrantfile configuration file, sets up the directory structure, and downloads or uses an existing box with the specified version. This is an essential step when setting up a new Vagrant environment, ensuring that the base box image used will have the desired features and configurations for your project.'
        force: '[AI] `vagrant init --force` is a command used in Vagrant, a tool for building and managing virtual machine environments. The `init` command initializes a new Vagrant project by creating a `Vagrantfile` with default configurations based on the chosen box (preconfigured virtual machine image). The `--force` option overwrites any existing `Vagrantfile` without asking for confirmation.'
        minimal: '[AI] `vagrant init --minimal` is a Vagrant command used to create a new Vagrant project with a minimal configuration file (Vagrantfile). This means that only essential components will be included, such as the definition of the box to be used and the basic Vagrant setup. It''s useful when you want to start from scratch with the least amount of pre-configured settings.'
        output: '[AI] `vagrant init --output` is a Vagrant command used to create a new Vagrantfile in the current directory with default settings for a specific box (virtual machine image). The `--output` option specifies a file name for the output Vagrantfile. In other words, it initializes a new Vagrant project and saves the configuration file with the specified name.'
        template: '[AI] `vagrant init --template` is a Vagrant command used to create a new Vagrant project with a specified base box and configuration template. The `--template` option specifies which template to use when creating the project structure, including files for provisioning scripts (e.g., Puppet, Chef, Ansible) or custom Vagrantfiles. This command sets up the project directory with the necessary files for managing a virtual machine using Vagrant.'
