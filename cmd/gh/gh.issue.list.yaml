# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - ls
description: List issues in a repository
group: General commands
flags:
    --app=: Filter by GitHub App author
    --json*=: Output JSON with the specified `fields`
    --mention=: Filter by mention
    -A, --author=: Filter by author
    -L, --limit=: Maximum number of issues to fetch
    -S, --search=: Search issues with `query`
    -a, --assignee=: Filter by assignee
    -l, --label*=: Filter by label
    -m, --milestone=: Filter by milestone number or title
    -q, --jq=: Filter JSON output using a jq `expression`
    -s, --state=: 'Filter by state: {open|closed|all}'
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
    -w, --web: List issues in the web browser
documentation:
    command: '[AI] `gh issue list` is a GitHub CLI (Command Line Interface) command used to list issues of a specific repository. It allows users to view details such as issue titles, numbers, labels, and statuses in a table format. Users can filter results based on search queries, labels, or milestones to find the desired issues easily. This command helps developers and collaborators keep track of issues and manage project progress from the command line.'
    flag:
        app: '[AI] The `gh issue list --app` command is used with GitHub''s CLI (Command Line Interface) tool, `gh`. This specific command lists out issues for a particular GitHub application instead of a repository. To use it, you need to have the `gh` tool installed and be authenticated with your GitHub account. Replace `--app` with the name or username of the desired application. The output will display the title, number, assignee, labels, and other relevant information for each issue.'
        assignee: '[AI] The `gh issue list --assignee` command is used with the GitHub CLI (Command-Line Interface) to retrieve a list of issues assigned to a specific user in a repository. This command filters the issues based on the assignee parameter and displays the relevant issue details, including title, number, state, and labels. It can help users quickly check the progress of assigned issues or manage their own assigned tasks more efficiently.'
        author: '[AI] The `gh issue list --author` command is a GitHub CLI (Command Line Interface) command used to fetch a list of issues created by a specific author in a repository. This command filters the issues based on the provided author name, displaying the title, number, and other relevant details for each issue. It''s useful when you want to focus on issues raised or managed by a particular user within the GitHub ecosystem.'
        jq: '[AI] `gh issue list --jq` is a command used in GitHub''s command-line tool (gh) to retrieve and filter JSON output from GitHub issues. The `issue list` subcommand retrieves a list of issues, while the `--jq` flag passes the output through `jq`, a lightweight and flexible JSON processor, enabling you to apply queries and manipulate data in various ways. This command setup is particularly useful for programmatically processing and analyzing GitHub issue data.'
        json: '[AI] `gh issue list --json` is a command used in the GitHub CLI (Command Line Interface) tool to fetch a list of issues from a specific GitHub repository in a JSON format. This means that instead of displaying the issues in a table format, the output will be returned as JavaScript Object Notation (JSON), which can then be easily parsed and manipulated by various programming languages and tools.'
        label: '[AI] `gh issue list --label` is a command used in GitHub''s command-line interface (CLI) tool, `gh`, to filter and list issues with specific labels. The `--label` option followed by the label name retrieves issues tagged with that label only. For instance, `gh issue list --label bug` would return a list of issues labeled as ''bug''. This command helps users to efficiently manage and track issues based on their labels in GitHub repositories.'
        limit: '[AI] The `gh issue list --limit` command is used in GitHub''s Command-Line Interface (CLI) tool, gh, to retrieve a specified number of issues from a repository issue list. The `--limit` flag sets the maximum number of issues to be displayed in the output. For instance, `gh issue list --limit 5` would display only the five most recent issues in a given repository.'
        mention: '[AI] The `gh issue list --mention` command is a GitHub CLI (Command Line Interface) instruction used to list issues in a repository where you have been mentioned in the issue comments or description. This command filters the issues based on mentions of your GitHub username and displays relevant information such as the issue number, title, and status. It helps users quickly access and manage the issues they are involved with directly from the terminal.'
        milestone: '[AI] The `gh issue list --milestone` command is a GitHub CLI (Command-Line Interface) command used to list issues in a specific milestone of a repository. This command filters the issues based on the given milestone name or number, allowing users to focus on and manage issues assigned to that particular milestone effectively.'
        search: '[AI] The `gh issue list --search` command is used in GitHub''s CLI (Command Line Interface) tool, `gh`, to search for issues in a specific repository based on given keywords or labels. The output shows the title, number, assignee, and status of each matching issue. You can refine your search with additional filters such as label names or authors.'
        state: '[AI] `gh issue list --state` is a command used in the GitHub CLI (Command Line Interface) tool to retrieve a list of issues from a specific repository. The `--state` option filters the results based on the state of the issues, such as open, closed or all. By default, it lists open issues. You can use it to check the current status of issues in your project and prioritize your work accordingly.'
        template: '[AI] The `gh issue list --template` command is used with GitHub''s `gh` CLI (Command Line Interface) tool. This command retrieves a list of issues from a specific repository in GitHub and applies a custom template to the output. The output follows the structure defined by the template, which can include various fields such as issue number, title, labels, assignee, and creation date, among others. This feature is useful for automated workflows and scripts that require specific information from multiple issues in a concise and standardized format.'
        web: '[AI] The `gh issue list --web` command is used with GitHub''s CLI (Command Line Interface) tool, gh, to display a web-based interface of issues in a specified repository on your default web browser. This command retrieves and lists the issues as a table, but when followed by the `--web` flag, it opens the full issue list page directly on GitHub''s website for easy navigation, filtering, and managing of the issues.'
