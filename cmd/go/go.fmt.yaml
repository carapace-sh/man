# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fmt
description: gofmt (reformat) package sources
flags:
    -mod: set module download mode
    -n: print commands that would be executed
    -x: print commands as they are executed
documentation:
    command: '[AI] `go fmt` is a command-line tool in Go programming language used to check and enforce a consistent coding style across one or more Go source files. It reads the source files, parses them, and writes back the formatted code to the original files. The goal is to make the codebase look uniform and adhere to a predefined formatting convention, which can improve readability and maintainability.'
    flag:
        mod: '[AI] The `go fmt -mod` command is used in Go programming language to apply the `go fmt` formatter with the `-mod` flag enabled. This flag enforces and manages the go.mod file for a Go module project, ensuring the correct dependencies are fetched and used during the build process. It helps maintain consistent and reproducible builds within the module.'
        "n": '[AI] The command `go fmt -n` is used in Go programming language to format source code according to Go''s official coding styles, but without actually writing the formatted code to a file. Instead, it prints the formatted output to the console or standard output (stdout). This can be helpful for checking the formatting of specific sections of code before integrating changes into the main project.'
        x: '[AI] `go fmt -x` is a command used in Go programming language to apply a consistent coding style to source code files without writing the changes to the disk. The `-x` flag prints the formatted code to the standard output stream, allowing users to review and copy-paste the formatted code snippets elsewhere. This can be useful when sharing code examples or seeking feedback on specific code blocks without altering the original source files.'
