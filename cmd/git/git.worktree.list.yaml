# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: List details of each worktree
flags:
    --expire=: add 'prunable' annotation to worktrees older than <time>
    --porcelain: machine-readable output
    -v, --verbose: show extended annotations and reasons, if available
    -z: terminate records with a NUL character
documentation:
    command: '[AI] `git worktree list` is a Git command that displays a list of all the existing worktrees in the current repository along with their branches and working directories. It allows users to easily see which branches are checked out as separate worktrees and where their working directories are located.'
    flag:
        expire: '[AI] The `git worktree list --expire` command lists all the existing git worktrees and marks any inactive ones for removal based on their expiration time. Each worktree has an associated branch and a local path where the working copy is stored. When a worktree becomes inactive, meaning no commits have been made to its associated branch for a certain period of time (defined by the `--quit-on-empty-checkout` or `--prune-empty-dirs` options), it can be expired with this command. By default, worktrees that are older than 2 weeks will be marked for removal, but this behavior is configurable using the `--keep-index`, `--quit-on-empty-checkout`, and other related options. After running this command, you should review the output carefully before using `git prune` to actually remove the expired worktrees to avoid losing important working copies.'
        porcelain: '[AI] `git worktree list --porcelain` is a Git command that lists all the registered worktrees in a porcelain format. The `--porcelain` option outputs the result as a series of tab-separated values, making it easy for further processing with other tools like `awk`, `sed`, or `grep`. Each line represents a worktree with columns indicating the worktree name, status (on or off), and branch or commit hash.'
        verbose: '[AI] `git worktree list --verbose` is a Git command used to display information about currently registered worktrees in a verbose format. A worktree is a separate working directory for your Git project, each with its own HEAD and branches. This command lists all the registered worktrees along with their paths, the branch they are tracking, and their respective HEAD commits. The `--verbose` option adds more details to the output, including the local and remote branches associated with each worktree.'
        z: '[AI] `git worktree list --zone` is a Git command that lists all the configured Git worktrees in your local repository, displaying each worktree''s name, branch or commit hash, and the path to the working directory. The `--zone` option is used with Git 2.34 and later versions. It outputs the list in serialized format suitable for storing it in a zone file for backup purposes. This can be useful when dealing with multiple worktrees and wanting to keep track of them across backups or system restores.'
