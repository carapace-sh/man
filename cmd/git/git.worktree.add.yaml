# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Create a worktree at <path> and checkout <commit-ish> into it
flags:
    --checkout: populate the new working tree
    --guess-remote: try to match the new branch name with a remote-tracking branch
    --lock: keep the new working tree locked
    --reason=: reason for locking
    --track: set up tracking mode
    -B=: create or reset a branch
    -b=: create a new branch
    -d, --detach: detach HEAD at named commit
    -f, --force: checkout <branch> even if already checked out in other worktree
    -q, --quiet: suppress progress reporting
documentation:
    command: |-
        [AI] `git worktree add` is a Git command used to create and manage detached worktrees, which are independent repositories that reference a specific commit from an existing Git repository. The basic syntax is:

        ```bash
        git worktree add <new_worktree_dir> [<branch_or_commit>]
        ```

        Here's what each part means:

        - `git worktree add`: This is the command itself.
        - `<new_worktree_dir>`: This is a local directory where you want to create the new worktree.
        - `[<branch_or_commit>]`: This is an optional argument specifying which branch or commit in the main repository you'd like to base your new worktree on. If not provided, the current HEAD of the main repository will be used.

        When you run this command, Git creates a new directory with the given name and sets it up as a detached worktree, checking out the specified branch or commit in that directory. Changes made to the files in the new worktree do not affect the original repository unless you explicitly push those changes back.
    flag:
        B: |-
            [AI] `git worktree add` is a command used in Git version control system to create and manage multiple working directories or branches for the same repository. The `-B` (or `--branch`) option tells Git to create a new branch in the new working directory, making it an alternative to checking out a new branch with `git checkout -b`.

            The basic syntax is:
            ```
            git worktree add [new_working_directory] [existing_repository] [new_branch_name]
            ```
            Replace `[new_working_directory]` with the local path to the new working directory, `[existing_repository]` with the local path to the existing repository, and `[new_branch_name]` with the desired name for the new branch. Git will then create a new working directory and set it up as a Git working tree for the specified branch.
        b: '[AI] `git worktree add` is a Git command used to create and manage multiple working directories or branches for a single repository. The `-b` option creates a new branch in addition to adding the worktree. For example, `git worktree add <new_directory> <repository_path> --branch <new_branch_name>` will create a new directory `<new_directory>` that is linked to the repository at `<repository_path>`, and also create a new branch named `<new_branch_name>`. Both the worktree and the new branch can be worked on independently.'
        checkout: '[AI] `git worktree add --checkout` is a Git command used to create a new working directory for an existing repository, checking out the specified branch or commit into that new directory. This allows you to have multiple independent workspaces based on different branches or commits of the same project. The `--checkout` option checks out the new worktree immediately after creation.'
        detach: '[AI] `git worktree add --detach` is a Git command used to create a new, independent working directory for a branch or a commit in Git. The `--detach` option creates a new, lightweight checkout, detached from the current branches. This means that the new working directory will directly reference the specified commit, rather than any branch head. It''s often used when you want to make local changes on an existing branch without creating a new one or while working on multiple features at once.'
        force: '[AI] `git worktree add --force` is a Git command used to create or update an existing detached worktree with a given path and URL. The `--force` option overwrites any existing files in the target directory without asking for confirmation. It''s commonly used when you want to force-update an existing worktree, such as when receiving new code updates via a remote repository.'
        guess-remote: '[AI] `git worktree add --guess-remote` is a Git command used to create a new working directory for an existing remote branch, with the branches'' upstream relationship automatically guessed based on the current repository. In simpler terms, it adds a new local checking-out and working directory for a branch, automatically determining its remote origin from the context of the current repository.'
        lock: '[AI] `git worktree add --lock` is a Git command used to create a new working directory for an existing branch or commit, while preventing other users from making changes to that branch or commit concurrently. The `--lock` option puts an exclusive lock on the new worktree. This command is useful when multiple developers need to work on different features or branches independently without interfering with each other''s changes. Once a lock is set, others attempting to check out the same branch or commit will be denied until the lock is released.'
        quiet: '[AI] `git worktree add --quiet` is a Git command used to create a new working directory for an existing repository, referenced by a branch or a commit-ish, without displaying any messages during the process. The `--quiet` option suppresses informational messages when adding the worktree.'
        reason: '[AI] `git worktree add` is a command used to create a new working directory for an existing Git project, referencing a branch or a commit in the repository. The `--reason` option is an argument that allows you to provide a reason or description for creating this new working tree. It''s simply a metadata and doesn''t have any impact on how Git manages your branches or working directories. In essence, it''s just for informational purposes, providing clarity when there are multiple working trees for the same project.'
        track: '[AI] `git worktree add --track` is a Git command used to create a new working directory for an existing branch or remote repository, keeping it in a linked relationship (also known as a "linked clone" or "linked tree") with the original repository. The `--track` option enables automatic fetching and updating of the selected branch whenever you run `git fetch`. This is useful when you want to work on multiple branches or repositories at once while maintaining a single source of truth.'
