# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update
description: Update an ACL token
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --description=: A description of the token
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --id=: The Accessor ID of the token to update.
    --merge-node-identities: Merge the new node identities with the existing node identities
    --merge-policies: Merge the new policies with the existing policies
    --merge-roles: Merge the new roles with the existing roles
    --merge-service-identities: Merge the new service identities with the existing service identities
    --meta: Indicates that token metadata such as the content hash and raft indices should be shown for each entry
    --namespace=: Specifies the namespace to query.
    --node-identity=: Name of a node identity to use for this token.
    --policy-id=: ID of a policy to use for this token.
    --policy-name=: Name of a policy to use for this token.
    --role-id=: ID of a role to use for this token.
    --role-name=: Name of a role to use for this token.
    --service-identity=: Name of a service identity to use for this token.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
    --upgrade-legacy: Add new polices to a legacy token replacing all existing rules.
documentation:
    command: |-
        [AI] The `consul acl token update` is a Command Line Interface (CLI) command used with Consul, an open-source tool for service discovery, configuration, and orchestration. This command is used to update the access control list (ACL) token's policy.

        In simpler terms, it allows you to modify the permissions of a Consul ACL token by providing a new JSON policy file as an argument. The updated policy will then be applied to the specified token. By default, the command targets the local Consul server. If you are connecting to a remote server, provide the `-addr` flag with the server address.

        Here's the syntax:
        ```bash
        consul acl token update <TOKEN> --policy-file <POLICY_FILE_PATH> [--addr <CONSUL_ADDRESS>]
        ```
        Replace `<TOKEN>` with the actual token you wish to update, and provide the path to the new policy file as `<POLICY_FILE_PATH>`. If connecting to a remote Consul server, include the `<CONSUL_ADDRESS>` as well.
    flag:
        ca-file: '[AI] The `consul acl token update` command is used to update an Access Control List (ACL) token in Hashicorp Consul, which is a Connect and Secure service mesh and configuration management tool. The `--ca-file` option is used to specify the path to a CA (Certifying Authority) certificate file that will be used to sign the new token. By providing this file, you are verifying the authenticity of the new token by using a trusted CA, ensuring security in your Consul environment.'
        ca-path: |-
            [AI] The `consul acl token update --ca-path` is a command used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is used to update the Access Control List (ACL) token's Certificate Authority (CA) path.

            When creating or updating an ACL token in Consul, it comes with a self-signed certificate. However, if you want to use this token for secure communications outside of your Consul datacenter, you can provide a CA signed certificate instead. The `--ca-path` option specifies the path to the directory containing the trusted Certificate Authority (CA) files. When updating the token with the new certificate, Consul will sign the token using the specified CA. This ensures that the communications between services and clients are securely authenticated and encrypted.
        client-cert: '[AI] The `consul acl token update --client-cert` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command updates an Access Control List (ACL) token with a new client certificate. The `--client-cert` option specifies the path to the new client certificate file, which will be associated with the token. This allows secure communication between Consul and applications that use the token for authentication.'
        client-key: |-
            [AI] The `consul acl token update --client-key` command is used to update an Access Control List (ACL) token in Consul, a connectivity and orchestration tool for services. This specific command is part of the Consul ACL CLI (Command Line Interface), which allows you to manage tokens programmatically.

            The `--client-key` flag refers to the client certificate private key used by the entity that will be updating the token. The flag requires the path to the private key file as its value. When this command is executed, Consul updates the specified ACL token with the new data (e.g., permissions) and associates it with the given client key, ensuring secure access to the Consul services based on the defined permissions.
        datacenter: '[AI] The `consul acl token update --datacenter` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. It updates the Access Control List (ACL) token associated with a specific datacenter. This means that you can assign different access permissions to services and resources within different datacenters using separate tokens. By updating the token, you can modify the ACL rules for that token in the specified datacenter, allowing or denying access as needed.'
        description: '[AI] The `consul acl token update --description` command is used to modify the description of an Access Control List (ACL) token in Consul, a Connective Tissue for Service Discovery, Configuration, and Orchestration. This command allows you to change the human-readable label for the token, helping to keep your ACL tokens organized and easily identifiable within the Consul environment.'
        format: '[AI] The `consul acl token update` is a command used in Consul, an open-source tool for service discovery, configuration, and orchestration. The specific format `--format` option modifies the output format of the command''s result. For example, when updating an Access Control List (ACL) token using this command with the `--format json` option, the output will be returned in JSON format for easy processing by other applications or scripts. This helps streamline automation tasks and integrations between Consul and external systems.'
        http-addr: |-
            [AI] The `consul acl token update` command is used in Hashicorp Consul, an open-source distributed config management, service registry and orchestration tool. This command is specifically related to Access Control Lists (ACLs) which control who can access what resources within Consul.

            The `--http-addr` option sets the HTTP address for the Consul server where the token update will be performed. It takes a string argument, for example `"192.168.0.1:8500"`. This option is important when there are multiple Consul servers in a cluster or if the default listener address does not match the expected address. By updating the token on the correct server with the correct HTTP address, access control policies can be updated effectively.
        id: '[AI] The `consul acl token update` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command is used to update the Access Control List (ACL) token''s policies or capabilities. The `--id` option is provided with this command to specify the unique identifier of the token whose ACL policies need to be updated. It modifies the permissions associated with that token, thereby controlling which resources and operations a client can access in the Consul service.'
        merge-node-identities: '[AI] The `consul acl token update --merge-node-identities` command is used to merge node identities into an Access Control List (ACL) token in Consul. This means that the identities of one or more Consul nodes will be added to the access permissions granted by the token. By using the `--merge-node-identities` option, existing node identities in the token will not be overwritten, but instead will be combined with the new ones. This can be useful when managing access control for multiple nodes in a Consul cluster.'
        merge-policies: |-
            [AI] The `consul acl token update --merge-policies` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command updates an Access Control List (ACL) token's policies by merging new policies with existing ones instead of replacing them completely.

            When you use this command, you provide a new set of policies to be merged. The result will be a new ACL policy that includes all the previous policies and the newly added ones. This approach allows for more fine-grained control over access in a Consul environment without disrupting existing access rules entirely.
        merge-roles: '[AI] The `consul acl token update --merge-roles` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command allows you to merge multiple roles into a single Access Control List (ACL) token without replacing the existing roles. Merging roles maintains the access granted by each role while simplifying token management. The updated token can then be used to grant permissions to entities within Consul''s ACL system.'
        merge-service-identities: '[AI] The `consul acl token update --merge-service-identities` command is used to merge service identity policies into an Access Control List (ACL) token in the Consul service discovery and configuration management tool. This operation allows you to grant or revoke access to specific services for a token, without having to create or delete tokens entirely. By merging service identities, you can modify the access permissions for multiple services at once. This command updates the existing token with the new service identity policies.'
        meta: |-
            [AI] The `consul acl token update --meta` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command allows updating the metadata associated with an Access Control List (ACL) token. Metadata is key-value pairs that can be attached to tokens for additional information.

            For example, you might use this command to add a tag or label to a token, change its description, or attach any other custom data. The changes made with `--meta` do not affect the token's permissions and access control levels.
        namespace: |-
            [AI] The `consul acl token update --namespace` command is used in the Consul Access Control List (ACL) system to update an existing ACL token's namespace. Consul is a popular service discovery, configuration, and orchestration tool.

            With this command, you can modify the namespace associated with an existing ACL token, which helps to limit the scope of access control policies for different namespaces within your Consul deployment. This command is useful when you need to change the namespace assignment for a token due to changes in your infrastructure or application environment.
        node-identity: |-
            [AI] The `consul acl token update --node-identity` command is used to update the Node Identity associated with an Access Control List (ACL) token in Consul, a connectivity and configuration management tool.

            Consul uses tokens for managing access to its various features, including its Key Value Store, Health Checks, and Configuration. By updating the node identity associated with a token, you can change which Consul services or data that token is allowed to access.

            For example, if you have a token that grants read-only access to the Key Value Store, but you want to grant it write permissions instead, you would use this command to update its node identity to one that has write access. This way, you can maintain fine-grained control over who can access which data or services within Consul.
        policy-id: |-
            [AI] The `consul acl token update --policy-id` command is used to update the access control list (ACL) policy associated with a Consul token. This command is part of the Consul ACL subsystem, which helps manage and secure access to the Consul service.

            The `--policy-id` flag specifies the ID of the new policy that will be assigned to the token. It's important to note that the specified policy must already exist in your Consul setup. By updating a token's policy, you can change the level of access it provides to different resources and capabilities within Consul.
        policy-name: |-
            [AI] The `consul acl token update --policy-name` command is used to update the access control list (ACL) policy associated with a Consul token in the Hashicorp Consul service.

            The `--policy-name` flag specifies the name of the new ACL policy that will be assigned to the token. Once the command is executed, the specified token will have the updated policy, granting or denying access to various resources and actions within the Consul service based on the defined policy rules.
        role-id: '[AI] The `consul acl token update --role-id` command is used in Hashicorp Consul to modify the role ID associated with an Access Control List (ACL) token. This token is used for granting or denying access to various Consul resources based on predefined roles and permissions. Updating the role ID allows you to change the level of access granted by the token, making it suitable for managing access to sensitive data in a secure and fine-grained manner.'
        role-name: '[AI] The `consul acl token update` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. The `--role-name` flag specifies the name of the role to be assigned to the updated Access Control List (ACL) token. This flag helps manage access control permissions by allowing you to modify the roles associated with an existing token.'
        service-identity: '[AI] The `consul acl token update --service-identity` command is used to update the Service Identity associated with an Access Control List (ACL) token in Hashicorp''s Consul service. This command modifies the identity of a token, which can be useful for managing access to different services or namespaces within a Consul cluster. By specifying a new Service Identity, you are defining which services the token can manage or interact with. The overall goal is to control access and security in a fine-grained manner across your Consul environment.'
        stale: '[AI] The `consul acl token update --stale` command is used to update an Access Control List (ACL) token in Consul, a Connectivity and Orchestration Toolkit, without checking if the current token is still valid or not. This can be useful when managing tokens manually or in scripts where token expiration is not a concern. It''s important to note that using stale tokens may introduce security risks, as an outdated token could potentially grant access to unintended resources. Always ensure proper security measures are taken when updating ACL tokens with the `--stale` flag.'
        tls-server-name: |-
            [AI] The `consul acl token update --tls` command is used in Hashicorp Consul, an open-source distributed, highly available, and data center aware solution to connect and secure services. This specific command allows updating an Access Control List (ACL) token with TLS server name configuration.

            The `--tls` flag indicates that the request will be made using Transport Layer Security (TLS), which ensures secure communication between clients and servers. The `--tls-server-name` flag specifies the name of the Consul server to which the request is being sent. It's important to use this flag for security reasons, as it helps prevent man-in-the-middle attacks by verifying that the communicating parties are indeed who they claim to be.

            By updating an ACL token with TLS server name configuration, you ensure that only requests coming from servers with specified names will be granted access to the Consul API. This additional layer of security is particularly important when dealing with sensitive data and environments where unauthorized access must be prevented.
        token: '[AI] The `consul acl token update --token` command is used to update an Access Control List (ACL) token in Hashicorp Consul, a service discovery and configuration management tool. With this command, you can rotate or modify the access permissions associated with an existing ACL token by providing a new token value. The updated token will have the same permissions as the old one unless explicitly modified during the update process. This helps ensure security by regularly rotating tokens and limiting their lifespan.'
        token-file: '[AI] The `consul acl token update --token-file` command is used to update an Access Control List (ACL) token in Consul, a connectivity and configuration management tool. This command takes an argument in the form of a file containing the new token value. When executed, Consul reads the token from the file and replaces the existing ACL token with it. This operation is typically used to rotate or update an ACL token for security reasons.'
        upgrade-legacy: '[AI] The `consul acl token update --upgrade-legacy` command is used to upgrade legacy Access Control List (ACL) tokens in Consul, a connectivity and configuration management tool. This command allows you to migrate your older, non-compliant ACL tokens to the new Token Tiering feature, which was introduced to address security concerns with older token types. By using this command, you can maintain access to your resources while improving the overall security posture of your Consul environment.'
