# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: lc
description: Check for newer versions of formulae and/or casks from upstream
flags:
    --cask: Only check casks.
    --debug: Display any debugging information.
    --eval-all: Evaluate all available formulae and casks, whether installed or not, to check them.
    --formula: Only check formulae.
    --full-name: Print formulae and casks with fully-qualified names.
    --help: Show this message.
    --installed: Check formulae and casks that are currently installed.
    --json: Output information in JSON format.
    --newer-only: Show the latest version only if it's newer than the formula/cask.
    --quiet: Suppress warnings, don't print a progress bar for JSON output.
    --resources: Also check resources for formulae.
    --tap: Check formulae and casks within the given tap, specified as <user>`/`<repo>.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] The `brew lc` command is not a valid command for Homebrew, which is a popular package manager for macOS. There seems to be a typo in the given command as Homebrew does not have a command named `lc`. To use Homebrew effectively, make sure to check the available commands by using `brew help` or consulting the Homebrew documentation.'
    flag:
        cask: '[AI] `brew lc --cask` is a command used in Homebrew, a popular package manager for macOS. The `lc` (short for "list calories") part of the command stands for listing installed Casks, which are packages specifically designed for managing and installing GUI applications. This command displays a list of all the currently installed Casks and their associated applications with details like name, version, and installation date.'
        debug: '[AI] The `brew lc --debug` command is used in Homebrew, a popular package manager for macOS. This specific command with the `--debug` flag enables debug mode when looking up a formula, which is a set of instructions used by Homebrew to install and manage software packages. In debug mode, Homebrew will print more detailed information about its search process, making it helpful for troubleshooting or gaining insights into how Homebrew locates formulas.'
        eval-all: '[AI] `brew lc --eval-all` is a command used in Homebrew, a popular package manager for macOS. This command lists all formulas and their current versions installed in Homebrew, along with the recipes (or formulas defining dependencies) that would be executed if those formulas were to be reinstalled or updated. The `--eval-all` flag tells Homebrew to evaluate all formulas, meaning it will show not only the directly installed packages but also their dependencies.'
        formula: '[AI] The `brew lc --formula` command is a part of Homebrew, a popular package manager for macOS. This specific command is used to lookup information about a formula in Homebrew''s repository. The ''lc'' stands for "local" or "list" and "formula" refers to the recipe that defines how a software package should be built and installed. In simple terms, this command retrieves details about the given formula such as its name, description, dependencies, and build requirements.'
        full-name: '[AI] The `brew lc` command is a part of Homebrew, a popular package manager for macOS. The `--full-name` option is used with this command to display the full name of a formula or cask (Homebrew''s terms for packages), including its name, version, and the repository it comes from. For example, if you run `brew lc grep`, you might see output like `grep 3.6-1 (*)`. The asterisk (*) signifies that this is the currently installed version.'
        help: |-
            [AI] The command `brew lc --help` is used with Homebrew, a popular package manager for macOS, to display help information about the `lc` (short for "linkcheck") subcommand.

            This subcommand assists in managing symbolic links between installed packages and their cellar directories. Specifically, it can be used to update or reinstall broken symbolic links, as well as list all managed links. The help information will explain these functionalities with usage examples, options, and flags.
        installed: '[AI] `brew lc --installed` is a command used in Homebrew, a popular package manager for macOS. This specific command lists all currently installed Homebrew packages along with their versions. The `--installed` flag filters the output to only show packages that are already installed in the system.'
        json: '[AI] `brew lc --json` is a command used in Homebrew, a popular package manager for macOS. The `lc` (short for "list-commands") subcommand lists out all installed Homebrew formulas and their related information. The `--json` option returns this information in JSON format, making it easier to parse and process by scripts or other software that can handle JSON data.'
        newer-only: '[AI] `brew lc --newer-upgrade` is a command used in Homebrew, a popular package manager for macOS. The `--newer-only` option filters the list of available upgrades to show only those packages that have a newer version available than what''s currently installed but doesn''t install them yet. It allows users to see which packages have newer versions without automatically upgrading them.'
        quiet: '[AI] The `brew lc --quiet` command is used in Homebrew, a package manager for macOS, to list out installed casks (which are packages for managing applications) silently without any extra messages or progress bars. The `--quiet` flag suppresses the usual output of the `lc` (list-casks) subcommand, displaying only the names and versions of the installed casks.'
        resources: '[AI] `brew lc --resources` is a command used in Homebrew, a popular package manager for macOS, to list all installed Homebrew resources or tap repositories. The option `--resources` specifies that only the list of taps should be displayed. Each line shows a tap name and its URL, representing where Homebrew downloads packages from.'
        tap: '[AI] `brew lc --tap` is a command used in Homebrew, a package manager for macOS. This command lists all the taps (remote repositories) currently configured in Homebrew''s configuration file `/etc/homebrew/repo`. A tap is where Homebrew fetches formulae (packages) to be installed. By prefixing this command with `lc` (lowercase list), it displays only the names of the configured taps, without additional details.'
        verbose: '[AI] `brew lc --verbose` is a command used in Homebrew, a popular package manager for macOS. This specific command lists out all installed casks (graphical user interface applications) and their versions with detailed information. The `--verbose` flag increases the amount of output to provide more details about each installation.'
