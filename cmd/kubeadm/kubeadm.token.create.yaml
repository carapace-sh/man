# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create
description: Create bootstrap tokens on the server
flags:
    --certificate-key=: When used together with '--print-join-command', print the full 'kubeadm join' flag needed to join the cluster as a control-plane. To create a new certificate key you must use 'kubeadm init phase upload-certs --upload-certs'.
    --config=: Path to a kubeadm configuration file.
    --description=: A human friendly description of how this token is used.
    --groups*=: Extra groups that this token will authenticate as when used for authentication. Must match "\Asystem:bootstrappers:[a-z0-9:-]{0,255}[a-z0-9]\z"
    --print-join-command: Instead of printing only the token, print the full 'kubeadm join' flag needed to join the cluster using the token.
    --ttl=: The duration before the token is automatically deleted (e.g. 1s, 2m, 3h). If set to '0', the token will never expire
    --usages*=: 'Describes the ways in which this token can be used. You can pass --usages multiple times or provide a comma separated list of options. Valid options: [signing,authentication]'
documentation:
    command: '[AI] `kubeadm token create` is a command used in Kubernetes to generate a new authentication token. This command creates a new cluster-scoped token, which can be used for bootstrapping new clients or nodes into the Kubernetes cluster. The output of this command includes the token value and its associated UID and expiration time (if specified). It''s important to secure these tokens as they act as sensitive credentials that allow access to the Kubernetes cluster.'
    flag:
        certificate-key: '[AI] The `kubeadm token create --certificate-key` command is used to generate a new authentication token for securing communication between nodes in a Kubernetes cluster. It creates a new token with its corresponding certificate key, which can then be used to join worker nodes to the cluster or grant administrative access to other users. The output includes the token string and the associated CA certificate, which should be kept securely and only shared with trusted entities.'
        config: '[AI] `kubeadm token create --config` is a command used to generate a new Kubernetes cluster join token and save its configuration in a file. This command is typically run on a machine that already has a Kubernetes master set up using `kubeadm`. The generated token can then be distributed to worker nodes or clusters joining the master, allowing them to authenticate during the join process. It''s an essential step when expanding or creating new clusters with `kubeadm`.'
        description: '[AI] `kubeadm token create` is a command used in Kubernetes to generate a new Cluster Admin or RBAC token. The `--description` option allows you to provide a custom description for the token. This description is informational and is stored alongside the token data, helping to identify the purpose of the token when it is used later.'
        groups: '[AI] `kubeadm token create --groups` is a command used to generate a new API server token in Kubernetes using `kubeadm`. The `--groups` flag specifies that the token should be created with additional group memberships for RBAC (Role-Based Access Control) purposes. This allows fine-grained access control for users or services by assigning them to specific groups and defining the permissions for those groups in a Kubernetes cluster. Without this flag, a token would only have default `cluster-admin` or `admin` role.'
        print-join-command: '[AI] `kubeadm token create --print-join-command` is a command used to generate a join command for worker nodes to join a Kubernetes cluster managed by `kubeadm`. This command creates a new token and prints out the `join-command` that includes the token, the Kubernetes API server address, and other necessary arguments. The worker node can use this command to download and apply the required configuration files and join the cluster as a worker node.'
        ttl: '[AI] The `kubeadm token create` command is used to generate a new token for managing Kubernetes clusters. The `--ttl` option sets the time-to-live (TTL) duration for the token, which specifies how long the token will be valid before expiring. The default value for TTL is not set and the token does not expire unless explicitly specified. Setting a TTL helps ensure security by limiting the lifetime of tokens and reducing the risk of unauthorized access to your Kubernetes clusters.'
        usages: '[AI] The `kubeadm token create` command is used to generate a new authentication token in the Kubernetes cluster managed by Kubeadm. The `--uses-random-uuid` flag, when specified, generates a random UUID for the token, and the output will include both the token value and the corresponding CA certificate. This token can then be distributed to clients or clusters to enable communication with the Kubernetes API server.'
