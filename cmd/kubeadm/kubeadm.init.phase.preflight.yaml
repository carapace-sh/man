# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: preflight
description: Run pre-flight checks
flags:
    --config=: Path to a kubeadm configuration file.
    --ignore-preflight-errors*=: 'A list of checks whose errors will be shown as warnings. Example: ''IsPrivilegedUser,Swap''. Value ''all'' ignores errors from all checks.'
documentation:
    command: '[AI] The `kubeadm init phase preflight` is a check performed by the `kubeadm init` command before initiating the setup of a Kubernetes cluster. This phase validates whether the system meets the prerequisites for a successful installation, including checking the operating system version, available disk space, network connectivity, and other required components like Docker or containerd. If any issues are detected during this phase, `kubeadm` will display an error message and suggest possible solutions to address them. The goal is to ensure that the installation process proceeds smoothly and avoid potential errors or failures later on in the cluster setup.'
    flag:
        config: '[AI] `kubeadm init phase preflight --config` is a command used to validate the prerequisites for initializing a Kubernetes cluster using kubeadm. The command reads the configuration file specified and performs checks to ensure that the system meets the minimum requirements for a Kubernetes master node, such as having a sufficient version of Docker installed, meeting certain network requirements, and not being already initialized. If all prerequisites are met, the command exits with a success status. Otherwise, it will output error messages indicating which requirements have not been met.'
        ignore-preflight-errors: |-
            [AI] `kubeadm init` is a command-line tool for initializing Kubernetes clusters using Kubeadm, an open-source project to deploy and manage Kubernetes clusters. The `phase preflight --ignore-preflight-errors` argument is used during the initialization process to skip the pre-flight checks.

            Preflight checks are a series of system requirements and validations that `kubeadm init` performs before starting the actual cluster setup. These checks ensure that the system meets the minimum requirements for a Kubernetes cluster, such as having a sufficient amount of resources, proper network configuration, and no conflicts with other clusters or components.

            By using `--ignore-preflight-errors`, you tell `kubeadm init` to bypass any errors encountered during these preflight checks. This can be useful when dealing with specific system configurations that do not meet the strict requirements for a standard Kubernetes cluster but still might be suitable for your use case. However, it's essential to understand that ignoring preflight errors may lead to unstable or unreliable clusters and potential security vulnerabilities. Always proceed with caution when choosing this option and consider addressing any issues encountered during the checks before initializing the cluster if possible.
