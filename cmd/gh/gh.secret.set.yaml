# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: set <secret-name>
description: Create or update secrets
flags:
    --no-store: Print the encrypted, base64-encoded value instead of storing it on Github
    -a, --app=: 'Set the application for a secret: {actions|codespaces|dependabot}'
    -b, --body=: The value for the secret (reads from standard input if not specified)
    -e, --env=: Set deployment `environment` secret
    -f, --env-file=: Load secret names and values from a dotenv-formatted `file`
    -o, --org=: Set `organization` secret
    -r, --repos*=: List of `repositories` that can access an organization or user secret
    -u, --user: Set a secret for your user
    -v, --visibility=: 'Set visibility for an organization secret: {all|private|selected}'
documentation:
    command: '[AI] `gh secret set` is a GitHub CLI (Command Line Interface) command used to create or update encrypted GitHub Secrets stored in a repository''s settings. This command takes one or more key-value pairs as arguments, sets the value for the given secret key, and encrypts it for security. The updated secrets can be used to store sensitive information like API keys, access tokens, and other environment variables within a GitHub repository without exposing them in plain text.'
    flag:
        app: '[AI] `gh secret set --app` is a command used with the GitHub CLI (Command Line Interface) tool, `gh`. This command sets or updates a GitHub Secret for a specific GitHub App. The "--app" flag indicates that the secret is associated with an app in your GitHub account. With this command, you can securely store and manage sensitive data, such as API keys or tokens, by setting them as environment variables within the GitHub App''s configuration. This command requires authentication to access and modify secrets on your GitHub account.'
        body: '[AI] `gh secret set` is a command used in the GitHub CLI (Command Line Interface) to create or update a GitHub Secret. The `--body` option is used to specify the value of the secret. In summary, this command sets or updates a GitHub Secret with the given name and value.'
        env: '[AI] `gh` is a command-line tool for GitHub. The command `gh secret set --env` sets or updates an encrypted environment variable in a GitHub repository''s secrets manager. The "--env" option specifies that the value to be set is an environment variable, and the argument after the command is the key (name) of the secret, followed by the value in JSON format. For instance, `gh secret set --env MY_SECRET "{''password'': ''mypassword''}"` sets or updates the "MY\_SECRET" secret with the value "mypassword".'
        env-file: |-
            [AI] `gh secret set` is a command from the GitHub CLI (Command Line Interface) tool, specifically used to manage encrypted secrets in GitHub. The `--env-file` option is provided with this command to load or save environment variables as encrypted secrets.

            When you run `gh secret set`, followed by `--env-file <file>`, it reads the file specified by the `<file>` argument for key-value pairs of environment variables. Each line in the file should contain a valid variable name and value, separated by whitespace. The command then sets new encrypted secrets or updates existing ones with the provided variable data.

            In summary, this flag allows you to manage your GitHub encrypted secrets using an external file containing your environment variables.
        no-store: '[AI] `gh secret set` is a command from GitHub''s CLI (Command Line Interface) tool, `gh`, used to create or update a GitHub Secret. The `--no-store` option instructs `gh` not to store the secret in your local `.gh` configuration file for security reasons. This means that the secret will not be available locally and you''ll need to provide it again whenever you use the command, ensuring that sensitive information isn''t accidentally exposed on your local machine.'
        org: '[AI] `gh` is a command-line tool for interacting with GitHub, and the `secret set --org` command is used to create or update an encrypted secret in a specified GitHub organization. The `--org` flag indicates that the operation will be performed on a specific organization rather than a personal repository. Secrets can include sensitive data such as API keys, access tokens, or passwords, and they are stored encrypted in GitHub to enhance security.'
        repos: '[AI] The `gh secret set` command is a GitHub CLI (Command Line Interface) command used to create, update, or delete encrypted secrets in a GitHub repository. The `--repos` option specifies which repository context to use when working with secrets. In other words, it sets the context to the specified repository so that you can manage secrets for that specific repository using the GitHub CLI.'
        user: '[AI] `gh secret set` is a command from GitHub''s CLI (Command Line Interface) tool, called "git-hub." This command is used to set or update secrets in GitHub repository settings. The `--user` flag specifies that the current authenticated user context will be used for the operation, instead of an organization or team context. So, this command sets or updates a secret using your personal access token.'
        visibility: '[AI] `gh secret set --visibility` is a command used in the GitHub CLI (git-hub) for managing encrypted Secrets. This command sets or updates the visibility level of an existing Secret. The visibility can be set to one of three levels: "public", "internal", or "private". A public Secret can be accessed by anyone, internal Secrets are accessible only within the organization, and private Secrets are accessible only to specific users or teams. By default, new Secrets are created with a private visibility level.'
