# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: repos [<query>]
description: Search for repositories
flags:
    --archived: Filter based on archive state
    --created=: Filter based on created at `date`
    --followers=: Filter based on `number` of followers
    --forks=: Filter on `number` of forks
    --good-first-issues=: Filter on `number` of issues with the 'good first issue' label
    --help-wanted-issues=: Filter on `number` of issues with the 'help wanted' label
    --include-forks=: 'Include forks in fetched repositories: {false|true|only}'
    --json*=: Output JSON with the specified `fields`
    --language=: Filter based on the coding language
    --license*=: Filter based on license type
    --match*=: 'Restrict search to specific field of repository: {name|description|readme}'
    --number-topics=: Filter on `number` of topics
    --order=: 'Order of repositories returned, ignored unless ''--sort'' flag is specified: {asc|desc}'
    --owner*=: Filter on owner
    --size=: Filter on a size range, in kilobytes
    --sort=: 'Sort fetched repositories: {forks|help-wanted-issues|stars|updated}'
    --stars=: Filter on `number` of stars
    --topic*=: Filter on topic
    --updated=: Filter on last updated at `date`
    --visibility*=: 'Filter based on visibility: {public|private|internal}'
    -L, --limit=: Maximum number of repositories to fetch
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
    -w, --web: Open the search query in the web browser
documentation:
    command: '[AI] The `gh search repos` command is used in GitHub''s CLI (Command Line Interface) tool, called `gh`, to search for repositories on GitHub based on given keywords or criteria. This command allows users to discover new projects or find specific repositories easily by querying GitHub''s extensive repository index. It returns a list of matching repositories along with their descriptions and other relevant information.'
    flag:
        archived: '[AI] The `gh search repos --archived` command is used with GitHub''s CLI (Command Line Interface) tool, `gh`. This command searches for archived repositories in your organization or the public domain on GitHub. The `--archived` flag filters the results to only include repositories that have been archived, meaning they no longer receive any activity but still exist on GitHub and can be viewed or restored if needed.'
        created: '[AI] The `gh search repos --created` command is a GitHub CLI (Command Line Interface) command used to search for GitHub repository repositories based on their creation date. The `--created` flag filters the search results to show only those repositories that have been created within a specific timeframe. For example, `gh search repos --created:2021-01` would return all repositories created in the year 2021. This command helps users quickly find new and recently created repositories that match their query criteria.'
        followers: '[AI] The command `gh search repos --followers` is a GitHub CLI (Command-Line Interface) command used to search for repositories based on the number of followers they have. The `--followers` flag filters the search results to display only those repositories that belong to users with a specified number of followers. For instance, if you type `gh search repos --followers 1000`, the command will return a list of repositories owned by GitHub users having at least 1000 followers. It''s a powerful tool for discovering popular projects and finding influential developers on GitHub.'
        forks: '[AI] The `gh search repos --forks` command is a GitHub CLI (gh-cli) command used to search for public repositories on GitHub based on their number of forks. The `--forks` flag filters the search results to show only those repositories that have been forked multiple times by other users in the GitHub community. This command can help users discover popular and actively developed projects within specific programming languages or topics.'
        good-first-issues: '[AI] `gh search repos --good-first-issues` is a command used with GitHub''s CLI (Command Line Interface) tool, gh. It searches for public repositories on GitHub that have the "good first issue" label. This label indicates issues that are suitable for new contributors to work on, as they usually involve small tasks or bugs that can help someone get familiar with a project''s codebase. Using this command helps find opportunities for beginners to contribute to open-source projects.'
        help-wanted-issues: '[AI] `gh search repos --help-wanted-issues` is a command used with the GitHub CLI (gh) to find public repositories that have open issues labeled with specific labels indicating that help is wanted. This command helps developers discover projects where they can contribute to existing issues marked for collaboration. It takes no arguments beyond the base command, and it returns a list of repositories along with some basic information such as name, owner, and number of open issues.'
        include-forks: '[AI] The `gh search repos` command with the `--include-forks` flag is a GitHub CLI (gh) command used to search for repositories on GitHub. With this flag, the search results will include both the original repositories and their forks. This means that when you search using this command, you will get a list of not only the main projects but also any projects that are currently forking that project, giving you a more comprehensive view of related projects on GitHub.'
        jq: '[AI] `gh search repos` is a command from GitHub''s CLI (git-hub) used to search for repositories based on given query parameters. The `--jq` option is used to apply JSON queries on the output using the `jq` language. It allows filtering and transforming the data in various ways, making it easier to process and extract specific information from the search results.'
        json: '[AI] `gh search repos --json` is a command used in the GitHub CLI (gh) to search for repositories and return the results in JSON format. The command searches GitHub''s repository database based on given keywords, and returns metadata about each repository, such as name, description, language, stars count, and more. It can be used to automate or programmatically interact with GitHub repositories.'
        language: '[AI] `gh search repos --language` is a command used in the GitHub CLI (gh) to search for repositories on GitHub based on their programming language. The `search` subcommand is used to search, and `repos` specifies that we''re looking for repositories specifically. The `--language` option filters the results to only show repositories written in a specified language. For example, `gh search repos --language python` would return a list of all Python repositories on GitHub.'
        license: '[AI] `gh search repos --license` is a GitHub CLI (Command-Line Interface) command used to search for public repositories on GitHub that match a specific license type. The `--license` option filters the search results based on the specified license. For example, `gh search repos --license MIT` would return a list of all public repositories on GitHub with an MIT-licensed project. This command can help developers find projects they can use in their own projects while ensuring they comply with the chosen open-source license.'
        limit: '[AI] `gh search repos --limit` is a command used in GitHub''s CLI (Command-Line Interface) tool, gh. This command searches for repositories on GitHub and returns up to a specified number of results by using the `--limit` flag. The number following `--limit` indicates how many search results will be displayed. For instance, `gh search repos --limit 5` will return the descriptions and names of five repository matches from your query.'
        match: '[AI] `gh search repos --match` is a command used in the GitHub CLI (gh) to search for repositories that match a given regular expression pattern in their names or descriptions. The `--match` flag specifies the use of a regular expression for filtering the search results.'
        number-topics: '[AI] `gh search repos --number-topics` is a command used in the GitHub CLI (git-hub) to search for repositories based on specific keywords or topics. The `--number-topics` flag requests that the search results be grouped by topic and returns the number of repositories for each topic. This can help users quickly identify popular or relevant topics within the GitHub repository ecosystem.'
        order: '[AI] `gh search repos --order` is a command used with GitHub''s CLI (git-hub) tool. This command searches for public repositories on GitHub based on given keywords and sorts the results in ascending order by default, using the `--order` option. The `--order=stargazers` or `--order=updated` flags can also be used to sort the search results by the number of stars or last updated time respectively. This command is useful when looking for popular or recently updated repositories related to a specific keyword.'
        owner: '[AI] The `gh search repos --owner` command is a GitHub CLI (Command Line Interface) instruction for searching GitHub repositories owned by a specific user. The `--owner` option specifies the username of the repository owner to filter the search results. This command returns a list of repositories, including their names and descriptions, that match the given owner''s username.'
        size: |-
            [AI] The command `gh search repos --size` is a GitHub CLI (Command Line Interface) command used to search for repositories based on specific criteria with size filtering. Here's a brief explanation:

            1. `gh`: Invokes the GitHub CLI tool.
            2. `search`: Commands the CLI to perform a search operation.
            3. `repos`: Specifies that the search should be limited to repositories.
            4. `--size`: Applies a size filter, allowing you to find repositories based on their total file size. The query can include keywords like "larger:10M" for repositories greater than 10MB or "smaller:5M" for those below 5MB.

            This command is useful when looking for repositories of a certain size, helping to save time and resources during the search process.
        sort: |-
            [AI] The `gh search repos --sort` command is used in GitHub's command-line interface (CLI), called Git Hub for Desktop or git-hub.json, to search for repositories on GitHub based on specific keywords and sort the results in ascending or descending order according to the given parameter.

            Here's a breakdown of each part:

            * `gh`: Invokes GitHub CLI.
            * `search`: Instructs the CLI to perform a search operation.
            * `repos`: Specifies that you want to search for repositories instead of other GitHub resources such as issues, users, or organizations.
            * `--sort`: Enables sorting of the search results based on a given parameter (ascending by default).

            For example, `gh search repos --sort stars` would return a list of repositories sorted in descending order according to the number of stars they have received. Similarly, you could use `--sort created` to sort the results based on when they were created (most recent first).
        stars: '[AI] The command `gh search repos --stars` is a GitHub CLI (Command Line Interface) query used to search for GitHub repositories based on their number of stars. The flags `search`, `repos`, and `--stars` define the action as searching for repositories, returning the repository results, and filtering those results by the number of stars they have respectively.'
        template: '[AI] `gh search repos --template` is a command using GitHub''s CLI (github-cli or gh) to search for repositories that match specific criteria. The `--template` option is used to define a custom output format utilizing Mustache templating. This allows users to extract desired information from the search results in a structured way.'
        topic: '[AI] `gh search repos --topic` is a command used with GitHub''s CLI (Command Line Interface) tool, `gh`. This specific command searches for public repositories on GitHub that have been tagged with a given topic. The `--topic` flag filters the search results based on this criteria.'
        updated: '[AI] `gh search repos --updated` is a command used in GitHub''s CLI (Command Line Interface) tool, called "gh." This command searches for repositories that have been recently updated based on the given criteria. The "--updated" flag filters the results to show only those repositories that have had commits pushed within a certain timeframe, typically the last day or week. The output includes repository names, descriptions, owners, and other relevant information. This command is useful for discovering new projects, staying updated with favorite projects, or maintaining a list of active repositories.'
        visibility: '[AI] `gh search repos --visibility` is a GitHub CLI command used to search for public repositories on GitHub based on their visibility setting. The `--visibility` option filters the search results to only show repositories that are set to be publicly visible. This command returns a list of repository names, URLs, and descriptions along with other relevant information.'
        web: '[AI] `gh search repos --web` is a command used in GitHub''s CLI (git-hub) tool. It searches for public GitHub repositories matching a given query and returns the results as web URLs. The `--web` option displays each result as a clickable link to the repository on GitHub''s website, making it easier to navigate and explore the results directly in a web browser.'
