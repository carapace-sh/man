# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: pyenv-sync
description: Create symlinks for Homebrew's installed Python versions in `~/.pyenv/versions`
group: main
flags:
    --debug: Display any debugging information.
    --help: Show this message.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew pyenv-sync` is a Homebrew command used with Pyenv, a Python version management tool. This command synchronizes Pyenv installations with the Homebrew-managed list of available Python versions. By running `brew pyenv-sync`, you ensure that Pyenv has access to the latest and officially supported Python versions installed by Homebrew.'
    flag:
        debug: |-
            [AI] `brew pyenv-sync --debug` is a command used with Homebrew, a popular package manager for macOS and Linux, and Pyenv, a Python version management tool. The `pyenv-sync` subcommand synchronizes the local Pyenv installations with the system's Python version.

            Adding `--debug` flag enables the debug mode, which means that more extensive information will be displayed during the execution of the command. This can help in diagnosing potential issues or understanding the internal workings of the command.
        help: |-
            [AI] `brew pyenv-sync --help` is a command used with Homebrew, a popular package manager for macOS. The `pyenv-sync` sub-command is an extension that helps manage Python versions using Pyenv.

            The `--help` flag is used to display detailed information about how to use this command. It provides the following explanations:

            1. Usage: Installs or upgrades all installed Pythons and their dependencies using Homebrew.
            2. Options: No options are specified in this command, as the default behavior is assumed to be sufficient for most users.
            3. Examples: None provided in the help text.
            4. Notes: This command does not manage global Python installations. Use `pyenv local X.Y` or similar commands for managing per-project Python versions instead.
            5. Requirements: Homebrew and Pyenv must be installed on your system before running this command.

            The overall effect of running `brew pyenv-sync --help` is to display the documentation about how to use the `pyenv-sync` command with Homebrew, which automates Python version management and dependencies installation using Homebrew packages.
        quiet: '[AI] `brew pyenv-sync --quiet` is a command used with Homebrew, a package manager for macOS, and Pyenv, a Python version management tool. The `--quiet` option suppresses informational output during the execution of the `pyenv-sync` subcommand, which synchronizes the local Pyenv installations with the ones defined in Homebrew''s taps (external repositories). By using this command, you can perform the synchronization process quietly without seeing any messages on your terminal.'
        verbose: '[AI] `brew pyenv-sync --verbose` is a command used in Homebrew, a popular package manager for macOS, to manage Python versions with Pyenv. The `pyenv-sync` subcommand updates the installed Python versions and their associated paths based on the available formulas in Homebrew. The `--verbose` option increases the amount of output displayed during execution, providing more detailed information about the actions being taken. This can be helpful for debugging or understanding complex installation processes.'
