# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: all
description: show all information of the chart
flags:
    --ca-file=: verify certificates of HTTPS-enabled servers using this CA bundle
    --cert-file=: identify HTTPS client using this SSL certificate file
    --devel: use development versions, too. Equivalent to version '>0.0.0-0'. If --version is set, this is ignored
    --insecure-skip-tls-verify: skip tls certificate checks for the chart download
    --key-file=: identify HTTPS client using this SSL key file
    --keyring=: location of public keys used for verification
    --pass-credentials: pass credentials to all domains
    --password=: chart repository password where to locate the requested chart
    --repo=: chart repository url where to locate the requested chart
    --username=: chart repository username where to locate the requested chart
    --verify: verify the package before using it
    --version=: specify a version constraint for the chart version to use. This constraint can be a specific tag (e.g. 1.1.1) or it may reference a valid range (e.g. ^2.0.0). If this is not specified, the latest version is used
documentation:
    command: '[AI] `helm show all` is a Helm command used to display detailed information about a specific chart or release. This includes information such as the chart version, dependencies, values, and other relevant metadata. It provides an exhaustive view of the chart configuration and its current state in the Kubernetes cluster.'
    flag:
        ca-file: '[AI] `helm show all --ca-file` is a command used in Helm, a popular Kubernetes package manager. This command displays detailed information about a specific Helm chart or release, including its configuration values, dependencies, and other metadata. The `--ca-file` flag specifies the path to a custom CA (Certifying Authority) certificate file for SSL/TLS communication with the remote Helm repository server. This is useful when connecting to repositories that use self-signed or custom certificates.'
        cert-file: '[AI] `helm show all --cert-file` is a command used in Helm, a popular package manager for Kubernetes. This command displays detailed information about a specific release, including its values, charts, and secrets. The `--cert-file` option specifically requests the output of the TLS certificates associated with that release''s ingress or values. These certificates are essential for secure communication between clients and the Kubernetes cluster.'
        devel: '[AI] `helm show all --devel` is a Helm command used to display detailed information about a specific Helm chart, including its development dependencies and configurations that are not included in the stable charts repository. The `--devel` flag is used to include this additional development-specific data, which can be useful for developers working on or customizing Helm charts.'
        insecure-skip-tls-verify: |-
            [AI] The `helm show all --insecure-skip-TLS-verify` command is used in Helm, a popular package manager for Kubernetes, to retrieve detailed information about a specific Helm chart or release without validating the TLS certificate of the remote repository.

            When this command is executed, Helm will fetch and display all available configuration data for the specified release, including values, templates, and charts. The `--insecure-skip-TLS-verify` flag allows this operation to proceed even if the TLS certificate verification fails, which can be useful in certain scenarios where the repository's certificate may not be trusted due to self-signed or expired certificates.

            However, it is essential to note that using `--insecure-skip-TLS-verify` flag might introduce security risks since it effectively disables TLS certificate validation, potentially allowing man-in-the-middle attacks. Therefore, its use should be limited to trusted repositories and only as a temporary measure while resolving the certificate issue.
        key-file: '[AI] `helm show all` is a command used in Helm, a popular package manager for Kubernetes, to display detailed information about a specific chart or release. When you add the option `--key-file <path>`, it specifies a path to a TLS client certificate and key file for secure communication with a Helm Tiller server. This command then retrieves all information related to that chart or release, including its values, access controls, and other metadata, while using the provided SSL certificate for encryption during the data transfer.'
        keyring: '[AI] `helm show all --keyring` is a Helm command used to display detailed information about all released charts, including their respective values and the keyrings (secret repositories) used for storing and retrieving encrypted values. The `--keyring` flag filters the output to only show the keyring data associated with each release. This can be useful for managing and inspecting encrypted configuration data in a Helm-deployed environment.'
        pass-credentials: '[AI] `helm show all --pass-credentials` is a command used with Helm, a popular package manager for Kubernetes. This command retrieves detailed information about a specific release (i.e., chart and version) managed by Helm, including its values, charts, and other related data. The `--pass-credentials` flag is used to authenticate and pass the necessary credentials (usually in the form of a Tiller token or KubeConfig file) to interact with the Kubernetes cluster where the release is deployed. The combined command allows users to inspect their Helm releases while ensuring secure access to the targeted clusters.'
        password: '[AI] `helm show all --password` is a command used in Helm, a popular package manager for Kubernetes. This command displays detailed information about a specific Helm release, including its values, access keys (secrets), and other configurations. The `--password` flag specifically requests the output of any stored passwords related to that release. It''s crucial for managing secure access to sensitive data in your Kubernetes clusters.'
        repo: '[AI] `helm show all --repo` is a Helm command used to display detailed information about repositories and their charts. The `--repo` argument specifies the name of the Helm repository to query. This command provides an overview of each chart, including its version number, description, creator, dependencies, and other metadata. It helps in assessing which chart to use for deploying applications using Helm.'
        username: '[AI] The `helm show all` command is used in Helm, a popular package manager for Kubernetes, to display detailed information about a specific chart or release. The `--username` flag is optional and is provided to specify the Kubernetes username when running the command in an environment where multiple users exist. This flag ensures that the correct resources are displayed based on the specified user''s permissions.'
        verify: '[AI] `helm show all --verify` is a command used in Helm, a popular Kubernetes package manager. This command displays detailed information about the release and its resources managed by Helm. The `--verify` flag is optional and adds an extra layer of security by validating that the current state of the release matches the desired state defined in the Helm chart before applying any changes. This helps prevent unintended modifications to Kubernetes clusters, ensuring that only intended updates are applied.'
        version: '[AI] `helm show all --version` is a command used in Helm, a popular package manager for Kubernetes. This command displays detailed information about the installed version of Helm on your system. The output includes the Helm version number, git commit SHA, built-go version, and other relevant details to help users understand the specific instance of Helm they are working with.'
