# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: symbolize
description: Symbolize a stack trace from an AOT-compiled Flutter app
flags:
    -d, --debug-info=: A path to the symbols file generated with "--split-debug-info".
    -h, --help: Print this usage information.
    -i, --input=: A file path containing a Dart stack trace.
    -o, --output=: A file path for a symbolized stack trace to be written to.
documentation:
    command: '[AI] `flutter symbolize` is a command-line tool provided by Flutter for managing App Transport Security (ATS) settings in iOS and Mac applications. It converts absolute URLs in your project''s configuration files into relative ones, ensuring that the app can properly communicate with its servers during development and testing. By using this command, you ensure that the ATS restrictions do not cause issues when running or building your application.'
    flag:
        debug-info: '[AI] `flutter symbolize --debug-info` is a command used in Flutter development for generating DSYM files on macOS. These files are required for symbolic debugging and crash report analysis when distributing apps to users via the App Store or other platforms. The command takes the output from a previous build (containing debug information) and converts it into a format that can be read by Apple''s Xcode IDE and related tools. In summary, it helps improve the quality of your app''s error reporting.'
        help: '[AI] `flutter symbolize --help` is a command used in Flutter, a mobile app development framework. This command''s primary function is to help developers with symbolic link creation for their Flutter projects. When run with the `--help` flag, it provides detailed information about how to use this command effectively. It explains the possible options, arguments, and usage examples. This command is particularly useful when dealing with IDEs or build systems that don''t automatically create these links for you, ensuring your project runs smoothly.'
        input: '[AI] The `flutter symbolize` command is a Flutter development tool used to replace hardcoded references to asset files with symbols in the source code. This helps reduce the size of the compiled app by avoiding including unused assets. The `--input` option specifies the Dart or Flutter project file that contains references to the assets. After running this command, Flutter generates a new symbol reference file for the input file and updates the corresponding import map file.'
        output: '[AI] `flutter symbolize --output` is a command used in Flutter, a mobile app development framework. It''s used to post-process Dart binary files (`.dart.sym` and `.dSYM`) for iOS and Android platforms, respectively, to create the corresponding symbol files needed for debugging and symbols display in Xcode and other IDEs or tools. The `--output` option specifies an output directory where generated symbol files will be placed.'
