# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: read
aliases:
    - r
description: Mark all filtered or a specific notification as read
flags:
    --limit=: specify limit of items per page
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -m, --mine: Show notifications across all your repositories instead of the current repository only
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -p, --page=: specify page, default is 1
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
    -s, --states=: 'Comma-separated list of notification states to filter by. Available values:'
documentation:
    command: '[AI] The `tea notifications read` command is used in the Tea interface for GitHub, a graphical desktop client for GitHub. This command marks all unread notifications as read within the Tea application, providing a clean slate for new notifications without having to manually mark each one individually.'
    flag:
        limit: '[AI] The `--limit tea notifications read` command relates to the TeaDB CLI (Command Line Interface) for managing Notification messages in a TeaDB database. This command sets the limit for the number of unread notification records to be fetched or updated during an operation, providing control over data retrieval and reducing network overhead.'
        login: '[AI] The `--flag tea notifications read --login` is a command-line argument for the Telegram desktop application, `telgram-desktop`, which interacts with the Telegram API. This flag instructs the application to mark all new notifications as read and then log in using the specified account details without asking for confirmation.'
        mine: '[AI] The `--flag tea notifications read --mine` is a command used in email clients, such as Thunderbird or IMAP clients, to mark all tea-tagged emails as read and only showing the unread emails with the "mine" tag. In simple terms, it helps users manage their inbox by marking their own tea-tagged emails as read while keeping other unread emails distinct.'
        output: '[AI] The `tea notifications read --output` command is a part of the Tea (Temporal Event Api) CLI tool used to interact with event data in the Temporal platform. This specific command marks all notifications as read and outputs the IDs or tokens of the marked notifications as output. It helps users manage their notification inventory, keeping track of which notifications have been processed.'
        page: |-
            [AI] The `--flag tea notifications read --page` is a command used in the GitHub API to fetch notifications related to a specific repository or organization. Here's what each part means:

            * `--flag` indicates that this is an option, or argument, to be passed to a command or function.
            * `tea` is short for "Teamwork Extensible Automation," which is GitHub's internal name for its API tools and CLI (Command Line Interface) toolkit.
            * `notifications` specifies that we want to retrieve notifications data from GitHub.
            * `read` filters the results to only include notifications that have been read by the authenticated user.
            * `--page` is used with paginated API requests to specify which page of results to return. This allows us to retrieve multiple pages of data if needed.
        remote: '[AI] The `--flag tea notifications read --remote` is a command used in GitHub''s Hub software or other similar tools, typically within a Git command line interface. This flag modifies the behavior of the `notifications list` command to show only the read notifications that have been marked as "seen" on a remote repository, rather than displaying both read and unread notifications. The `--remote` option specifies that the notifications should be fetched from the remote GitHub server rather than from the local machine.'
        repo: '[AI] The command `tea notifications read --repo` is a command used in the Tea interface, a Git client for desktop and mobile. This specific command is used to mark all notifications related to a particular repository as read within Tea''s notification system. It does not affect the actual state of the repositories themselves but rather clears the visual indication of new notifications in the Tea application.'
        states: |-
            [AI] The `--states` option under the `tea notifications read` command in the Tea (Terminal Emulator Application) tool is used to display the current state of notification read statuses across various applications and platforms.

            When you run `tea notifications read --states`, it lists down the number of unread notifications, if any, for each application or platform that supports Tea's notification integration. These applications may include Slack, Discord, Gmail, etc. The output is usually presented in a table format with columns for the application name and the corresponding unread notification count.

            This command can help you quickly check your overall notification status across multiple platforms and applications from within your terminal without having to visit each one individually.
