# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: destroy
description: Delete all the resources created
flags:
    --auto-approve: Confirm destroying all resources.
    --label=: Labels to set for this operation.
    --plain: Plain output
    --remote: True to use a remote runner to execute.
    --remote-source=: Override configurations for how remote runners source data.
    --var-file=: HCL or JSON file containing variable values to set for this operation.
    --var=: Variable value to set for this operation.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint destroy` command in OpenStreetMap editing tools is used to remove a waypoint from the map. Waypoints are points of interest or locations that have been added to the map, often used as references for routing or navigation. When this command is executed, the waypoint will be deleted permanently, along with any associated tags or attributes. Please note that this action cannot be undone once confirmed, so it should only be used after careful consideration.'
    flag:
        app: '[AI] The `waypoint destroy --app` command is used in Docker Compose and Docker Swarm to remove a specific application defined in the YAML file or Swarm stack. This command removes all containers, networks, images, and volumes associated with the specified application, effectively cleaning up the resources used by that application. It does not delete the configuration files themselves (YAML or `.tmpl` files).'
        auto-approve: '[AI] The `waypoint destroy --auto-approve` command is used in Kubernetes to delete a specific waypoint object in a Fluentd configuration, and it includes the `--auto-approve` flag to bypass the confirmation prompt for destruction. This means that the deletion will be performed automatically without requiring any user interaction or manual approval. It''s important to note that using this command should be done with caution as it can permanently delete waypoint configurations from your Kubernetes cluster.'
        label: '[AI] The `waypoint destroy` command with the `--label` flag is used to delete a specific Waypoint, which is a Kubernetes resource used for managing external dependencies or services not running in the cluster itself. The label argument helps to identify and select the specific Waypoint to be deleted among multiple Waypoints that might exist in the cluster. This command removes the selected Waypoint from the cluster along with its associated metadata.'
        plain: '[AI] `waypoint destroy --plain` is a command used in Kubernetes to delete a specific Waypoint, which is a custom resource definition (CRD) for managing continuous delivery workflows in Kubernetes. The `--plain` flag is optional and, when used, instructs the kubectl tool to output the raw representation of the manifest file, without applying it to the cluster immediately. This can be useful for understanding the exact changes that will be made before applying the delete operation.'
        project: '[AI] The `waypoint destroy` command with the `--project` flag is used to destroy an entire Terraform project, including all the resources defined in the corresponding configuration files. It permanently deletes the infrastructure managed by Terraform for that project from the underlying cloud provider. Using this command requires caution and should only be executed after ensuring that there are no dependent resources or running instances that will be affected. Additionally, it''s important to have proper backups in place before destroying a project.'
        remote: '[AI] The `waypoint destroy --remote` command is used in Docker Swarm to remove a previously registered and deployed service or task on remote nodes from the Swarm cluster. When executed, it removes the replicas running the container instances and their associated networks and storage volumes if defined. This command should be run with sufficient privileges and aims to help manage and maintain a Docker Swarm environment.'
        remote-source: '[AI] The `waypoint destroy --remote-source` command in Hashicorp''s Terraform is used to destroy resources that were not created locally but managed by another source of truth, such as a remote state file or an external Terraform Cloud workspace. This action helps maintain consistency between the infrastructure configuration and the desired state defined in your Terraform configuration files. By using `--remote-source`, you ensure that the changes are propagated back to the remote state file after the destruction, thus keeping the remote state in sync with the actual infrastructure state.'
        var: '[AI] The `waypoint destroy` command with the `--var` option is used in Terraform, an open-source infrastructure as code software tool. It destroys (removes) a specific resource instance identified by its name or index from a Waypoint file. Waypoints are configuration files that store state and metadata for resources managed by Terraform. The `--var` option allows passing variables to the command, which can be used to provide dynamic input values during resource destruction.'
        var-file: '[AI] `waypoint destroy --var-file` is a command used in Hashicorp''s Terraform configuration management tool. This command is used to destroy infrastructure resources configured by Terraform, using variables stored in a file instead of hardcoding them directly into the Terraform configuration. The `--var-file` option specifies the path to the file containing these variables. This approach allows for easy modification and management of infrastructure configurations by keeping variable values external to the Terraform code itself.'
        workspace: '[AI] The `waypoint destroy --workspace` command is used in the Hashicorp''s Waypoint infrastructure management tool to delete an existing Waypoint workspace. A workspace represents a logical separation of resources managed by Waypoint, which may include configurations for multiple services and environments. Running this command will remove the specified workspace and its associated configuration data, effectively unmanaging any deployed resources.'
