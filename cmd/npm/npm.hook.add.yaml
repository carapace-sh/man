# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Add registry hook
flags:
    --type=: type of hook
documentation:
    command: |-
        [AI] `npm run script-name add` is not a standard NPM command. It seems like you're combining `npm run`, which is used to execute scripts defined in your `package.json` file, with the term "add", which is typically associated with Git commands like `git add`.

        If you meant to ask about an `npm install` hook named `add`, it doesn't exist by default. NPM hooks are custom scripts that can be defined in the `package.json` file under the `scripts` or `preinstalls`/`postinstalls` sections, with names prefixed with `pre` (for before an event) or `post` (for after an event). For example:

        ```json
        "scripts": {
          "prepare": "npm install",
          "add": "your-custom-script-here"
        }
        ```

        To run the custom script named "add" during installation, you can use `npm run add` as part of your development workflow. However, this command won't have any special meaning to NPM itself.
    flag:
        type: |-
            [AI] The `npm add` command with the `--type` option is used to install a new package as a specific type within an npm project's `node_modules` directory. The three main types are:

            1. `dev`: Packages required for development, such as testing frameworks or linters. These packages will not be included in the production bundle.
            2. `peer`: Packages that a package requires to function, but are not developed or maintained by the same organization or team. This means they must be installed separately when using the dependent package.
            3. `optional`: Packages that a project may choose to use, but their absence won't prevent the project from functioning.

            The `npm add <package-name> --type [dev|peer|optional]` command installs a new package with the given name and adds it as the specified type within your project's node_modules directory.
