# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: List all available workspaces
flags:
    --json: Format the output as an NDJSON stream
    --no-private: Exclude workspaces that have the private field set to true
    --since: Only include workspaces that have been changed since the specified ref.
    -R, --recursive: Find packages via dependencies/devDependencies instead of using the workspaces field
    -v, --verbose: Also return the cross-dependencies between workspaces
documentation:
    command: '[AI] `yarn workspaces list` is a command used in Yarn, a popular JavaScript package manager. This command lists all the projects within a Yarn Workspace, which is a setup where multiple related projects share common dependency management and build scripts. The output of this command displays the names of each project under the workspace directory.'
    flag:
        json: '[AI] `yarn workspaces list --json` is a command used in Yarn, a popular JavaScript package manager. This command generates a JSON output listing all registered workspaces (projects) in a Yarn workspace. Each entry contains the workspace name and the corresponding root directory path. This output can be further processed by other scripts or tools for automation purposes.'
        no-private: '[AI] `yarn workspaces list --no-private` is a command used in Yarn, a popular JavaScript package manager. This command lists all the projects in a Yarn workspace without showing private dependencies. In other words, it displays only the public packages that are installed and not the ones marked as dev or local dependencies, which might be private to the workspace. The `--no-private` flag ensures this behavior.'
        recursive: '[AI] `yarn workspaces list --recursive` is a command used in Yarn, a popular JavaScript package manager. This command lists all the packages (workspaces) registered under a Yarn workspace root. The `--recursive` flag enables it to recursively list all packages including those nested deep within sub-directories of the workspace. Essentially, this command provides a comprehensive view of all packages in a multi-package Yarn project.'
        since: '[AI] `yarn workspaces list --since` is a command used in Yarn, a popular JavaScript package manager. This command lists all the workspaces (projects) in a Yarn workspace that have experienced a change in their dependencies since a given commit or tag. By providing the `--since` option followed by a commit hash or tag, the command filters the list to only show the workspaces with updated dependencies after that point. This can be helpful for identifying which projects in a monorepo have been affected by a recent dependency update.'
        verbose: '[AI] `yarn workspaces list --verbose` is a command used in Yarn, a popular JavaScript package manager. This command lists all the applications or projects within a Yarn workspace with detailed information. The `--verbose` option increases the amount of output, providing more details such as the root directory and version number for each project. It helps developers to get an overview of the projects in their workspace and identify which ones need attention.'
