# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: format
description: Format a string using a template
flags:
    --theme=: Glamour theme to use for markdown formatting
    -l, --language=: Programming language to parse code
    -t, --type=: Format to use (markdown,template,code,emoji)
documentation:
    command: '[AI] `gum format` is a command used in the Gum package for Node.js, which provides a simple CLI for creating and working with Markdown files. This specific command is responsible for formatting Markdown files by checking and correcting syntax errors, ensuring consistent styling, and applying other formatting rules according to the configured preset or user-defined settings.'
    flag:
        language: '[AI] The `gum format --language` command is used in Gum, a popular CLI tool for validating and transforming data, to specify the language or format of the input data. The `--language` option takes a string argument representing the name or extension of the data format, such as JSON, YAML, XML, or CSV. The Gum library then uses this information to apply the appropriate parser or serializer when processing the input data. This ensures that the data is correctly interpreted and validated according to its format before any further transformations are applied.'
        theme: |-
            [AI] `gum format --theme` is a command used in GUM (Global Utility Module), a tool for creating and managing terminal-based applications. This specific command sets the theme for the output of other GUM commands, such as `gum format`, which is responsible for formatting and displaying data in the console.

            The `--theme` option allows you to choose a predefined theme or pass a custom theme configuration file, which defines the appearance of text, such as colors, styles, and symbols used in the output. This can help make the output more visually appealing, readable, and consistent with your project's branding.
        type: '[AI] `gum format --type` is a command used in Git User Menus (Gum), a tool that extends the Git CLI with interactive experiences. This command specifies the type of format to use when interacting with Git, such as commit message, rebase message, or push message formats. The exact behavior depends on the configured format for the specified type.'
