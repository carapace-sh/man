# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: prune
description: Prune worktree information in $GIT_DIR/worktrees
flags:
    --expire=: expire working trees older than <time>
    -n, --dry-run: do not remove, show only
    -v, --verbose: report pruned working trees
documentation:
    command: '[AI] `git worktree prune` is a Git command used to remove inactive or unwanted worktrees. Worktrees are separate working directories for different branches or projects, maintained under one Git repository. This command helps keep the list of worktrees clean and efficient by deleting those that are no longer in use. When run, it lists the existing worktrees and asks for confirmation before deletion. To force delete without confirmation, add `-f` or `--force` option.'
    flag:
        dry-run: '[AI] `git worktree prune --dry-run` is a Git command used to preview the effects of deleting inactive or unnecessary worktrees before actually executing the command. This command does not delete any worktrees but only shows which worktrees will be removed if you run `git worktree prune`. It helps prevent accidental deletion of important worktrees and ensures that only unused worktrees are eliminated.'
        expire: '[AI] `git worktree prune --expired` is a Git command used to remove inactive or expired worktrees. Worktrees are separate working directories for the same repository, allowing you to work on different branches or versions of the project simultaneously. The `--expired` option filters out only those worktrees which have not been checked out for more than the configured git config variable `core.worktreePruneExpire`, usually set to 2 weeks by default. By running this command, you can clean up your system and free up resources while keeping only the actively used worktrees.'
        verbose: |-
            [AI] `git worktree prune --verbose` is a Git command used to remove inactive or unwanted worktrees from your local repository. This command interacts with the `git worktree` subsystem, which enables working on multiple branches and repositories concurrently within a single repository.

            The `--verbose` option increases the level of output detail provided by Git during the pruning process. This can be useful for debugging or understanding exactly which worktrees are being removed. The command will display messages for each worktree that is being pruned, showing the branch name and the directory path where it was located. If no worktrees meet the criteria for removal, no output will be displayed.
