# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: namespaces
description: List OpenFaaS namespaces
flags:
    --tls-no-verify: Disable TLS validation
    -g, --gateway=: Gateway URL starting with http(s)://
    -k, --token=: Pass a JWT token to use instead of basic auth
documentation:
    command: '[AI] The `faas-cli namespaces` command is used with the FaaS (Function-as-a-Service) CLI tool to manage Kubernetes namespaces for deploying and managing serverless functions. This command lists all the namespaces currently configured for Faas-Netes, allowing you to choose the desired namespace for your function deployment operations.'
    flag:
        gateway: |-
            [AI] The `faas-cli namespaces --gateway` command is used with the FaaS (Function-as-a-Service) CLI tool to manage Kubernetes namespaces and their associated gateways for FaaS applications.

            More specifically, this command allows you to list, create, update, or delete gateways for a specific namespace. A gateway is an entry point to access the functions in a given namespace using HTTP or other protocols. It provides a URL that clients can use to invoke functions as REST APIs. By executing `faas-cli namespaces --gateway`, you can manage your FaaS gateways at the namespace level, making it easier to control and organize access to your functions.
        tls-no-verify: '[AI] The `faas-cli` is a command-line interface tool for interacting with Function-as-a-Service (FaaS) platforms like OpenFaas and FnProject. The specific flag `--namespaces <namespace> --tls-no-verify` disables TLS certificate verification when working with named namespaces in the FaaS platform. This means that the CLI will not check the validity of the TLS certificates presented by the API server, potentially increasing security risks if used in an insecure environment. It''s important to use this flag responsibly and only when necessary for compatibility with specific platforms or configurations.'
        token: '[AI] `faas-cli namespaces --token` is a command used with the FaaS CLI (Function as a Service Command Line Interface) tool in Faas (Functions as a Service) systems. This command allows you to manage Kubernetes namespaces and set the token for authentication while interacting with that specific namespace. The `--token` argument is used to provide the authentication token, which is essential for accessing and manipulating resources within the specified namespace.'
