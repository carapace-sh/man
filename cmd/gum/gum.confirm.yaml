# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: confirm
description: Ask a user to confirm an action
flags:
    --affirmative=: The title of the affirmative action
    --default: Default confirmation action
    --negative=: The title of the negative action
    --prompt.align=: Text Alignment
    --prompt.background=: Background Color
    --prompt.bold: Bold text
    --prompt.border-background=: Border Background Color
    --prompt.border-foreground=: Border Foreground Color
    --prompt.border=: Border Style
    --prompt.faint: Faint text
    --prompt.foreground=: Foreground Color
    --prompt.height=: Text height
    --prompt.italic: Italicize text
    --prompt.margin=: Text margin
    --prompt.padding=: Text padding
    --prompt.strikethrough: Strikethrough text
    --prompt.underline: Underline text
    --prompt.width=: Text width
    --selected.align=: Text Alignment
    --selected.background=: Background Color
    --selected.bold: Bold text
    --selected.border-background=: Border Background Color
    --selected.border-foreground=: Border Foreground Color
    --selected.border=: Border Style
    --selected.faint: Faint text
    --selected.foreground=: Foreground Color
    --selected.height=: Text height
    --selected.italic: Italicize text
    --selected.margin=: Text margin
    --selected.padding=: Text padding
    --selected.strikethrough: Strikethrough text
    --selected.underline: Underline text
    --selected.width=: Text width
    --timeout=: Timeout until confirm returns selected value or default if provided
    --unselected.align=: Text Alignment
    --unselected.background=: Background Color
    --unselected.bold: Bold text
    --unselected.border-background=: Border Background Color
    --unselected.border-foreground=: Border Foreground Color
    --unselected.border=: Border Style
    --unselected.faint: Faint text
    --unselected.foreground=: Foreground Color
    --unselected.height=: Text height
    --unselected.italic: Italicize text
    --unselected.margin=: Text margin
    --unselected.padding=: Text padding
    --unselected.strikethrough: Strikethrough text
    --unselected.underline: Underline text
    --unselected.width=: Text width
documentation:
    command: '[AI] The "gum confirm" command is not a standard Linux or Unix command. It seems to be specific to a particular tool or script named GUM (Graphical Update Manager) that is used for managing software updates in some Linux distributions. This command likely displays a confirmation message or dialog box to the user, requesting them to affirm a planned action before it is executed, such as installing an update.'
    flag:
        affirmative: '[AI] The `gum confirm --affirmative` command is used in GitHub Actions workflows to prompt for user confirmation before running a job or a step that may have destructive or unwanted consequences. The `--affirmative` flag means that the confirmation prompt will require an explicit affirmative response, such as "yes" or "1", rather than just any non-empty response. This helps prevent accidental executions of potentially harmful actions.'
        default: '[AI] `gum confirm --default` is a command used in Node.js projects with the GUM (Generators Unified Model) framework. This command displays a prompt to confirm a default choice for an answer during the installation or generation process. The `--default` option sets the chosen default value as the answer, so that the user doesn''t need to manually input it when using an interactive CLI tool.'
        negative: '[AI] The `gum confirm --negative` flag is used in the GUM (Global Understanding, Minimally Intrusive) library for handling user prompts and confirmations in Node.js. It instructs GUM to display a negative prompt with an "Are you sure?" question instead of the default positive one. The goal is to allow users to opt-out or cancel an action that could potentially have undesired consequences.'
        prompt.align: '[AI] The `--prompt.align` option in the `gum confirm` command is used to align the confirmation prompt messages horizontally when displaying multiple choices. When enabled, all prompts will be displayed at the same indentation level, making the output look more organized and visually pleasing. This can be useful when presenting a large number of options for user selection.'
        prompt.background: '[AI] The `--prompt.background` flag in PowerShell, when used with the `Confirm-HostSessionState` cmdlet (alias `gum`) changes the background color of the PowerShell console window during confirmation prompts. This can help distinguish confirmation prompts from regular output for improved user experience and error avoidance.'
        prompt.bold: '[AI] `gum` is a popular Node.js library used for creating interactive command-line interfaces. The `--prompt.bold` flag is an option that can be passed to certain `gum` commands to make the prompt text appear bold when displayed in the terminal. This can help improve the visual clarity and readability of the command output, making it easier for users to understand and interact with the application.'
        prompt.border: '[AI] The `--prompt.border` option in the `gum` CLI (Command Line Interface) tool is used to customize the border style of the interactive prompt that appears during script execution. When this flag is passed with a valid border character string, it sets the border around the interactive prompt window to create a visually distinct and attractive boundary. This feature enhances the user experience by making the output more readable and organized.'
        prompt.border-background: '[AI] The `--prompt.border-background` option in PowerShell''s `gum confirm` command modifies the background color of the border around interactive prompts, such as those used for confirmation messages. When this flag is set, a specified color or image will be used to fill the background area surrounding the text within the prompt. This can aid in making the interactive prompts more visually distinguishable and easier to identify within a terminal or console window.'
        prompt.border-foreground: '[AI] The `--prompt.border-foreground` flag in PowerShell''s `gum confirm` command is used to specify the foreground color of the border around interactive prompts. These prompts appear when the confirmation dialog is invoked during script execution, asking for user input or confirmation before proceeding with potentially risky operations. By setting this flag, you can customize the appearance of these prompts to better suit your needs or preferences.'
        prompt.faint: '[AI] The `--prompt.faint` option in the `gum` CLI tool is used to configure the color intensity of the command prompt message displayed during interaction. When this option is set to `true`, the color intensity will be reduced, making it less noticeable compared to the regular color. This can be useful in environments where high color intensity may cause visual distress or interference, such as certain terminal emulators or when using a small screen.'
        prompt.foreground: '[AI] The `--prompt.foreground` option in the `gum confirm` command is used to specify the foreground color for the text that is displayed during interactive prompts. When this option is provided, `gum confirm` will display the prompt message with the given color, making it easier to distinguish from regular console output. For example, passing `--prompt.foreground=red` would display the prompt in red color.'
        prompt.height: '[AI] The `gum confirm --prompt.height` flag is used with the Gum package in Node.js to customize the height of the prompt text area when displaying a confirmation dialog. This can be useful for ensuring that the dialog fits well within the terminal window, especially when dealing with longer or multi-line messages. By default, the height is set to 10 lines. For example, to set the height to 5 lines, use `gum confirm --prompt.height 5`.'
        prompt.italic: '[AI] The `--prompt.italic` flag for `gum confirm` is an option used with the Gum packaging tool in npm. It sets the text for the confirmation prompt to be italicized. This can help visually distinguish the prompt from regular console output, making it clearer to users that they are being asked for input or confirmation.'
        prompt.margin: '[AI] The `--prompt.margin` flag in Git for the `gum confirm` command adjusts the number of spaces between the prompt message and user input during interactive confirmation prompts. By default, there is no margin. Setting a positive integer value will add that many spaces as a margin. For example, `--prompt.margin 2` will create a two-space margin between the prompt and input.'
        prompt.padding: '[AI] The `--prompt.padding` option in the `gum` CLI tool, when used with the `confirm` command, sets the number of spaces before and after the prompt text for interactive confirmation prompts. For example, `--prompt.padding 4` would add four spaces before and after each prompt, making it `"Are you sure? [4 spaces]"` in the console. This can be used to improve the visual alignment and readability of the prompts.'
        prompt.strikethrough: '[AI] The `--prompt.strikethrough` flag in Git for Unified Modeling Language (UML) tools like GUM (Graphical UML Modeling) is used to display strikethrough text in the command prompt during confirmation prompts. This flag enables users to visually identify which options or selections will be removed, deleted, or deprecated when executing a command. By using strikethrough text, it enhances the clarity and accuracy of the interaction with the tool, helping to prevent unintended actions.'
        prompt.underline: '[AI] The `--prompt.underline` option in the `gum` CLI (Command-Line Interface) library is used to underline the prompt text when it is displayed in a terminal or console. This can help improve the visual cue for users, making it clearer where they should input their responses. The `--confirm` flag is typically used with interactive commands that require user confirmation before executing potentially destructive actions. Together, these flags are often used to create more visually appealing and informative command-line interfaces.'
        prompt.width: '[AI] `gum confirm` is a command-line tool from the GUM (Git Utility Manager) package in npm. The `--prompt.width` option sets the width of the text prompt used by `gum confirm`. It helps ensure that prompts do not overflow the terminal window, keeping the user interface clean and readable.'
        selected.align: '[AI] `gum confirm --selected.align` is a command used in Git, specifically with the Git Unified Modeling Language (Gum) library for creating interactive git terminals. This command confirms the currently selected Git commit or staging area change(s) and aligns the messages of the selected items before showing them for confirmation to the user. The --selected option specifies that only the currently selected items should be processed, ensuring a clean and focused interface for the user during the confirmation step in a git workflow.'
        selected.background: '[AI] `gum confirm --selected.background` is a command in the Gum toolkit, which is a collection of npm packages for creating interactive prompts and commands in Node.js. This specific command displays a confirm prompt with a pre-selected background color and waits for user confirmation by pressing ''y'' or ''n''. The `--selected.background` flag sets the background color of the selected option in the prompt. It is often used to provide visual feedback and make the interface more engaging and intuitive.'
        selected.bold: '[AI] `gum confirm` is a command provided by the GUM (Generate Understanding Machine) library in Node.js. The option `--selected.bold` is used to display the selected item in bold font when presenting a list for user confirmation. The flag confirms that this formatting style should be applied.'
        selected.border: '[AI] The command `gum confirm --selected.border` is a function provided by the Gum package in Node.js. It displays a confirmation prompt with a border around the selected option, making it visually distinct from other options. The user can then press Enter to confirm their selection or Esc to cancel. If confirmed, the function returns a Promise that resolves with the value of the selected option.'
        selected.border-background: '[AI] `gum confirm --selected.border-background` is a command in the GUM (Git Unified Merge) tool, used to interactively resolve merge conflicts in Git. The option `--selected.border-background` sets the background color of the border around the selected conflicted lines during the merge conflict resolution process. It''s a visual aid that helps users quickly identify and manage their changes within the merge conflict window.'
        selected.border-foreground: '[AI] The `gum confirm --selected.border-foreground` flag is a configuration option for GUM (Generate Userfeedback), a command-line interface library for Node.js. This flag sets the color of the border around the selected option when using the `confirm()` function in GUM. By default, this flag is not set and the border color is typically white, but setting it to a desired color value will change the appearance of the selected option''s border.'
        selected.faint: |-
            [AI] The command `gum confirm --selected.faint` is a part of the Git Understanding Migration (GUM) tool in Git for Windows. This command is used to display a confirmation message for the user before executing a potentially destructive Git operation, such as force pushing or deleting a branch.

            The `--selected` option specifies that the confirmation should only be shown for the currently selected object in the Git GUI (if any), and the `.faint` option is used to make the text appear less vibrant or noticeable when displayed on the terminal or console.
        selected.foreground: '[AI] `gum confirm --selected.foreground` is a command used in GUM (Git Unified Modeling), a library for building interactive Git interfaces. This specific command displays a confirmation prompt with the foreground color of the currently selected item. The user can then confirm or deny the action associated with that item based on the displayed color. It''s used to ensure that users make informed decisions during interactive Git operations.'
        selected.height: '[AI] The command `gum confirm --selected.height` is a function provided by the Gum package in Node.js. It is used to display a confirmation dialog with a message and an optional yes or no choice, but in this specific case, it is configured to only show the height of the currently selected item. This can be useful for getting the dimensions of an element in a graphical user interface (GUI) tool like the Gum CLI''s interactive mode or a custom application using Gum. The output will typically be a number representing the height in pixels.'
        selected.italic: '[AI] The `gum confirm --selected.italic` command is a part of the GUM (GitHub Universe Methodology) library for Node.js. It displays an interactive CLI prompt that confirms user actions, such as deletion or modification of resources, and highlights the currently selected item in italics. This helps users ensure they are making the intended action before proceeding.'
        selected.margin: |-
            [AI] The command `gum confirm --selected.margin` is used in GitHub's Git Utilities for Microsoft Teams (Gum) application. It is a confirmation prompt to verify user actions before executing them in GitHub Repositories managed within Microsoft Teams.

            The `--selected.margin` option specifies the number of context items that Gum should display around the selected item when asking for confirmation. This helps users to easily identify and confirm the intended action among multiple options available in the GitHub interface.
        selected.padding: '[AI] The `--selected.padding` option in the `gum confirm` command is used to set the padding around the selected option in the interactive prompt displayed by the `gum-cli` library. This option accepts a number value, representing the number of columns between the edge of the terminal window and the text of the selected option. For example, `--selected.padding 2` would add two columns of space around the selected option.'
        selected.strikethrough: '[AI] The `--selected.strikethrough` flag is a command-line option used with the `gum` CLI (Command Line Interface) tool, likely within the context of a Git or version control workflow. It confirms an operation, such as staging or committing selected changes, by visually marking them with a strikethrough in the output. This helps ensure that only intended changes are applied before executing the command.'
        selected.underline: '[AI] The command `gum confirm --selected.underline` is a part of Gum, a CLI library for building interactive applications in Node.js. This specific command is used to display selected items with an underline indicator in a text-based confirmation prompt. When the user presses enter, only the selected item will be confirmed.'
        selected.width: '[AI] The command `gum confirm --selected.width` is related to Gum, a popular CLI tool for building interactive prompts and workflows in Node.js. This specific command is used to display a confirmation prompt with a message and an optional pre-filled answer (represented by the `--selected` flag), asking the user to confirm or deny the action based on the width of the selected option. The width refers to the number of characters in the string representation of the selected option. If the width of the selected option matches the given value, the confirmation will succeed; otherwise, it may fail or prompt for correction depending on the application''s design.'
        timeout: '[AI] The `gum confirm --timeout` command is used in Node.js with the Gumpack library for creating interactive CLI prompts. The `--timeout` option sets a time limit for user input before automatically confirming the default answer or rejecting the prompt, depending on the configuration. This can be useful in automating processes or improving user experience by reducing wait time when no response is expected.'
        unselected.align: '[AI] The `gum confirm --unselected.align` command is a part of GUM (Git Unified Merge), a Git extension for conflict resolution. This specific command aligns the changes between unmerged files, helping to visually compare and resolve differences during a merge conflict in Git. By using `--unselected`, it applies to files that have not been selected yet for merging or resolving conflicts.'
        unselected.background: '[AI] The command `gum confirm --unselected.background` is used in Git to interactively rebase or rebase-interactive workflows with Gum, a Git user interface built on top of Incremental. This command specifically unmarks the currently selected commit (if any) and resets the background selection to none. In other words, it deselects the current commit without committing any changes and clears any previously selected commits in the background.'
        unselected.bold: '[AI] `gum confirm --unselected.bold` is a command used in the Gum library for interactive prompts in Node.js. This specific command sets the style of the unselected option in a multiple choice prompt to bold. When rendering the prompt, the unselected options will be displayed in bold text, making it easier for users to identify which choices have not yet been selected.'
        unselected.border: '[AI] The `--unselected.border` option in the `gum confirm` command is used to apply a border around options that have not been selected in an interactive terminal prompt. This can help visually distinguish between selected and unselected options, making it easier for users to understand their choices during the confirmation process.'
        unselected.border-background: '[AI] The `--unselected.border-background` flag in `gum confirm` is used to set the background color of borders for unselected options during interactive command confirmation prompts. By default, there is no border or background color for unselected options, but this flag allows customization to make it visually distinguishable from selected options.'
        unselected.border-foreground: '[AI] The `--unselected.border-foreground` option in the `gum confirm` command relates to the color of the border around unselected options in the interactive prompt provided by the gum package. The `gum confirm` function is used to get user input and confirmation in Node.js scripts, and this specific option allows you to customize the border color of unselected items.'
        unselected.faint: '[AI] The `gum confirm --unselected faint` command is a part of the GUM (Git User Experience) library for Git, which is used to enhance user interactions with Git commands. This specific command displays unselected items in a confirmation prompt in a faint color, making it visually distinct from selected items. This helps users easily identify the difference between their current selection and other available options during an interactive Git session.'
        unselected.foreground: '[AI] The command `gum confirm --unselected.foreground` is a part of the GUM (Git User Message) library in Git. It is used to display a confirmation message for an unstaged change that the user did not explicitly select for staging using `git add`. The `--unselected.foreground` option makes the name of the unstaged file appear in the foreground color, making it more noticeable when the message is displayed. This helps ensure that users are aware of all changes they have made and can make an informed decision about whether to stage them before committing.'
        unselected.height: '[AI] `gum confirm --unselected.height` is a command used in the Git Upgrade Manager (GUM) tool for Git, which helps manage and upgrade various Git extensions. This specific command is used to display the height of the unselected items in the dropdown menu during the confirmation step before executing an operation. It returns the numerical value of the height of these items, but does not confirm or execute any changes.'
        unselected.italic: '[AI] The `--unselected.italic` option in the `gum confirm` command is used to italicize the labels of unselected options during an interactive prompt in Node.js or other environments where GUM (Generative Unified Modeling) library is being used. This style difference can help users visually distinguish between selected and unselected options, making it easier for them to make informed choices.'
        unselected.margin: '[AI] `gum confirm --unselected.margin` is a command used in GUM (Git Unified Model), a library for building Git-like interfaces. This specific command is related to the confirmation step of an interactive Git-like workflow, where it sets the margin or spacing between confirmed and unconfirmed items during the user interaction. The `--unselected` flag indicates that only the unconfirmed (or unselected) items'' margin should be adjusted, while the default behavior would modify both selected and unselected items'' margins.'
        unselected.padding: |-
            [AI] `gum confirm --unselected.padding` is a command used in Gum, a CLI (Command-Line Interface) library for Node.js. It specifically refers to the configuration option `--unselected.padding`, which controls the visual padding between items in the default text-based confirmation prompt.

            When using `gum confirm`, this option allows developers to adjust the space between the prompts and the choices presented to users, improving the overall readability and user experience of the command. For instance, setting a larger padding value will make each choice appear more distinctly from others.
        unselected.strikethrough: '[AI] The `--unselected.strikethrough` option in the `gum confirm` command is used to display unselected options with a strikethrough style in the confirmation prompt. This can be helpful when using `gum confirm` to present users with a list of choices, and you want to indicate which options have not been selected yet. The strikethrough style makes it visually clear which options are still available for selection.'
        unselected.underline: '[AI] The `--unselected.underline` option in the `gum confirm` command is used to underline unselected options when displaying a confirmation prompt in the terminal. This helps users visually identify which options have not been selected yet. When no option is selected by default, this option is enabled by default. If you want to disable it, use the `--unselected.hide` option instead.'
        unselected.width: '[AI] The command `gum confirm --unselected.width` is used in GitHub''s Git Upgrade Manager (Gum) to show the width of the unselected confirmation prompt in characters. This can be helpful for adjusting the layout and readability of the terminal interface when interacting with Git commands, ensuring a good user experience.'
