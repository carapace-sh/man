# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create
description: Create a codespace
flags:
    --default-permissions: do not prompt to accept additional permissions requested by the codespace
    --devcontainer-path=: path to the devcontainer.json file to use when creating codespace
    --idle-timeout=: allowed inactivity before codespace is stopped, e.g. "10m", "1h"
    --retention-period=: allowed time after shutting down before the codespace is automatically deleted (maximum 30 days), e.g. "1h", "72h"
    -R, --repo=: 'repository name with owner: user/repo'
    -b, --branch=: repository branch
    -d, --display-name=: display name for the codespace (48 characters or less)
    -l, --location=: 'location: {EastUs|SouthEastAsia|WestEurope|WestUs2} (determined automatically if not provided)'
    -m, --machine=: hardware specifications for the VM
    -r, --repo-deprecated&=: (Deprecated) Shorthand for --repo
    -s, --status: show status of post-create command and dotfiles
    -w, --web: create codespace from browser, cannot be used with --display-name, --idle-timeout, or --retention-period
documentation:
    command: '[AI] `gh codespace create` is a GitHub CLI (Command Line Interface) command used to set up a new development environment for a GitHub project. It creates a cloud-based development environment, called a "codespace," where you can write, build, test, and commit your code directly in the cloud without needing to set up infrastructure locally. This command initializes a local repository and connects it to the codespace, allowing you to start working on changes immediately. When you''re done, you can merge your changes back into the main project branch.'
    flag:
        branch: '[AI] `gh codespace create` is a command from the GitHub CLI (gh) that creates a new GitHub Codespace, an isolated and pre-configured development environment for your project. The `--branch` flag specifies which branch in your repository to use as the basis for the new environment. When you create a codespace with this flag, gh will clone the specified branch and set it up as the initial commit in the codespace. This allows you to work on that specific branch without having to set it up locally or manage multiple branches simultaneously.'
        default-permissions: '[AI] `gh codespace create` is a GitHub command used to create and manage development environments for a repository. The `--default-permissions` flag sets default permissions for the codespace. Specifically, it grants read access to collaborators and read-write access to members. This means that collaborators can view the codespace but cannot modify it, while members can both view and edit it.'
        devcontainer-path: '[AI] `gh codespace create` is a GitHub command used to create and manage development environments (code spaces) for projects in GitHub. The `--devcontainer-path` option specifies the local path to a dev container definition file, which tells GitHub how to configure and set up the development environment when creating a new code space. This allows users to easily spin up consistent, pre-configured development environments based on their project''s requirements.'
        display-name: '[AI] `gh codespace create` is a GitHub command used to create a new GitHub Codespace, which is an isolated development environment for working on projects directly from GitHub. The `--display-name` flag allows you to specify a custom name for the codespace that will be displayed in the GitHub interface. This can help in organizing and identifying your codespaces easily.'
        idle-timeout: '[AI] The `gh codespace create` command is a GitHub Action provided by GitHub to create and manage development environments, called codespaces, for your projects. The `--idle-timeout` option sets the duration of inactivity after which the codespace will be automatically stopped to save resources. For example, `--idle-timeout 1h` sets an idle timeout of one hour. When you''re done working on your project, make sure to manually stop the codespace to avoid unnecessary costs.'
        location: '[AI] `gh codespace create` is a command provided by GitHub''s CLI (Command Line Interface) tool, which helps developers create new coding environments or "codespaces" directly within GitHub. The `--location` flag determines where the codespace will be created. It accepts values like "main" for the main branch, or a specific branch name or commit SHA for other branches or commits. In summary, `gh codespace create --location <branch-name>` creates a new codespace associated with the given GitHub branch.'
        machine: '[AI] `gh codespace create --machine` is a command used in GitHubActions and GitHub''s GitPod environment for creating a newCodespace, which is an isolated development environment, with a pre-configured machine image (such as Ubuntu, macOS, or Windows) instead of using a container. This option is useful when working with large projects or requiring specific software packages that are not easily installable within a container. The created codespace provides a persistent and ephemeral development environment for focused work on a project.'
        repo: '[AI] `gh codespace create` is a command from GitHub''s CLI (Command Line Interface) tool, `gh`. This specific command creates a new codespace which is an isolated environment for development in GitHub. The `--repo` flag specifies the repository where this codespace will be created. Together, they create a new codespace based on the given repository.'
        repo-deprecated: '[AI] `gh codespace create` is a command from GitHub''s CLI (Command Line Interface) tool, which allows users to create and manage GitHub Codespaces, an interactive development environment in the cloud. The `--repo` option specifies the repository associated with the Codespace. The `--repo-deprecated` flag indicates that the given repository is deprecated or outdated, but still valid for use. Creating a Codespace from a deprecated repository might not apply the latest features and updates available in GitHub Codespaces.'
        retention-period: '[AI] `gh codespace create` is a GitHub command used to create a new coding environment, or "codespace," for your project. The `--retention-period` option sets the length of time that GitHub should keep the codespace available after it''s no longer in use. This is useful for ensuring that your development environment stays consistent with the latest codebase, even if you''re not actively working on it. By default, codespaces are deleted when they''re idle for 2 hours; setting a retention period longer than this will keep them alive for the specified duration. For example, `--retention-period "7d"` sets the retention period to 7 days.'
        status: '[AI] `gh codespace create` is a GitHub command used to create a new codespace, which is an isolated development environment for a GitHub repository. The `--status` flag is optional and used to display the current status of codespace creation. If you use this flag with the command, it will return information about whether the codespace is being created, already exists, or if there are any errors preventing its creation. This helps provide feedback to users on the progress and result of their codespace setup request.'
        web: '[AI] `gh codespace create --web` is a command used in the GitHub Codespaces product. It creates a new cloud-based development environment in GitHub, specifically designed for web development projects. The `--web` flag signifies that the codespace should be configured with tools and dependencies commonly used in frontend web development, such as popular IDEs like Visual Studio Code or JetBrains WebStorm, and common frameworks like React, Angular, or Vue.js. Once created, developers can connect to this codespace from their browser and begin working on their project directly in the cloud, without needing to set up local development environments or manage infrastructure.'
