# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: direnv
description: unclutter your .profile
flags:
    --help: show help
documentation:
    command: '[AI] `direnv` is a Unix utility for managing context-specific environment variables, such as those used with different project directories. It automatically activates and deactivates these variables when entering or leaving specific directories. This allows developers to easily manage project-specific configuration settings without having to manually modify their shell configuration files. It uses `.direnv` files in the project directories to define the environment variables.'
    flag:
        help: |-
            [AI] `direnv` is a command-line tool designed to simplify managing of environment variables across multiple projects in the terminal. The `--help` option, when used with `direnv`, displays detailed help information about the tool and its available commands and options. Here's what you can expect to find:

            1. Usage: A brief description of how to use `direnv` with examples.
            2. Commands: A list of supported commands such as `add`, `deactivate`, `init`, `shell`, etc., along with their usage and descriptions.
            3. Options: A list of global options, like `--config` or `--verbose`, that can be used to customize `direnv`'s behavior.
            4. Autoloader: Information on how to use `direnv` in your shell (e.g., zsh, bash) with the autoloader feature.
            5. Examples: Concrete examples of using `direnv` for managing environment variables across projects and changing directories.
