# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: upgrade
description: Upgrade the current package's dependencies to latest versions
flags:
    --major-versions: Upgrades packages to their latest resolvable versions
    --no-offline: Do not use cached packages instead of accessing the network.
    --no-precompile: Do not precompile executables in immediate dependencies.
    --null-safety: Upgrade constraints in pubspec.yaml to null-safety versions
    --offline: Use cached packages instead of accessing the network.
    --precompile: Precompile executables in immediate dependencies.
    -h, --help: Print this usage information.
    -n, --dry-run: Report what dependencies would change but don't change any.
documentation:
    command: '[AI] `dart pub upgrade` is a command-line utility in Dart programming language used to update the dependencies listed in the `pubspec.yaml` file of a Dart project. When executed, it downloads and installs the latest versions of the specified packages and their dependencies. This helps keep your project up-to-date with the latest features and security fixes from the package authors.'
    flag:
        dry-run: '[AI] `dart pub upgrade --dry-run` is a command used in Dart programming language for testing upgrades to your project''s dependencies without actually making any changes to the `pubspec.yaml` file or lock files. This command simulates the effects of running `dart pub upgrade`, allowing you to see what dependencies would be updated and their new versions, without committing to those changes. It''s a useful tool for planning and assessing potential risks before performing actual upgrades in your projects.'
        help: |-
            [AI] The `dart pub upgrade` command is a part of Dart's package management system, `pub`. It is used to update the dependencies in your Dart project. When you run `dart pub upgrade --help`, you will get detailed help information about this specific command. Here's a brief summary:

            - `dart`: This is the Dart executable that runs the command.
            - `pub`: This is the name of the package management system for Dart.
            - `upgrade`: This is the subcommand that handles dependency updates.
            - The two dashes `--` indicate the start of options or flags. In this case, there's only one flag:
              - `help`: This option requests detailed help information about the command. When used with `upgrade`, it shows a list of available upgrade strategies and their descriptions, as well as some other related options.
        major-versions: '[AI] The `dart pub upgrade --major-versions` command is used with the Dart package manager, `pub`, to update all dependencies in a Dart project to their latest major versions instead of just the minor or patch updates. This can be useful when you want to adopt new features and API changes that come with major version upgrades. Keep in mind, major version updates may introduce breaking changes that require adjustments to your code.'
        no-offline: '[AI] `dart pub upgrade --no-offline` is a command used in Dart programming language projects to fetch and install new versions of dependencies from the network, overriding any locally cached packages. The `--no-offline` flag disables offline mode, meaning that Pub (Dart''s package manager) will not use any locally available packages and instead download them fresh from the internet.'
        no-precompile: '[AI] The `dart pub upgrade --no-precompile` command is used in Dart programming to upgrade dependencies listed in the `pubspec.yaml` file without recompiling the pre-existing Dart code that uses those dependencies. This is particularly useful when testing out new versions of dependencies or when working on a large project where only specific packages need to be updated at a time, as it saves the time and resources required for a full rebuild. The `--no-precompile` flag ensures that the Dart code does not get rebuilt during this process, allowing for faster execution of dependency upgrades.'
        null-safety: '[AI] The `dart pub upgrade --null-safety` command is used in Dart programming language for managing dependencies in a project using the `pub` package manager. This specific command upgrades all packages in the project to their latest versions while enabling null safety, which is a new feature introduced in Dart 2.12. Null safety helps prevent runtime errors caused by null values and improves code reliability. It''s important to note that not all packages support null safety yet, so some manual adjustments might be necessary after the upgrade.'
        offline: '[AI] `dart pub upgrade --offline` is a command used in Dart programming language for upgrading packages locally without connecting to the network. This means that the dependency versions will be updated based on the currently cached packages in your local `pubspec.yaml` file, without downloading new versions from the internet. This can save time and bandwidth when working offline or having unstable network connections.'
        precompile: '[AI] `dart pub upgrade --precompile` is a command used in Dart programming language''s package management system, `pub`. This command upgrades all the dependencies listed in the `pubspec.yaml` file and re-compiles the pre-existing precompiled Dart code for those packages. Precompiling the packages can improve the application''s startup time as it avoids the need to compile the packages every time the application runs.'
