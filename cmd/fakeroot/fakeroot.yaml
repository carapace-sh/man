# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fakeroot
description: run a command in an environment faking root privileges for file manipulation
flags:
    --faked=: Specify an alternative binary to use as faked.
    -b=: Specify  fd  base  (TCP  mode only).
    -h: Display help.
    -i=: Load a fakeroot environment previously saved using -s from load-file.
    -l, --lib=: Specify an alternative wrapper library.
    -s=: Save the fakeroot environment to save-file on exit.
    -u, --unknown-is-real: Use the real ownership of files previously unknown to fakeroot.
    -v: Display version.
documentation:
    command: '[AI] `fakeroot` is a utility used in Debian-based Linux distributions to create a chroot (contained file system) environment with automatically managed faked root directory for package building and testing. It simplifies the process of setting up an isolated build environment by automating the creation of necessary directories, handling of file permissions, and managing symbolic links. This allows users to build packages without affecting the system''s files or modifying the root file system.'
    flag:
        b: '[AI] `fakeroot` is a tool used in software packaging to create a chroot environment for building and installing software. The `-b` option tells `fakeroot` to run the command given as an argument in a new build environment. In other words, it sets up a new chroot environment and then executes the command inside that environment. This is useful for ensuring that the software being built depends only on its own files and not any system packages or files outside of the build environment.'
        faked: |-
            [AI] `fakeroot` is a tool used in Linux packaging systems to create a chroot (contained file system) environment for building and installing software packages. The `--faked` option is one of its features that allows simulating the installation of packages without actually installing them on the system.

            When you run `fakeroot --faked <command>`, it sets up a chroot environment as if packages were being installed, but in reality, no files are written to the file system outside of the chroot. This is useful for testing software dependencies and package building without affecting the actual system.
        h: |-
            [AI] `fakeroot` is a tool used in Linux systems to create a chroot (contained file system) environment with a simulated root ("fake root") directory for running software installations or package builds that require superuser privileges without actually giving the script or build process root access.

            The option `-h` or `--help` is commonly used in Unix-based utilities, including `fakeroot`, to display detailed help information about how to use the command with all available options and arguments. Therefore, running `fakeroot -h` will output a comprehensive usage message explaining what `fakeroot` does, its various options, and examples of usage scenarios.
        i: '[AI] `fakeroot` is a tool used in Linux package building to simulate a root file system for chroot environments. The option `-i` (or `--interactive`) is used when running fakeroot in an interactive mode, meaning it opens a shell with root privileges inside the chroot environment, allowing you to execute commands directly as if you were actually logged in as the root user within that file system hierarchy. This can be useful for debugging or performing more complex tasks during package builds.'
        lib: '[AI] `fakeroot` is a utility used to create a chroot (contained file system) environment in Linux and other Unix-like systems. The option `--lib` is used when working with libraries within the chrooted environment. It tells `fakeroot` to use the real system''s library paths instead of those within the chroot environment, allowing for proper resolution of dependencies during library installation or linking. This helps avoid issues where required libraries may not be available within the chroot.'
        s: '[AI] `fakeroot` is a utility used in package building processes to simulate a root environment. The `-s` option stands for "chroot" (change root). When you run `fakeroot -s`, it changes the root directory of the current process to the one specified in its argument, creating a simulated root environment inside that directory. This allows you to build and test software as if it were installed on a real system while keeping your development environment separate.'
        unknown-is-real: '[AI] `fakeroot` is a utility used in packaging software for Linux distributions to simulate a root environment, allowing the use of root-privileged commands without actually needing sudo access. The option `--unknown-is-real` is used to treat unknown (unrecognized) files or directories as real instead of faked. In other words, this flag tells `fakeroot` not to create fake symlinks for unrecognized elements during the chroot environment setup, allowing them to be accessed as normal files or directories.'
        v: '[AI] `fakeroot` is a tool used in packaging software for Linux distributions to simulate a root file system environment while preserving the integrity of the original files. The option `-v` enables verbose output, meaning it provides more detailed information about the commands being executed within the faked root environment. This can be useful for debugging and understanding what actions are taken when using `fakeroot`.'
