# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ranger
description: visual file manager
flags:
    --cachedir=: change the cache directory.
    --choosedir=: Makes ranger act like a directory chooser.
    --choosefile=: Makes ranger act like a file chooser.
    --choosefiles=: Makes ranger act like a file chooser for multiple files at once.
    --cmd=: Execute COMMAND after the configuration has been read.
    --copy-config=: copy the default configs to the local config directory.
    --datadir=: change the data directory.
    --list-tagged-files=: List all files which are tagged with the given tag.
    --list-unused-keys: List common keys which are not bound to any action.
    --logfile=: log file to use, '-' for stderr
    --profile: Print statistics of CPU usage on exit.
    --selectfile=: Open ranger with supplied file selected.
    --show-only-dirs: Show only directories, no files or links
    --version: show program's version number and exit
    -c, --clean: don't touch/require any config files.
    -d, --debug: activate debug mode
    -h, --help: show this help message and exit
documentation:
    command: '[AI] Ranger is a popular terminal file manager for Unix-based systems, allowing users to navigate and manipulate directories using the keyboard. It provides a visual preview of files and directories, supports multi-selection, and offers various customization options. Users can perform common file operations such as copying, moving, renaming, and deleting directly from the terminal interface. Ranger is known for its efficiency and flexibility in handling large directories, making it an excellent alternative to graphical file managers for power users and those preferring a more command-line oriented workflow.'
    flag:
        cachedir: '[AI] The `--cachedir` option in the `ranger` file explorer command-line tool specifies a directory where Ranger will store its cache of preview images and other metadata for faster browsing. When navigating directories, Ranger generates previews of files to display in the terminal interface. Caching these previews can significantly improve performance by reducing the time needed to generate new previews for previously visited directories. The default cachedir is usually `~/.cache/ranger`, but you can use this option to set a different location if desired.'
        choosedir: '[AI] The `ranger --choosedir` command is a feature in the Ranger file manager for Linux and other Unix-like systems. It allows users to quickly navigate through directories by automatically opening the directory that was previously active when Ranger was last used. This can save time and effort, especially for users who frequently switch between specific directories. When `ranger --choosedir` is invoked, it opens Ranger with the most recently used directory as the current directory.'
        choosefile: '[AI] The `ranger --choosefile` command is a feature of the Ranger file explorer application for Linux and other Unix-like systems. It opens the Ranger file manager with the specific intent of allowing the user to select a file through a graphical interface. The user can navigate directories, preview files, and make their selection using standard keyboard shortcuts or the mouse. Once a file is chosen, it can be passed as an argument to another command or used in a script without having to manually type out the full file path. This command streamlines the process of specifying files as arguments for other commands, making it particularly useful for power users and developers working in the terminal.'
        choosefiles: '[AI] The `ranger --choosefiles` command is a part of the Ranger file explorer application for Unix-like systems. It opens the Ranger file chooser GUI, allowing users to navigate through directories and select multiple files using keyboard shortcuts or mouse clicks. Once files are selected, they can be passed as arguments to other commands or scripts for further processing.'
        clean: '[AI] The `ranger --clean` command is a feature of the Ranger file manager for Linux and other Unix-like systems. It is used to delete files or directories from the current directory without moving them to the trash can or recycling bin. When you run this command followed by the path of a file or directory, Ranger will prompt you for confirmation before permanently deleting it. If you press Enter after confirming, the selected item will be deleted immediately. This command is useful when you want to remove files or directories without using the trash can and are certain that you do not need them anymore.'
        cmd: '[AI] The `ranger --cmd` is a command-line option used with the Ranger file explorer tool. It allows users to execute commands or scripts directly within Ranger, without leaving the application. When you use `--cmd`, followed by the command or script, Ranger will run that specific command when you press a designated keybinding. This feature can be useful for automating tasks and customizing workflows in Ranger.'
        copy-config: '[AI] `ranger --copy-config` is a command used in the Ranger file manager for Linux. It copies the current configuration settings from the running instance of Ranger to another Ranger installation or backup. This can be useful when setting up a new Ranger instance and wanting to keep the same configuration as an existing one. The command typically requires no arguments, and it modifies the Ranger configuration file located at `~/.config/ranger/rc`.'
        datadir: '[AI] The `--datadir` option in the `ranger` command-line file explorer is used to specify the directory where Ranger will store its data files, such as configuration settings and cached metadata about files and directories. This allows users to keep their customizations and indexed information separate from each other, making it easier to manage multiple installations or share configurations across different systems.'
        debug: '[AI] `ranger --debug` is a command used with the Ranger file manager, which is a text-based file explorer for Unix-like operating systems. The `--debug` option enables Ranger to run in debug mode, providing more detailed output and potentially helping to diagnose issues or gain deeper insights into its behavior. This information can be redirected to a file or sent to the console for further analysis.'
        help: '[AI] The `ranger --help` command is used to display detailed help information about the Ranger file manager, which is a terminal-based file explorer for Unix-like systems. This command shows you all the various options and arguments that can be passed to Ranger when launching it from the terminal. It provides an overview of the basic usage, keybindings, available actions, and customization options. By understanding this help information, users can effectively utilize the features and functionality of Ranger for managing their files in a more efficient way.'
        list-tagged-files: '[AI] `ranger --list-tagged-files` is a command used in the Ranger file explorer for Linux. This command displays a list of files that have been tagged within Ranger''s interface. Tags are user-defined labels that can be applied to files or directories, making it easier to quickly locate specific items within the file system.'
        list-unused-keys: '[AI] `ranger --list-unused-keys` is a command used in Git, specifically with Ranger Git plugin. This command displays a list of Git keys (also known as GPG keys) that are currently not signed or used by any Git repository under the working directory. By identifying and managing unused keys, users can maintain a clean and secure set of keys for their Git workflows.'
        logfile: '[AI] The `ranger` is a text-based file manager for Unix-like systems. The `--logfile` option is used to specify a file where Ranger will write its log messages, which can be helpful for debugging and troubleshooting issues. For example, if you want to save the logs in a file named "ranger.log" in the home directory, you would use the command `ranger --logfile ~/.ranger.log`.'
        profile: '[AI] The `ranger --profile` command in Ranger file manager is used to load or switch between different configuration profiles. Each profile contains custom settings for Ranger, such as key bindings, colorschemes, and other preferences. By providing the name or path of a specific profile, you can change the current settings in Ranger to match those defined in that profile. This command helps users tailor Ranger''s behavior to their personal preferences.'
        selectfile: '[AI] The `ranger` command with the `--selectfile` option is a file explorer and text editor for the terminal in Unix-like systems. The `--selectfile` argument is used to open a specific file directly inside Ranger''s text editor for editing. When invoked, Ranger will display the contents of the current directory, and with `--selectfile <filename>`, it will immediately open the named file using its default text editor (often Vim or Nano) after navigating through files. This functionality helps to quickly edit files without having to first navigate to them within the file explorer interface.'
        show-only-dirs: '[AI] The `ranger` command with the option `--show-only-directories` is used to display only directories in the file browser interface of Ranger, a Vim-inspired text file manager for the terminal. With this flag, Ranger hides files and shows only the directories while navigating through your file system. This can be useful when working with large directories or trying to keep the display clean and focused on directory structure.'
        version: '[AI] `ranger --version` is a command used in Ranger file explorer, a terminal-based file manager for Unix-like operating systems. This command''s purpose is to display the version information of the currently installed Ranger application, including its major, minor, and patch release numbers. It provides users with essential information about their Ranger installation for potential troubleshooting or compatibility checks.'
