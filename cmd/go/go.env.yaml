# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: env
description: print Go environment information
flags:
    -json: print the environment in JSON format
    -u: unsets the default setting for the named environment variables
    -w=: changes the default settings of the named environment variables
documentation:
    command: '[AI] The `go env` command in Go programming language is used to display the current configuration environment variables, which include the GOOS (operating system) and GOROOT (Go installation directory), among other settings. It helps developers understand the context of their current Go development environment.'
    flag:
        json: '[AI] `go env -json` is a command used in the Go programming language to print environment variables in JSON format. When executed, it outputs a JSON map containing key-value pairs for all Go-specific environment variables, such as GOPATH, GOOS, and GARCH. This output can be useful for sharing configuration details between different machines or for automating build processes.'
        u: '[AI] `go env -u` is a command used in Go programming language to print the unset or empty values of environment variables that are configured for the current Go module or global installation. The `-u` option is short for "unset" and filters out the environment variables with non-empty values, making it useful when checking for specific unset variables.'
        w: |-
            [AI] `go env -w` is a command used in Go programming language to set or update environment variables. The `-w` flag indicates that the changes should be written to the system's environment rather than just displaying their values. For example, you can use it to set the `GOPATH` variable permanently:

            ```bash
            $ go env -w GOPATH="/path/to/go/installation"
            ```

            This command will set or update the `GOPATH` environment variable in your system's environment, affecting all Go projects built thereafter.
