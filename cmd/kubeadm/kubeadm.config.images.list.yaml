# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: Print a list of images kubeadm will use. The configuration file is used in case any images or image repositories are customized
flags:
    --allow-missing-template-keys: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
    --show-managed-fields: If true, keep the managedFields when printing objects in JSON or YAML format.
    -o, --experimental-output=: Output format.
persistentflags:
    --config=: Path to a kubeadm configuration file.
    --feature-gates=: A set of key=value pairs that describe feature gates for various features.
    --image-repository=: Choose a container registry to pull control plane images from
    --kubernetes-version=: Choose a specific Kubernetes version for the control plane.
documentation:
    command: '[AI] The `kubeadm config images list` command is used to display a list of container images that are required by Kubeadm to run its components, such as the Kubernetes control-plane and etcd. These images are stored in Docker registries and are typically pulled automatically when initializing or upgrading a Kubernetes cluster using `kubeadm init` or `kubeadm upgrade`. Knowing which images are required can help ensure that they are accessible to the cluster, either by having them locally or by configuring a registry access key.'
    flag:
        allow-missing-template-keys: '[AI] `kubeadm config images list --allow-missing-template-keys` is a command used in Kubernetes to list the container images required to run a Kubernetes cluster using kubeadm. The `--allow-missing-template-keys` flag allows the command to continue executing even if some template keys are missing in the configuration files. This can occur when the actual container images may have slightly different names or tags than what''s specified in the configuration, leading to missing keys when the command compares the two. By allowing these missing keys, the command can still generate and apply the cluster configuration.'
        experimental-output: '[AI] `kubeadm config images list --experimental-output` is a command used to display a list of container images that are configured to be used by `kubeadm` for creating a Kubernetes cluster. The `--experimental-output` flag enables an experimental output format, which provides additional information such as image digest and repository tag for each image. This command helps in ensuring the desired container images are available before setting up a Kubernetes cluster and can also be useful for auditing and version tracking purposes.'
        show-managed-fields: '[AI] The `kubeadm config images list --show-managed-fields` command is used to display a list of container images managed by Kubeadm, a tool for deploying and managing Kubernetes clusters, with an emphasis on the fields that have been manually configured or managed by Kubeadm. These fields may include image tags or repository URLs that have been updated since the initial installation of Kubernetes. This command provides information to help users understand which images are being used in their cluster, and any changes that have been made to them since the original configuration.'
