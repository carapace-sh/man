# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: remove
description: Remove an environmentRemoves a provided environment
flags:
    --json: Report all output as json
    --solver=: Choose which solver backend to use
    -d, --dry-run: Only display what would have been done
    -h, --help: Show this help message and exit
    -n, --name=: Name of environment
    -p, --prefix=: Full path to environment location
    -q, --quiet: Do not display progress bar.
    -v, --verbose: Once for INFO, twice for DEBUG, three times for TRACE.
    -y, --yes: Sets any confirmation values to 'yes' automatically
documentation:
    command: |-
        [AI] The `conda-env remove` command is used in Anaconda or Miniconda environments to delete specific environments by name. It removes all files associated with that environment, including the environment's YAML definition file and any installed packages. To use it, call the `conda env remove` command followed by the desired environment name:

        ```bash
        conda env remove <environment_name>
        ```

        Keep in mind that deleting an environment is a permanent action; once an environment is removed, its packages and settings are no longer accessible.
    flag:
        dry-run: '[AI] The `conda-env remove --dry-run` command is a preview operation in Anaconda''s Conda environment management system. It simulates removing an existing environment without actually deleting it, displaying what files and packages would be uninstalled if the command were run with no `--dry-run` flag. This allows users to verify the intended consequences before executing a potentially destructive command.'
        help: |-
            [AI] The `conda-env remove` command is used to remove a specific Conda environment from your system. The `--help` option provides detailed information about how to use this command effectively. Here's a brief summary:

            ```bash
            conda-env remove [ENV_NAME] --help

            Remove a Conda environment by name.

            Usage:
              conda-env remove [OPTIONS] ENV_NAME

            Options:
              --force      Force removal of the environment and its contents, even if the
                           environments are active or if they contain user installations.
                             [default: False]
              --all         Remove all environments that match the given name pattern.
              --help        Show this message and exit.
            ```

            This command allows you to remove a Conda environment named `ENV_NAME` from your system, optionally using the `--force` flag to force the removal even if it is currently active or contains user installations. You can also use the `--all` flag to remove all environments that match a given name pattern.
        json: '[AI] `conda-env remove --json` is a command used in Anaconda or Miniconda distributions for managing Python environments. This command removes the specified environment with the option `--json` producing an output in JSON format, displaying details about the removed environment such as its name, ID, and files that were deleted during the removal process.'
        name: '[AI] The `conda-env remove` command is a function in Anaconda or Miniconda used to delete a specific conda environment by its name. The `--name` option specifies the name of the environment to be removed. This command removes all files associated with that environment, including installed packages and dependencies. It does not affect the base environment or other environments unless specified with additional options.'
        prefix: '[AI] The `conda-env remove` command is used to delete a specific Conda environment in Anaconda or Miniconda distribution. The `--prefix` option specifies the location of the root Anaconda installation directory, which is not typically needed when removing environments as Conda automatically determines it based on the location of the current environment file being removed. However, using this option can be useful when working with multiple installations or when operating in a system-wide Conda environment.'
        quiet: '[AI] The command `conda env remove --quiet` is used to remove a specific Conda environment in Anaconda or Miniconda without displaying any output or confirmation messages. It runs quietly, making it suitable for use in automated scripts or batch processes.'
        solver: '[AI] The `conda-env remove` command is used to remove a specific environment in Anaconda or Miniconda distribution of Conda. The `--solver` option specifies which solver to use during the removal process. By default, Conda uses its built-in solver, but you can choose other available solvers such as `mosek`, `glpk`, or `ipopt`. The interaction between Conda environments and solvers is related to how packages are installed and managed: different solvers may provide different ways of resolving dependencies and conflicts. Using the correct solver for your specific use case can help ensure that package installations and environment removals proceed smoothly.'
        verbose: '[AI] The `conda-env remove` command with the `--verbose` option is used to remove a specific Conda environment in Anaconda or Miniconda. This operation removes all files and directories associated with the specified environment, including packages installed within it. The `--verbose` flag increases the level of output detail, providing more information about the removal process, such as the name of each package being deleted and any warnings or errors that may occur during the operation.'
        "yes": '[AI] `conda-env remove` is a command in Anaconda''s Conda package manager used to delete specified conda environments. The `--yes` or `-y` option, when used with this command, indicates that the action should be performed without prompting for confirmation. Therefore, using `conda-env remove --yes NAME` will permanently remove the named environment.'
