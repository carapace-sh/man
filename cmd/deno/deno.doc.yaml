# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: doc
description: Show documentation for a modul
flags:
    --import-map=: Load import map file
    --json: Output documentation in JSON format
    --private: Output private documentation
    -r, --reload?: Reload source code cache (recompile TypeScript)
documentation:
    command: '[AI] `deno doc` is a command-line tool provided by Deno, a modern and secure TypeScript runtime. It generates comprehensive documentation for Deno projects using the documented TypeScript types and interfaces in the source code. The output is usually an HTML file or website that displays interactive documentation with code snippets, type information, and other useful details for developers.'
    flag:
        import-map: '[AI] The `--import-map` flag in Deno''s documentation generation tool (`deno doc`) is used to specify a custom import map file during the document generation process. An import map is a JSON file that maps external module imports to local paths, enabling Deno projects to use custom or third-party packages without publishing them to deno.land. This flag allows project maintainers to control the imported modules'' resolution and ensure accurate documentation for their projects.'
        json: '[AI] `deno doc --json` is a command used in Deno, a modern and secure TypeScript runtime. This command generates documentation for Deno projects in JSON format instead of HTML. The generated JSON can be used as input for other tools or applications that require machine-readable documentation data.'
        private: '[AI] `deno doc --private` is a command-line option for Deno, a modern runtime for JavaScript and TypeScript. This option generates documentation for private modules in a Deno project that are not normally included in the publicly generated documentation. By default, Deno documentation only includes public APIs, but using `--private` flag allows documenting and generating docs for internal modules as well.'
        reload: '[AI] `deno doc --reload` is a command used in Deno, a modern and secure TypeScript runtime. This command starts the Deno documentation server with live reloading capability. When you save changes to your Deno project''s source files or documentation comments, the changes are automatically reflected in the documentation website without needing to restart the server. This is useful for developing and testing documentation in real-time.'
