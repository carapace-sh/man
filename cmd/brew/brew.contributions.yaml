# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: contributions
description: Summarise contributions to Homebrew repositories
group: developer
flags:
    --csv: Print a CSV of contributions across repositories over the time period.
    --debug: Display any debugging information.
    --from: Date (ISO-8601 format) to start searching contributions. Omitting this flag searches the last year.
    --help: Show this message.
    --quiet: Make some output more quiet.
    --repositories: 'Specify a comma-separated list of repositories to search. Supported repositories: `brew`, `core`, `cask`, `aliases`, `autoupdate`, `bundle`, `command-not-found`, `test-bot`, `services`, `cask-fonts` and `cask-versions`. Omitting this flag, or specifying `--repositories=primary`, searches only the main repositories: brew,core,cask. Specifying `--repositories=all`, searches all repositories. '
    --to: Date (ISO-8601 format) to stop searching contributions.
    --user: Specify a comma-separated list of GitHub usernames or email addresses to find contributions from. Omitting this flag searches maintainers.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] The `brew contributions` command is used with Homebrew, a popular package manager for macOS. It lists out all the repositories that Homebrew uses to fetch formulae and casks, but with an emphasis on those repositories where the user has made a Git contribution. This can be useful for users who want to see where their past contributions have been integrated into Homebrew.'
    flag:
        csv: '[AI] `brew contributions --csv` is a command used with Homebrew, a popular package manager for macOS. This command generates a CSV (Comma-Separated Values) file listing all GitHub repositories where the user has made contributions. The CSV file includes columns for repository name, description, and number of contributions. It''s often used to provide evidence of open source project involvement during job applications or speaking engagements.'
        debug: '[AI] `brew contributions --debug` is a command used with Homebrew, a popular package manager for macOS. This command records detailed debug information about interactions between Homebrew and its repositories when making contribusions, such as pulling, merging, or pushing changes. The output provides valuable context for understanding the behavior of Homebrew during the contribution process, which can help identify issues or improve workflows.'
        from: '[AI] `brew contributions --from` is a command used in Homebrew, a popular package manager for macOS. This command allows users to apply external changes or patches to Homebrew formulae or installed packages. The `--from` option specifies the URL or local path of the external changes to be applied. In summary, it helps in merging external contributions into the existing Homebrew setup.'
        help: '[AI] `brew contributions --help` is a command used with Homebrew, a popular package manager for macOS. This command displays detailed help information about making and submitting contributions to the Homebrew project. It explains how to create a patch file, format your code changes, sign off on the contribution, and submit it through a pull request or other means.'
        quiet: '[AI] The `brew contributions --quiet` command is used with Homebrew, a popular package manager for macOS. This command allows users to see the progress of Git commit pull requests that they have submitted to Homebrew''s repository, without displaying any messages or notifications, making the process quieter.'
        repositories: '[AI] `brew contributions --repositories` is a command used with Homebrew, a popular package manager for macOS. This command lists out the repositories that Homebrew uses to fetch and install software packages from GitHub. It helps users understand where Homebrew obtains its formulae and keeps track of the upstream projects.'
        to: '[AI] The `brew contributions --to` command is a function in Homebrew, a popular package manager for macOS. This command allows users to submit changes they''ve made to Homebrew formulas or taps as pull requests on GitHub. It gathers the necessary files, formats them according to Homebrew guidelines, and opens the default web browser with the prepared pull request. This streamlines the process of contributing back to the Homebrew project.'
        user: '[AI] The `brew contributions --user` command is a function provided by Homebrew, a popular package manager for macOS, to show the list of GitHub repositories where the user has made contributions as the author or co-author. This can help users discover and learn about other Homebrew projects they might be interested in, as well as contribute back to the Homebrew community. The command retrieves this information by querying your GitHub username associated with your Homebrew configuration, then searches for repositories where you have made commits using the `git` history data stored within Homebrew''s configuration files.'
        verbose: '[AI] `brew contributions --verbose` is a command used in Homebrew, a popular package manager for macOS. This command displays detailed information about the GitHub repositories and branches that Homebrew will use to update or install software packages. The `--verbose` flag increases the level of output detail, providing a line-by-line description of each step taken during the process, including the URLs of the repositories and branches being accessed.'
