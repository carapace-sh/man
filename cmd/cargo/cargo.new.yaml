# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: new
description: Create a new cargo package at <path>
group: package
flags:
    --bin: Use a binary (application) template [default]
    --edition=: Edition to set for the crate generated
    --lib: Use a library template
    --name=: Set the resulting package name, defaults to the directory name
    --registry=: Registry to use
    --vcs=: Initialize a new repository for the given version control system (git, hg, pijul, or fossil) or do not initialize any version control at all (none), overriding a global configuration.
    -h, --help: Print help
    -q, --quiet: Do not print cargo log messages
documentation:
    command: '[AI] `cargo new` is a Rust language-specific command used to create a new Rust project with a default directory structure and basic file setup including a `Cargo.toml` manifest file. It initializes a Git repository and sets up the project for easy builds, testing, and package management using Cargo, Rust''s package manager.'
    flag:
        bin: '[AI] `cargo new --bin` is a command used in Rust programming language''s build system, Cargo. This command creates a new Rust project with a binary (executable) package type. When you run this command in your terminal, it sets up a new directory with the project structure and a default source file `src/main.rs`, initializes a `Cargo.toml` file for configuration, and sets up the project to build and run the binary executable using Cargo.'
        edition: '[AI] `cargo new --edition` is a command used in Rust programming language to create a new Rust project with a specific edition of the Rust standard library. The `--edition` flag specifies which version of the Rust language and its associated libraries should be used for the project. For example, using `cargo new --edition 2018` will create a new project configured for Rust Edition 2018. This command also initializes a `Cargo.toml` file, which is the configuration file for the project''s dependencies and metadata.'
        help: '[AI] `cargo new --help` is a command used with Cargo, Rust''s package manager. This command displays detailed help information about creating a new Rust project using the `cargo new` subcommand. It explains the available options such as project name, language version, and features to include. It also provides examples of usage and describes the creation process in detail.'
        lib: '[AI] `cargo new --lib` is a command used with Cargo, Rust''s package manager. This specific command creates a new Rust library project. The "--lib" flag indicates that the project will be a library rather than an executable binary. A library project allows other projects to depend on it and use its code as a reusable component.'
        name: '[AI] `cargo new --name` is a command used in Rust programming language''s package manager, Cargo. This command creates a new Rust project with the given name. It initializes the project structure, sets up the default source file, and installs any dependencies mentioned in the `Cargo.toml` file.'
        quiet: '[AI] `cargo new --quiet` is a command used in Rust programming language''s package manager, Cargo. This command creates a new Rust project with the given name without displaying any interactive prompts or messages during the creation process. The `--quiet` flag ensures that Cargo runs in quiet mode, which means it will not print any informational or status messages to the terminal. This is useful when creating multiple projects in a scripted environment where you don''t need the feedback messages.'
        registry: '[AI] `cargo new --registry` is a command used in Rust programming language''s package manager, Cargo. This command creates a new Rust project with the given name and sets up the project''s `Cargo.toml` file. The `--registry` flag specifies that Cargo should initialize the project with dependencies from the crates.io registry by default. This is the most common way to create a new Rust project, as it includes all necessary boilerplate code and initializes any required dependencies.'
        vcs: '[AI] `cargo new --vcs` is a command used with Cargo, Rust''s package manager. This specific invocation creates a new Rust project with initial source code and configuration files. The `--vcs` flag specifies that the project should be initialized as a Git repository. Thus, using this command sets up a new Rust project with both a Cargo.toml file for managing dependencies and a Git repository for version control.'
