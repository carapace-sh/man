# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fzf
description: a command-line fuzzy finder
flags:
    --algo=: Fuzzy matching algorithm
    --ansi: Enable processing of ANSI color codes
    --bind=: Custom key bindings
    --border=: Draw border around the finder
    --color=: Base scheme
    --cycle: Enable cyclic scroll
    --expect=: Comma-separated list of keys to complete fzf
    --filepath-word: Make word-wise movements respect path separators
    --header-lines=: The first N lines of the input are treated as header
    --header=: String to print as header
    --height=: Display fzf window below the cursor with the given height
    --history-size=: Maximum number of history entries
    --history=: History file
    --hscroll-off=: Number of screen columns to keep to the right
    --info=: Finder info style [default|inline|hidden]
    --jump-labels=: Label characters for jump and jump-accept
    --keep-right: Keep the right end of the line visible on overflow
    --layout=: Choose layout
    --literal: Do not normalize latin script letters before matching
    --margin=: Screen margin
    --marker=: Multi-select marker
    --min-height=: Minimum height when --height is given in percent
    --no-bold: Do not use bold text
    --no-hscroll: Disable horizontal scroll
    --no-mouse: Disable mouse
    --padding=: Padding inside border
    --phony: Do not perform search
    --pointer=: Pointer to the current line
    --preview-window=: Preview window layout
    --preview=: Command to preview highlighted line
    --print-query: Print query as the first line
    --print0: Print output delimited by ASCII NUL characters
    --prompt=: Input prompt
    --read0: Read input delimited by ASCII NUL characters
    --sync: Synchronous search for multi-staged filtering
    --tabstop=: Number of spaces for a tab character
    --tac: Reverse the order of the input
    --tiebreak=: Comma-separated list of sort criteria to apply
    --version: Display version information and exit
    --with-nth=: Transform the presentation of each line using field index expressions
    -0, --exit-0: Exit immediately when there's no match
    -1, --select-1: Automatically select the only match
    -d, --delimiter=: Field delimiter regex
    -e, --exact: Enable Exact-match
    -f, --filter=: Filter mode
    -i: Case-insensitive match
    -m, --multi=: Enable multi-select with tab/shift-tab
    -n, --nth=: Comma-separated list of field index expressions
    -q, --query=: Start the finder with the given query
    -x, --extended: Extended-search mode
documentation:
    command: '[AI] `fzf` is a popular, interactive file finder for the terminal in Unix-based systems. It allows users to quickly search and preview files or directories using various filters and previews before making a selection. Users can navigate through results using arrow keys or regular expressions to refine searches on the fly. Its primary function is to simplify finding files within complex directory structures by providing an intuitive, efficient interface.'
    flag:
        algo: |-
            [AI] `fzf --algo` is a command-line option for the fzf tool, which stands for FuzzyFinder. The `--algo` flag specifies the algorithm used by fzf to perform fuzzy matching on files or other data. There are several algorithms available, including:

            * `--algo normal` (default): uses a simple string comparison with prefix-matching and case sensitivity options.
            * `--algo fuzzy`: performs fuzzy matching using the Levenshtein distance algorithm.
            * `--algo sorter`: sorts the results based on user input, allowing for interactive filtering and sorting of results.
            * `--algo ziggurat`: uses a probabilistic data structure called Ziggurat to perform fuzzy matching more efficiently than the other algorithms. This is particularly useful when dealing with large datasets.

            The choice of algorithm depends on the use case and performance requirements. For most common file-finding scenarios, `--algo normal` or `--algo fuzzy` would suffice. For larger datasets or interactive filtering/sorting, consider using `--algo sorter` or `--algo ziggurat`.
        ansi: '[AI] `fzf --ansi` is a command-line option for the fzf (Fuzzy Finder) tool. The `--ansi` flag enables ANSI escape sequences in fzf''s output, allowing it to display colored and formatted text in terminals that support ANSI codes. This can enhance the user experience by making the search results more visually distinguishable and easier to navigate.'
        bind: '[AI] `fzf --bind` is a command-line option used with the fzf tool, which is a popular fuzzy finder for various file systems and applications. This option allows users to customize keyboard bindings within fzf for specific actions like previewing files, making a selection, or navigating between matches. By binding keys effectively, users can optimize their workflow and increase productivity while using fzf for various tasks.'
        border: '[AI] `fzf --border` is a command-line option used with the fzf file finder tool. It adds a border around the preview pane, making it easier to distinguish between the list of files and the selected file''s content in the preview. This can enhance the user experience by improving the visibility and readability of the information displayed within the fzf interface.'
        color: '[AI] The `--color` flag in `fzf`, a popular fuzzy finder for Unix-based systems, is used to configure the color scheme of its interface. By default, `fzf` uses a basic color palette, but this flag allows users to specify custom colors for various UI elements such as the background, text, selected items, and previews. Users can either define their own color schemes in files or use existing ones, providing them with flexibility in customizing the look and feel of `fzf`.'
        cycle: '[AI] `fzf --cycle` is a command-line option used with the fzf file explorer tool. It enables cycle mode, which allows users to navigate through results using the up and down keys in a loop instead of navigating out of the fzf preview pane or closing it to return to the previous result. This can be useful when working with large directories or multiple files with similar names.'
        delimiter: '[AI] `fzf --delimiter` is a command-line option for the fzf tool, which is a popular interactive file explorer and text finder for Unix terminals. The `--delimiter` flag is used to customize the character that separates elements in the output of the fzf command. By default, it uses the Tab character (`\t`) as a delimiter, but you can change it to any other character by providing a single-character argument to this flag. For example, `--delimiter=/` will set the delimiter to a forward slash. This can be useful when working with paths or filenames that contain special characters, allowing better integration and readability with the shell.'
        exact: '[AI] `fzf --exact` is a command-line option for the fzf tool, which is a popular fuzzy finder for various file systems and applications. The `--exact` flag instructs fzf to perform exact matching of input against file or text contents. This means that only files or lines containing the exact input string will be displayed as matches, disregarding case sensitivity. It''s useful when searching for specific files or text snippets and wanting to exclude irrelevant results.'
        exit-0: '[AI] The command `fzf --exit-0` is used with the fzf (Fuzzy Finder) tool in Unix-based systems. The option `--exit-0` instructs fzf to return the first match in the list as the output when the user presses `Enter`. In other words, it specifies that the selected item is the desired output without further confirmation from the user.'
        expect: '[AI] The `--expect` flag in `fzf`, a popular fuzzy finder for command-line interfaces, specifies the expected output format of the command or filter used with `fzf`. This allows `fzf` to properly display and parse the results, making the selection process more efficient and accurate. When using `--expect`, `fzf` can automatically apply transformations on the output, such as splitting lines into separate items or extracting specific fields, based on the given format description.'
        extended: |-
            [AI] `fzf --extended` is a command-line option for the fzf tool, which is a versatile fuzzy finder for various file types and interacting with terminal outputs. The `--extended` flag enables extended functionality in fzf, providing additional features like:

            1. Multi-column previews: Allows displaying multiple columns in the preview pane when searching through files or directories.
            2. Regular expression searches: Enables searching for patterns using regular expressions for more precise results.
            3. Customizable prompts: Offers customization options for the input and output prompts, making the usage experience more personalized.
            4. Advanced filtering capabilities: Provides extended filtering options like case sensitivity, hidden files, and file type-specific filters.
            5. Configurability: Allows users to extend fzf's functionality through custom plugins and keybindings for a tailored experience.
        filepath-word: |-
            [AI] `fzf --filepath-word` is a command-line option for the fzf tool, which is a popular file explorer and finder for Unix-like systems. This specific option modifies how fzf interprets the given file paths.

            With `--filepath-word`, fzf will treat each word separated by a space in the provided argument as an individual file path to search in. This can be useful when you want to search for files across multiple directories, where each directory is specified as a separate argument.
        filter: '[AI] `fzf --filter` is a command-line option used with the fzf (Fuzzy Finder Zsh) tool. It allows filtering results based on a given pattern or expression before displaying them in the fzf interface. For instance, `--filter=".txt$"` would show only files with a .txt extension. This can help narrow down results and make it easier to find what you''re looking for quickly.'
        header: '[AI] `fzf --header` is a command-line option for the fzf tool, which is a popular fuzzy finder for various file systems and terminal applications. The `--header` option allows you to specify a custom header text that appears above the list of matching results when using fzf in a interactive selection mode (e.g., with the `fd` or `rg` command). This can be useful for providing additional context or instructions to users when they''re making selections from the list.'
        header-lines: '[AI] `fzf --header-lines` is a command-line option for the fzf tool, which is a popular fuzzy finder for various file systems and applications. The `--header-lines` flag specifies the number of lines to be displayed before the fzf findings as a part of the preview pane. For instance, setting it to 5 would display the 5 lines above the search results in the preview window. This option helps users to quickly review the context around the search results and make informed decisions.'
        height: '[AI] The `--height` option in `fzf`, a popular fuzzy finder for various file systems and applications, sets the height of the preview pane that appears when selecting an item. It takes an integer argument specifying the number of lines to allocate for the preview. This can be useful for customizing the look and feel of the search results.'
        history: '[AI] `fzf --history` is a command used with the fuzzy finder tool called `fzf`. This command loads and displays the history of previously used search terms or commands in the fzf interface, making it easier to quickly repeat previous searches. By using this command, users can access their recent fzf history without having to remember or retype long searches, increasing productivity.'
        history-size: '[AI] `fzf --history-size` is a command-line option for the fzf (Fuzzy Finder) tool. It sets the maximum size of the history buffer, which is the number of previously used searches or commands that will be stored and accessible through the history navigation feature in fzf. By default, this value is 1000 items, but by using `--history-size N`, you can specify a different number `N` to suit your preferences or system constraints.'
        hscroll-off: '[AI] The `--hscroll-off` flag in `fzf`, a popular fuzzy finder for Unix terminals, adjusts the horizontal scrolling position of the finder window. Specifically, it sets an offset value for the horizontal scroll bar. For example, using `--hscroll-off=30` will shift the content of the finder 30 columns to the right. This can be useful when working with long file or directory names that extend beyond the width of the terminal window.'
        i: '[AI] `fzf --interactive` is a command used in Unix-like operating systems with the fzf tool. It opens an interactive file finder interface where you can search for files or use filters to narrow down your search results interactively. The `-i` flag stands for "interactive" and is optional, as by default fzf operates in an interactive mode. So, `fzf -i` and just `fzf` have the same effect.'
        info: '[AI] `fzf --info` is a command used with the fzf file finder tool. It displays detailed information about each file or item in the candidate list, including the file path, size, modification time, and type. The output is formatted in a tabular format that''s easy to read. This option can be useful when dealing with files with similar names or large directories.'
        jump-labels: '[AI] `fzf --jump-labels` is a command-line option for the fzf file explorer and finder tool. It allows users to create custom labels for directories or files in their jump history, which can be quickly accessed by pressing the corresponding keybindings during a search. This feature enhances productivity by providing quick access to frequently used locations.'
        keep-right: '[AI] `fzf --keep-right` is a command-line option for the fzf file explorer tool. It keeps the original terminal window to the right of the fzf interface, instead of replacing it entirely. This allows users to keep an eye on their working directory and perform other terminal tasks while using fzf to navigate files.'
        layout: |-
            [AI] `fzf` is a popular terminal fuzzy finder for Linux and macOS. The `--layout` option in `fzf` determines how the search results are displayed. There are three main layouts:

            1. **Single pane**: This is the default layout where the search results are shown in a single column.
            2. **Split pane (vertical)**: In this layout, the search results are split into two panes vertically, with the current directory being displayed on the left side and the search results on the right.
            3. **Split pane (horizontal)**: Similar to vertical split, but in this case, the panes are split horizontally.

            These layouts help users navigate directories and find files more efficiently by providing multiple perspectives of their file system.
        literal: '[AI] The `--literal` flag is a command-line option for the fzf (Fuzzy Finder) tool. It instructs fzf to treat the input as a literal string instead of interpreting it as a glob pattern or a regex expression. This means that fzf will search for an exact match with the given input in the displayed list, without expanding any wildcards or applying any regular expressions. This can be useful when working with file paths or text strings where you want to search for an exact match.'
        margin: '[AI] The `--margin` option in `fzf`, a popular fuzzy finder for command-line interfaces, adjusts the spacing between columns and rows of displayed items. By default, `fzf` sets a small margin, but users can increase it using this flag with a numerical value or a pair of horizontal and vertical values in pixels (e.g., `--margin 10x2` for a larger horizontal and vertical margin). The goal is to improve the readability and usability of the interface by providing more visual separation between items.'
        marker: '[AI] `fzf --marker` is an option used with the fzf command-line tool for interactive file searching in Unix-like systems. The `--marker` flag sets a custom character or string to be displayed next to the matching item in the fzf preview pane, helping users quickly identify their desired selection among multiple options.'
        min-height: '[AI] `fzf --min-height` is a command-line option for the fzf file explorer and finder tool. It sets the minimum height of the fzf window in terminal lines. This can be useful when running fzf in environments with limited vertical space, such as in a split screen or within a container. For example, `fzf --min-height 5` would set the minimum height to 5 terminal lines.'
        multi: '[AI] `fzf --multi` is a command-line option for the fzf tool, which is a popular fuzzy finder for various file systems and applications. With `--multi`, fzf allows users to perform multiple selections in a single interaction session. When invoked with this flag, fzf will display candidates that match the given query in separate columns or panes, enabling users to select multiple items independently. This can be useful when working with multiple files, directories, or other data types in a project or workflow.'
        no-bold: '[AI] `fzf --no-bold` is a command-line argument for the fzf tool, which is used to interactively filter and select items from various data sources. The `--no-bold` flag disables the bold formatting of text when using fzf. This can be useful if the default bold display conflicts with other terminal settings or personal preferences.'
        no-hscroll: '[AI] `fzf --no-hscroll` is a command-line argument for the fzf file explorer tool. It disables the horizontal scrollbar in the file preview pane when using fzf to browse directories and files. This can be useful when working in terminal environments with limited screen space or when preferring a minimal interface.'
        no-mouse: '[AI] The command "fzf --no-mouse" is used with the fuzzy finder tool called fzf. The "--no-mouse" flag disables mouse support in fzf, making it rely solely on keyboard inputs for navigation and selection of items in the fuzzy find results. This can be useful in text-based environments or when using a terminal emulator that doesn''t properly support mouse events.'
        nth: '[AI] The `--nth` flag in `fzf`, a popular fuzzy finder for Unix-based systems, is used to specify the nth match as the default selection. For example, if you use `--nth 2`, the second match will be selected when you press Enter after running the fuzzy find command. This flag can be useful when dealing with long lists or when you want to quickly navigate to a specific item in the results.'
        padding: '[AI] `fzf` is a popular fuzzy finder for various file systems and terminal applications. The `--padding` option is used to add extra space around the output of the command. This can be helpful when working with larger terminal windows or when you want to better distinguish between different output items. The size of the padding can be specified using a number followed by the `-p` flag, for example `--padding 2`. This would add two characters of extra space on each side of the output.'
        phony: '[AI] `fzf --phony` is a command-line option used with the fzf tool, which is a popular fuzzy finder for various file systems and applications. The `--phony` flag instructs fzf to treat non-existent items as if they were valid matches, allowing users to select them as completions even if they don''t exist in the current directory or file system. This can be useful when using custom completion sources that may not always produce valid results.'
        pointer: '[AI] `fzf --pointer` is a command-line option used with the fzf tool, which is a popular fuzzy finder for various file systems and applications. This option sets the pointer mode to be visual, where the selected item in the fzf results list is highlighted with a cursor or a character. When you press Enter or the corresponding keybinding, the selected item is executed. The pointer mode helps users navigate through and select items more efficiently within the fzf results.'
        preview: '[AI] `fzf` is a popular command-line file finder for Unix-based systems. The `--preview` option is one of its features that allows users to see a live preview of the selected item in the dropdown list before making a selection. This can be especially useful when dealing with large directories or when you want to double-check the contents of a file before opening it. The preview can display various information, such as file contents, size, modification time, and more, depending on how `fzf` is configured.'
        preview-window: '[AI] The `--preview-window` flag in `fzf`, a popular fuzzy finder for command-line interfaces, opens a preview window when an item is selected. This allows users to see more context about the selected item before making a decision. The window can be customized to display various information such as file contents, output of commands, or even images. The flag enhances the functionality of `fzf` by providing additional context and improving the overall user experience.'
        print-query: '[AI] `fzf --print-query` is a command option used with the fzf tool, which is a popular fuzzy finder for various file systems and terminal applications. This specific option instructs fzf to print the current query term to the standard output, allowing it to be easily used as an argument for other commands or scripts. It enables integration of fzf''s search functionality with other tools and workflows in a flexible way.'
        print0: '[AI] `fzf --print0` is a command used in the fuzzy finder tool `fzf`. The option `--print0` changes the output format of `fzf` to print only the zero-terminated string, which allows for easier processing of output by other commands using pipes (|). This feature is often used in shell scripts for efficient handling and manipulation of large datasets.'
        prompt: '[AI] `fzf --prompt` is a command used in the fuzzy finder tool `fzf`. It sets the custom prompt that will be displayed while using `fzf`. This can help provide context and make it easier for users to understand which part of their file system or text they are currently navigating. The exact format and content of the prompt is configurable by the user.'
        query: '[AI] `fzf --query` is a command used in the fuzzy finder tool `fzf`. The `--query` option sets the initial search term for `fzf`. When you run `fzf --query <term>`, `fzf` will display matches from your files, commands, or other data sources that match the given `<term>`. You can interactively modify the query to narrow down or expand your search results.'
        read0: '[AI] `fzf --read0` is a command used with the fzf tool, which is a popular terminal fuzzy finder for various file systems and input sources. The `--read0` option tells fzf to read the input in zero-delimited format, meaning each line of input will contain only one item to be displayed in the fzf finder interface. Once an item is selected, that selection is printed back to standard output, delimited by null characters (i.e., no separators), which can be easily read and processed by other commands or scripts. This option is useful when working with command-line pipelines where maintaining input and output formats is essential.'
        select-1: '[AI] `fzf --select-1` is a command using the fzf (FuzzyFinder) tool in Unix-like operating systems. This command opens an interactive fuzzy finder to let you search for an item within a given directory or file, and automatically selects the first match found when an item is chosen. The `--select-1` option instructs fzf to automatically select the first match instead of waiting for confirmation from the user. This can be useful for quickly opening files or navigating directories without extra keystrokes.'
        sync: '[AI] `fzf --sync` is a command used in the fzf (Fuzzy Finder) tool for interacting with the terminal. This particular command synchronizes the current terminal selection with the file manager or other applications that have an fzf preview pane open, allowing the user to maintain consistency between multiple instances of fzf. By using `--sync`, the selected item in one instance of fzf will automatically be reflected in other instances, making it easier to navigate and manage files across different parts of a workflow.'
        tabstop: '[AI] `fzf --tabstop` is a command-line option for the fzf tool, which is a popular interactive file finder for Unix-based systems. The `--tabstop` option sets the number of columns that form a tab stop in the fzf interface''s preview pane. By default, it''s set to 4, meaning that tabs will be aligned every 4 characters. You can change this value to any other integer to customize the appearance and alignment of the preview pane. For example, `--tabstop 8` sets tab stops every 8 characters.'
        tac: '[AI] `fzf --tac` is a command used with the fzf file finder tool in the terminal. The `--tac` option stands for "tail-ascending-customized," which means that the output of the command will be displayed in reverse order, with the most recently modified or bottommost file appearing first. This can be useful when working with large directories or when you want to quickly find and open files based on their modification time.'
        tiebreak: |-
            [AI] `fzf --tiebreak` is a command-line option for the fuzzy finder tool, `fzf`, in zsh or other Unix-like shells. It's used to resolve ambiguous matches when multiple files or items share the same prefix. By default, `fzf` displays these results in random order. With the `--tiebreak` option, you can specify a rule for tiebreaking, such as:

            1. `--tiebreak=size`: Select the item with the largest file size.
            2. `--tiebreak=mtime`: Select the item most recently modified.
            3. `--tiebreak=name`: Select the item alphabetically first. (default)
            4. Custom scripts or functions to sort based on other criteria.

            In summary, `fzf --tiebreak` helps you to select the desired result among the identical matches by applying a predefined tiebreaking rule.
        version: '[AI] `fzf --version` is a command used in Unix-based systems to display the version information of the fzf tool. Fzf is a popular, interactive file explorer for the terminal. The `--version` flag instructs the tool to output its current version number along with any additional build information, such as the commit hash and compilation flags used when it was built. This command provides useful information for users looking to check which version of fzf they have installed or for system administrators managing software repositories.'
        with-nth: '[AI] `fzf` is a popular fuzzy finder for various file systems and applications in the Unix world. The option `--with-nth` is a feature that allows you to quickly navigate through results using numbers. When enabled, pressing the number key corresponding to the position of an item in the current view will take you directly to that item. This can be particularly useful when working with large result sets and wanting to quickly jump between items.'
