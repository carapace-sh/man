# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: why
description: Display the reason why a package is needed
group: general
flags:
    --json: Format the output as an NDJSON stream
    --peers: Also print the peer dependencies that match the specified name
    -R, --recursive: List, for each workspace, what are all the paths that lead to the dependency
documentation:
    command: '[AI] `yarn why` is a command provided by Yarn, a popular package manager for JavaScript projects. It helps identify the dependencies of a given module in your project and shows you why each dependency is needed, providing information such as the importing file and the function or class that uses it. This command can be used to better understand the role of different packages in your project and assist in debugging or refactoring.'
    flag:
        json: '[AI] `yarn why --json` is a command used in Yarn, a popular JavaScript package manager. This command''s primary function is to provide detailed information about dependencies and their resolvers in a JSON format when using Yarn to manage project dependencies. By running this command, developers can gain insight into the exact source of each dependency (e.g., a specific commit or tag in a Git repository), as well as other related metadata like the dependency version and its resolution status. The output is provided in a structured JSON format, making it easier for automated tools or further scripting to process the data.'
        peers: '[AI] The `--peers` option in the Yarn command `why` is used to display a list of direct dependencies that have peer dependencies which are not met by the current project. Peer dependencies are packages specified in other packages'' `package.json` files as optional dependencies, meaning they can be installed separately if needed or can come bundled with the main package. The `--peers` flag helps identify potential peer dependency conflicts and ensure all required peer dependencies are correctly installed.'
        recursive: '[AI] `yarn why --recursive` is a command used in Yarn, a popular JavaScript package manager. This command is used to find out which dependencies in a project depend on a given package, and it does so recursively across all the transitive dependencies of the project. It helps developers understand the impact of removing or upgrading a particular dependency.'
