# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: lint
description: Parse Benthos configs and report any linting errors
flags:
    --deprecated: Print linting errors for the presence of deprecated fields.
    --labels: Print linting errors when components do not have labels.
    --skip-env-var-check: Do not produce lint errors when environment interpolations exist without defaults within configs but aren't defined.
documentation:
    command: '[AI] `benthos lint` is a command from the Benthos open-source data processing toolkit. It''s used for checking the configuration files written in YAML or JSON format, ensuring they adhere to the correct syntax and structure. The goal is to prevent potential errors before running actual data processing pipelines.'
    flag:
        deprecated: '[AI] `benthos lint --deprecated` is a command used in Benthos, an open-source data processing system. The `lint` subcommand checks the configuration of Benthos pipelines for potential errors or deprecated features. Adding the `--deprecated` flag filters the output to only show warnings about using deprecated configuration options. By running this command, users can ensure their pipelines are using the latest and most supported features in Benthos.'
        labels: '[AI] The `benthos lint --labels` command is a tool used in the Benthos data processing system. It''s used to validate the labels assigned to various elements (streams, jobs, etc.) within a Benthos configuration file. The `--labels` flag specifies that only the validation of labels should be performed. This can help ensure consistency and accuracy in labeling for better organization and management of configurations.'
        skip-env-var-check: '[AI] `benthos lint` is a command-line tool used for testing the configuration files of Benthos, an extensible data pipeline builder. The `--skip-env-var-check` flag is an optional argument that instructs Benthos to bypass checking for missing or incorrect environment variables in the given configuration file. This flag can be useful when you want to forcefully run linting without encountering errors due to missing or improperly set environment variables. However, it''s essential to be cautious when using this option as undetected issues with environment variables could lead to unexpected behavior or issues in the actual pipeline execution.'
