# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: mv
description: Move or rename a file, a directory, or a symlink
group: main
flags:
    -f, --force: force move/rename even if target exists
    -k: skip move/rename errors
    -n, --dry-run: dry run
    -v, --verbose: be verbose
documentation:
    command: '[AI] `git mv` is a Git command for renaming a file or moving it to a new location within the same repository. It''s actually a shorthand for "git move." When you use this command, Git records both the rename and the removal of the old file name in your commit history, making it an atomic operation. This ensures that if something goes wrong during the renaming or moving process, you can easily roll back to a previous state.'
    flag:
        dry-run: '[AI] `git mv --dry-run` is a Git command used to perform a "move file" operation as a simulation or rehearsal. It does not actually move files in the file system but instead shows what would be done if you were to run the command without the `--dry-run` option. This can help prevent accidental file moves or renames, especially when moving multiple files or complex directories.'
        force: '[AI] `git mv --force` is a Git command used to move or rename a file and overwrite an existing file with the same name in the destination location without asking for confirmation. The `--force` option is used to force the renaming or moving operation, bypassing any potential conflicts or warnings. It''s important to use this command with caution, as it can lead to unintended consequences if incorrectly used.'
        k: '[AI] The command `git mv -k` is not a valid Git command. The `git mv` command is used to rename files or directories and move them to a new location within the Git repository. The `-k` option is not recognized by this command. If you intended to use the `git mv` command with no options, just use that: `git mv <old-file> <new-file>`.'
        verbose: '[AI] `git mv` is a Git command used to move or rename files and directories. The `--verbose` option increases the amount of output displayed during the operation, providing detailed information about each step taken in the process. When using `git mv --verbose`, Git will print out messages indicating the source file, the destination file, and any other relevant details for each action performed, such as creating a new commit with the changed file paths.'
