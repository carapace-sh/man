# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: clone
description: Clone a qmk_firmware fork
flags:
    --baseurl=: The URL all git operations start from
    -b, --branch=: The branch to clone
    -h, --help: show this help message and exit
documentation:
    command: '[AI] `qmk clone` is a command used in the Quantum Mechanical Keyboard (QMK) firmware repository to create a local copy of the entire QMK project, including all its subdirectories and files. This is typically done before making modifications or customizations to the firmware for specific keyboards. The cloned repository can then be built and programmed using the QMK toolchain.'
    flag:
        baseurl: '[AI] `qmk clone --baseurl` is a command used in QMK (Quantum Mechanical Keyboard), an open-source software for developing firmware for keyboard projects. This command is used to create a local copy of the QMK repository, starting from a specific base URL. The base URL specifies which version or branch of the QMK project you want to clone. For instance, if you want to clone the master branch, you can use `qmk clone https://github.com/qmk/qmk_firmware.git`, but if you prefer a stable release, you can use `qmk clone --baseurl releases https://github.com/qmk/qmk_firmware.git`. The `--baseurl` option allows you to choose different branches or releases that are available in the GitHub repository.'
        branch: '[AI] `qmk clone --branch` is a command used in the QMK keyboard firmware project to create a local copy of the repository, starting from a specific branch instead of the default main branch. This can be useful when working on a particular feature or development version without affecting your main working directory.'
        help: '[AI] `qmk clone --help` is a command used in QMK (Quantum Mechanical Keyboard), an open-source software for designing and programming keyboards, to create a local copy of an existing keyboard project. The `--help` flag provides information about how to use this specific command correctly. It displays detailed instructions on the required arguments such as the repository URL or branch name to clone and the local directory path for saving the cloned project. This command helps users to easily obtain and work with a specific QMK project locally without having to manually download each file individually.'
