# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: show-ref
description: List references in a local repository
group: low-level interrogator
flags:
    --abbrev=: use <n> digits to display SHA-1s
    --exclude-existing=: show refs from stdin that aren't in local repository
    --head: show the HEAD reference, even if it would be filtered out
    --heads: only show heads (can be combined with tags)
    --tags: only show tags (can be combined with heads)
    --verify: stricter reference checking, requires exact ref path
    -d, --dereference: dereference tags into object IDs
    -q, --quiet: do not print results to stdout (useful with --verify)
    -s, --hash=: only show SHA1 hash using <n> digits
documentation:
    command: '[AI] `git show-ref` is a Git command used to display the contents of the ref storage file, showing the current references (branches and tags) and their associated commit hashes. It provides metadata about the branches and tags in the local Git repository, including their names and the commits they point to. It does not fetch or create new references from a remote repository.'
    flag:
        abbrev: '[AI] `git show-ref --abbrev` is a Git command used to display the abbreviated SHA-1 checksums of the tip of the specified refs. The `--abbrev` option instructs Git to print only the abbreviated form (7 or 40 characters) of the commit hash instead of the full hash. Refs in Git are references to specific commits, branches, or other markers. By using this command, you can easily check and compare the current state of different refs within your Git repository.'
        dereference: '[AI] `git show-ref --dereference` is a Git command used to display the ref (short for reference) that a given commit points to, following any number of symbolic references. In simpler terms, it resolves the current branch tip or any specified commit to the latest commit on the branch, revealing the exact commit hash. It''s particularly useful when dealing with complex Git history, like in cases where there are multiple branches or rebase operations, and you want to find the ultimate commit that a specific reference points to.'
        exclude-existing: '[AI] `git show-ref --exclude-existing` is a Git command used to display the full refs (branch or tag references) that match the given name, but only if they don''t already exist locally. This means it will not show refs that already exist in your local repository and instead focuses on showing new refs that aren''t currently present.'
        hash: '[AI] `git show-ref --hash` is a Git command used to display the hash value of the current reference (usually a branch) tip in the local repository. The output shows the full ref name, followed by a space and then the commit hash associated with that ref tip. This command provides a way to quickly check the current state of a specific branch without having to perform a checkout or fetch new commits from a remote repository.'
        head: '[AI] `git show-ref --head` is a Git command used to display the reference (usually a branch or tag) that the current HEAD points to. The `--head` option tells Git to use the names of the branches and tags stored in the `HEAD` file, which indicates the current branch or tag being worked on. This command provides the short name and the commit hash of the latest commit on the selected reference.'
        heads: '[AI] `git show-ref --heads` is a Git command used to display the tips of all local branches in a repository. The "--heads" option tells Git to only show the refs that point to the current branch tip, making it an efficient way to check which branches are currently available locally without having to list every single ref in the repository. This command provides a quick and straightforward view of the active branches for a given Git repository.'
        quiet: '[AI] `git show-ref --quiet` is a Git command used to display the exact commit hash and ref name of the current branch tip or specified reference, without any additional output or messages. The `--quiet` option suppresses any verbose output, making it suitable for use in scripts or automation workflows where only the commit hash is required.'
        tags: '[AI] `git show-ref --tags` is a Git command used to display the references (branches and tags) in the current repository, specifically the tags. The command searches for tag objects in the refs/tags directory of the local Git repository and displays their full names and commit hashes. This can be helpful when you want to check which tags exist, or if you need to find the commit associated with a particular tag.'
        verify: '[AI] `git show-ref --verify` is a Git command used to check the integrity of a ref (short for reference), which is a pointer to a specific commit in a Git repository. By adding the `--verify` flag, Git will verify that the ref''s content matches its expected SHA-1 value on disk. This is particularly useful after a potential corruption or when dealing with malicious content to ensure data integrity before using or updating the ref.'
