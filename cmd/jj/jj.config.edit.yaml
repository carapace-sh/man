# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: edit
aliases:
    - e
description: Start an editor on a jj config file
flags:
    --repo: Target the repo-level config
    --user: Target the user-level config
    -h, --help: Print help (see more with '--help')
documentation:
    command: '[AI] The `jj config edit` command is used in Jira, a project management tool by Atlassian. It opens the current Jira configuration file (`.jira-configs/jira-configuration.properties`) in an external text editor for editing. This allows users to modify specific configuration settings without using the graphical user interface. After making changes, users must save and restart the Jira application for the updates to take effect.'
    flag:
        help: |-
            [AI] `jj config edit` is a command used in Jira and Confluence CLI (Command Line Interface) tools provided by Atlassian. The `--help` option that follows this command is intended to display detailed help information about using the `config edit` command with various options and arguments. Here's what it does:

            1. `jj`: Invokes the Jira or Confluence CLI.
            2. `config edit`: This is a specific subcommand that allows you to edit configuration files (like `atlas-config.properties` or `jira-config.properties`) for these Atlassian tools.
            3. `--help`: The help option displays detailed information on how to use the `config edit` command, including available options and arguments, their usage, and examples. This can be particularly useful when you need a quick reference or are unsure about the proper syntax for using this command.
        repo: '[AI] The command `jj config edit --repo` is a part of JIRA CLI (Command Line Interface) tool, which is used to manage Jira projects from the terminal. This specific command opens the configuration file for a specified Git repository in a text editor for editing. The changes made can include things like webhooks, notifications, or any other customization available through the `jj-config.yml` file. Once edited and saved, the updated configuration will be applied to the associated Jira project.'
        user: '[AI] `jj` is a command-line tool for managing and configuring GitHub''s Jupyter Notebooks, called "GitPod" or "Minimalist" notebooks. The `jj config edit --user` command is used to edit the user-level configuration file of `jj`. This file stores settings applicable to all repositories for a specific user. Modifications made with this command will only affect the current user''s GitHub account and not other users or repositories.'
