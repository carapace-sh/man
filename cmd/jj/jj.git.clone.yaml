# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: clone [OPTIONS] <SOURCE> [DESTINATION]
description: Create a new repo backed by a clone of a Git repo
flags:
    --colocate: Whether or not to colocate the Jujutsu repo with the git repo
    -h, --help: Print help (see more with '--help')
documentation:
    command: |-
        [AI] The `jj` command is not a standard Git command. It seems you might have meant to use `git`, which is a version control system, and `clone` is one of its commands used to make a local copy of an existing remote repository.

        So, the correct command should be: `git clone [URL]`, where `[URL]` is the URL of the repository you want to clone. This command will create a new local directory with the repository's name and download all files and commits from the specified remote repository into that directory.
    flag:
        colocate: '[AI] `git clone --colocate` is a Git command used to create a new repository by cloning an existing one, while also sharing local directories between the source and the target repositories. This option is particularly useful when working on multiple related projects that share common subdirectories or files. It allows for better organization and reduced disk space usage by avoiding redundant copies of the same content. In summary, `git clone --colocate` creates a linked clone, which keeps the source and target repositories in sync regarding shared directories.'
        help: '[AI] `jj git clone --help` is a command used with the Jira CLI (Command Line Interface) tool, JJ, which is an unofficial Git client for Jira. This command displays the help or usage information for the "git clone" sub-command of JJ. The "--help" option provides detailed information about how to use the "git clone" command correctly to create a new local Git repository from a remote repository in Jira. It shows options like specifying the repository URL, local directory path, and branch or commit to checkout.'
