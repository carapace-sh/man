# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: goweight
description: A tool to analyze and troubleshoot a Go binary size
flags:
    --help: Show context-sensitive help
    --tags=: Build tags
    --version: Show application version
    -j, --json: Output json
documentation:
    command: |-
        [AI] The `goweight` command is not a standard or widely-used command in various programming languages or tools. It seems to be specific to the Blender 3D modeling software, as it is a built-in option for handling vertex weights in mesh editing.

        When using this command, it sets the selected vertices to have equal influence (weight) on each bone in the armature (a hierarchical structure used for animating 3D models). This results in a neutral or unbiased distribution of weights among bones and can be useful when preparing a model for rigging or animation.
    flag:
        help: |-
            [AI] The command `goweight --help` is used to display help information about the `goweight` tool. This tool seems to be related to data analysis or machine learning, as indicated by its name, which might suggest that it is used for calculating or visualizing the weights in a model. However, without more context, it's hard to be certain.

            The help message provides information on how to use `goweight`, including any required flags or arguments, and brief descriptions of what each one does. For example:

            ```bash
            Usage: goweight [flags] [input] [output]

              Calculate weights for the given model file.

            Flags:
              -h, --help           Help and usage information.
              -m, --model string   Path to the model file (required).
            ```

            This indicates that `goweight` takes at least two arguments: an input file (presumably the model) and an output file where the results will be written. The help message also mentions an optional flag `-m`, which is used to specify the path to the model file.
        json: '[AI] `goweight` is a command-line tool for calculating the size of Docker images. The `--json` flag is used to output the result in JSON format. This format provides more structured and machine-readable data, which can be easily parsed by other scripts or applications. The output includes information such as image name, tag, size (in bytes), and other metadata.'
        tags: '[AI] `goweight --tags` is a command-line option for the Go tool `go test`. It instructs `go test` to only run tests that match the specified tags. For example, if you have tests tagged with "integration", running `go test --tags integration` will execute only those tests. This can be useful when you want to quickly run a specific set of tests without having to manually select them.'
        version: '[AI] `goweight --version` is a command used with the `goweight` tool, which is often used for calculating the size of Go packages or binaries. This specific command prints out the version information of the installed `goweight` tool, helping users to check which version they are currently using.'
