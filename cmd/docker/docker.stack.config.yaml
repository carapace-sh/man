# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: config [OPTIONS]
description: Outputs the final config file, after doing merges and interpolations
flags:
    --skip-interpolation: Skip interpolation and output only merged config
    -c, --compose-file*=: Path to a Compose file, or "-" to read from stdin
documentation:
    command: '[AI] `docker stack config` is a Docker Swarm command used to modify or inspect the configuration of a specified stack, which is a collection of related services in Docker Swarm mode. This command allows updating the number and replica modes of the services within a stack, as well as other parameters such as network settings or resource constraints. The output can be viewed in YAML format for easy editing. Using `docker stack config <stack-name> <service-name>` updates a specific service in the stack, while using `docker stack config <stack-name>` displays the current configuration of the entire stack.'
    flag:
        compose-file: '[AI] `docker stack config` is a command used in Docker Swarm mode to configure or update the configuration of a Docker stack. The `--compose-file` option specifies the path to a Compose file that defines the services, networks, and other resources in the stack. When you run `docker stack config --compose-file <path> <stack-name>`, Docker reads the specified Compose file to update the configuration of the given Docker stack without recreating or rebuilding the services, allowing you to make changes to your stack configuration while keeping running containers uninterrupted.'
        skip-interpolation: '[AI] `docker stack config` is a command used in Docker Swarm mode to configure or update the services, networks, and secrets defined in a Docker Stack file. The `--skip-interpolation` flag is an option that prevents Docker from interpolating variables during the configuration process. This means that any variables defined in the stack file will not be replaced with their values before applying the changes. Instead, Docker will apply the raw template directly, allowing you to manually set or override variables at the time of application using `--with-values` or other command line options.'
