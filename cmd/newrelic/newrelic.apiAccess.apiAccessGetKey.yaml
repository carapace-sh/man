# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: apiAccessGetKey
description: Fetch a single key by ID and type.
flags:
    --id=: The `id` of the key. This can be used to identify a key without revealing the key itself (used to update and delete).
    --keyType=: The type of key.
documentation:
    command: |-
        [AI] The `newrelic apiAccess apiAccessGetKey` command is a cURL command used to retrieve an API key from the New Relic platform using their REST API. Here's a breakdown of each part:

        1. `newrelic`: This signifies that the following command is related to interacting with the New Relic service.
        2. `apiAccess`: Indicates that the specific API being used is the 'API Access' API.
        3. `apiAccessGetKey`: This is the name of the API endpoint method for retrieving an API key.

        The entire command, therefore, requests a new or existing API key from New Relic's API Access API using a GET request.
    flag:
        id: '[AI] The `newrelic apiAccess apiAccessGetKey --id` command is used to retrieve an API key from New Relic''s API Access system using the New Relic Command Line Interface (CLI). The `apiAccessGetKey` subcommand requests a specific API key identified by its ID, which is passed as an argument to the command. This command is used to obtain an API key for making programmatic requests to New Relic services such as APM, Browser, and Infrastructure.'
        keyType: |-
            [AI] The `newrelic apiAccess apiAccessGetKey --keyType` command is used with New Relic's API to retrieve an API key of a specific type. Here's a breakdown:

            * `newrelic`: It signifies that this command is for interacting with the New Relic platform, specifically its APIs.
            * `apiAccess`: Refers to the New Relic API feature that manages and secures API keys used for accessing New Relic data through external applications or services.
            * `apiAccessGetKey`: Is a sub-command under `apiAccess`, which retrieves an existing API key by its identifier or generates a new one if no such key exists.
            * `--keyType`: Indicates the type of API key to be returned or generated. New Relic supports several key types for different use cases, such as application-level keys (for agents and infrastructure), platform-level keys (for accounts and organizations), and event-based keys (for event subscriptions).
