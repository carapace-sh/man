# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: process
description: Validate config and display expanded configuration.
flags:
    --pipeline-parameters=: 'YAML/JSON map of pipeline parameters, accepts either YAML/JSON directly or file path (for example: my-params.yml)'
    -o, --org-slug=: 'organization slug (for example: github/example-org), used when a config depends on private orbs belonging to that org'
documentation:
    command: |-
        [AI] `circleci config` is a command used in CircleCI, a continuous integration and delivery platform. This command is used to configure CircleCI's `config.yml` file which defines the workflows and jobs for your project.

        The `config process` refers to the steps involved in creating or updating this configuration file:

        1. Write the YAML code in a text editor, defining your projects' workflows, jobs, and other settings.
        2. Save the file as `config.yml` in your CircleCI-enabled repository.
        3. Commit and push the changes to your remote repository.
        4. CircleCI will detect the change and fetch the new configuration.
        5. CircleCI will validate the YAML syntax and apply the changes in the next build or workflow run.

        Note that this command itself doesn't directly modify the `config.yml` file, but rather sets up the process for making changes to it.
    flag:
        org-slug: '[AI] The `circleci config process --org-slug` command is used to configure CircleCI settings for a specific organization in CircleCI''s platform. The `--org-slug` argument specifies the unique identifier of the organization in question. This command allows users to set up and manage projects, branches, workflows, and other CircleCI features for that particular organization through the command line interface. It is an essential tool for managing multiple organizations or projects within the same CircleCI account.'
        pipeline-parameters: |-
            [AI] `circleci config process --pipeline-parameters` is a command used with CircleCI, a continuous integration and delivery platform. This command modifies or creates CircleCI configuration files with pipeline parameters. Pipeline parameters are dynamic values that can be passed to workflows or jobs during the build process.

            Using this command, you can define, update, or override pipeline parameters in your CircleCI configuration files. The new values will be applied when the next build is triggered. This allows for flexible and customizable workflows based on various input conditions. For example, you might use pipeline parameters to pass environment variables, different branch names, or specific image versions between jobs in a workflow.
