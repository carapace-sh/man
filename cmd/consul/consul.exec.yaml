# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: exec
description: Executes a command on Consul nodes
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --node=: Regular expression to filter on node names.
    --prefix=: Prefix in the KV store to use for request data.
    --service=: Regular expression to filter on service instances.
    --shell: Use a shell to run the command.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tag=: Regular expression to filter on service tags.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
    --verbose: Enables verbose output.
    --wait-repl=: Period to wait for replication before firing event.
    --wait=: Period to wait with no responses before terminating execution.
documentation:
    command: |-
        [AI] `consul exec` is a Command Line Interface (CLI) command provided by Hashicorp's Consul service discovery and configuration management tool. This command allows you to execute arbitrary shell commands on Consul agents or services that have the Consul agent running. The syntax for using it is:

        ```bash
        consul exec <flag> [<args>] [<agent-name|service-name>:]<token> [<command>]
        ```

        Replace `<flag>` with optional flags such as `--detach`, `--logfile`, or `--no-color`. Replace `<args>` with any additional arguments for the command. Replace `<agent-name|service-name>` with the name or check name of the Consul agent or service, and replace `<token>` with the token of an administrator or a user with appropriate permissions. Finally, replace `<command>` with the command you want to execute on the target Consul entity.
    flag:
        ca-file: '[AI] `consul exec` is a command-line tool for interacting with a Consul service discovery and configuration management platform. The option `--ca-file` is used to specify the location of a file containing the root Certificate Authority (CA) certificates that will be trusted when connecting to a secure Consul cluster over TLS. This is necessary when connecting to a Consul server using SSL/TLS encryption to ensure secure communication between clients and servers.'
        ca-path: '[AI] `consul exec --ca-path` is a command-line option used with the Consul service discovery and configuration tool. It specifies the location of a directory containing X.509 CA (Certificate Authority) certificates when running an ad-hoc task using `consul exec`. This ensures secure communication between the client and the Consul agent by validating the server''s certificate against one or more trusted CAs.'
        client-cert: '[AI] The `consul exec --client-cert` flag is used with the Consul CLI (Command Line Interface) tool in a Hashicorp Consul environment. It specifies that the client making the request should authenticate using a TLS client certificate for secure communication between the client and Consul. This helps ensure secure access to Consul services, as only authenticated clients with valid certificates can execute commands.'
        client-key: '[AI] The `consul exec --client-key` is a command used in Hashicorp Consul, a service discovery and configuration management tool. This command allows executing arbitrary shell commands on remote Consul agents or services, which have the `exec` capability enabled. The `--client-key` option specifies the authentication key of the Consul client that will be executing the command. It''s important for security reasons to ensure that only authorized clients can execute commands on your Consul infrastructure.'
        datacenter: |-
            [AI] The `consul exec --datacenter` command is used in Hashicorp Consul, a service discovery and configuration management tool. This command allows running arbitrary shell commands on remote nodes that are registered with Consul, under the specified datacenter.

            The `--datacenter` flag specifies which datacenter the target node belongs to. Consul uses datacenters as logical boundaries for managing its cluster and providing multi-datacenter support. By specifying a datacenter, you ensure that you're executing commands on nodes within that specific datacenter. This is essential when dealing with geographically dispersed deployments or multiple environments.
        http-addr: '[AI] The `flag "consul exec --http-addr"` in the Context of Consul, a service discovery and configuration management tool by HashiCorp, sets the HTTP address for the Consul agent''s RPC interface when executing commands using the `consul exec` command. It allows users to specify an external IP or hostname and port number, enabling remote execution of tasks on Consul agents in a distributed environment.'
        node: '[AI] The `consul exec --node` command is used in Hashicorp Consul, a service discovery and configuration management tool. This command allows executing arbitrary shell commands on a Consul agent node that is part of the Consul cluster. The `--node` flag specifies the ID or name of the Consul agent node to which the command will be executed. For instance, `consul exec rm-agent -- node ls /` would list the contents of the filesystem root directory on the Consul agent node named "rm-agent".'
        prefix: '[AI] `consul exec` is a command from Consul, a Connect and Orchestrate tool for service discovery, configuration, and orchestration. The `--prefix` option is used to specify a prefix for the environment variables that are set when running a command in a remote container with Consul''s built-in container execution feature. This prefix helps avoid naming conflicts with existing environment variables in the container. For example, if you run `consul exec --prefix MY_ my_command`, then any environment variable named `MY_VAR` in `my_command` will be accessible as `MY_VAR` when running the command.'
        service: '[AI] `consul exec` is a command from the Consul service discovery and configuration tool. The `--service` flag is used to specify that you want to execute a command on a service instance that is registered with Consul, rather than on the Consul agent itself. For example, `consul exec --service my-service my-command` would run `my-command` against the process running `my-service`, assuming it''s registered and running in a Consul-enabled datacenter. The command is executed remotely, making it useful for managing services that might not have direct SSH access or be on different machines.'
        shell: '[AI] `consul exec` is a command from the Consul service discovery and configuration tool. The `--shell` flag is used to open an interactive shell session on a remote Consul agent or client node. This allows you to run commands directly on that node, making it useful for executing ad-hoc tasks, troubleshooting issues, and managing applications deployed with Consul.'
        stale: '[AI] The `consul exec --stale` command is a feature of Consul, a service discovery and configuration management tool. This command allows running an ad-hoc command on a remote service that may no longer be alive or registered in the Consul cluster. By using `--stale`, Consul will attempt to locate and connect to the process even if it''s not currently registered in the agent''s catalog. The command is executed with minimal checks to improve reliability, but this comes at the cost of reduced safety as there''s no guarantee that the service is still running or that the command will be executed with the desired configuration.'
        tag: '[AI] The `consul exec --tag` is a command used in Hashicorp Consul, a service discovery and configuration management tool. This command allows users to run an ad-hoc task on a registered agent or service in the Consul cluster. The `--tag` flag specifies a tag that identifies which agents or services should be targeted with the command. For example, you could use `consul exec --tag my_service` to execute a command on all registered agents or services with the "my\_service" tag.'
        tls-server-name: '[AI] `consul exec --tls-server-name` is a command used with Hashicorp Consul, a popular service discovery and configuration management tool. This option configures the TLS client to present a specific server name during secure (TLS) RPC communication between Consul agents or clients and the Consul server. The `--tls-server-name` flag ensures that the certificate presented by the Consul server matches the provided name, thus enhancing security by verifying the identity of the server.'
        token: '[AI] The `consul exec --token` is a command used in Hashicorp''s Consul service to execute a shell command on an agent or node that is registered with Consul. The `--token` option specifies the token, which is a security measure to authenticate and allow access to the targeted node for remote execution. This command helps maintain infrastructure by enabling administrators to run commands remotely within the context of the Consul environment.'
        token-file: '[AI] The `consul exec` is a command-line tool provided by Consul, an open-source tool for service discovery and configuration management. The `--token-file` option is used to specify a file containing an ACL token, which grants permissions to execute certain Consul commands or access specific resources. This flag allows users to authenticate and authorize the execution of tasks within a Consul cluster without exposing sensitive tokens in plain text on the command line.'
        verbose: '[AI] The `consul exec` is a command-line tool provided by Consul, an open-source tool for service discovery and configuration management. The `--verbose` flag is an option that increases the amount of output produced during the execution of a command. When used with `consul exec`, it results in more detailed information being displayed about the container or service being interacted with. This can be helpful for troubleshooting and understanding what''s happening behind the scenes when executing commands remotely within the Consul ecosystem.'
        wait: '[AI] `consul exec --wait` is a command in Hashicorp''s Consul service discovery and configuration management tool. It runs an ad-hoc command on a remote service or node registered with Consul, and waits for the command to finish before returning its exit code. The `--wait` flag ensures that the Consul agent does not exit until the commanded task has completed successfully. This is useful when executing lengthy or critical tasks remotely using Consul''s RPC interface.'
        wait-repl: '[AI] The `consul exec --wait-repl` command is a feature in Hashicorp''s Consul service discovery and configuration management tool. It allows executing a command on a remote service instance that is registered with Consul, and then waits for the replacement of the output before returning. This is particularly useful when working with containers or services where the output of a command may change rapidly, as it ensures that the most up-to-date information is retrieved. The `--wait-repl` flag tells Consul to keep polling and return only when the output has stabilized.'
