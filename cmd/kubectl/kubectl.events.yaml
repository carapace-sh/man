# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: events [(-o|--output=)json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file] [--for TYPE/NAME] [--watch] [--event=Normal,Warning]
description: List events
flags:
    --allow-missing-template-keys: If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats.
    --chunk-size=: Return large lists in chunks rather than all at once. Pass 0 to disable. This flag is beta and may change in the future.
    --for=: Filter events to only those pertaining to the specified resource.
    --no-headers: When using the default output format, don't print headers.
    --show-managed-fields: If true, keep the managedFields when printing objects in JSON or YAML format.
    --template=: Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview].
    --types*=: Output only events of given types.
    -A, --all-namespaces: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace.
    -o, --output=: 'Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file).'
    -w, --watch: After listing the requested events, watch for more events.
documentation:
    command: '[AI] `kubectl events` is a command used with Kubernetes to retrieve real-time information about recent events related to specific resources or namespaces in the cluster. It displays a list of recent events, including their types (e.g., Normal, Warning, Error), messages, and timestamps, providing insight into the current state and behavior of your applications running on Kubernetes.'
    flag:
        all-namespaces: '[AI] `kubectl events --all-namespaces` is a command used in Kubernetes to retrieve the event history for all namespaces in the cluster. The output shows the type, reason, and message of each event that has occurred in the cluster, helping users monitor and troubleshoot issues with their applications and resources. This command provides a comprehensive view of the system''s state and is often used for continuous monitoring or during incident response scenarios.'
        allow-missing-template-keys: '[AI] `kubectl events` is a command used to fetch and display the event history of Kubernetes objects such as pods, services, etc. The option `--allow-missing-template-keys` is used when applying custom YAML manifests with template keys that may be missing in the actual cluster configuration. With this flag enabled, `kubectl apply` will continue to attempt to apply the manifest despite missing keys, instead of failing. It''s important to note that using this option can potentially lead to unintended behavior and should be used with caution.'
        chunk-size: '[AI] `kubectl events` is a command used to fetch the event history for Kubernetes resources. The `--chunk-size` flag specifies the maximum number of events to return in each response. This can be useful when dealing with large numbers of events, as it allows you to process them in smaller batches instead of all at once. For example, `kubectl events <resource> --chunk-size=100`.'
        for: '[AI] `kubectl events --for` is a command used with the Kubernetes command-line tool, `kubectl`. This command retrieves events related to one or more resources in a Kubernetes cluster. The `--for` flag is an argument that instructs `kubectl` to loop through each item (in this case, each resource) and print the events for each one separately. This can be useful when dealing with multiple resources and wanting to see their respective event histories in a clear and concise manner.'
        no-headers: '[AI] `kubectl events --no-headers` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command retrieves the event history for a specific resource in a Kubernetes cluster. The `--no-headers` flag is optional and is used to suppress the display of column headers. This means that only the events data will be shown, with one event per line. This can make it easier to parse the output when processing large amounts of data or using scripts.'
        output: '[AI] `kubectl events --output` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command is used to retrieve the event history for a specific Kubernetes resource, such as a pod or deployment. The `--output` option specifies the output format, which can be set to `json`, `wide`, or `custom-columns`. Without this option, the output is in a tabular format showing the type, reason, message, and last timestamp for each event. By using this command, users can monitor the events related to their resources and troubleshoot issues more effectively.'
        show-managed-fields: '[AI] `kubectl events --show-managed-fields` is a command used in Kubernetes to display events related to a specific resource or collection of resources, along with the managed fields that caused those events. Managed fields are the fields that are under the management of the Kubernetes API controllers and can be monitored for changes to understand the reason behind an observed event. The output shows the type, source, reason, message, and involved object of each event, followed by a list of managed fields with their old and new values. This command helps in debugging and understanding the cause-effect relationship between API controller actions and resource state changes.'
        template: '[AI] `kubectl events --template` is a command used with the Kubernetes command-line tool (kubectl) to retrieve real-time events from the Kubernetes cluster in a customized format using the Go text template package. The `--template` flag allows users to define custom output formats using the Go template syntax to extract and manipulate event data, such as displaying only specific event types or fields. This can help simplify and automate the process of monitoring and analyzing Kubernetes resources and their associated events.'
        types: '[AI] `kubectl events --types` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command displays events in the Kubernetes cluster based on specific event types. The `--types` flag allows filtering of events by their types, such as "Normal", "Warning", or "Error". Events represent significant state changes or messages about managed objects within a Kubernetes cluster and can be used for monitoring and troubleshooting.'
        watch: |-
            [AI] `kubectl events --watch` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command allows users to watch the event stream of resources in a running Kubernetes cluster.

            When you run `kubectl events --watch`, it sets up a continuous streaming connection to the API server, displaying new events as they occur. The output is updated in real-time and can be terminated by pressing `Ctrl+C`. This command is particularly useful for monitoring complex deployments or troubleshooting issues. It provides valuable insights into the lifecycle of your Kubernetes resources and can help you quickly identify and address any issues that arise.
