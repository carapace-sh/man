# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: rebuild
description: Rebuild a package
flags:
    --bin-links: crete symlinks for package executables
    --ignore-scripts: do not run scripts specified in package.json
    --workspaces: Enable running a command in the context fo all workspaces
    -g, --global: operate globally
    -w, --workspace*=: Enable running a command in the context of the given workspace
documentation:
    command: '[AI] The `npm rebuild` command is used to recompile native modules in a Node.js project. It''s typically run after installing new dependencies or making changes to the project''s `node_modules` directory, as it ensures that native add-ons are built for the current operating system and Node.js version. By executing this command, you can ensure that your project is using the most up-to-date versions of its native modules, which is essential for maintaining optimal performance and compatibility.'
    flag:
        bin-links: '[AI] `npm rebuild --bin-links` is a command used in Node.js projects to rebuild and reinstall all native addons and node_modules while preserving symbolic links to specific binaries in the npm global installation or bin folder. It''s particularly useful when making major version upgrades of packages, as it can save time by avoiding the need to manually re-download and compile native modules. The `--bin-links` option ensures that custom binaries installed globally are not overwritten during the rebuild process.'
        global: '[AI] `npm rebuild --global` is a command used in Node.js package management with npm (Node Package Manager). It triggers a rebuild process for globally installed Node.js packages, ensuring that their native modules are recompiled from source and correctly linked. This command can be helpful when dealing with issues related to outdated or missing native dependencies, as it forces a fresh build of these components.'
        ignore-scripts: '[AI] The `npm rebuild` command with the `--ignore-scripts` flag is used to force a fresh build of all native modules in a Node.js project, bypassing any previously installed ones. It''s often employed when dealing with outdated or problematic dependencies, as it ensures that all native addons are compiled from their source code instead of using precompiled binaries. This can lead to more consistent builds and help resolve various issues.'
        workspace: '[AI] `npm rebuild` is a command used in Node.js projects managed with npm (Node Package Manager). When run with the option `--workspace`, it will recursively build and install all packages listed in a `package.json` file''s top-level `workspaces` key. This allows for building multiple, related projects within a single Node.js repository. This command is particularly useful when working on monorepos or projects with interconnected dependencies.'
        workspaces: '[AI] `npm run rebuild --workspaces` is a command used in Node.js projects with the `workspaces` feature enabled in their `package.json` file. This command triggers a build process across all the independent packages within a monorepo (multi-package project), ensuring that each package has the latest dependencies and recompiles its source code. It is an efficient way to maintain consistency across a large project with multiple packages, reducing potential version conflicts and improving overall development experience.'
