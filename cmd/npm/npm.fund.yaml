# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fund
description: Retrieve funding information
flags:
    --browser=: browser to use
    --json: output as json
    --unicode: use unicode characters in output
    --which=: index of funding source to open
    --workspaces: Enable running a command in the context fo all workspaces
    -w, --workspace*=: Enable running a command in the context of the given workspace
documentation:
    command: '[AI] `npm fund` is a command used in Node.js projects to interact with the npm Fund, a service that collects and distributes funding for open-source packages maintained on npm (Node Package Manager). The command can be used to check the balance of your npm Fund account, or to request funding for a specific package by invoking `npm fund request <package-name>`. The funds are distributed based on the number of downloads and other factors, allowing maintainers to receive regular income for their open-source work.'
    flag:
        browser: '[AI] `npm fund --browser` is a command used in npm (Node Package Manager) to install or update packages listed in a project''s `package.json` file that have dependencies with peer dependencies requiring specific browser versions. It automatically resolves and installs the required browser packages (e.g., React, Angular, Vue) as well as their prerequisites. This command simplifies the installation process by handling multiple dependency trees at once, making it convenient for developers using browsers as their primary target platform.'
        json: '[AI] `npm fund --json` is a command used in npm (Node Package Manager) to generate a json file containing information about funding a project with dependencies using npm''s `fund` feature. This command does not install or manage dependencies but instead provides the necessary data for automating the process of procuring and managing packages from multiple registries and sources, including GitHub, Bit, and npm itself. The generated JSON file can be used in workflow configurations to facilitate continuous funding of project dependencies.'
        unicode: '[AI] `npm fund --unicode` is a command used in Node.js package management with npm (Node Package Manager). This command is for sponsoring a package author using Unicode emoji icons in place of traditional currency symbols. When you run `npm fund --unicode <package>`, it will display the cost and funding progress of a specified package using Unicode emojis instead of dollars or other currencies. It''s an optional feature that adds a more visual representation to the sponsoring process in npm.'
        which: '[AI] `npm fund --which` is a command used in Node.js package management with npm (Node Package Manager). This command is used to check which specific registry, i.e., npm or npmjs.org, is currently set as the funding registry for automatic installation of funded packages. The output will display "npm" if the local npm registry is being used or "npmjs.org" if the default npmjs.org registry is being used for funded packages.'
        workspace: '[AI] `npm fund --workspace` is a command used in npm (Node Package Manager) for managing shared dependencies across multiple projects in a monorepo or workflow using the npm Workspaces feature. This command helps to automatically install and manage shared packages as dev or production dependencies across different projects, ensuring consistency and reducing redundancy. It also supports multiple funding sources like GitHub, npm Registry, and NPM Tokens for financing these shared packages.'
        workspaces: '[AI] `npm fund --workspaces` is a command used in npm (Node Package Manager) to configure and manage funding for dependencies across multiple packages in a monorepo or workspace setup. This command enables automatic payment of dependencies with shared funding via a centralized budget. By default, it uses the NPM Token as the payment method and utilizes an `npm-token.json` file for authentication. The goal is to simplify dependency management by handling billing and payments centrally across all packages within the workspace.'
