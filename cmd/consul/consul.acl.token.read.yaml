# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: read
description: Read an ACL token
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --id=: The Accessor ID of the token to read.
    --meta: Indicates that token metadata such as the content hash and Raft indices should be shown for each entry
    --namespace=: Specifies the namespace to query.
    --self: Indicates that the current HTTP token should be read by secret ID
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul acl token read` command is used in Hashicorp''s Consul service to retrieve the Access Control List (ACL) policy associated with a given ACL token. This command helps you view the permissions granted by that token, which can be useful for understanding and managing access control within your Consul environment.'
    flag:
        ca-file: '[AI] The `consul acl token read --ca-file` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command reads Access Control List (ACL) tokens from a PEM-encoded Certificate Authority (CA) file for authentication purposes. It retrieves the associated policies and capabilities of the token to determine the level of access granted in Consul''s ACL system. The output shows the token''s ID, Policies, and Capabilities. This command helps in managing fine-grained access control for securing your infrastructure with Consul.'
        ca-path: '[AI] `consul acl token read --ca-path` is a command used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. The command reads the Access Control List (ACL) of a specific token, which is used to manage access to different resources within Consul. The `--ca-path` option specifies the location of the Certificate Authority (CA) files that are used to verify the identity of Consul servers when communicating with each other in a secure manner. This helps ensure the security and authenticity of ACL data being retrieved.'
        client-cert: |-
            [AI] The `consul acl token read --client-cert` command is used with the Consul Access Control List (ACL) tool to retrieve the permissions associated with a specific client certificate in the Consul service. Consul is a distributed, highly available, and data center aware toolkit for configuring and managing services.

            The `read` subcommand retrieves information about an ACL entity. In this case, the focus is on the client certificates, which represent secure communication between clients and the Consul server. The `--client-cert` flag specifies that the details of a specific client certificate should be returned. The command doesn't modify the ACL data but only displays the information related to the given client certificate.
        client-key: '[AI] The `consul acl token read --client-key` command is used in Consul, a Connective Adaptive Policy and Configuration System, to retrieve the Access Control List (ACL) tokens and their associated client keys. In simpler terms, it allows you to view the tokens generated for different clients in the Consul ACL system along with their respective client keys. This command helps in managing access control permissions in a fine-grained manner within the Consul environment.'
        datacenter: '[AI] The `consul acl token read --datacenter` command is used with the Consul Access Control List (ACL) tool to retrieve ACL policies associated with a specific datacenter and a Consul token. The datacenter argument specifies which data center''s policies should be returned, and the token argument identifies the Consul token for which to retrieve the ACL policies. This command provides insight into the access control rules applied to a particular datacenter using that token.'
        format: '[AI] The `consul acl token read --format` command is used with the Consul Access Control List (ACL) tool to retrieve an ACL token''s details in a specified format. The `--format` option specifies how the output should be formatted, which can be set to "json" for a JSON representation of the token data. This command returns various attributes related to the token, such as its ID, creation time, and associated policies or roles.'
        http-addr: '[AI] The `consul acl token read --http-addr` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command retrieves the HTTP address associated with an Access Control List (ACL) token in Consul. An ACL token is a secure string that grants permissions to perform specific actions within a Consul cluster. By supplying the `--http-addr` flag, the output will display only the HTTP address where this token can be used to access the Consul API securely.'
        id: |-
            [AI] The `consul acl token read --id` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command is part of the Access Control List (ACL) subsystem and is employed to retrieve the ID of an ACL token.

            In simpler terms, it helps you identify the unique identifier associated with a given Consul ACL token, which can be utilized for policy management and access control purposes within the Consul environment.
        meta: '[AI] The `consul acl token read --meta` command is used in the Consul Access Control List (ACL) system to retrieve metadata associated with an ACL token. The metadata can include information such as the token''s name, creation time, and renewal settings. This command helps administrators manage and maintain their ACL tokens in Consul.'
        namespace: |-
            [AI] The `consul acl token read --namespace` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. It reads Access Control List (ACL) tokens specific to a given Kubernetes namespace.

            The command retrieves the policy rules associated with the provided ACL token within the specified Kubernetes namespace in Consul's service mesh. This is useful when managing access control for microservices within a containerized environment.
        self: '[AI] The `consul acl token read --self` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command retrieves the Access Control List (ACL) policy rules associated with the currently authenticated token, specifically the self token of the user or process running the command. The output shows the detailed ACL rules, including capabilities, policies, and tokens, that the self token is authorized to use within Consul.'
        stale: '[AI] The `consul acl token read --stale` command is used in Consul, an open-source tool for service discovery, configuration management, and orchestration. This command allows you to retrieve the Access Control List (ACL) rules with stale tokens. A stale token is one that has been revoked or expired but hasn''t been updated in Consul''s cache yet. By using this command, you can ensure your applications continue to function without interruption even when there are delays in syncing the latest ACL rules with Consul.'
        tls-server-name: |-
            [AI] The `consul acl token read --tls-server-name` command is used with Hashicorp's Consul service, an open-source solution for service discovery, configuration, and orchestration. This command retrieves Access Control List (ACL) tokens under the TLS encryption mode, specifically setting the server name for the TLS connection.

            When using Consul with TLS, specifying the `--tls-server-name` flag allows secure communication by providing the expected server's hostname or IP address as part of the connection setup. Combining this with the ACL token read command helps ensure that only authorized users can access and manage the Consul configuration using these tokens.
        token: |-
            [AI] The `consul acl token read --token` command is used with the Consul Access Control List (ACL) tool to retrieve information about an ACL token in the Consul service discovery and configuration platform.

            The `read` subcommand is used to retrieve information, while the `--token` option specifies the specific token to be queried. The command returns details such as the token's ID, policies, and capabilities assigned to it. These details determine what resources and actions a client or service can access in Consul using the specified token.
        token-file: '[AI] The `consul acl token read --token-file` command is used to read Access Control List (ACL) information from Consul, an open-source tool for service discovery, configuration, and orchestration. Specifically, this command reads ACL tokens stored in the given file. The token identifies an authenticated principal that has been granted specific permissions within a Consul datacenter or server. This command helps administrators manage access control policies in their Consul environment.'
