# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: install
description: Install an application or runtime
group: install
flags:
    --app: Look for app with the specified name
    --arch=: Arch to install for
    --bundle: Assume LOCATION is a .flatpak single-file bundle
    --from: Assume LOCATION is a .flatpakref application description
    --gpg-file=: Check bundle signatures with GPG key from FILE (- for stdin)
    --include-debug: Additionally install the debug info for the given refs and their dependencies
    --include-sdk: Additionally install the SDK used to build the given refs
    --installation=: Work on a non-default system-wide installation
    --no-auto-pin: Don't automatically pin explicit installs
    --no-deploy: Don't deploy, only download to local cache
    --no-deps: Don't verify/install runtime dependencies
    --no-pull: Don't pull, only install from local cache
    --no-related: Don't install related refs
    --no-static-deltas: Don't use static deltas
    --noninteractive: Produce minimal output and don't ask questions
    --or-update: Update install if already installed
    --ostree-verbose: Show OSTree debug information
    --reinstall: Uninstall first if already installed
    --runtime: Look for runtime with the specified name
    --sideload-repo=: Use this local repo for sideloads
    --subpath=: Only install this subpath
    --system: Work on the system-wide installation (default)
    -h, --help: Show help options
    -u, --user: Work on the user installation
    -v, --verbose: Show debug information, -vv for more detail
    -y, --assumeyes: Automatically answer yes for all questions
documentation:
    command: '[AI] `flatpak install` is a command used in the Flatpak package manager for Linux systems. It''s used to download, verify, and install a Flatpak application package and its dependencies from the Flatpak remote repositories or from local files. The package is installed as a sandboxed application with its own runtime environment, ensuring better isolation and security compared to traditional methods like apt-get or yum.'
    flag:
        app: '[AI] `flatpak install --app` is a command used in the Flatpak packaging system for Linux distributions. It installs a precompiled application package, which includes its dependencies and runtime environment, into the Flatpak sandboxed environment. This allows for easier and more consistent application deployment and isolation from the rest of the system. The `--app` flag specifies that only the application and not any system-wide components or settings should be installed.'
        arch: '[AI] The `flatpak install --arch` command is used to install a Flatpak application package on a Linux system, specifying the target architecture. The "--arch" option allows you to specify the architecture of the package you want to install, such as "x86_64" or "aarch64". This is particularly useful when managing multiple systems with different architectures. The Flatpak runtime and installation process will automatically handle any required dependencies and run-time environment for the installed application based on the specified architecture.'
        assumeyes: '[AI] `flatpak install --assumeyes` is a command used in the Flatpak package management system to install a software application without asking for user confirmation before proceeding. The `--assumeyes` flag allows the installation to continue even if it would normally prompt for user approval, assuming that the user intends to approve the actions being taken. It can be useful when automating system configuration or installing trusted applications from known sources. However, using this flag indiscriminately can introduce potential security risks by installing unverified software without explicit user consent.'
        bundle: '[AI] `flatpak install --bundle` is a command used in the Flatpak package manager for Linux distributions to install an application bundle along with all its dependencies. The "--bundle" option specifies that the given package file contains both the application and its required dependencies, creating a self-contained unit that can be easily deployed and run across different systems without worrying about dependency conflicts. This command simplifies the installation process by handling both the application and its dependencies in one go.'
        from: |-
            [AI] `flatpak install --from` is a command used in Flatpak, a software deployment and package management system for Linux. This command is utilized to install an application package from a local file or a remote URL instead of using the default repositories.

            When you use `--from`, followed by the path to a local Flatpak manifest file (ending with .flatpak-manifest) or a URL, Flatpak will download and install the application directly from that source, bypassing any checks against the default remote repositories. It's useful for installing applications not distributed through official channels or for debugging purposes.
        gpg-file: '[AI] `flatpak install --gpg-file` is a command used in the Flatpak packaging system to install a software application. The `--gpg-file` option specifies a GPG key file, which is required when the software being installed is signed with that particular key. This command authenticates the software using the specified GPG key and then proceeds to download and install the application along with its dependencies. It''s an essential security feature for verifying the origin and integrity of the software packages in Flatpak.'
        help: |-
            [AI] `flatpak install` is a command used in the Flatpak packaging system to install new applications or runtimes. The `--help` option provides information about how to use this command effectively. It displays detailed usage instructions, including available options and their descriptions. For example:

            ```
            Usage: flatpak install [OPTIONS] [--user|--system] REMOTE [REMOTE...] [REF]...

            Install remote applications or runtimes.

            Options:
              --user           Install to the user installation (default)
              --system         Install to the system installation
              --no-confirm      Don't prompt for confirmation before installing anything
              --validatesignatures
                               Validate signatures of the packages before installing them.
                               Requires a valid GPG keyring for Flatpak to work with this
                               option.
              --remote=REMOTE   Install from a given remote instead of the default one.
              --branch=BRANCH    Install from a specific branch in a remote repository.
              --repo-add REPOFILE
                               Add a new remote or update an existing one with a file.
              --force           Force installation of applications that are already installed.
              --update          Upgrade all installed applications and runtimes to the latest versions.
              --list            List installed applications and runtimes, but don't install or upgrade anything.
              --verbose         Show progress messages and other detailed information.
              --help            Show this help message and exit.

            The REMOTE argument can be a remote name or URL. The REF arguments are application IDs
            or runtime names within the remote repository.
            ```
        include-debug: '[AI] `flatpak install --include-debug` is a command used with the Flatpak package manager to install a Flatpak application and its associated debug symbols. Debug symbols are additional files that enable developers to use debugging tools, such as gdb, to inspect the application''s code while it runs, which can be helpful for troubleshooting and fixing issues within the application. Including these debug symbols during installation makes it easier for developers to diagnose problems.'
        include-sdk: '[AI] `flatpak install` is a command used in the Flatpak application packaging system to install new applications. The `--include-sdk` option is a flag that instructs Flatpak to also install the software development kit (SDK) associated with the application being installed. This allows developers to build and run applications using the same version of libraries, dependencies, and tools as the installed application itself, ensuring a consistent environment for development.'
        installation: '[AI] The `flatpak install` command is used to install software packages in the Flatpak universal packaging system. The `--installation` option specifies the target installation to use for the operation. With this option, you can choose to install the package globally for all users on a system (default), or for a specific user account. For example, `flatpak install --installation=per-user <package_name>` would install the package locally for the current user only.'
        no-auto-pin: |-
            [AI] `flatpak install --no-auto-pin` is a command used in the Flatpak package manager for Linux distributions. This command installs a specific Flatpak application, but with the added flag `--no-auto-pin`, it disables the automatic pinning of the application's repository.

            Automatic pinning refers to Flatpak's ability to manage repositories and their associated branches automatically. This means that when you install an application, Flatpak will by default choose the most stable branch (usually the latest stable release) from its repository. However, with `--no-auto-pin`, you explicitly tell Flatpak not to manage the repository for this installation and instead use a specific version or branch that you specify.

            In summary, using `flatpak install --no-auto-pin` allows you to manually select the version of an application from its repository rather than relying on Flatpak's automatic version management.
        no-deploy: '[AI] `flatpak install --no-deploy` is a command used with the Flatpak package manager for Linux systems. This command is used to download and prepare a Flatpak package for installation, but it does not actually install or deploy the application or runtime. Instead, the packages are saved in the local Flatpak repository for later use or manual deployment with other commands. The `--no-deploy` option keeps the installed applications isolated from the system and prevents them from starting automatically at boot.'
        no-deps: '[AI] `flatpak install --no-deps` is a command used in the Flatpak package management system for Linux distributions. The `--no-deps` option instructs Flatpak to install the specified application without installing any of its dependencies. This means that only the application itself will be installed, not any additional packages required to run it. This can be useful if you want to minimize the number of packages installed on your system or if you have dependency conflicts and need to manually manage dependencies.'
        no-pull: '[AI] `flatpak install --no-pull` is a command used in Flatpak, a software deployment and packaging system for Linux. This command instructs Flatpak to install a specific application or runtime without pulling the latest version from the remote repositories if there''s an existing local copy available. In other words, it skips the automatic updating process and uses the cached copy instead. This can save time and network resources when installing multiple applications with the same version.'
        no-related: '[AI] The `flatpak install` command with the `--no-related` option is used when installing a Flatpak application. This option prevents Flatpak from also installing any related dependencies that may come bundled with the application by default, allowing for more fine-grained control over what gets installed on your system. In other words, it installs only the specified app without its related dependencies.'
        no-static-deltas: '[AI] `flatpak install --no-static-deltas` is a command used in the Flatpak package manager for Linux systems. The option `--no-static-deltas` disables the download and installation of static deltas. Static deltas are small files that contain the differences between two Flatpak builds, allowing for incremental updates instead of a full download. By disabling this feature, the entire new Flatpak application bundle is downloaded and installed instead.'
        noninteractive: '[AI] `flatpak install --noninteractive` is a command used in the Flatpak package management system to install software without user interaction. The `--noninteractive` flag suppresses the interactive prompts that would normally appear during installation, allowing scripts or automated processes to install packages silently and with minimal intervention. This can be useful for system administrators or continuous integration environments where multiple installations need to be performed in a consistent manner.'
        or-update: |-
            [AI] `flatpak install --or-update` is a command used in the Flatpak package management system for Linux distributions. This command performs two actions:

            1. Installs: If the specified application or runtime is not already installed, it installs the new package.
            2. Updates: If the application or runtime is already installed, it updates the existing installation to the latest version available in the Flatpak repository.

            This command is useful for managing applications and runtimes using Flatpak. It ensures that you have the most recent versions while maintaining a consistent package management system.
        ostree-verbose: '[AI] `flatpak install --ostree-verbose` is a command used in the Flatpak package management system to install a new application. The `--ostree-verbose` option increases the level of output given during the installation process, providing more detailed information about the files being installed and their locations within the system''s OSTree filesystem. This can be helpful for debugging or understanding the inner workings of Flatpak and OSTree.'
        reinstall: '[AI] `flatpak install --reinstall` is a command used in Flatpak, a software deployment and packaging system for Linux desktops. This command is used to reinstall a previously installed Flatpak application or runtime, effectively replacing the existing installation with a fresh one. By doing this, any changes made to the application''s files outside of its container are lost, as they are replaced by the original files from the distribution repository. It can be useful for resolving issues with applications or runtimes that may have become corrupted over time.'
        runtime: '[AI] `flatpak install --runtime` is a command used in the Flatpak package management system for Linux distributions. The `--runtime` option installs or updates a specific runtime, which is a self-contained environment that includes a set of libraries and runtimes required to run applications packaged with Flatpak. This command allows users to ensure their systems have the necessary dependencies installed and up-to-date for running Flatpak applications.'
        sideload-repo: '[AI] `flatpak install --sideload-repo` is a command used in the Flatpak package manager for Linux systems. This command allows you to register a remote repository, typically created by developers, that contains unofficial or custom-built packages. By running `--sideload-repo` followed by the URL of the repository, you are adding it to your Flatpak system so you can install applications from it using the regular `install` command. Note that sideloaded repos may contain packages that haven''t been reviewed or verified by the official Flatpak repository, and using them carries potential risks, such as security vulnerabilities or software incompatibilities.'
        subpath: '[AI] `flatpak install --subpath` is a command used in the Flatpak package manager for Linux systems. This command is used to install a Flatpak application bundle, but instead of installing it in the default system-wide location, it allows you to specify a custom sub-path under an existing installation. This can be useful when managing multiple versions or installations of the same application side by side. The `--subpath` option takes the path as its argument. For example: `flatpak install --subpath=/myapp myapp.flatpak`.'
        system: '[AI] `flatpak install --system` is a command used in Flatpak, a popular application packaging and deployment system for Linux. This command is utilized to install a Flatpak application package globally, meaning it will be accessible to all users on the system. The `--system` flag instructs Flatpak to install the application in the system scope, as opposed to the user scope, which affects where the application''s data and configuration files are stored. This command is particularly useful when you want to ensure that an application is available for all users on a multi-user system or if the application needs to run with administrator privileges.'
        user: '[AI] `flatpak install --user` is a command used in the Flatpak package management system for Linux distributions. This command installs and registers a Flatpak application or runtime for a specific user, rather than system-wide. When using this command, Flatpak will look for applications in the user''s local Flatpak repository (usually ~/.local/share/flatpak) before checking the system repository. This command does not require root access and is often used when installing applications for personal use.'
        verbose: '[AI] `flatpak install --verbose` is a command used in the Flatpak package management system. The `--verbose` option increases the amount of output provided during installation, displaying detailed information about each step of the process, including progress updates, log messages, and error notifications. This can be helpful for troubleshooting or understanding complex installations.'
