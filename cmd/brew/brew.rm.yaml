# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: rm
description: Uninstall a <formula> or <cask>
flags:
    --cask: Treat all named arguments as casks.
    --debug: Display any debugging information.
    --force: Delete all installed versions of <formula>. Uninstall even if <cask> is not installed, overwrite existing files and ignore errors when removing files.
    --formula: Treat all named arguments as formulae.
    --help: Show this message.
    --ignore-dependencies: Don't fail uninstall, even if <formula> is a dependency of any installed formulae.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
    --zap: Remove all files associated with a <cask>. *May remove files which are shared between applications.*
documentation:
    command: '[AI] `brew rm` is a command used in Homebrew, a popular package manager for macOS. This command is used to remove (rm) installed packages or dependencies from your system. When you run `brew rm <package-name>`, it will first uninstall the specified package and then delete any associated files and directories. It''s important to note that using this command permanently deletes the software, so ensure you have a backup if necessary before executing the command.'
    flag:
        cask: '[AI] `brew rm --cask` is a command used in Homebrew, a popular package manager for macOS. The `--cask` option specifies that you want to uninstall Cask applications, which are graphical user interface (GUI) apps and helper tools packaged with Homebrew. The `rm` (remove) command does the actual deletion of the installed Cask packages along with their associated files and symlinks.'
        debug: '[AI] The command `brew rm --debug` is used in Homebrew, a popular package manager for macOS, to remove an installed package while providing detailed debugging information about the removal process. The `--debug` option enhances the standard output with additional diagnostic messages that can help identify and resolve potential issues during package removal. When you run this command followed by the name of a package or formula, Homebrew will attempt to delete it along with any associated files and dependencies while displaying comprehensive debugging information for each step of the process.'
        force: '[AI] `brew rm --force` is a command used in Homebrew, a popular package manager for macOS. The `rm` part of the command stands for "remove," and it''s followed by the `--force` option. This forces the removal of a package and all its files without asking for confirmation. If the package or file does not exist, nothing will happen. Use this command with caution as it permanently deletes files and cannot be undone.'
        formula: '[AI] The command `brew rm --formula <name>` is used with Homebrew, a popular package manager for macOS. This command removes the formula for the specified Homebrew-installed application or utility from the system. The `--formula` flag is optional but recommended as it ensures that only the formula (i.e., the metadata) is removed and not the installed application itself. If you want to remove both the installed application and the formula, use `brew uninstall` instead.'
        help: |-
            [AI] The command `brew rm --help` is used with Homebrew, a popular package manager for macOS. The `rm` part of this command refers to the 'remove' utility, and it is being invoked via Homebrew (`brew`) instead of directly using the terminal.

            When you run `brew rm --help`, Homebrew will display detailed information about the `rm` command with options specifically configured for Homebrew packages. Here are some important points:

            - The `--help` flag displays detailed help for the given command, including a brief summary, usage examples, and an exhaustive list of available options.
            - In this context, the `rm` command is used to remove (delete) Homebrew installed packages from your system.
            - Some common options include:
              - `--force` or `-f`: Force removal of a package without confirming with the user.
              - `--ignore-installed` or `-N`: Only list packages that were installed but not currently in use.
            - When using Homebrew, it's recommended to uninstall packages using `brew` instead of manually deleting installation directories to ensure proper cleanup and maintain a clean environment.
        ignore-dependencies: |-
            [AI] The `brew rm --ignore-dependencies` command is used with Homebrew, a popular package manager for macOS. This command is used to forcefully remove an installed package along with its dependencies from the system, ignoring any dependency conflicts that might arise.

            The `--ignore-dependencies` flag allows the removal of a package and its related files even if it has other packages depending on it. It overrides the default behavior of Homebrew that prevents removing packages that have dependencies linked to them. Use this command with caution, as removing important dependencies could lead to system instability or unexpected issues.
        quiet: '[AI] `brew rm --quiet` is a command used in Homebrew, a popular package manager for macOS. This command quietly removes (deletes) the specified packages and their associated files from your system. The `--quiet` option suppresses informational messages during execution.'
        verbose: '[AI] The command `brew rm --verbose` is used in Homebrew, a popular package manager for macOS. This command with the `--verbose` option tells Homebrew to be more talkative during the removal of packages or files. When you run this command followed by a list of packages or directories to delete, Homebrew will print out each file or directory it is deleting, along with the path and any other relevant information before actually removing it. This helps users have a clearer understanding of what Homebrew is about to delete, providing more transparency in the process.'
        zap: '[AI] The command `brew rm --zap` is used with Homebrew, a popular package manager for macOS. This command is used to remove both the installed application and its associated data stored in the Homebrew cellar. The `--zap` option ensures that all related files, including symlinks and cask installations, are deleted completely. It''s useful when you want to completely uninstall a package along with its dependencies and configuration files.'
