# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: to-base32
description: convert a hash to base-32 representation
flags:
    --debug: Set the logging verbosity level to 'debug'
    --log-format=: Set the format of log output
    --quiet: Decrease the logging verbosity level
    --type=: hash algorithm
    -L, --print-build-logs: Print full build logs on standard error
    -v, --verbose: Increase the logging verbosity level
documentation:
    command: '[AI] `nix-hash` is a utility from Nix, a package manager for Linux and other systems. The `to-base32` argument is an option that specifies the output format for hashes generated by `nix-hash`. This command generates a hash of data using a specific algorithm, such as SHA-256 or SHA-1, and then converts the resulting raw binary hash to base32. The output is a string of 32 characters, which is often used in system configuration files for easier reading and comparison.'
    flag:
        debug: |-
            [AI] The `nix-hash` command is a tool from the Nix Package Manager used to compute and display hashes of files or outputs of other commands. The `to-base32` option converts the hash output to base32 format for easier representation and handling, especially when working with binary data or in contexts where space is limited.

            The `--debug` flag enables verbose debug output. It provides more information during the execution of the command, including detailed steps taken, inputs and outputs, and any errors that might occur. This can help in understanding complex hash calculations or troubleshooting issues with the command itself.
        log-format: '[AI] The `nix-hash` command is a utility from NixOS that calculates and prints hashes for given files or directories. The specific flag `--to-base32` specifies that the output should be in base32 format, which is a radix-32 representation of hash values. The flag `--log-format` determines how the output should be logged or formatted for further processing. It''s usually followed by a string containing placeholders for the hash and other metadata. For instance, `%h` stands for the raw hash value. Commonly used formats include `%h %f` (raw hash and file path), `%H %F` (uppercase hash and file path), and `%h %p %t %s` (hash, percentage progress, path, and size).'
        print-build-logs: '[AI] `nix-hash` is a command-line utility provided by Nix, a package manager for Linux and other systems. The command `nix-hash to-base32 --print-build-logs` generates a base32 hash of the standard input using Nix''s built-in hashing algorithms and outputs the base32 hash followed by the build logs associated with the computation of that hash. This can be useful for verifying the integrity of builds or comparing the output of different builds.'
        quiet: '[AI] The command `nix-hash` with the option `--to-base32` and `--quiet` generates a Base32 encoded representation of a file''s cryptographic hash value, displaying only the encoded output without any additional messages or verbose information.'
        type: '[AI] `nix-hash` is a command-line utility provided by Nix, a package manager for Linux and other systems. The `--type` option specifies the type of hash algorithm to use, such as SHA1 or SHA256. The `to-base32` argument indicates that the output of the hash should be converted and printed in base32 format. This can be useful for representing hashes in environments with limited character sets, such as URLs or QR codes.'
        verbose: '[AI] The command `nix-hash` is a utility from Nix packaging system used to compute cryptographic hashes of files or directories. The option `--to-base32` specifies that the output should be in base32 format instead of the default hexadecimal. The `--verbose` flag increases the amount of output displayed during the hash calculation, providing more detailed information about the progress and result. So, this command calculates a cryptographic hash using Nix-hash tool and displays the result in base32 format with verbose output.'
