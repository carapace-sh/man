# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Add dependencies to the project
group: general
flags:
    --cached: Reuse the highest version already used somewhere within the project
    --json: Format the output as an NDJSON stream
    --mode=: Change what artifacts installs generate
    --prefer-dev: Add / upgrade a package to a dev dependency
    -C, --caret: Use the ^ semver modifier on the resolved range
    -D, --dev: Add a package as a dev dependency
    -E, --exact: Don't use any semver modifier on the resolved range
    -O, --optional: Add / upgrade a package to an optional regular / peer dependency
    -P, --peer: Add a package as a peer dependency
    -T, --tilde: Use the ~ semver modifier on the resolved range
    -i, --interactive: Reuse the specified package from other workspaces in the project
documentation:
    command: '[AI] `yarn add` is a command used in Yarn package manager for adding new dependencies to your project. When you run this command followed by the names of the packages you want to install, Yarn will download and save the required files in your `node_modules` folder. Additionally, it updates the `package.json` file with the added dependencies and their correct versions.'
    flag:
        cached: '[AI] `yarn add --cached` is a command used in Yarn, a popular package manager for JavaScript projects. This command allows installing new packages and their dependencies without downloading them again if they are already present in the local cache. The cached flag ensures that Yarn will use the existing cached versions instead of redownloading them from the registry. It can help save time and network bandwidth, especially when working on large projects or when performing frequent installations.'
        caret: '[AI] `yarn add --caret` is a command used with Yarn package manager for installing packages in a project. The `--caret` option specifies that the exact version of a package is not required, and instead, the latest patch version or any later version will be installed. For example, if you run `yarn add express --save --save-dev --caret`, Yarn will install the latest stable patch release of Express, as well as its dependencies, if specified.'
        dev: '[AI] `yarn add --dev` is a command used with Yarn package manager in JavaScript projects. It installs specified packages as new dependencies in the `node_modules` folder, marked as development dependencies in the `package.json` file under `devDependencies`. These packages are typically libraries or tools required for building and testing the application, not included in the production bundle.'
        exact: '[AI] `yarn add --exact` is a command used in Yarn package manager for installing specific versions of dependencies mentioned in the package.json file. The `--exact` flag ensures that the exact version specified in the dependency is installed, instead of letting Yarn choose the latest compatible version. This can be useful when dealing with multiple projects or libraries having different requirements for the same dependency.'
        interactive: '[AI] `yarn add --interactive` is a command used in Yarn package manager for adding new dependencies to your project with an interactive prompt. Instead of automatically installing the dependencies mentioned in a file like `package.json`, this command will ask for confirmation before each installation, allowing you to review and approve each dependency addition, making it useful for managing dependencies manually and ensuring that only intended packages are added.'
        json: '[AI] `yarn add --json` is a command used with Yarn package manager in JavaScript projects for installing multiple packages specified in a JSON file, instead of adding them one by one using `yarn add <package-name>`. The `--json` option allows passing the list of packages as an array in a JSON format within a given file, typically a `package.json` or `yarn.lock`, making it more convenient for managing larger sets of dependencies.'
        mode: '[AI] The `yarn add --mode production` or `development` command is used with Yarn, a popular package manager for JavaScript projects. It installs specified packages into the project and sets their default engine versions. The `--mode` option specifies whether the packages should be installed for production or development use. For production, it minimizes bundle size and optimizes performance; for development, it prioritizes convenience with features like hot module reloading and source maps.'
        optional: '[AI] The `yarn add --optional` command is a feature in Yarn package manager that allows installing dependencies with the `save-dev`, `save-exact`, or `save-production` flags, but without adding them to the `package.json` file''s `dependencies` section. This can be useful when you want to try out a library without committing to using it in your project long-term, or if the dependency has peer dependencies that your project already satisfies. The optional dependencies are installed only during the build process and not during normal installation or testing.'
        peer: '[AI] `yarn add --peer` is a command used in Yarn package manager for managing dependencies of a project. The `--peer` option specifies that the dependency is a peer dependency, meaning it is an optional dependency that other libraries or modules in the project may require, but not your main application. This means that when you install this dependency, it will be added to the `peerDependencies` section of your `package.json` file instead of the `dependencies` section. This allows other projects that depend on yours to install this specific peer dependency if needed.'
        prefer-dev: '[AI] `yarn add --prefer-dev` is a command used with Yarn package manager for installing npm packages as devDependencies instead of regular dependencies in a Node.js project. DevDependencies are packages that are required only during development and not for running the application in production, such as testing frameworks or build tools. By using `--prefer-dev` option, you ensure that these packages will be marked correctly as devDependencies when added to your project''s package.json file.'
        tilde: '[AI] `yarn add --tilde` is a command used in Yarn package manager for installing packages with specific semver ranges. The `--tilde` flag indicates that only the patch version will be updated, meaning the latest minor and major versions will remain unchanged. For example, if you have version 1.0.1 installed, `yarn add --tilde my-package` will update to the latest patch release of version 1.x.xx.'
