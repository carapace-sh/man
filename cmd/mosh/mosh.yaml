# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: mosh
description: mobile shell with roaming and intelligent local echo
flags:
    --bind-server=: ask the server to reply from an IP address
    --client=: mosh client on local machine
    --experimental-remote-ip=: select the method for discovering the remote IP address
    --family=: 'net family '
    --help: show help message
    --local: run mosh-server locally without using ssh
    --no-init: do not send terminal initialization string
    --no-ssh-pty: do not allocate a pseudo tty on ssh connection
    --predict=: predict setting
    --server=: mosh server on remote machine
    --ssh=: ssh command to run when setting up session
    --version: version and copyright information
    "-4": use IPv4 only
    "-6": use IPv6 only
    -a: use local echo even on fast links
    -n: never use local echo
    -p, --port=: server-side UDP port or range
documentation:
    command: '[AI] MOSH, or The Mobile Shell, is a replacement for SSH (Secure Shell) designed to provide better connectivity and user experience for remote terminal sessions. It''s specifically optimized for intermittent connections common in mobile environments like Wi-Fi hotspots and cellular data networks. Key features include automated reconnection, seamless roaming across access points, and a modern, intuitive UI with support for mouse and keyboard input.'
    flag:
        "4": '[AI] `mosh` is a remote terminal application that provides interactive sessions over SSH. The `-4` flag is an option used with `mosh`. It sets `MOSH_VERBOSE` to 4, which increases the amount of debug output generated during the connection process. This can be helpful for troubleshooting connectivity issues or other problems with the Mosh client and server.'
        "6": '[AI] `mosh -6` is a command in the Mosh (Mobile Shell) terminal emulator, which specifies the version number to connect to. The number `-6` indicates connecting to Mosh version 2.6 or later. When used in a command line interface, it instructs the client to use this specified version when establishing a connection with a Mosh server.'
        a: '[AI] `mosh -a` is a command-line option for the Mosh (Mobile Shell) terminal emulator. The `-a` flag stands for "automount," which enables automatic discovery and attachment of running Mosh sessions. When used, Mosh will attempt to reconnect to existing sessions if their servers are reachable, allowing users to seamlessly switch between multiple sessions. This is particularly useful for remote work environments where multiple servers need to be accessed frequently.'
        bind-server: '[AI] The `mosh --bind-server` flag is used in the Mobile Shell (Mosh) application to specify that the local system should act as a Mosh server, rather than a client. When this option is used, Mosh listens for incoming connections on its default port (6000), allowing remote clients to connect and interact with the local terminal session. This can be useful in scenarios where multiple users need to access a single machine from different locations, or when using SSH keys for authentication isn''t feasible. Essentially, `mosh --bind-server` allows you to create an always-on, secure, interactive terminal session that can be accessed remotely.'
        client: '[AI] `mosh --client` is a command-line argument used with the Mosh (Mobile Shell) terminal emulator. This option sets Mosh to act as a client, connecting to a remote Mosh server. The client initiates the connection and sends input to the server for processing. The server then sends the output back to the client, providing an interactive shell session between two devices over SSH or other supported transport mechanisms.'
        experimental-remote-ip: '[AI] `mosh` is a popular SSH-alternative for interactive shell sessions, providing features like automatic reconnection and seamless roaming. The option `--experimental-remote-ip` enables an experimental feature that allows Mosh to bind input and output to network interfaces other than the default one (usually eth0 or wlan0). This can be useful in certain networking environments where multiple interfaces are involved, such as VMs or containerized applications. However, this feature may not be stable and could contain bugs, so it is considered experimental.'
        family: '[AI] The `mosh` command with the `--mode family` flag is used to configure Mosh (Mobile Shell) to operate in "family mode." In this mode, Mosh allows multiple users to connect and share a single terminal session, enabling real-time collaboration on terminal tasks. This can be particularly useful for teams working on projects together or for providing remote support to other users. The flag setting is passed when starting the Mosh server with `mosh --mode family` followed by the server address and port number.'
        help: '[AI] `mosh --help` displays a brief help message about Mosh (the Mobile Shell), an interactive SSH client for Unix-based systems. It allows roaming, resuming previous sessions, and provides smart features like automatic reconnection and keyboard-driven interaction. Usage is typically: `mosh user@host:/path`. More advanced usage can be found with the extended help: `mosh --help longform`.'
        local: '[AI] `mosh --local` is a command-line option used with the Mosh (Mobile Shell) terminal emulator. It specifies that Mosh should be run in local mode, meaning the client and server are running on the same machine. This can be useful for using Mosh features like automatic reconnection and keyboard-based resizing without the need to establish a network connection between different devices. In summary, `mosh --local` is used when both the client and server are running on the same system.'
        "n": '[AI] `mosh` is a terminal emulator that enables interactive roaming sessions over SSH. The option `-n` used with `mosh` stands for "no-window" mode. In this mode, Mosh doesn''t create any new windows when starting a session and instead uses the existing terminal window. This can be useful in scripts or automated processes where you don''t want new windows to open.'
        no-init: '[AI] The `mosh --no-init` flag is used with the Mosh (Mobile Shell) terminal application. It instructs Mosh not to run any initialization files upon connecting to a server. This can be useful when troubleshooting issues or if you want a clean shell environment without any custom configurations being loaded.'
        no-ssh-pty: |-
            [AI] `mosh` is a modern SSH client that offers advanced features like automatic reconnection, seamless roaming, and TTY support. The option `--no-ssh-pty` disables the allocation of a new pseudo-terminal (PTY) when opening an Mosh session.

            A PTY provides an independent terminal window with its own input and output streams, allowing for better text editing capabilities and more efficient handling of graphical applications. However, using a PTY may not be necessary or desired in certain situations, such as running automated scripts or processes that don't require user interaction.

            By disabling the PTY allocation with `--no-ssh-pty`, you can save resources on both the client and server sides, since Mosh won't need to allocate and manage a new terminal session. Additionally, some systems may not support the creation of new PTys, making this option necessary for connecting to such systems.
        port: '[AI] `mosh` is a remote terminal application that provides interactive, encrypted sessions over SSH. The `--port` option is used to specify an alternative port number for Mosh to listen and accept connections on instead of the default port number 60000. This can be useful in cases where the default port might conflict with other services running on the system or when trying to connect through a firewall that blocks the default port.'
        predict: '[AI] `mosh --predict` is a feature in the Mosh terminal emulator that enables predictive text input based on previous keys typed. This can make typing faster and more efficient, especially for long or complex commands. The flag enables this functionality by enabling the predictive text model locally on the client-side.'
        server: '[AI] The `mosh --server` command is used to start a Mosh server, which is a terminal emulator that enables interactive, encrypted sessions over the SSH protocol. When run with this command, Mosh listens for incoming connections on its default port (60000). Once connected, Mosh provides various features like automatic reconnection, seamless roaming, and tap-to-click support that enhance the terminal experience compared to traditional SSH sessions.'
        ssh: '[AI] `mosh` is a popular SSH client for interactive shell sessions in Unix-based systems. The `--ssh` option is used with Mosh to specify that it should behave like OpenSSH''s SSH client, using standard SSH keys and protocol features. This means that your `~/.ssh/config` file will be respected, and Mosh will work seamlessly with your existing SSH setup. In summary, using the `mosh --ssh` command tells Mosh to emulate OpenSSH''s functionality when establishing a connection to a remote server.'
        version: '[AI] `mosh --version` is a command used in the Mosh terminal emulator to display the current version of the installed Mosh software. When executed, it prints out the version number, compilation options, and other relevant information such as the Git hash and build date. This can be useful for checking which version of Mosh is being used and for troubleshooting any potential compatibility issues with servers or other components.'
