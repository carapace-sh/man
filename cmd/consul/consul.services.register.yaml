# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: register
description: Register services with the local agent
flags:
    --address=: Address of the service to register for arg-based registration.
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --id=: ID of the service to register for arg-based registration.
    --kind=: The services 'kind'
    --meta=: Metadata to set on the service, formatted as key=value.
    --name=: Name of the service to register for arg-based registration.
    --namespace=: Specifies the namespace to query.
    --port=: Port of the service to register for arg-based registration.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tag=: Tag to add to the service.
    --tagged-address=: Tagged address to set on the service, formatted as key=value.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] `consul services register` is a command used in Hashicorp''s Consul service discovery and configuration management tool. This command is used to register a new service instance with Consul, making it discoverable by other services or applications that are configured to use Consul for service discovery. The command takes arguments specifying the name of the service, the address and port where the service is running, as well as an optional ID and tag key-value pairs. For example: `consul services register my-service localhost 8080 -id my-id -tag app=my-app`.'
    flag:
        address: '[AI] The `flag "--address"` used with the `consul services register` command in Consul is used to specify the IP address and port number of the Consul server or agent that will register the service. For example, `consul services register my-service localhost:8080 --address 192.168.1.1:8500` registers the "my-service" with Consul, and the Consul server or agent running at `192.168.1.1:8500` will handle the registration.'
        ca-file: '[AI] `consul services register --ca-file` is a command used with the Consul service discovery and configuration tool. The option `--ca-file` specifies the path to a file containing the PEM-encoded CA (Certifying Authority) certificate, which will be used for SSL/TLS verification when registering services with the Consul server. This helps ensure secure communication between the client registering the service and the Consul server.'
        ca-path: '[AI] The `--ca-path` flag in the Consul services command is used to specify the path to a directory containing the CA (Certificate Authority) certificates for secure communication between Consul agents and servers. These certificates are essential for ensuring the authenticity and encryption of data exchanged between different Consul components during service registration, discovery, and other interactions. The flag ensures that Consul uses trusted certificates while establishing connections in a secure environment.'
        client-cert: |-
            [AI] The `consul services register --client-cert` command is used in Consul, a connectivity and service discovery tool. This specific command is for registering a service with Consul using a client certificate for secure communication.

            When you run this command, Consul registers the specified service under its defined name and port. The `--client-cert` flag indicates that the registration will be done using a client SSL certificate, which adds an extra layer of security to communications between services in a Consul cluster. This way, only services with valid certificates can register themselves or communicate with other services.
        client-key: '[AI] The `flag "consul services register --client-id"` in Consul is used to specify a unique identifier (also known as client key) for an agent or application when registering it with the Consul service registry. This flag helps distinguish between different agents or applications, enabling proper management and discovery of services within a Consul cluster.'
        datacenter: '[AI] The `consul services register --datacenter` command is used with the Consul service discovery and configuration management tool. This command registers a service with Consul, specifying which datacenter the service belongs to. This allows Consul to efficiently manage and distribute service information among its members in different datacenters for effective service discovery and load balancing.'
        http-addr: '[AI] The `flag "--http-addr"` in the Consul service registration command is used to specify the HTTP address and port number where Consul should listen for client requests. This allows you to configure Consul to use a specific IP address and port when registering services, enabling communication between your application and the Consul agent or server. For example, `consul services register my-service --http-addr 0.0.0.0:8500` registers "my-service" with Consul listening on all available network interfaces (0.0.0.0) and port 8500 for HTTP requests.'
        id: '[AI] The `consul services register --id <service-name>` command is used to register a new service in HashiCorp Consul, which is a service discovery and configuration management tool. The `--id` option sets the unique identifier for this service registration. This command can be run from a Consul client, such as an application or a machine, that wishes to register itself with the Consul server. After registration, other services and applications can use Consul to discover and communicate with this registered service using its assigned ID.'
        kind: '[AI] The `consul services register --kind` command is used with Consul, a popular service discovery and configuration management tool. This command registers a specific service type (defined by the `--kind` flag) with Consul''s service registry. This allows other applications to discover and communicate with this registered service through Consul. The registered service will then be available for consumption by other applications in the same Consul cluster or over the internet, depending on your configuration.'
        meta: '[AI] The `consul services register --meta` command is used with the Consul service discovery and configuration management tool. It allows you to register a new service instance or update an existing one''s metadata in the Consul HTTP API. The `--meta` flag specifies that the given key-value pairs should be added or updated as custom metadata associated with the service registration. This can be useful for storing additional data, such as tags, notes, or other custom information related to the service.'
        name: '[AI] The `consul services register` command in Hashicorp Consul is used to register a service instance with the Consul service discovery server. The `--name` option specifies the name or ID of the service being registered. For example, `consul services register myservice --name myservice-instance`. This tells Consul that an instance of the "myservice" service with the name "myservice-instance" is now available and should be discoverable by other services or clients using Consul''s service discovery functionality.'
        namespace: '[AI] The `flag "consul services register --namespace"` is used in Consul, a popular service registration and discovery tool. This flag is used to specify the Kubernetes namespace when registering services with Consul from within that environment. By providing a namespace value, you ensure that only services running in that particular namespace will be registered and discovered by Consul.'
        port: '[AI] The `consul service register --port` command is used with Consul, a popular service discovery and configuration management tool. This specific command registers a service with the Consul server, specifying the service name and the listening port number for that service. This enables other services or applications to locate and communicate with the registered service using the Consul platform.'
        stale: '[AI] The `consul services register --stale` command is used in Consul, a service discovery and configuration management tool. This command allows you to register a service instance with Consul even if it fails the health check or its address has changed but is still reachable. In other words, it registers a "stale" service instance that might not be healthy or up-to-date, but is still available in the network. Using this command can help ensure that services are discovered and available in the Consul catalog even during failures or changes. However, it should be used with caution as stale services may have negative impacts on the overall system health and performance.'
        tag: '[AI] The `consul services register --tag` command is used with Consul, a modern service discovery and configuration management tool. This specific command is for registering a service with the Consul catalog using a specified tag. When you run this command, it sends metadata about the registered service along with the tag to Consul, which allows filtering and selecting services based on their tags in various use cases such as load balancing or configuring clients.'
        tagged-address: |-
            [AI] The `flag "consul services register --tagged-address"` is used with Consul, a popular service discovery and configuration management tool. This flag allows registering a service with Consul using a specific tagged IP address or hostname in addition to the default service name.

            For instance, when running a service, instead of just registering it with `consul register`, you can use `consul register --tagged-address my_service:123.45.67.89:my_port my_id`. Here, `my_service` is the name of the service, and `my_id` is an optional unique identifier. The tagged address `123.45.67.89:my_port` helps Consul associate that IP address/port combination with the registered service when querying for it later.

            This feature becomes particularly useful in microservices architectures, where services may run on multiple instances with different IP addresses and ports, but they still need to be accessible under a consistent name or tag.
        tls-server-name: '[AI] The `--tls-server-name` flag in the Consul Services command registers a service with a specific TLS server name during the registration of an agent or client with the Consul service discovery and configuration platform. This name is used to configure the secure communication between the service and Consul, ensuring encryption and verification of the identity of both parties during data exchange.'
        token: '[AI] The `flag "consul services register --token"` is used in Consul, a Connect and Service Mesh platform by Hashicorp, to register a service with the Consul agent using a token for authentication. The token ensures that only authorized clients can register or deregister services. By providing the token, the command `consul services register` will add or update the service registration in the Consul catalog.'
        token-file: '[AI] `flag "consul services register --token-file"` is used with Consul, a Connect and Service Discovery tool by Hashicorp. This flag instructs Consul to register a service using a file that contains an access token. The token must be obtained through other means, such as the Consul CLI or API. By providing the `--token-file` flag along with the path to the token file during registration, Consul can securely add and manage services in its discovery catalog.'
