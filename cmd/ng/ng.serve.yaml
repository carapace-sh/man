# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: serve
description: Builds and serves your app, rebuilding on file changes
flags:
    --allowed-hosts=: List of hosts that are allowed to access the dev server.
    --browser-target=: A browser builder target to serve
    --disable-host-check: Don't verify connected clients are part of allowed hosts.
    --hmr: Enable hot module replacement.
    --host=: Host to listen on.
    --live-reload: Whether to reload the page on change, using live-reload.
    --poll=: Enable and define the file watching poll time period in milliseconds.
    --port=: Port to listen on.
    --proxy-config=: Proxy configuration file.
    --public-host=: The URL that the browser client should use to connect to the development server.
    --serve-path=: The pathname where the app will be served.
    --ssl: Serve using HTTPS.
    --ssl-cert=: SSL certificate to use for serving HTTPS.
    --ssl-key=: SSL key to use for serving HTTPS.
    --verbose: Adds more details to output logging.
    --watch: Rebuild on change.
    -c, --configuration=: One or more named builder configurations
    -o, --open: Opens the url in default browser.
documentation:
    command: '[AI] `ng serve` is a command used in Angular CLI (Angular Command Line Interface) projects. It starts a development server for an Angular application, compiles and bundles the TypeScript files, and serves the resulting HTML, CSS, and JavaScript files using webpack. This allows you to develop and test changes in real-time with hot module replacement. When run, it watches for file modifications and automatically updates the browser.'
    flag:
        allowed-hosts: '[AI] `ng serve --allowed-hosts` is a command used in Angular, a popular front-end JavaScript framework, to start a development server with specified allowed hosts. The `--allowed-hosts` option restricts the server to only serve content to specific domains or IP addresses. This is useful for development environments where multiple projects are being run on different ports or machines, and you want to ensure that each project can only be accessed from its intended source. By default, Angular''s development server does not have any host restrictions, which could potentially lead to security vulnerabilities if a project is accidentally exposed to unintended users. The allowed hosts are configured by providing a comma-separated list of domains or IP addresses: `ng serve --allowed-hosts=localhost:4200,192.168.1.1`.'
        browser-target: '[AI] The `ng serve --browser-target` command is used in Angular projects to specify the target browser or environment when running the development server using Angular CLI (Command Line Interface). By default, it runs in JIT (Just-In-Time) compilation mode for all major browsers. However, if you want to optimize builds for a specific browser or run tests in a headless browser, you can use the `--browser-target` option followed by the desired target, such as `chrome`, `edge`, `firefox`, `safari`, or `headless-chrome`. This command helps ensure better compatibility and performance with different browsers during development.'
        configuration: '[AI] `ng serve --configuration` is a command used in Angular CLI (Angular Command Line Interface) to start the development server with a specific configuration. The `--configuration` option allows you to specify a name of an existing or custom configuration file located in the `angular.json` file''s `"configurations"` array. This command is useful when you have multiple configurations for different environments or use cases, allowing you to easily switch between them without manually modifying the configuration files.'
        disable-host-check: '[AI] The `ng serve --disable-host-check` command is used in Angular development to start a local development server with Angular CLI (Command Line Interface). By adding `--disable-host-check` flag, you''re disabling the built-in security feature of Angular that checks for matching hosted site URLs and local environment URLs before starting the development server. This flag is particularly useful when you are working on a project that uses custom web servers like IIS or Apache, where the default local development server address might not match the production address. However, disabling this security check comes with potential risks, such as serving your application over an insecure connection if not handled carefully.'
        hmr: '[AI] `ng serve --hmr` is a command used in Angular projects with the Angular CLI. It starts a development server (`ng serve`) and enables Hot Module Replacement (HMR) via the `--hmr` flag. HMR allows Angular components to be updated in real-time without requiring a full page refresh, speeding up development and reducing interruptions during testing or coding changes.'
        host: '[AI] `ng serve --host` is a command used in Angular projects with the Angular CLI (Command Line Interface). This command starts a development server using Angular''s built-in server, and also sets the host to be something other than localhost. For example, you might use `--host 192.168.0.100` to develop on an IP address instead of localhost. The main purpose is for development when working on a network or multi-machine project. It simplifies the communication between team members by accessing each other''s work through their respective host IP addresses.'
        live-reload: '[AI] `ng serve --live-reload` is a command used in Angular projects built with the Angular CLI. It starts a development server that hot reloads the application when source code changes are detected. The `--live-reload` option enables live reloading in the browser. This allows developers to see the impact of their code changes instantly without having to manually refresh the page. It''s particularly useful for iterative development and quick testing.'
        open: '[AI] `ng serve --open` is a command used in Angular projects built with the Angular CLI. It starts a development server and opens the application automatically in a web browser. The development server hot-reloads the changes, allowing for real-time feedback during development. This command is useful for quickly launching and testing an Angular application without having to manually open a browser each time.'
        poll: '[AI] `ng serve --poll` is a command used in Angular CLI (Angular Command Line Interface) to start a development server with live reloading. The `--poll` flag enables automatic file watching and detection of changes in source files, triggering the compiler to rebuild and update the browser automatically without requiring manual refresh. This streamlines the development process by providing real-time feedback when modifying code.'
        port: '[AI] `ng serve --port` is a command used in Angular projects with the Angular CLI (Command Line Interface). This command starts a development server and builds the application in watch mode, meaning any changes made to source files will trigger a rebuild. The `--port` option specifies which port number the development server should listen on by default (usually 4200), but you can customize it with any available port number for easier access or if another service is using the default one.'
        proxy-config: '[AI] `ng serve --proxy-config` is a command used in Angular projects built with Angular CLI. It starts a development server using Angular''s `ng serve` command, but with an extra option: `--proxy-config`. This option allows you to configure a proxy for your Angular application during development. Proxying requests through this configuration enables working on APIs hosted at different base URLs or behind authentication, improving the developer experience. The actual proxy configurations are defined in a JSON file called `proxy.conf.json` placed in the root of your Angular project.'
        public-host: '[AI] `ng serve --public-host` is a command used in Angular, a popular JavaScript framework for building web applications. This specific command launches the Angular CLI (Command Line Interface) in serve mode with an added flag `--public-host`. The `--public-host` flag is used to specify the host address where the development server will listen and serve the application files. By default, the Angular CLI sets the public host to "localhost:4200", but using this flag allows you to set a custom IP address or domain name if needed for development or testing purposes on your local machine.'
        serve-path: '[AI] `ng serve --serve-path` is a command used in Angular, a popular JavaScript framework for building web applications. This command starts the Angular development server and serves the application files from a specified path, which is defined by the `--serve-path` option. By default, this path is set to `/`, meaning that the served files are accessible under the root URL. However, you can provide a different path as an argument to serve the files under a custom URL prefix. For instance, running `ng serve --serve-path=myapp` will serve the application files under the `/myapp` URL prefix. This feature comes in handy when deploying Angular applications to a web server that requires a specific directory structure or prefix for served files.'
        ssl: '[AI] `ng serve --ssl` is a command used in Angular projects built with the Angular CLI. This command starts a development server with SSL (Secure Sockets Layer) encryption enabled. The `--ssl` option generates an SSL certificate using Let''s Encrypt for local development, ensuring that data transferred between the browser and the server is encrypted.'
        ssl-cert: '[AI] `ng serve --ssl-cert` is a command used with Angular CLI (Angular Command Line Interface) to start a local development server for an Angular application with SSL encryption. The `--ssl-cert` option requires a valid SSL certificate file in PEM or P12 format as an argument, which is then used by the server to secure communications between the browser and the application over HTTPS. This command helps ensure secure data transmission during development and can be useful for testing Angular applications that require SSL certification.'
        ssl-key: '[AI] `ng serve --ssl-key` is a command used in Angular CLI for serving an Angular application with SSL (Secure Sockets Layer) encryption using a custom SSL key file instead of the default self-signed certificate. The SSL key file should be provided as an argument to the command and must be located in the filesystem accessible by the user running the command. This helps secure the communication between the client and server during development, improving security and preparing the application for deployment in a production environment with SSL enabled.'
        verbose: '[AI] `ng serve --verbose` is a command used in Angular projects built with the Angular CLI. This command starts a development server for serving and compiling Angular applications in real time. The `--verbose` option increases the output of the CLI, providing more detailed information about the build process including logs from webpack and other build tasks. It''s useful for debugging and understanding the compilation flow.'
        watch: '[AI] `ng serve --watch` is a command used in Angular projects built with the Angular CLI. It starts a development server and serves the application at `http://localhost:4200`. The `--watch` flag enables live reloading, which automatically updates the browser when changes are detected in source code files. This allows for faster development cycles without having to manually build and serve the application each time a change is made.'
