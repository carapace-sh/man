# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Add a Gitea login
flags:
    --no-version-check: Do not check version of Gitea instance
    --password=: Password for basic auth (will create token)
    --user=: User for basic auth (will create token)
    -a, --ssh-agent-key=: Use SSH public key or SSH fingerprint to login (needs a running ssh-agent with ssh key loaded)
    -c, --ssh-agent-principal=: Use SSH certificate with specified principal to login (needs a running ssh-agent with certificate loaded)
    -i, --insecure: Disable TLS verification
    -n, --name=: Login name
    -s, --ssh-key=: Path to a SSH key/certificate to use, overrides auto-discovery
    -t, --token=: Access token. Can be obtained from Settings > Applications
    -u, --url=: Server URL
documentation:
    command: '[AI] The `tea logins add` command is used in the Tea (Terminal Emulation Administration) tool to create a new login profile. This profile stores the configuration settings for connecting to a specific remote server or application using SSH or other protocols. It allows you to save different sets of credentials, keys, and connection parameters for multiple sessions, making it easier to switch between them.'
    flag:
        insecure: '[AI] The `--insecure` flag in the `tealogin add` command for TeaSDK (Tea''s Development Kit) is used to bypass certificate verification during the addition of a new TLS (Transport Layer Security) certificate. This can be useful when connecting to servers with self-signed or untrusted certificates, but it introduces security risks as it disables the validation of the certificate''s authenticity and encryption strength. Use this flag with caution and only when necessary.'
        name: '[AI] The `--name` option in the `tealogin add` command for the Tea project is used to specify a descriptive name for the new OAuth2 client or service account being added. This name will be displayed in the Tea UI and helps distinguish between different clients or accounts. For example, `--name my-app-dev` could be used when adding an OAuth2 client for your development environment.'
        no-version-check: '[AI] The `--no-version-check` option in Tea''s `login` command disables version checking during the login process. Tea is a CLI tool for managing Kubernetes clusters using Tanzu and other cloud platforms. When you run `tea login`, it attempts to connect to a specific cluster by authenticating with the cluster provider. With `--no-version-check` enabled, Tea skips version compatibility checks between your local Tea installation and the remote cluster''s API server. This can be useful in certain scenarios where you want to quickly log in without being hindered by version mismatches. However, it is generally recommended to keep version checking enabled to ensure a stable and secure connection.'
        password: '[AI] The `--password` option under the `add` command in Tea-CLI (Command Line Interface) is used to provide a password or secret key when creating a new authentication token or configuration for Tea. This flag ensures that the sensitive information is encrypted and securely stored within Tea''s config file, instead of being passed as plain text in the command line. Using this option adds an extra layer of security to your Tea setup.'
        ssh-agent-key: '[AI] The `--ssh-agent-key` flag is used with the `tea login` command in the Tea API client for GitHub. It allows you to authenticate using an SSH key stored in your system''s SSH agent instead of interactively entering a password or using a personal access token. By providing this flag, Tea will automatically attempt to forward your SSH keys during the login process, enabling seamless authentication with your GitHub repositories.'
        ssh-agent-principal: '[AI] The `--ssh-agent-principal` flag is a command-line option for the `tee-cli` tool, specifically used in the `tealogin` subcommand. This flag enables using an SSH agent principal name when authenticating with an SSH server via `tealogin`. It allows managing and storing SSH key pairs and their associated metadata (like alias names and labels) in a Teaproxy server, providing an additional layer of security and centralized access control.'
        ssh-key: '[AI] `tealogin add` is a command from the Teaspoon (Teasplum) SSH key manager for Ansible. The `--ssh-key` option specifies the path to an existing SSH key file to be added to the Teaspoon keyring. This allows Ansible to use this key when connecting to remote hosts via SSH without having to manually copy the key into each host''s authorized_keys file.'
        token: '[AI] The `--token` option under the `add` command in Tea-cli (Tea CLI) is used to authenticate and register a new token for an OAuth2-based authentication flow. When you run `tea login add --token`, it prompts you to provide the access token, refresh token, and other required information. After providing this information, Tea saves the details securely in your local configuration file, allowing you to easily authenticate with the specified account across various Tea CLI commands.'
        url: '[AI] The `tea logs add --url` command is used in the Tea (Temporal Eventually Consistent Application) tool for managing event logs. This command is for adding a new event log with a specified URL. The URL argument is where the event logs are stored, which could be an HTTP or HTTPS endpoint or a file path. In summary, it adds a new log source in Tea using the provided URL.'
        user: '[AI] The `--user` option under `tee-logs` or `tealogs` command in Teapot, a logging library for HTTP servers written in Rust, is used to specify a username when creating or updating access logs. This flag helps identify user requests in the logs, enhancing security and monitoring capabilities.'
