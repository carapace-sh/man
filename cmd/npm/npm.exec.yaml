# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: exec
description: Run a command from a local or remote npm package
flags:
    --call=: optional companion option
    --package=: package to install for exec
    --workspaces: Enable running a command in the context fo all workspaces
    -w, --workspace*=: Enable running a command in the context of the given workspace
documentation:
    command: |-
        [AI] `npm exec` is a command used in Node.js projects with npm (Node Package Manager) to execute a script or a command located in a specified package's `scripts` section, directly from the command line without having to build and run the application first. It searches for the given script in the current project's `node_modules` directory and executes it. The syntax is:

        ```bash
        npm exec <package-name>:<script-name>
        ```
    flag:
        call: |-
            [AI] The `npm exec --call` command is a feature in npm (Node Package Manager) that allows executing a script or a command from another package as if it was a part of the current project's scripts. The syntax is as follows:

            `npx <package-name> -- <args...>` or `npm exec --call <package-name> <script> [-- <args...>]`

            The difference between the two methods is that with `npx`, npm downloads and runs the specified package locally without having to install it as a dev dependency. On the other hand, `npm exec --call` utilizes an already installed package within your project's node_modules directory. Both methods are useful for various scenarios, such as running commands from libraries or dependencies that aren't part of your main project.

            In summary, `npm exec --call <package-name> <script> [-- <args...>]` is a command that runs a script or command from an installed package within the current Node.js project.
        package: '[AI] The `npm exec` command is a utility provided by Node Package Manager (npm) for executing scripts or commands that are located in an npm package''s `scripts` section. The `--package` option specifies the particular package whose script to run. For instance, `npm exec --package my-package script-name` will execute the script named `script-name` from the specified `my-package`.'
        workspace: '[AI] `npm exec --workspace` is a command used in Node.js projects managed with npm (Node Package Manager). This command executes a script or a command in the current workspace, which refers to the root directory of the npm project where package.json file exists. It searches for the specified script within the packages defined in the current workspace''s package.json files and runs it using the installed dependencies. It is useful when working on multi-package projects where you want to execute a command or script across all packages while keeping the context of your project.'
        workspaces: '[AI] `npm run-script exec --workspaces` is a command used in npm (Node Package Manager) for managing multiple packages within a single project, also known as monorepos. The `--workspaces` flag tells npm to search for scripts across all the workspaces defined in package.json files instead of just the current one. The `exec` script is then run against the specified target workspace or script. This helps in running tasks that need to access dependencies and configurations from multiple packages within the monorepo.'
