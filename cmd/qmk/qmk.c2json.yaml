# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: c2json
description: Creates a keymap.json from a keymap.c file
flags:
    --keyboard=: The keyboard's name
    --keymap=: The keymap's name
    --no-cpp: Do not use 'cpp' on keymap.c
    -h, --help: show this help message and exit
    -o, --output=: File to write to
    -q, --quiet: Quiet mode, only output error messages
documentation:
    command: '[AI] `qmk c2json` is a command used in the QMK keyboard firmware project to convert Keyboard Firmware Configuration files (with .c extension) into JSON format using C2JSON tool. This conversion enables easier manipulation and portability of the configuration data across different platforms.'
    flag:
        help: |-
            [AI] `qmk c2json` is a command-line tool from the QMK keyboard firmware project. The `--help` flag is used to display detailed information about how to use this command. Here's a brief summary of the help output:

            - `c2json`: This is the subcommand name, which stands for "C to JSON."
            - It converts QMK firmware source code files (written in C language) into JSON format.
            - The output JSON represents the keyboard layout and configuration data.
            - The `--help` flag displays usage information, including valid options:
              - `-f, --files <file_list>`: Specify a list of source files to process.
              - `-o, --output <output_file>`: Set the output file name and path for the JSON data.
              - Other options include specifying the keymap or MCU (microcontroller unit) type.

            The primary use case is to generate a JSON representation of QMK code for further processing, such as importing it into other software tools like QMK Toolbox or KeyboardLayoutEditor.
        keyboard: '[AI] The `qmk c2json --keyboard` command is used in the QMK firmware project for creating a JSON representation of a custom keyboard layout. The `c2json` utility converts a QMK keyboard configuration file (written in C) into JSON format, making it easier to share and import the layout into other software or projects.'
        keymap: '[AI] `qmk c2json --keymap` is a command used in the QMK keyboard firmware project. This command converts a specific keymap file from QMK format to JSON format using the `c2json` tool. The `--keymap` option specifies which keymap file to convert. The output is a JSON representation of the keymap, which can be used with other software or tools that support JSON-formatted keymaps.'
        no-cpp: '[AI] `qmk c2json` is a command used in the QMK keyboard firmware project to convert C source code files into JSON format using the C2JSON tool. The `--no-cpp` flag is an option that disables the inclusion of C preprocessor directives (`.h` files) in the generated JSON data. This can be useful when working with external software or tools that don''t support C preprocessor directives and only require the plain keycode and layout information from the QMK source code.'
        output: '[AI] The `qmk c2json --output` command is used in the QMK (Quantum Mechanical Keyboard) firmware project to generate JSON data from C (C programming language) source files. The `c2json` tool converts C code into JSON format, and the `--output` option specifies the output file name. So this command generates a JSON file from one or more specified C files within the QMK project.'
        quiet: '[AI] `qmk c2json` is a command used in the QMK keyboard firmware project to convert Keyboard Firmware (.kmk) files into JSON format using the C language. The `--quiet` option is used to suppress all output from the command, making the terminal or console display blank when the conversion process completes successfully. In other words, this command runs QMK''s Converter for C to JSON quietly without any progress or success messages being displayed.'
