# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: maintenance
description: Run tasks to optimize Git repository data
group: main
documentation:
    command: |-
        [AI] "Git" is a version control system and does not have a built-in command called "git maintenance." Maintenance in Git usually refers to performing various tasks that help keep your Git repositories healthy and efficient over time. These tasks include but are not limited to:

        1. Pruning unreachable objects: Deleting old, unused data from the Git repository to save disk space.
        2. Cleaning up the working directory: Removing unnecessary files or directories that are tracked by Git but not needed in the project.
        3. Updating and applying patches: Applying patches that have been created for bug fixes or new features, either locally or across remote repositories.
        4. Merging branches: Combining changes from different branches to keep your project up-to-date.
        5. Renaming and moving files: Modifying the structure of your project while preserving its version history.
        6. Backing up repositories: Making copies of Git repositories to protect against data loss or to facilitate collaboration.

        To perform these maintenance tasks, you would use a combination of Git commands like `git prune`, `git clean`, `git apply`, `git merge`, `git mv`, and `git clone`. It's essential to be familiar with the Git documentation and best practices when performing maintenance tasks to ensure that you don't inadvertently lose any important data or change the project's history.
