# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: watchgnupg
description: Read and print logs from a socket
flags:
    --force: delete an already existing socket file
    --help: display this help and exit
    --tcp: listen on a TCP port and optionally on a local socket
    --time-only: print only the time; not a full timestamp
    --verbose: enable extra informational output
    --version: print version of the program and exit
documentation:
    command: |-
        [AI] `watchgnupg` is a command-line utility for Unix-based systems, specifically designed to automate the process of decrypting and verifying PGP-encrypted files using GnuPG (GNU Privacy Guard).

        The tool functions by monitoring a specified directory for new encrypted files. When it detects a new file, it automatically processes that file with GnuPG, applying any necessary keys or passphrases to decrypt and verify the data. This can save time and effort compared to manually decrypting each file individually.

        To use `watchgnupg`, simply specify the directory you want to monitor as an argument:

        ```bash
        watchgnupg /path/to/monitoring/directory
        ```

        This command will keep running in the background, continuously scanning for new encrypted files and processing them using GnuPG.
    flag:
        force: '[AI] `watchgnupg --force` is a command in GnuPG (GNU Privacy Guard) used to update and check the keys in the keyring with an enhanced level of persistence. The `--force` option instructs the tool to perform the operation even if there are potential conflicts or issues, such as expired or revoked keys. It''s useful when you need to force an update of your keyring despite these warnings and ensure that GnuPG uses the latest version of the keys for encryption and decryption processes.'
        help: '[AI] `watchgnupg --help` is a command used in Unix-based systems to display help information about the ''watchgnupg'' utility. ''watchgnupg'' is a tool that watches for file changes and runs GnuPG on those files when they are modified. The `--help` option produces a detailed output describing how to use ''watchgnupg'', including available command-line arguments, their meanings, and usage examples.'
        tcp: |-
            [AI] `watchgnupg --tcp` is a command used in GNU Privacy Guard (GPG), a popular free software used for cryptography and digital signatures. This specific command combines two functions: `watch` and `--tcp`.

            The `watch` function monitors files or directories for changes and runs GPG commands on those files automatically whenever a change is detected. For instance, it can be used to reencrypt a file every time it is modified.

            The `--tcp` option enables GPG to communicate over the TCP/IP protocol, allowing remote servers or clients to interact with the local system through secure data transfer channels.

            So, in summary, `watchgnupg --tcp` sets up a monitoring system where GPG commands are automatically run on files whenever they change and allows communication between systems over a secured network connection.
        time-only: '[AI] `watchgnupg --time-only` is a command in GNU Privacy Guard (GPG), a popular cryptography software. The `--time-only` option instructs GPG to display only the expiration and creation dates of the GPG keys it''s checking, without showing any other information like their public or secret key data or trust status. It''s commonly used to quickly check the validity periods of multiple keys with a single command.'
        verbose: '[AI] `watchgnupg --verbose` is a command used in Unix-based systems to monitor and automatically encrypt or decrypt files using GnuPG (GNU Privacy Guard). The `--verbose` option increases the amount of output displayed during the operation, providing more detailed information about the encryption or decryption process. This can be helpful for debugging purposes or for gaining a better understanding of how GnuPG is handling your files.'
        version: '[AI] The `watchgnupg --version` command is used to check the version information of WatchGPG, a tool for automating GnuPG key management tasks. When executed in a terminal or command-line interface, it returns output showing the exact version number of WatchGPG installed on the system, along with any additional build information such as compilation date and operating system.'
