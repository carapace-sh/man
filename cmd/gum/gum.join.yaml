# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: join
description: Join text vertically or horizontally
flags:
    --align=: Text alignment
    --horizontal: Join (potentially multi-line) strings horizontally
    --vertical: Join (potentially multi-line) strings vertically
documentation:
    command: '[AI] The `gum join` command is not a standard Unix or Linux command. It appears to be specific to GUM (GitHub Universe Machine), which is an internal GitHub tool for managing clusters and fleets of machines. This command is likely used to join one or more machines to a specific cluster or fleet managed by GUM. The exact usage and arguments would depend on the specific implementation of GUM in use.'
    flag:
        align: '[AI] The `gum install` command with the `--align` option is used in Git to install and align a specific Git tag or branch with its corresponding upstream branch. It ensures that your local repository is in sync with the remote repository by both installing any missing packages represented by the specified tag or branch, and then adjusting the position of your local branch so it''s aligned (i.e., pointing to the same commit as) its upstream counterpart. This helps maintain a consistent development environment and keeps your local branches up-to-date with their remote counterparts.'
        horizontal: '[AI] `gum join --horizontal` is a command used in Git, specifically with Gum, a Git UI toolkit for building interactive Git interfaces. This command merges branches or commits horizontally, meaning it combines the changes from the source branch into the current branch as new commits, preserving the commit history but creating fast-forward merges. The --horizontal option arranges these new commits in a horizontal sequence when visualizing the merge in Git log or other Git tools.'
        vertical: '[AI] The `gum join --vertical` command is used in Git, specifically with the Git Unified Modeling Language (Gum) tool. This command merges two or more branches vertically or fast-forward merges them, meaning that it brings the target branch up to date with the source branch. In other words, it applies all commits of the source branch that aren''t already present in the target branch. The `--vertical` option merges the changes in a vertical stack, which makes it easier to view and resolve any potential merge conflicts.'
