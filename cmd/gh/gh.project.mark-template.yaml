# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: mark-template [<number>]
description: Mark a project as a template
flags:
    --format=: 'Output format: {json}'
    --owner=: Login of the org owner.
    --undo: Unmark the project as a template.
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] The `gh project mark-template` command is a GitHub CLI (Command Line Interface) command used to create a new project based on an existing one, called a template, in your GitHub account. This command helps you quickly initialize and configure a new project using the file structures, configurations, and dependencies of an existing project as a base. By providing the name and optionally other details for your new project, you can save time and effort in setting up your project from scratch.'
    flag:
        format: |-
            [AI] The `gh project mark-template --format` command is a GitHub CLI (Command Line Interface) command used to create or update a project template in GitHub.

            Here's a breakdown of the components:

            1. `gh`: This is the name of the command line tool for interacting with GitHub.
            2. `project`: This is the subcommand that allows managing projects within an organization.
            3. `mark-template`: This is the specific action that creates or updates a project template. It's named after the "template" resource used in GitHub Projects.
            4. `--format`: This option specifies how to format the output of the command, which could be YAML, JSON, or another format, depending on your preference and use case.
        jq: '[AI] `gh project mark-template` is a GitHub CLI command that interacts with GitHub Projects. The `--jq` option is used to pass a query to the JavaScript Object Notation (JSON) processor, JQ, for filtering and transforming JSON data output from the command. Together, this command configuration marks an issue or an issue template in a GitHub project using the specified query to select the items to be marked.'
        owner: '[AI] The `gh project mark-template` command is a GitHub CLI (Command Line Interface) command used to create or update a GitHub Project template. The `--owner` option specifies the GitHub username of the account that owns the new or existing repository containing the template. This flag is necessary to identify which team''s templates will be affected by the command. For instance, if you want to create a template for your organization "exampleorg", you should use `gh project mark-template --owner exampleorg`.'
        template: |-
            [AI] The `gh` command with the argument `project mark-template --template` is a shorthand GitHub action to create a new project in your GitHub repository using a provided Markdown template file. Here's a quick breakdown:

            - `gh`: This is the name of the Command Line Interface (CLI) tool for interacting with GitHub.
            - `project`: It specifies that you want to create or manage a GitHub Project.
            - `mark-template`: This indicates that you'll be using a markdown template for your project.
            - `--template`: It takes the path to the template file as an argument, which will serve as the foundation for your new project.

            In simpler terms, this command sets up a new GitHub Project based on a Markdown template.
        undo: '[AI] The `gh project mark-template --undo` command is used in GitHub''s Git CLI (git-hub) to undo the application of a template to a GitHub Project. When a template is applied to a project, it merges the files from the template repository into the project directory. This command reverses that action by removing the merged files and restoring the previous state of the project.'
