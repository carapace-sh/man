# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: upgrade [OPTIONS] PLUGIN [REMOTE]
description: Upgrade an existing plugin
flags:
    --disable-content-trust: Skip image verification
    --grant-all-permissions: Grant all permissions necessary to run the plugin
    --skip-remote-check: Do not check if specified remote plugin matches existing plugin image
documentation:
    command: '[AI] `docker plugin upgrade` is a command used to update an installed Docker plugin to its latest version. The plugin must be manually identified by specifying its name and the repository from which the updated version will be pulled. For example, `docker plugin upgrade <plugin-name> <repository>`. This command does not come with Docker out of the box, it requires Docker Engine version 17.06 or later and the Docker Plugin Registry to be accessible.'
    flag:
        disable-content-trust: '[AI] The `docker plugin upgrade --disable-content-trust` command is used to upgrade Docker plugins while temporarily disabling content trust. Content trust is a security feature in Docker that ensures the authenticity and integrity of images and other artifacts before they are run in a container. Disabling content trust allows the upgrade process to proceed without interruption, even if there are issues with the signature verification of the plugins being upgraded. It''s important to note that disabling content trust can introduce potential security risks, so it should only be used when necessary and with caution. Once the plugin upgrade is complete, content trust should be re-enabled to ensure the continued security of your Docker environment.'
        grant-all-permissions: |-
            [AI] The `docker plugin upgrade` command is used to update Docker plugins, which are extensions that add new features or functionality to the Docker platform. The `--grant-all-permissions` flag is an optional argument that grants the updated plugin with all possible permissions in the Docker daemon.

            When you install a plugin, it is given a default set of permissions. However, some plugins may require additional permissions to function properly. With the `--grant-all-permissions` flag, you are allowing the plugin to have full access to the Docker daemon, bypassing the default permission model.

            It's important to note that granting all permissions to a plugin can potentially introduce security risks. Therefore, this command should be used with caution and only when necessary. Always ensure that you trust the plugin developer and verify the plugin's authenticity before granting it full access to your Docker environment.
        skip-remote-check: '[AI] The `docker plugin upgrade --skip-remote-check` command is used to upgrade a Docker plugin without first checking if there is an updated version available remotely. This can be useful when you want to apply a pre-downloaded or locally built plugin update, bypassing the remote check to save time and avoid potential network issues. Keep in mind that this approach may result in installing an outdated or incompatible plugin version if one exists on the remote registry.'
