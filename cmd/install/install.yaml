# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: install
description: copy files and set attributes
flags:
    --backup=: make a backup of each existing destination file
    --context=: like -Z, or if CTX is specified then set the
    --help: display this help and exit
    --preserve-context: preserve SELinux security context
    --strip-program=: program used to strip binaries
    --version: output version information and exit
    -C, --compare: compare each pair of source and destination files, and
    -D: create all leading components of DEST except the last,
    -S, --suffix=: override the usual backup suffix
    -T, --no-target-directory: treat DEST as a normal file
    -Z: set SELinux security context of destination
    -b: like --backup but does not accept an argument
    -c: (ignored)
    -d, --directory: treat all arguments as directory names; create all
    -g, --group=: set group ownership, instead of process' current group
    -m, --mode=: set permission mode (as in chmod), instead of rwxr-xr-x
    -o, --owner=: set ownership (super-user only)
    -p, --preserve-timestamps: apply access/modification times of SOURCE files
    -s, --strip: strip symbol tables
    -t, --target-directory=: copy all SOURCE arguments into DIRECTORY
    -v, --verbose: print the name of each directory as it is created
documentation:
    command: |-
        [AI] The `install` command is used to install or extract software packages, depending on the specific implementation. In Debian-based Linux distributions like Ubuntu, it is typically a front-end for the Advanced Packaging Tool (APT), while in Red Hat-based systems such as CentOS, it's an alias for `yum` or `dnf`. It downloads necessary packages from repositories and installs them along with their dependencies. The basic syntax for using `install` varies between package managers, but generally includes specifying the package name followed by options for installation location, dependency resolution, and other features. For example, in Debian-based distributions, you might use:

        ```bash
        sudo apt install <package-name>
        ```

        In Red Hat-based systems, you could use:

        ```bash
        sudo yum/dnf install <package-name>
        ```
    flag:
        D: '[AI] The `install -D` command is a Unix utility used to install or copy files from a source directory to a destination directory, while preserving the file''s modification time, access permissions, and ownership. The `-D` option ensures that the destination file''s timestamps are replaced with those of the source file.'
        Z: '[AI] The `install` command with the option `-Z` is used in Unix-based systems for file permision restoration or setting the file permissions to their original state after a copy or move operation. It preserves the original file''s symbolic links, permissions, and ownership metadata. In summary, it ensures that files are installed with their original attributes instead of default ones.'
        b: '[AI] The `install` command with the `-b` option is used in Unix-based systems to copy files or directories from a source location to a specific destination, preserving their file permissions and ownerships. The `-b` flag stands for "preserve special files'' attributes," which means it also retains device files (character and block devices), symbolic links, and other types of special files with unchanged attributes at the destination. This is particularly useful when installing software packages or moving critical system files between different locations while maintaining their original access and modification permissions.'
        backup: '[AI] The `--backup` option in the `install` command is used to create a backup of the existing package or configuration files before installing new ones. This helps prevent accidental overwriting of important data during the installation process. If a backup already exists, using this flag will prompt for confirmation before overwriting it.'
        c: '[AI] The `install` command with the `-c` option in Unix-based systems is used for copying and installing files while preserving their original permissions, ownerships, and timestamps. In other words, it performs a "copy-install" operation. It''s commonly used when copying files from a source build tree to the installation directory during package building or software development. The source file is replaced at the destination if it already exists, retaining all metadata (permissions, ownerships, and timestamps).'
        compare: '[AI] The `flag --compare` in Git is used to perform a diff or comparison of two tree-ish objects (commits, trees, or blobs) in Git. It prints the differences between the files in the first and second commits, trees, or blobs. This flag is typically used with commands like `git diff`, `git log --patch`, or `git checkout` to see the changes made between different versions before applying them. The output of this command shows the added, modified, and deleted lines for each file.'
        context: '[AI] The `--context` flag in Helm (a package manager for Kubernetes) is used to specify which Helm release context should be used when installing or upgrading a chart. A release context holds the values and other configuration data for a specific deployment of a Helm chart. Using this flag allows you to manage multiple environments or configurations for the same chart with distinct settings, making it easier to maintain consistency and minimize errors across your Kubernetes clusters.'
        directory: '[AI] The `--directory` option in the `install` command of some package managers, such as npm or yarn, specifies that the installation should be done as a tree-shakeable, single-entry bundle in a node module format, with the root directory being the output directory. This means that only the required files for the dependency will be installed, reducing the overall size of the project and making it easier to manage dependencies. The flag is useful when building larger projects or managing dependencies more efficiently.'
        group: '[AI] The `--group` option in the context of the npm (Node Package Manager) `install` command is used to specify a Unix group to which the ownership of installed packages'' directories and files will be set. This can be useful for managing permissions and access to packages in multi-user environments or for security reasons. The syntax is: `npm install --group <group_name>`.'
        help: '[AI] The `--help` option that can be passed with the `install` command in various tools and packages is used to display comprehensive help information about how to use that specific `install` command. It provides details on the available arguments, options, and usage examples for the command. In essence, it assists users in understanding how to correctly install a software package or configure a system with minimal confusion.'
        mode: '[AI] The `--mode` option in the `install` command is used to specify the file permissions that should be set after installing a package or copying a file. It takes one argument, which is a symbolic mode expression as defined by the chmod command. For example, `--mode=755` sets the file permissions to read, write and execute for the owner, and read and execute for others. This can be useful when you want to ensure specific file permissions during package installation or copying files between systems with different default file permission settings.'
        no-target-directory: '[AI] The `--no-target-directory` flag is used with install commands in packages managed by package managers like npm or yarn. This flag instructs the package manager not to create a new directory before installing the package. Instead, it will install the package directly into the current project''s node\_modules folder or the specified path if provided during installation. In other words, it skips creating an additional target directory for the installation.'
        owner: '[AI] The `install` command in various package management systems, such as npm or Homebrew, is used to install software and its associated files on a system. The `--owner` option sets the Unix user who will be the owner of the installed files and directories. This can be useful when managing permissions for multiple users on a system. For example, `install --owner myuser` would set "myuser" as the owner of all installed files and directories.'
        preserve-context: '[AI] `npm install --preserve-context` is a command used in Node.js package management with npm. This flag instructs npm to install packages while preserving the existing `node_modules` directory and its structure, rather than replacing it entirely. It''s helpful when working on projects that have customized dependencies or development dependencies. By using this flag, you can keep your project-specific modifications in the installed packages without affecting the original package versions.'
        preserve-timestamps: '[AI] `npm install --preserve-timestamps` is a command used with Node Package Manager (npm) for installing packages in a project while keeping the original modification timestamps of files in place. This means that after installing or updating packages, the last modified time stamps of existing project files remain unchanged. It''s particularly useful when working with Git and wanting to commit only new code instead of the changes made by npm updates.'
        strip: '[AI] The `--strip` flag is used with linkers in various programming languages, including C and C++, when building executables or shared libraries. It instructs the linker to remove (or "strip") unused symbols and debugging information from the resulting binary file, reducing its size and improving performance. This can be useful for deploying production code or distributing libraries.'
        strip-program: '[AI] The `--strip-program` flag is a option used with the `install` command in Unix-based systems for managing files and directories. It is used to remove (or strip) the program name from the executable file during installation, resulting in a stripped binary. This can help reduce the size of the installed package by eliminating unnecessary data, such as the original program name. It''s useful when distributing or deploying software where saving space is important.'
        suffix: '[AI] The `--suffix` option in the `install` command is used to specify a string that will be appended to the names of files being installed. This can be useful when installing files into directories where existing files with similar names already exist, and you want to avoid overwriting them. For example, if you use `install --suffix=_old myfile /usr/local`, then the file `myfile` will be installed as `myfile_old`. This way, you can keep a backup of the old file while installing the new one.'
        target-directory: '[AI] The `--target-directory` option is used with the `npm install` command in Node.js package management system. It specifies a directory where installed packages will be placed, instead of the default `node_modules` folder within the current project directory. This can be useful when managing multiple projects or when working with shared libraries across different projects.'
        verbose: '[AI] The `--verbose` flag is a command-line option used in various programs, including package managers like npm or Homebrew. It increases the level of output or details provided during the execution of an install command. With this flag, users can receive more comprehensive feedback about the progress and status of the installation process. This can help diagnose issues, understand what steps are being taken, and provide a clearer picture of the overall process.'
        version: '[AI] The `--version` option in the `install` command is used to install a specific version of a package or software, rather than the latest version. This allows for more precise control over which version is being installed, and can be useful when dealing with dependencies or avoiding potential issues with newer versions. For example, if you want to install a particular version of Node.js that you know works well with your project, you can use `npm install node@v14.15.0` to install that specific version instead of the latest one.'
