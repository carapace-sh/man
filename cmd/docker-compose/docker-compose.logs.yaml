# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: logs [OPTIONS] [SERVICE...]
description: View output from containers
flags:
    --index=: index of the container if service has multiple replicas
    --no-color: Produce monochrome output.
    --no-log-prefix: Don't print prefix in logs.
    --since=: Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)
    --until=: Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)
    -f, --follow: Follow log output.
    -n, --tail=: Number of lines to show from the end of the logs for each container.
    -t, --timestamps: Show timestamps.
documentation:
    command: '[AI] `docker-compose logs` is a command used to view real-time output from the containers defined in a `docker-compose.yml` file. When executed, it displays the logs of all services, or the logs of a specific service if specified with an argument. These logs include both standard output (stdout) and standard error (stderr) streams for the containers. It is helpful in monitoring applications, troubleshooting issues, and observing container behavior in real-time.'
    flag:
        follow: '[AI] `docker-compose logs --follow` is a command used with Docker Compose to view real-time logging output from one or more services in a running compose application. The `--follow` option keeps the output stream open and updates it in real-time as new log messages are written. This is useful for monitoring logs in real-time during development, debugging, or for observing the progress of long-running tasks.'
        index: '[AI] `docker-compose logs --index` is a command used with Docker Compose to view the logs of containers in a defined order based on their creation time (the index). This command displays the logs of all services and containers in a single output stream, with the newest logs (latest container) being displayed first, followed by older logs from previously created containers. The flag `--index` sorts and numbers the log streams to help identify which logs correspond to which container.'
        no-color: '[AI] `docker-compose logs --no-color` is a command used to view real-time logs of Docker containers running in a Compose application. The `--no-color` option disables the use of colored output in the logs, which some users may find preferable for certain terminal environments or personal preferences. The command displays the logs of all services in the order they were started and can be followed by the name of a specific service to filter the output.'
        no-log-prefix: '[AI] The `docker-compose logs` command with the `--no-log-prefix` option displays the output of the container logs without appending a prefix, such as the container name or timestamp, to each log line. This can be useful when analyzing logs from multiple containers and wanting to process them further using other tools.'
        since: '[AI] The `docker-compose logs --since` command is used to display the logs of one or more services in a Docker Compose file, filtering the output to show only the logs generated since a specified timestamp. For instance, `docker-compose logs --since 1h` would display the logs produced by the services within the last hour. This can be helpful for troubleshooting issues or following the progress of ongoing tasks.'
        tail: '[AI] `docker-compose logs --tail` is a command used with Docker Compose to view the logs of one or more containers in real time. The `--tail` option specifies the number of log lines to display, starting from the most recent ones. By default, it shows the last 10 lines, but you can customize this number. This command is useful for monitoring container output and troubleshooting issues in real time.'
        timestamps: '[AI] `docker-compose logs --timestamps` is a command used with Docker Compose to view real-time log output from services in a container. The `--timestamps` option adds timestamp information to each log line, making it easier to follow the sequence of events as they occur. This can be helpful when dealing with multiple containers or services and wanting to understand which logs correspond to which time in the application''s execution.'
        until: '[AI] `docker-compose logs --until` is a command used with Docker Compose to view the logs of one or more containers in a project, filtering the output to show only the logs generated since a specified point in time. The `--until` option followed by a date or a relative time string (e.g., "1h" for one hour ago) is used to set the filtering criteria for the log output.'
