# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: kotlin
description: run Kotlin programs, scripts or REPL
flags:
    -D?: Set a system JVM property
    -J?: Pass an option directly to JVM
    -X?: Pass -X argument to the compiler
    -classpath=: Paths where to find user class files
    -compiler-path: Kotlin compiler classpath for compiling script or expression or running REPL
    -e, --expression=: Evaluates the expression and prints the result
    -h, --help: Print a synopsis of options
    -howtorun=: How to run the supplied command with arguments
    -no-reflect: Don't include Kotlin reflection implementation into classpath
    -no-stdlib: Don't include Kotlin standard library into classpath
    -version: Display Kotlin version
documentation:
    command: '[AI] "Kotlin" is a modern, statically-typed programming language developed by JetBrains. It runs on the JVM (Java Virtual Machine) and is interoperable with Java. Kotlin offers concise syntax, type inference, extension functions, and other advanced features that make it efficient for developing applications, particularly for Android development.'
    flag:
        D: '[AI] The `-D` option is used with the Kotlin compiler (`kotlinc`) to define a system property or pass a command-line argument to the compiled code. When using this flag, you provide a key-value pair, for example: `-DmyProperty=true`. In the compiled code, you can access this value through `System.properties["myProperty"]`.'
        J: '[AI] The `-J` flag in Kotlin is used to specify the Java Virtual Machine (JVM) arguments when running a Kotlin script or application. It allows passing various options to influence the JVM''s behavior during execution. For example, you could use it to set heap size, garbage collector algorithm, or other JVM-specific configurations. The argument value should be provided as a string in quotes after the flag. Example: `kotlin myProgram.kt -J "-Xmx512M -XX:+UseG1GC"`'
        X: '[AI] The `-X` option is a command-line flag used with the Kotlin compiler (`kotlinc`). It is followed by a specific argument to enable certain advanced features or experiments in the compiler. For instance, `-Xcoroutines` enables support for the Kotlin coroutines library or `-XbootClassPath` allows setting an additional classpath for the bootstrap classes. The exact meaning and usage depend on the specific argument passed after `-X`.'
        classpath: '[AI] `kotlin -classpath` is a command-line option used with the Kotlin compiler (kotlinc). It specifies the classpaths for external libraries or modules to be included during compilation. In other words, it tells the compiler where to find the necessary classes and dependencies needed to build the project. The classpath can consist of multiple directories, JAR files, or IDE-specific configurations. For example, `kotlin -classpath /path/to/library.jar MyProject.kt` will compile `MyProject.kt` using the classes from the specified library.'
        compiler-path: '[AI] The `-compilerPath` flag in Kotlin is used to specify the location of the Kotlin compiler (`kotlinc`) executable when running the Gradle or other build tools. This allows you to use a specific version or installation of Kotlin compiler different from what might be available system-wide or through your project''s dependencies. For example, if you have multiple versions of Kotlin installed, you can use this flag to compile your project with a particular one. The format is `--compilerPath <path-to-kotlinc>`.'
        expression: |-
            [AI] The `--expression` flag is a command-line option for the Kotlin compiler (kotlinc). It's used to compile and evaluate an expression or a simple statement as a script, instead of compiling a whole Kotlin file or multiple files into a bytecode.

            The expression must be provided directly after the `--expression` flag, followed by the expression itself enclosed in quotes (single or double). For example:

            ```sh
            kotlinc --expression 'val sum = 5 + 3'
            ```

            After execution, the compiler returns the result of evaluating the given expression. In this case, it would return the integer value `8`. This flag is useful when you want to quickly evaluate a simple Kotlin expression without creating a new file or setting up a project in an IDE.
        help: '[AI] `kotlin --help` is a command used in Kotlin programming language to display detailed help information about the Kotlin Compiler (Kotlinc) and its various options. When executed, it shows a comprehensive list of all available compiler flags along with their descriptions and usage examples. This command assists users in understanding how to use the compiler effectively for different projects, including JVM, JS, and multiplatform applications.'
        howtorun: '[AI] `kotlin-howtorun` is a command-line tool provided by Kotlin programming language to help users create, build and run projects easily. When you invoke it with the `-h` or `--help` option, for example `kotlin-howtorun -h`, it will display a usage message explaining various options and their functions. This includes creating new projects from templates, building existing projects, or running Kotlin scripts. The tool simplifies the process of managing Kotlin projects by offering a convenient interface to perform common tasks.'
        no-reflect: '[AI] The `-no-reflect` flag is a command-line option for the Kotlin compiler (`kotlinc`). It disables reflection in the compiled code. Reflection is a feature of the Java programming language that allows examining or modifying the runtime behavior of a class and its members at execution time. By disabling reflection, potential security vulnerabilities and performance overheads associated with reflection can be avoided. However, it also means that reflection-relying code will not function as intended when compiled with this flag.'
        no-stdlib: '[AI] The `-no-stdlib` flag in Kotlin is used when compiling the code from the command line, to explicitly exclude the Kotlin standard library from being included in the compilation process. This can be useful in specific use cases, such as when developing a multi-platform application or when using an external version of the standard library. However, it''s important to note that excluding the standard library may result in missing certain core functionalities and dependencies, so its use should be carefully considered.'
        version: '[AI] `kotlin --version` is a command-line utility used to check for the installed version of the Kotlin programming language compiler. When executed, it returns the version number and some optional build information, such as the commit SHA or the build date. This command helps developers ensure they are using the desired version of Kotlin for their project, and can be used to confirm that a specific version is available on their system before installation.'
