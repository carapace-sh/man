# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: api-resources
description: Print the supported API resources on the server
flags:
    --api-group=: Limit to resources in the specified API group.
    --cached: Use the cached list of resources if available.
    --categories*=: Limit to resources that belong to the specified categories.
    --namespaced: If false, non-namespaced resources will be returned, otherwise returning namespaced resources by default.
    --no-headers: When using the default or custom-column output format, don't print headers (default print headers).
    --sort-by=: If non-empty, sort list of resources using specified field. The field can be either 'name' or 'kind'.
    --verbs*=: Limit to resources that support the specified verbs.
    -o, --output=: 'Output format. One of: (wide, name).'
documentation:
    command: '[AI] The `kubectl api-resources` command is used to list all the API resources (custom and core) available in a Kubernetes cluster. It displays each resource type with its plural name, singular name, and kind. This command helps users understand what resources are manageable through the Kubernetes API, which can be essential for writing custom controllers or managing complex deployments.'
    flag:
        api-group: '[AI] `kubectl api-resources --api-group` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command lists the API resources and their corresponding versions that are registered under a specific API group in a Kubernetes cluster. An API resource represents an individual instance or collection of instances of a custom or core Kubernetes object, such as Deployments, Services, or CustomResources. The `--api-group` flag filters the output to only show resources belonging to the specified API group.'
        cached: '[AI] `kubectl api-resources --cached` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command is used to list all currently registered resources and their respective versions in the Kubernetes cluster, including those that may not be currently cached locally. The `--cached` flag filters the output to only show the resources that are currently available in the local cache of `kubectl`. If omitted, the command would return both cached and uncached resources.'
        categories: '[AI] `kubectl api-resources --categories` is a command used with the Kubernetes CLI (kubectl) to list API resources and their corresponding categories in a Kubernetes cluster. Each resource represents an independently manageable unit of work within Kubernetes, such as Pods, Services, or ConfigMaps. The `--categories` flag filters the output to display only the category each resource belongs to, which helps users understand the high-level grouping and organization of resources in a Kubernetes system.'
        namespaced: |-
            [AI] `kubectl api-resources --namespaced` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command lists all customizable resources and their corresponding API versions in the current or specified namespace.

            When run without any further options, it lists all resources across all namespaces. However, when used with the `--namespaced` flag, it returns only the resources that can be managed within a specific namespace. This can be helpful for viewing and managing resources in a particular namespace without having to worry about resources in other namespaces.
        no-headers: '[AI] `kubectl api-resources` is a command used by the Kubernetes CLI (kubectl) to list all the available custom resource definitions (CRDs) and their kinds in the current cluster. The `--no-headers` flag is an optional argument that instructs kubectl not to display the headers of the output table, resulting in a raw list of API resources.'
        output: '[AI] `kubectl api-resources --output` is a command used in Kubernetes to list all available custom resource definitions (CRDs) and their corresponding API versions supported by the cluster. The `--output` flag specifies that the output should be in YAML or JSON format, making it easier to process programmatically. It provides information on what resources can be managed within the Kubernetes cluster using Kubectl.'
        sort-by: '[AI] `kubectl api-resources --sort-by` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectle`. This command lists all available custom resource definitions (CRDs) and built-in resources in a cluster, sorted by their names. The `--sort-by` flag specifies that the output should be sorted based on the names of the resources. It helps to understand and manage the different types of resources in a Kubernetes environment, making it easier to interact with the API effectively.'
        verbs: '[AI] The `kubectl api-resources --verbs` command is used to list the available API resources and their supported CRD (Custom Resource Definitions) and RBAC (Role-Based Access Control) verbs in a Kubernetes cluster. The output shows the resource name, plural name, short name (if any), and the supported verbs for creating, getting, updating, and deleting instances of each resource. This command is useful for understanding what resources are available and what actions can be performed on them using Kubernetes API.'
