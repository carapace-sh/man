# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: credential-store
description: Helper to store credentials on disk
group: low-level helper
flags:
    --file=: fetch and store credentials in <path>
documentation:
    command: |-
        [AI] `git credential-store` is a Git command used to manage your credentials (username and password) storage. It provides several sub-commands to interact with the default Git credential helper which is typically used for handling authentication with remote repositories. The main sub-commands are:

        * `get`: Retrieve a stored username or password for a given URL.
        * `store`: Store a new username or password for a given URL.
        * `erase`: Remove stored credentials for a given URL.

        By default, Git uses the OS's keyring or the WINDOWS CREDENTIAL MANAGER to store credentials if available, otherwise it will use the default credential helper which is usually implemented as a file in your home directory under `~/.git-credentials` and a separate file under `~/.netrc`. The `git-credential-store` command interacts with this default helper, allowing you to manage your stored credentials without having to deal with the underlying details of the implementation.
    flag:
        file: '[AI] `git credential-store --file` is a Git command used to manage and store usernames and passwords for remote repositories in various backends such as OS X Keychain, Windows Credential Manager, or a plain file. The `--file` option specifies the path to the custom file format for storing credentials. When using this option, Git will save and load the credentials from/to the specified file instead of default keyring or OS-specific credential helpers. This is particularly useful when working in environments with strict security policies that don''t allow storing credentials in the operating system''s keychain or other default storage mechanisms.'
