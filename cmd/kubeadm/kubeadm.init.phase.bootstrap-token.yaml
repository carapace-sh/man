# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: bootstrap-token
description: Generates bootstrap tokens used to join a node to a cluster
flags:
    --config=: Path to a kubeadm configuration file.
    --kubeconfig=: The kubeconfig file to use when talking to the cluster. If the flag is not set, a set of standard locations can be searched for an existing kubeconfig file.
    --skip-token-print: Skip printing of the default bootstrap token generated by 'kubeadm init'.
documentation:
    command: |-
        [AI] The `kubeadm init` command with the `bootstrap-token` phase is used to create a new Kubernetes cluster using kubeadm, which is an open-source tool for initializing clusters managed by Kubernetes.

        In this specific phase, `bootstrap-token` generates a new token that will be used to join worker nodes or other control-plane nodes to the newly created cluster. This command outputs the token and its expiration time. After running this command, you should save the outputted token as it is required during node joining process.

        In summary, `kubeadm init phase bootstrap-token` generates a new token that will be used to add nodes to your Kubernetes cluster.
    flag:
        config: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster. The `bootstrap-token` subcommand generates a new token for authentication and authorization within the cluster. The `--config` option specifies that the output of this command should be written to a file, rather than being printed directly to the console. This file contains the token information, including its value and expiration time. After creating the token, you can use it to join worker nodes to your Kubernetes cluster or to configure tools like `kubectl` for communicating with the master node.'
        kubeconfig: |-
            [AI] `kubeadm init` is a command-line tool used for initializing Kubernetes clusters. The `bootstrap-token` subcommand generates a new token for joining worker nodes to the cluster and sets up the initial configuration.

            The `--kubeconfig` flag specifies that the output of the command should be saved in a file named `kubeconfig` in the current directory. This file contains the configuration information required to communicate with the Kubernetes cluster, including the address of the master node and the token for joining worker nodes.

            Therefore, running `kubeadm init phase bootstrap-token --kubeconfig` generates a new token and saves it as a `kubeconfig` file, which can be used to join worker nodes to the Kubernetes cluster.
        skip-token-print: |-
            [AI] The `kubeadm init` command is used to bootstrap a new Kubernetes cluster. The `phase bootstrap-token --skip-token-print` flag is an option that can be passed during the initialization process to skip the printing of the bootstrap token.

            The bootstrap token is a critical component of the Kubernetes cluster setup as it's used to join worker nodes to the master node. The token has a limited lifetime and is only shown once during the `kubeadm init` process by default. By using the `--skip-token-print` flag, the token will not be displayed on the screen, making it more secure since it's not exposed publicly.

            Instead, you will need to retrieve the bootstrap token manually before running `kubeadm join` command on worker nodes. This can be done by looking for the token in the kubeconfig file that gets generated during the initialization of the master node or using other methods such as reading it from the etcd cluster if it's already set up.
