# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: read
description: Read an ACL role
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --id=: The ID of the role to read.
    --meta: Indicates that role metadata such as the content hash and raft indices should be shown for each entry
    --name=: The name of the role to read.
    --namespace=: Specifies the namespace to query.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul acl role read` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command retrieves the details of an ACL (Access Control List) role definition in Consul. It returns information such as the name, ID, and policy rules associated with the specified role. By executing this command, you can inspect the access control granted to a particular role within your Consul environment.'
    flag:
        ca-file: |-
            [AI] The `consul acl role read --ca-file` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. It is a part of Consul's Access Control List (ACL) feature that helps manage access to different resources in the Consul environment.

            The `role read` part specifies that this command creates or gets the details of an existing role. A role defines a set of permissions and capabilities for an entity in Consul, such as a token or a user.

            The `--ca-file` flag is an option provided to authenticate the client making the API request securely. This flag expects the path to a file containing one or more PEM-encoded X.509 CA certificates that are trusted by Consul. By verifying the client's certificate against these trusted CAs, Consul can ensure secure communication and prevent unauthorized access to the ACL API.
        ca-path: |-
            [AI] The `consul acl role read --ca-path` command is used in Hashicorp Consul, an open-source distributed configuration and service coordination tool. This command reads the Access Control List (ACL) roles from a CA (Certificate Authority) file located at the specified path.

            Consul's ACL system allows for managing access to different parts of the Consul hierarchy. The `consul acl role read` command retrieves the definitions of existing ACL roles. When specifying the `--ca-path` option, it uses the CA file to verify the authenticity and integrity of the retrieved roles. This helps ensure that only trusted roles are used within your Consul environment.
        client-cert: '[AI] The `consul acl role read --client-cert` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is used to grant read access to specific roles in the Access Control List (ACL) using a client certificate as an authentication method. The ACL allows fine-grained control over who can perform various actions within Consul, such as reading or modifying data. By specifying `--client-cert`, the command ensures that only requests coming from clients with valid and trusted certificates are granted access to the specified roles.'
        client-key: |-
            [AI] The `consul acl role read --client-key` command is used in Hashicorp Consul, an open-source distributed config management, service registration, and discovery tool. This command is specifically for reading the Access Control List (ACL) roles using a client key.

            Consul uses ACLs to control access to its various features, such as configuration data and service registrations. Each user or application that interacts with Consul has an associated role with specific permissions. The `consul acl` CLI tool is used to manage these roles.

            The `role read --client-key <CLIENT_KEY>` subcommand retrieves the details of a particular role, identified by its client key. This can be useful for inspecting or managing the permissions assigned to a specific user or application in the Consul ACL system.
        datacenter: |-
            [AI] The `consul acl role read --datacenter` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command is related to Access Control List (ACL) management in Consul's Data Center mode.

            In simpler terms, this command reads the ACL roles within a Consul Datacenter. A role defines a set of permissions that can be granted or revoked for accessing resources in a Consul service registry or key-value store. By executing `consul acl role read --datacenter`, you'll get a list of defined roles and their respective permissions across all the servers in your Consul Datacenter.
        format: |-
            [AI] The `consul acl role read --format` command is used with Hashicorp's Consul service, which provides various services including Key-Value store, HTTP proxy, and Access Control List (ACL) management.

            This specific command retrieves the details of an ACL role defined in Consul using its name or ID, and formats the output in a way specified by `--format`. The output can be customized using various placeholders such as `{{ .Name }}`, `{{ .ID }}`, etc., to display specific attributes of the role.

            For example, running `consul acl role read <role-name> --format '{{ .Name }}'` would return only the name of the role. This command helps in automating and managing tasks related to ACL roles in Consul using the CLI.
        http-addr: |-
            [AI] The `consul acl role read --http-addr` command is used with the Consul Access Control List (ACL) tool, which is part of Hashicorp's Consul service. This command grants the specified role read access to the Consul HTTP API at the given HTTP address.

            The `role` argument identifies the name or ID of the role to be granted access, and the `--http-addr` option specifies the Consul HTTP API address that this role is allowed to access. By default, this command only grants read access, but you can also use other ACL actions like "write" or "create" by including them in the role definition.

            In summary, this command configures Consul's Access Control List to allow a specified role to read data from the Consul HTTP API at a given address.
        id: '[AI] The `consul acl role read --id` command is used in Hashicorp Consul, an open-source multi-purpose solution for service discovery, configuration, and orchestration. This command retrieves the details of an Access Control List (ACL) role with the given ID. ACL roles define access permissions for Consul resources within a Consul datacenter. The output includes information such as the role name, policy, and any tags associated with the role.'
        meta: '[AI] The `consul acl role read --meta` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command retrieves the metadata associated with a specific Access Control List (ACL) role in Consul''s ACL system. Metadata are key-value pairs attached to roles, policies, and other objects in the Consul ACL hierarchy, providing additional context or custom information. The output of this command displays the metadata as key-value pairs for easy reference and management.'
        name: '[AI] The command `consul acl role read --name` is used with the Consul Access Control List (ACL) tool to retrieve the details of an existing ACL role by its name in the Hashicorp Consul service discovery, configuration, and orchestration platform. This command helps administrators manage access control policies for different entities within their Consul environment.'
        namespace: |-
            [AI] The `consul acl role read --namespace` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is part of the Access Control List (ACL) feature, which helps manage access to resources in Consul.

            Specifically, this command reads the ACL role definitions within a given Kubernetes namespace. A role is a set of permissions that can be assigned to an entity (like a user or service account). By specifying a namespace with this command, you're limiting your query to only roles defined in that particular Kubernetes namespace.

            In summary, `consul acl role read --namespace` is used to retrieve the list of ACL roles configured within a specified Kubernetes namespace for Consul.
        stale: |-
            [AI] The `consul acl role read --stale` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. It grants read access to an ACL (Access Control List) role with stale data.

            When you run this command, Consul returns the current permissions for the specified role, but it may include permissions for resources that have since been deleted or modified. In other words, it returns the previous, possibly outdated, access control list for the role. The `--stale` flag is used to intentionally retrieve such outdated data.

            This command can be helpful in various scenarios such as:

            1. Debugging: To understand the historical permissions of a role when troubleshooting an issue or understanding why certain actions were allowed in the past.
            2. Backup: To create a backup of the current ACLs for disaster recovery purposes, including the read-only access that might be granted to some roles.
            3. Compliance and Auditing: To review permissions that have been previously granted to ensure they adhere to organizational policies and regulatory requirements.

            It is essential to remember that using this command with stale data can introduce security risks, as it may expose permissions for resources that are no longer in use or are currently protected by other access controls. Therefore, it should be used responsibly and only when necessary.
        tls-server-name: '[AI] The `consul acl role read --tls-server-name` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. It grants a specific Access Control List (ACL) role the permission to read ACL data from a Consul server. The `--tls-server-name` flag indicates that the communication between the client and the server should be encrypted using TLS and that the server''s identity will be verified by its SSL certificate.'
        token: '[AI] The `consul acl role read --token` command is used with the Consul Access Control List (ACL) system in Hashicorp''s Consul service. It retrieves the permissions associated with a specific ACL role using an access token. This command helps to check and manage the access control policies of different users or roles within a Consul datacenter. The output shows the role''s name, ID, and permissions assigned.'
        token-file: |-
            [AI] The `consul acl role read --token-file` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is specifically related to Access Control List (ACL) functionality in Consul.

            Here's a breakdown of the components:

            1. `consul`: Refers to the Consul CLI (Command Line Interface) tool.
            2. `acl`: Stands for Access Control List, which is a feature set in Consul that allows you to control access to different parts of the service registry.
            3. `role`: Represents a named role definition that specifies a set of permissions.
            4. `read`: Indicates read-only access to the specified resources.
            5. `--token-file`: Option that tells Consul CLI to read the ACL token from a file instead of providing it directly on the command line. This is useful for security reasons as the token is not exposed in plain text.

            So, in summary, the `consul acl role read --token-file` command is used to define or retrieve information about an existing read-only role definition in Consul using an ACL token stored in a file.
