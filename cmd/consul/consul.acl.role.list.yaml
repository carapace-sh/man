# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: Lists ACL roles
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --meta: Indicates that policy metadata such as the content hash and raft indices should be shown for each entry
    --namespace=: Specifies the namespace to query.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul acl role list` command is used in Hashicorp''s Consul service to retrieve a list of defined roles in the Access Control List (ACL) system. Roles define sets of permissions that can be assigned to Consul agents or clients, helping to enforce access control policies within the Consul ecosystem.'
    flag:
        ca-file: |-
            [AI] The `consul acl role list --ca-file` command is used with Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists the roles defined in an Access Control List (ACL) file, which specifies access control policies for Consul resources.

            The `--ca-file` option indicates the path to a PEM-encoded Certificate Authority (CA) file that is used to verify the authenticity of the ACL data. This helps ensure that only authorized users can modify the access control policies. The output of the command includes the name and ID of each role, along with its associated policies and bindings.
        ca-path: '[AI] The `consul acl role list --ca-path` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists the roles defined in a Consul Access Control List (ACL) file with the specified CA (Certifying Authority) path. The CA path refers to the location of the trusted root certificate authority used to sign the Consul server''s TLS certificates. By specifying this path, the command can verify the authenticity and trustworthiness of the ACL data being accessed.'
        client-cert: '[AI] The `consul acl role list --client-cert` command is used with the Consul Access Control List (ACL) feature in Hashicorp''s Consul service. This command returns a list of roles associated with the provided client certificate. The client certificate must be presented via the `--client-cert` flag to authenticate and authorize the request. The output shows each role name along with its associated permissions, allowing you to understand which actions are allowed for that role in your Consul environment.'
        client-key: '[AI] `consul acl role list --client-key` is a command used with the Consul Access Control List (ACL) system. It returns a list of roles associated with the provided client key. This command helps in managing and granting access permissions to different clients or applications within a Consul service discovery, configuration, and orchestration platform.'
        datacenter: '[AI] The `consul acl role list --datacenter` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists the names of all roles defined within a specific datacenter in Consul''s Access Control List (ACL) system. Roles are security constructs that determine what actions a principal (user or client) can perform in Consul. By using `--datacenter` option, you can filter the list to show only the roles defined for a particular datacenter.'
        format: |-
            [AI] The `consul acl role list --format` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists all available Access Control Lists (ACL) roles within Consul with the output format specified by the flag `--format`.

            The ACL roles define access permissions for different actions within Consul services, connectors, and other functionalities. The available roles can be listed using this command to understand what roles are available to configure access control policies. Commonly used roles include `reader`, `writer`, `token-manager`, and `bind`. The exact set of roles depends on the specific Consul deployment and its ACL configuration.
        http-addr: '[AI] The `consul acl role list --http-addr` command is used with the Consul Access Control List (ACL) system in Consul, an open-source tool for service discovery, configuration, and orchestration. This command is used to list all defined roles within a Consul ACL policy, and it can be run against a Consul server by specifying its HTTP address with the `--http-addr` flag. The output will show each role''s name and ID, providing an overview of available roles for access control management in your Consul environment.'
        meta: '[AI] `consul acl role list --meta` is a command used in Hashicorp''s Consul service to retrieve a list of defined Access Control List (ACL) roles, along with their associated metadata. This command can help you understand the properties and configurations of each role, such as the name, ID, description, policies, and other attached data. It is particularly useful when managing complex security settings in a Consul environment.'
        namespace: '[AI] The `consul acl role list --namespace` command is used in Hashicorp Consul, an access control list (ACL) tool for managing and securing application services. This specific command displays the list of roles defined within a given Kubernetes namespace in Consul''s ACL system. Roles define sets of permissions that can be granted to Consul clients or users to perform actions on resources, such as read or write access. By specifying the `--namespace` argument, the command filters the output to only show roles associated with the specified Kubernetes namespace.'
        stale: '[AI] `consul acl role list --stale` is a command in Hashicorp Consul, an infrastructure platform for service discovery, configuration, and orchestration. This command lists out the roles defined in the Access Control List (ACL) of Consul with the `--stale` flag indicating that it should return results even if some data is stale or outdated. The output displays each role''s name, ID, policies (permissions), and whether it''s a built-in or custom role.'
        tls-server-name: '[AI] The `consul acl role list --tls-server-name` command is used in Hashicorp Consul, an open-source distributed configuration and orchestration tool. This command lists the roles defined in the Access Control List (ACL) policy of a Consul server or data center. The `--tls-server-name` flag specifies the TLS server name to connect to when making the API request. It ensures secure communication between the client and the Consul server by verifying the server''s identity based on the provided name.'
        token: '[AI] The `consul acl role list --token` command is used in Hashicorp Consul, an open-source distributed configuration and orchestration tool. This command lists all roles defined in an Access Control List (ACL) token. Roles define the permissions that principals (users, services, etc.) have in Consul''s KV, HTTP, and other interfaces. By specifying a valid ACL token with this command, you can view the associated role definitions, providing insight into who or what has access to which resources within your Consul environment.'
        token-file: '[AI] The `consul acl role list --token-file` command is used with the Consul ACL (Access Control List) tool to retrieve a list of roles defined in a Consul datacenter. The `--token-file` option specifies the path to a file containing an ACL token, which is required for authentication and authorization when interacting with the Consul ACL API. When run, this command returns a JSON formatted output displaying the names and IDs of all defined roles in the datacenter.'
