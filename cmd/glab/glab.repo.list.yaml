# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - users
description: Get list of repositories.
flags:
    --member: Only list projects which you are a member
    --starred: Only list starred projects
    -P, --per-page=: Number of items to list per page
    -a, --all: List all projects on the instance
    -m, --mine: Only list projects you own (default if no filters are passed)
    -o, --order=: Return repositories ordered by id, created_at, or other fields
    -p, --page=: Page number
    -s, --sort=: Return repositories sorted in asc or desc order
documentation:
    command: '[AI] `glab repo list` is a GitLab CLI command used to display a list of repositories that are configured in your local `glab` installation. This command helps users quickly access and manage multiple GitLab projects from the terminal without having to navigate to each project''s URL individually. It shows the repository names, their corresponding URLs, and other relevant information like branches and tags.'
    flag:
        all: '[AI] `glab` is a Git client for GitHub written in Rust, and its `repo list` command lists the repositories under a given GitHub username or organization. The `--all` flag expands the output to include both public and private repositories. So, running `glab repo list --all` will list all the repositories (public and private) associated with the specified GitHub account or organization.'
        member: '[AI] `glab repo list --member` is a GitLab CLI command used to list repositories under a given group or personal account, showing only the member status and repository names. It provides a compact output that indicates whether each repository is a fork or managed by the user, helping users manage their repository collection efficiently.'
        mine: '[AI] The `glab repo list --mine` command is used with GitLab CI/CD''s glab tool for interacting with GitLab repositories from the command line. This specific command lists the repositories where you are the owner or maintainer, i.e., those with a personal or maintenance relationship to your account. The `--mine` option filters the output to only show these repositories.'
        order: '[AI] The `glab repo list --order` command is a GitLab CLI (Command Line Interface) instruction used to list all repositories under a given context in GitLab, sorting them based on the specified order. The valid orders are: alphabetical (default), created_at, or updated_at. For instance, `glab repo list --order=created_at` will display all repositories ordered by their creation date.'
        page: '[AI] `glab repo list --page` is a GitLab CLI command used to list repositories under a given scope or project, returning results in pages if the total number of repositories exceeds the limit for a single API response. The `--page` option specifies the page number to retrieve. For instance, `glab repo list --page 2` would return the repositories starting from the second page.'
        per-page: '[AI] `glab` is a Git interface for the GitLab API, developed as a part of the `glab` toolkit by GitLab. The command `glab repo list --per-page N` lists up to N GitLab repositories from your current context (such as a group or a project) and displays their names and short URLs. It can be useful when you want to quickly view and manage a limited number of repositories at a time. The option `--per-page N` sets the maximum number of items to display per page, allowing you to customize the output for your needs.'
        sort: '[AI] `glab repo list --sort` is a command used in GitLab''s CLI (Command Line Interface) tool, `glab`, to list all repositories stored in your local SSH configuration or a specified GitLab instance. The `--sort` option sorts the output based on a given key, which can be either ''created_at'' (default), ''updated_at'', or ''name''. This allows you to easily organize your repository list according to specific criteria.'
        starred: '[AI] `glab` is a Git command-line interface tool for GitLab. The command `glab repo list --starred` lists all the GitLab repositories that are starred by the current user. Stars in GitLab are used as a way to save or bookmark repositories for easy access later. This command retrieves a list of those repositories and displays their names, URLs, and other relevant information.'
