# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: deploy
description: Deploy an application
flags:
    --label=: Labels to set for this operation.
    --plain: Plain output
    --release: Release this deployment immediately.
    --remote: True to use a remote runner to execute.
    --remote-source=: Override configurations for how remote runners source data.
    --var-file=: HCL or JSON file containing variable values to set for this operation.
    --var=: Variable value to set for this operation.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The "waypoint deploy" command is used in Hashicorp''s Waypoint infrastructure-as-code tool to apply changes made in your Waypoint configuration files to your running infrastructure. This command analyzes the differences between the current and desired state defined in your configuration files, generates Terraform execution plans, and applies those changes to your infrastructure. It ensures that your infrastructure is always kept in sync with your declared state.'
    flag:
        app: '[AI] The `flag "waypoint deploy --app"` is a command used in Hashicorp''s Waypoint, a modern application delivery platform. This specific command triggers the deployment of an application using Waypoint. When you run `waypoint deploy --app <app-name>`, Waypoint retrieves the latest version of the specified application configuration from its source control, builds and packages the application if necessary, and then deploys it to the target environment, usually a Kubernetes cluster. The goal is to deliver updated applications with minimal downtime or disruption.'
        label: '[AI] The `waypoint deploy --label` command is used with Waypoint, an open-source continuous delivery and deployment tool for Kubernetes. The `--label` option sets or updates labels on the Kubernetes resources being deployed. Labels are key-value pairs that can be used to select and filter resources in a cluster based on specific criteria. By using this command, you can manage and update labels during the deployment process, making it easier to organize and maintain your applications and infrastructure in the Kubernetes environment.'
        plain: |-
            [AI] The `waypoint deploy --plain` command is used in Google Cloud Platform's Waypoint tool to deploy infrastructure configurations stored in Hashicorp's HCL format, such as Terraform files or Consul templates. The `--plain` flag is optional but is included here for specificity.

            When this command is executed, Waypoint processes the configuration files and generates a deployment plan that shows exactly what resources will be created, updated, or deleted in the target environment based on the differences between the current state and the desired state defined in the HCL files. The output of `waypoint deploy --plain` is typically in plain text format, making it easier to review and understand the changes before they are applied.

            It's important to note that this command does not actually apply the configuration changes; it only generates a plan for you to review. To apply the changes, you would need to use `waypoint deploy` without the `--plain` flag or use another tool like Terraform's `apply` command.
        project: '[AI] The `waypoint deploy --project` command is used in Hashicorp''s Waypoint tool to deploy infrastructure configurations defined in a given project. Waypoint is an open-source, cloud-native way to manage and deploy HCL configuration files. This command takes the name or path of the project as its argument and deploys all stacks, modules, and resources within that project to the configured backend, such as Terraform Cloud or Hashicorp''s Atlas. It validates the configurations before applying them, ensuring correctness and consistency in the deployment process.'
        release: '[AI] The `flag "waypoint deploy --release"` is a command used in Google''s Waypoint configuration management tool to deploy a specific release of an application or service. This command triggers Waypoint to apply any infrastructure changes defined in the Waypoint configuration files, such as creating or updating cloud resources, and then deploys the specified release using the defined deployment strategy (e.g., canary, rolling update, blue-green). The release is identified by its name or tag, ensuring that only the desired version of the application is deployed.'
        remote: '[AI] `waypoint deploy --remote` is a command used in Hashicorp''s Waypoint configuration management tool to deploy configured resources or applications to remote targets, such as cloud providers or Kubernetes clusters. This command assumes that Waypoint configuration files have already been defined and stored in a Git repository or other version control system. By using the `--remote` flag, Waypoint will pull the latest configuration from the source control, plan the deployment, apply the changes, and verify the application''s health on the remote target. This command is essential for implementing continuous deployment strategies and maintaining infrastructure as code (IaC) practices.'
        remote-source: '[AI] `flag "waypoint deploy --remote-source"` is used in Hashicorp''s Waypoint configuration management tool to specify the location of the remote source for deployment. It could be a URL pointing to a Git repository, an S3 bucket, or any other supported source where Waypoint can fetch the desired configuration data before applying it to the target infrastructure.'
        var: '[AI] `flag "waypoint deploy --var"` is a command used in Hashicorp''s Waypoint configuration management tool to deploy infrastructure configurations while passing variables as arguments. The flags `--` followed by `var` indicate that the next arguments are variable assignments, which will be passed to the target application or infrastructure during deployment. This allows for dynamic customization of configurations at deployment time.'
        var-file: '[AI] The `kubectl waypoint deploy --var-file` command is used to deploy Kubernetes applications defined in YAML files with the help of Waypoint, an open-source GitOps tool for managing Kubernetes. The `--var-file` flag specifies a file containing HCL (Hashicorp Configuration Language) data. This data can be used to inject dynamic values into the YAML files during deployment. The combination of `kubectl`, `Waypoint`, and `--var-file` enables managing complex Kubernetes configurations with ease, allowing for more efficient and consistent deployments.'
        workspace: '[AI] `flag "waypoint deploy --workspace"` is used with Waypoint, an open-source Terraform extension for multi-cloud application deployment and management. This flag specifies which workspace in Waypoint to use for the deployment operation. Workspaces allow managing multiple environments or projects within a single configuration file. By providing the correct workspace name or number with this flag, you ensure that the appropriate resources are deployed or updated.'
