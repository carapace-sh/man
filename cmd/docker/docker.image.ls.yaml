# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ls [OPTIONS] [REPOSITORY[:TAG]]
aliases:
    - list
description: List images
flags:
    --digests: Show digests
    --format=: 'Format output using a custom template:'
    --no-trunc: Don't truncate output
    -a, --all: Show all images (default hides intermediate images)
    -f, --filter=: Filter output based on conditions provided
    -q, --quiet: Only show image IDs
documentation:
    command: '[AI] The `docker image ls` command lists all the available images in your local Docker registry. It displays a table with columns showing each image''s REPOSITORY, TAG, IMAGE ID, CREATED, and SIZE. This command helps you manage and keep track of the images installed on your system.'
    flag:
        all: '[AI] `docker image ls --all` is a command used in Docker to list all available images on a system. The `--all` flag includes both dangling (incomplete) images and manually removed images that have not been forcefully deleted with the `--force` option. It provides a more comprehensive output of all images, including those that are not referenced by any container or tag.'
        digests: '[AI] The `docker image ls --digests` command is used to list all Docker images on a system along with their corresponding digital signatures or image digests. This option ensures the output displays only the digest value of each image, which is a unique string that represents the exact contents and configuration of an image. It helps ensure image security and integrity by allowing users to verify that the images they are using have not been tampered with since they were originally downloaded or built.'
        filter: |-
            [AI] `docker image ls --filter` is a command used in Docker to list all available images on a system. The `--filter` option allows you to apply filters to the output, which can be used to narrow down the results based on specific criteria such as:

            * Image name: `reference=<image-name>`
            * Image tag: `dangling=true`, `label=<key>=<value>`
            * Image size: `size<=<size>`

            For example, `docker image ls --filter "dangling=true"` lists only the images with no associated containers. Using multiple filters is also possible by combining them with the `and` or `or` operators. For instance, `docker image ls --filter "reference=myimage:latest --size >10G"` will list the latest version of the 'myimage' image that is larger than 10GB in size.
        format: '[AI] `docker image ls --format` is a command used in Docker to list all available images on a system. The `--format` option allows specifying a custom output format using Go templates. This can be useful for automating tasks or extracting specific information from the list of images, such as image names, tags, sizes, and creation dates. The output can be customized according to specific requirements.'
        no-trunc: '[AI] `docker image ls --no-trunc` is a command used in Docker to list all available images on a system. The `--no-trunc` option is used to display the entire name of each image, instead of showing just the first few words followed by an ellipsis (...). This allows users to easily identify and manage their Docker images with full clarity.'
        quiet: '[AI] The `docker image ls --quiet` command is used to list all Docker images in a concise format with minimal output. The `--quiet` or `-q` option instructs the command to return only the image IDs, one per line. This makes it ideal for scripts or automation tasks that don''t require additional information about the images.'
