# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update [OPTIONS] CONTEXT
description: Update a context
flags:
    --description=: Description of the context
    --docker=: set the docker endpoint
documentation:
    command: '[AI] `docker context update` is a Docker CLI command used to modify the context settings in Docker Desktop or Docker Enterprise. Contexts define the Docker environment, including the Docker host, network plugins, and TLS certificates. This command allows users to create, delete, or update context configurations. For instance, one could use it to switch between different environments (e.g., development, staging, production) with varying Docker settings.'
    flag:
        description: '[AI] The `docker context update` command with the `--description` option is used to update the description of the currently active Docker context (context represents a collection of Docker hosts and their associated swarm clusters). By providing a new description as an argument, you can modify the existing description for better identification or record-keeping purposes. This command does not affect the underlying Docker infrastructure but only updates the metadata associated with the context.'
        docker: |-
            [AI] The `docker context update --docker` command is used to update the default Docker context in Docker Desktop or Docker for Windows and Linux. The default context refers to the local environment where Docker runs, including the Docker daemon and the default Unix socket or TCP listening address.

            The `--docker` option specifically updates the configuration related to the Docker daemon itself. This could be used when making changes such as specifying a custom daemon location or port number. Other options can be used in conjunction with this command to update other aspects of the Docker context, like the default network mode or storage driver.

            For example, `docker context update --docker daemon.host.tcp.address=<new_address>` would update the address that Docker Desktop uses to connect to the Docker daemon over TCP. This could be useful if you need to change the port number or IP address of your Docker daemon, such as when running it in a non-standard configuration.
