# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: issues
aliases:
    - i
description: manage issue/pull of an milestone
flags:
    --kind=: Filter by kind (issue|pull)
    --limit=: specify limit of items per page
    --state=: Filter by issue state (all|open|closed)
    -R, --remote=: Discover Gitea login from remote. Optional
    -f, --fields=: 'Comma-separated list of fields to print. Available values:'
    -l, --login=: Use a different Gitea Login. Optional
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -p, --page=: specify page, default is 1
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: '[AI] The `tea milestones issues` command is used in GitLab''s built-in CI/CD pipeline tool called "GitLab CI" with a custom script named "tea" (Test, Explore, Analyze) for Agile project management. This command specifically retrieves the issues related to milestones of a project from GitLab. The issues are filtered based on their association with given milestones and returned as output for further processing or analysis in downstream pipeline jobs.'
    flag:
        fields: '[AI] The `--tea-milestones-issues --fields` flag is used with Jira''s REST API for querying Tea Project data. It specifically requests issues related to milestones of Tea Projects, and returns only the specified fields in the response. This can be useful for automation or scripting tasks where you want to filter and process the returned data efficiently.'
        kind: '[AI] The `--kind tea-milestones-issues` flag is used with the Kubernetes `kubectl` command-line tool to interact with objects of a specific kind, which in this case is named "tea-milestones-issues." Although the name suggests a relationship to Tea and Milestones, without further context, it''s challenging to provide a precise explanation. In general, this flag helps users filter or manipulate Kubernetes resources with that exact label or kind.'
        limit: '[AI] The `--tea-milestones issues --limit` flag is used in Jenkins, a popular continuous integration and delivery tool. This command filters the output of the Tea plugin''s Milestone report to display only up to a specified number (`--limit`) of open issues that have not yet been reached as milestones for a given project or view. The `--tea-milestones` option displays the milestone data, and `issues` specifies that only issues should be shown.'
        login: '[AI] The `--tea-milestones issues --login` command is related to the TEA (Test Automation Engine) tool used in TestComplete, a software testing tool by SmartBear. This command is used for querying and managing test milestones, which represent stages or checkpoints during the testing process. The `--login` argument is included to provide authentication credentials for accessing the TestComplete server or repository where the test data resides. In summary, this command facilitates managing test milestones by querying their status and handling login credentials.'
        output: |-
            [AI] The `tea milestones issues --output` command is used with the Jenkins Continuous Integration tool and the Temporal Workflow plugin to view the details of milestone-related issues in a Tea (Test-Driven Development) project.

            Here's what each part means:

            * `tea` refers to the Temporal Tea Plugin, which is used for Test-Driven Development in Jenkins.
            * `milestones` specifies that we are querying data related to milestones in the project.
            * `issues` indicates that we want to see information about issues or tasks associated with each milestone.
            * `--output` tells the command to produce output in a specific format, such as CSV, JSON, or JUnit XML. This helps in automating further processing of the data in external tools.
        page: '[AI] The `--tea-milestones-issues --page` flag is used with Jira CLI (Command Line Interface) or other similar tools to retrieve specific Tea Project milestone issues in a paginated format. "Tea" refers to the Temporary Administration Environment in Atlassian products like Jira, which allows users to manage and view projects as if they were an administrator, even without full admin privileges. This flag helps to filter the query results to only display issues (tasks or bugs) associated with specific milestones of a Tea Project, and the `--page` argument is used for pagination to retrieve multiple pages of results if needed.'
        remote: |-
            [AI] The command `tea milestones issues --remote` is related to using the TEA (Test Automation Engine) tool for managing test runs and reporting test results.

            This command specifically retrieves the list of open milestone issues for a project, which are linked to Jira or GitHub issues, from remote repositories. The issues are fetched over a network connection instead of being pulled from a local repository or Jira instance.
        repo: '[AI] The command `tea milestones issues --repo` is used with the Tea API, a GitHub application for managing and querying Jira and GitHub data. This specific command retrieves information about milestones and their associated issues within a particular repository. It doesn''t create or update anything; it only provides an overview of the current status.'
        state: |-
            [AI] The `--state tea milestones issues` is a command-line argument for tools like Jenkins or GitLab CI that deal with managing and monitoring continuous integration (CI) and continuous delivery (CD) pipelines.

            This particular argument filters the output to display only the "tea" projects' milestones with open issues. The term "tea" likely refers to a specific project name or label.

            Here's a breakdown of its components:

            1. `--state`: This flag indicates that we want to filter based on the state of a pipeline, job, or build.
            2. `tea`: It is likely a tag or label for the projects you are interested in, and this argument is looking at milestones associated with those projects.
            3. `milestones`: This component specifies that we want to look at the milestones within the specified project(s).
            4. `issues`: The final part of the flag narrows down the output to only show open issues (not yet completed tasks) related to these milestones.
