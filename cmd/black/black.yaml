# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: black
description: The uncompromising code formatter
flags:
    --check: Don't write the files back , just return the status.
    --color: Show colored diff
    --config=: Read configuration from FILE path.
    --diff: Don't write the files back, just output a diff for each file on stdout.
    --exclude=: A regular expression that matches files and directories that should be excluded.
    --extend-exclude=: Like --exclude, but adds additional files and directories on top of the excluded ones.
    --fast: Skip temporary sanity checks.
    --force-exclude=: Like --exclude, but files and directories matching this regex will be excluded.
    --include=: A regular expression that matches files and directories that should be included.
    --ipynb: Format all input files like Jupyter Notebooks
    --no-color: Do not show colored diff
    --pyi: 'Format all input files like typing stubs regardless of file extension '
    --required-version=: Require a specific version of Black to be running.
    --safe: Do not skip temporary sanity checks.
    --stdin-filename=: The name of the file when passing it through stdin.
    --version: Show the version and exit.
    -C, --skip-magic-trailing-comma: Don't use trailing commas as a reason to split lines.
    -S, --skip-string-normalization: Don't normalize string quotes or prefixes.
    -c, --code=: Format the code passed in as a string.
    -h, --help: Show this message and exit.
    -l, --line-length=: How many characters per line to allow.
    -q, --quiet: Don't emit non-error messages to stderr.
    -t, --target-version=: Python versions that should be supported by Black's output.
    -v, --verbose: Also emit messages to stderr about files that were not changed.
documentation:
    command: '[AI] "Black" is a popular linting tool used in Python programming for enforcing coding standards. It automatically checks your code against its set of rules and highlights any deviations, helping to maintain consistency and improve code quality within a team or project.'
    flag:
        check: '[AI] The `black --check` command is a tool used in Python programming for code formatting and linting. It checks your Python files against the rules defined by Black, a popular automatic coding style guide for Python. By running `black --check`, you enable it to identify and suggest fixes for various coding inconsistencies, formatting issues, and potential errors based on the latest style guidelines in your codebase. The goal is to ensure uniformity and consistency throughout your project, enhancing readability and maintainability of your Python code.'
        code: |-
            [AI] The `--flag black --code` is not a standard command or flag used in programming or operating systems. It appears to consist of two separate parts:

            1. `--flag`: This is typically a prefix for options or flags that modify the behavior of commands or programs. For example, `--verbose` might be used to increase the amount of output from a command.
            2. `black --code`: It seems like this part refers to Black, which is a popular Python code formatter and linter. The `--code` flag isn't an official flag for Black, but it can be assumed that it is related to formatting or processing code using Black. For example, one could use the command `black --code <file>` to format the specified Python file according to the style guide enforced by Black.
        color: '[AI] The `--color Black` flag is a command-line option used in various programs, particularly in text editing and version control systems. It sets the color scheme or theme to black. This means that text or other visual elements displayed by the program will appear in black, often making it easier to view in low-light conditions or for those with visual impairments. For example, in a text editor like Vim, you can start it with the `--color=black` option to set the default color scheme to black.'
        config: '[AI] The `black --config` command is used with Black, a Python code formatter. This command loads or modifies the formatting configuration file for Black. It takes the path to the config file as an argument and applies its rules when formatting code. For example, `black --config=path/to/myconfig.yml` will use the rules defined in the given YAML configuration file instead of the default settings when formatting Python files with Black.'
        diff: '[AI] The `--diff` option with `git diff` or `git pull --rebase --diff` command in Git is used to show the differences between files or commits in a patch format, also known as a "diff" output. It allows users to review and compare changes before applying them. This can be helpful when merging branches or resolving conflicts. The "--black" part seems incorrect in your question, as there''s no such option named `--black` for Git''s `diff` command.'
        exclude: '[AI] The `--exclude` option in Findutils'' `find` command with the flag `-black` is used to exclude specific files or directories from the search results. For instance, `find . -type f -name "*.txt" --exclude "*backup.*"` would search for all files with a `.txt` extension under the current directory (`.`) except those whose names end with "_backup._".'
        extend-exclude: '[AI] The `--extend-exclude` flag in Git is used when creating a new branch based on an existing branch, and it specifies one or more commit ranges or branches to be excluded from the new branch. In other words, it allows you to create a new branch that starts from the current branch but skips certain commits. The `black` before `--extend-exclude` is likely referring to a tool like Black for Python code formatting, indicating that this command is being used as part of a larger workflow with Black. However, without additional context it''s impossible to know for sure what the specific command does.'
        fast: '[AI] The `black --fast` command is used with Black, a Python code formatter and linter. The `--fast` option speeds up the formatting process by disabling some features like type annotations and docstrings checking. It''s beneficial for large projects where you only need to format the code without running any checks or tests.'
        force-exclude: '[AI] The `--force` flag in Git is used to override local changes or uncommitted files when performing an operation like commit or pull. The `--force-exclude` option, when used with `git clean`, allows excluding specific files or directories from being removed during the cleanup process by listing them in a file (specified using the `-f` flag) and prefixing each entry with the `--` character. For example, `git clean -f -- . ~/.git/` would remove all untracked files except those listed in a file named `.gitignore_clean`.'
        help: '[AI] The `--help` option is a common command-line argument used in various programs and tools, including those written in the programming language Haskell under the name "flag." When passed to a Haskell application using the flag library, `--help` triggers the printing of detailed usage information for the command or program. It helps users understand how to correctly use a specific command or option within the application by providing clear instructions and examples. In essence, it provides help when invoked with `--help`.'
        include: |-
            [AI] The `--include` option is a flag used with the `find` command in Unix-based systems. It instructs find to search for files that match a specific pattern in their name or in the names of subdirectories.

            The `black --include` command specifically refers to using Black, a Python code formatter, along with the `--include` flag to format only certain files or directories during a codebase scan. For instance, running `black . --include '\*.py'` would format all Python (`.py`) files in the current directory and its subdirectories while leaving other file types untouched.
        ipynb: |-
            [AI] The `--flag black` with `--ipynb` argument is not a standard command or flag for most common applications or tools, including operating systems and programming languages. It seems specific to Jupyter Notebook, an open-source web application that allows creating and sharing documents that contain live code, equations, visualizations, and narrative text.

            The `--black` flag is used with the Black formatter for Python code, which automatically formats your source code according to a consistent style guide. In this context, `--ipynb` indicates that you want to apply the code formatting to Jupyter Notebook files, rather than regular Python files. So, using `black --ipynb` would format all cells' content in the current and future Jupyter Notebooks according to Black style guidelines.
        line-length: '[AI] The `--flag black line-length` is a command-line option used with certain code linters, such as Prettier or ESLint, when configuring their settings. It specifies that the rule `line-length` in the style guide (e.g., `eslint:recommended` or `prettier/eslint-config-react-app`) should follow the recommendations of the Black coding style. Black recommends a maximum line length of 80 characters, meaning no single line should be longer than that. This helps maintain consistency and readability within the codebase.'
        no-color: '[AI] The `--no-color` option in a command like `flag black` disables the use of colored output. The `black` flag is a linting tool used for formatting code consistently across a project. When run with `--no-color`, it suppresses the display of colored messages or warnings, making the output monochrome instead. This can be useful for users who prefer plain text or when working in environments where color support might not be available.'
        pyi: '[AI] The `black --pyi` command is used with Black, a Python linting and formatting tool. The `--pyi` option stands for "Python iPython interactive mode files," which are specific Python files designed for use in Jupyter Notebooks or similar interactive environments. When you run `black --pyi`, it formats those files according to Black''s style guide while preserving the magic lines and other necessary elements required for interactive usage.'
        quiet: '[AI] The `--quiet` flag, when used with the `black` linting tool for Python code, instructs it to run in quiet mode. This means that Black will only print error messages and not display any informational or warning messages during the linting process. It is often used in continuous integration environments where silence is required, or when the user wants to focus on specific errors without being distracted by other messages.'
        required-version: '[AI] The `--flag black --required-version` is a command-line option used in testing frameworks like Jest or Mocha, among others. This flag enables a specific behavior called "blacklist" or "failing tests only," where only the tests that have failed are run again during subsequent test runs. The `--required-version` part specifies that the specified version of the black flag is required for the test command to execute. It helps in quickly identifying and addressing the issues with failing tests, improving overall test suite reliability and efficiency.'
        safe: '[AI] The `--safe` flag used with the `black` Python code formatter is an optional argument that specifies a conservative mode for Black to apply formatting rules. In this mode, Black will only make changes that are considered safe and unlikely to introduce new errors or unexpected side effects in your codebase. This is particularly useful when applying Black to large codebases or when you want to ensure minimal disruption to the existing code structure. If not provided, Black applies formatting rules with a more lenient approach by default.'
        skip-magic-trailing-comma: |-
            [AI] The `--flag black --skip-magic` option is used with Prettier, a popular code formatter in JavaScript projects. Here's what it does:

            1. `--flag`: This is an option flag for passing additional arguments to Prettier.
            2. `black`: This indicates that we want to use the "Black" style guide for formatting our code. Black is a popular and opinionated style guide that enforces a consistent coding style.
            3. `--skip-magic`: This option tells Prettier not to add any trailing commas at the end of objects or arrays, even if they are the last items in those structures. This can be useful when working with specific libraries or configurations where the absence of trailing commas is required or preferred.
            4. `--skip-magic-trailing-comma`: This is an alternative way to write `--skip-magic` for better readability, but it is functionally equivalent.
        skip-string-normalization: |-
            [AI] The `--skip-string-normalization` flag is a command-line option used with tools like `grep`, `sed`, and `awk`. It tells these utilities to skip string normalization during pattern matching.

            String normalization is the process of converting strings into a consistent form before comparison, usually by folding case or removing diacritic marks. Skipping this process can be useful when you want to perform exact matches on patterns without considering differences in casing or character variants.
        stdin-filename: '[AI] The `--stdin-filename=black` option is used with the Black Python code formatter. It specifies that the name of the input file being read from standard input (usually via a pipe or redirection) should be named "black" for Black to use as a context for formatting the code appropriately. This helps ensure consistent naming conventions and formatting when working with large codebases or automating the formatting process.'
        target-version: '[AI] The `--flag black --target-version` is a command-line option used with testing frameworks, such as Jest or Mocha, in JavaScript projects. It specifies that only failing tests (also known as "black" tests) should be run against a specific target version of the project. This means that only tests which have previously failed will be re-run, allowing developers to focus on fixing issues and ensuring regressions do not occur with the latest changes.'
        verbose: '[AI] The `--verbose` option, when used with a command or flag denoted as `black`, increases the amount of output and details provided during the execution of Black, a Python code formatter. It is designed to help users understand the changes Black makes to their code files in greater detail. This results in more extensive information being printed to the console, providing insight into specific formatting rules being applied and the adjustments made to the code.'
        version: '[AI] The `black --version` command is used to check and display the current version of the Black coding style tool in your terminal or command prompt. Black is a Python code formatter that enforces a consistent coding style. Running this command ensures that you have the latest version installed and can use it for formatting your Python projects accordingly.'
