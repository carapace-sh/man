# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: prune-packed
description: Remove extra objects that are already in pack files
group: low-level manipulator
flags:
    -n, --dry-run: dry run
    -q, --quiet: be quiet
documentation:
    command: '[AI] The `git prune` command, specifically its `--packed` variant `git prune-packed`, is used to delete locally stored packed Git objects that have already been pushed to a remote repository. This helps to save disk space by getting rid of redundant data. When you push changes to a remote repository, Git creates packed Git objects for all the necessary history and objects on the local machine before sending them over the network. With `git prune-packed`, you can remove these locally stored packed objects that are no longer needed once they''ve been successfully pushed.'
    flag:
        dry-run: |-
            [AI] `git prune-packed --dry-run` is a Git command that performs a dry run (simulation) of pruning packed objects in the local repository. When you have a Git repository with a lot of data, it's common for Git to store frequently used objects as packed objects in the `.git/objects/pack` directory. Over time, this directory can become quite large.

            The command `git prune-packed --dry-run` allows you to check what packed objects would be deleted before actually executing the deletion. By using the `--dry-run` option, Git will show you a list of the packed objects that would be removed without making any changes to your repository. If you are satisfied with the output and wish to proceed, remove the `--dry-run` option from the command to actually delete the specified packed objects.
        quiet: '[AI] `git prune-packed --quiet` is a Git command used to remove locally packed archives, also known as bundle files, that are no longer needed. The `--quiet` option ensures that Git runs the command silently without displaying any informational messages during execution. This command can be useful for automation processes or scripts where only the success or failure of the command is important.'
