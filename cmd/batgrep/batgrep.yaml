# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: batgrep
description: Quickly search through and highlight files using ripgrep
flags:
    --color: Force color output.
    --no-color: Force disable color output.
    --no-follow: Do not follow symlinks.
    --no-highlight: Do not highlight matching lines.
    --no-separator: Disable printing separator between files
    --no-snip: Do not show the snip decoration.
    --pager=: Specify the pager to use.
    --paging=: Enable/disable paging.
    --terminal-width=: Generate output for the specified terminal width.
    -A, --after-context=: Display the next n lines after a matched line.
    -B, --before-context=: Display the previous n lines before a matched line.
    -C, --context=: A combination of --after-context and --before-context.
    -S, --smart-case: Use smart case searching.
    -i, --ignore-case: Use case insensitive searching.
    -p, --search-pattern: 'Tell pager to search for PATTERN. Currently supported pagers: less.'
    -s, --case-sensitive: Use case sensitive searching.
documentation:
    command: |-
        [AI] "batgrep" is not a standard command in Unix or Linux systems. It seems to be a typo or misunderstanding of two common commands: "bat" and "grep".

        "bat" is a command-line pager for cat-like listing of files, but with syntax highlighting and other features for various file types, including JSON, YAML, INI, SQL, and others.

        "grep" stands for Global Regular Expression Print, which is a text search utility that searches the specified files for lines containing a match to a given regular expression pattern.

        So, if you meant to use "bat" to view the file content with syntax highlighting and then search it using "grep", you can simply combine these commands: `bat <filename> | grep '<regex_pattern>'`.
    flag:
        after-context: '[AI] `--after-context` is an option used with the `bat` text editor in conjunction with the `grep` command for searching text files. It displays the context lines of match output that come after the matching line, rather than before or around it. This can be useful when you want to see the surrounding lines that come after a match. The number of lines displayed can be specified using the `--num` modifier, e.g., `--after-context 3` shows 3 lines after each match.'
        before-context: '[AI] `--before-context` is an option used with the `git diff-index` or `git diff` commands in conjunction with the `batgrep` tool. It specifies the number of lines of context to display before the changed lines in the output. For instance, if you run `git diff --numbers --cached --context=3 file` followed by `batgrep --before-context=5 ''pattern''`, it will show 5 lines of context before the 3 changed lines that match the given regular expression pattern. This can be helpful for understanding the context of changes made in a Git repository.'
        case-sensitive: '[AI] `batgrep` is a command-line tool for interactively searching and manipulating text files in Bataglio''s text editor, `bat`. The option `--case-sensitive` makes the search case-sensitive, meaning it will only match patterns that exactly match the case of the characters in the text being searched. If not specified, the search would be performed in a case-insensitive manner by default.'
        color: '[AI] `batgrep` is a cat-like pager for searching text files with grep. The option `--color` enables colored output in the terminal, making it easier to distinguish different parts of the search results, such as matching lines, context lines, and search terms. This can improve readability and make it quicker to find the desired information.'
        context: '[AI] `batgrep` is a tool for searching text files using regular expressions, and the `--context` option modifies the output of a search to include surrounding lines, also known as context, before and after the matching line. The number of lines shown before and after can be specified using `--context=NUM`. For example, `batgrep --context=3 pattern file.txt` will show three lines before and after any matching line. This option helps to understand the surrounding content when searching for a specific pattern within a text file.'
        ignore-case: '[AI] `batgrep` is a command-line tool for searching text files using regular expressions. The `--ignore-case` flag tells `batgrep` to perform case-insensitive searches, meaning it will match patterns regardless of the case of the characters in the search term and the text being searched. For example, if you search for `--ignore-case "apple" file.txt`, it will find both "Apple" and "apple" in the file.'
        no-color: '[AI] `batgrep` is a tool for searching text files for patterns using regular expressions, similar to `grep`. The `--no-color` option disables colored output. This means that the matching patterns in the file will be printed in plain text instead of being highlighted with colors. This can be useful when working in environments where color output is not desired or supported.'
        no-follow: '[AI] `batgrep` is a tool for searching text files for patterns using regular expressions, similar to `grep`. The `--no-follow` option instructs `batgrep` not to follow symbolic links when searching for files to search in. This can be useful in certain situations, such as when you want to limit the search scope to specific directories or prevent unintended searches in linked directories.'
        no-highlight: '[AI] `batgrep` is a command-line tool for interactively searching and filtering text files. The option `--no-highlight` disables syntax highlighting in the output of the search results. This means that the matching text will be displayed in the regular terminal color, without any special formatting or colors. This can be useful if you prefer to read the output in plain text format without any additional formatting.'
        no-separator: |-
            [AI] `batgrep` is a command-line tool for Linux and macOS that allows users to search text files for specific patterns using regular expressions, with an additional feature to colorize and format the output.

            The option `--no-separator` is one of its flags, which instructs the tool not to print a separator line before each matched line in the output. By default, when `batgrep` finds a match in a file, it will print the matched line preceded by a line that visually separates it from the surrounding text. With `--no-separator`, this separation is omitted, making the output more compact and focused on the matching lines themselves.
        no-snip: '[AI] `batgrep` is a cat-like pager for grep search results, developed for the Batfish terminal emulator. The `--no-snip` option is used to disable the automatic snipping (highlighting) of matched lines in the output. Instead, the entire line will be displayed when it matches the search pattern.'
        pager: '[AI] `batgrep` is a tool for searching text files using regular expressions with a focus on providing a pleasing and efficient user experience. The option `--pager` tells `batgrep` to use a pager (like less or more) to display the search results one page at a time. This can be useful when dealing with large output, as it allows you to navigate through the results using keyboard commands like ''Page Up'' and ''Page Down''.'
        paging: '[AI] `batgrep` is a cat-like pager for grep search results. The `--paging` option enables pagination when outputting the search results. It allows users to navigate through the pages using arrow keys or numbers, making it easier to review large search results. With this flag, `batgrep` provides a more user-friendly experience and makes it possible to manage and handle large sets of data efficiently.'
        search-pattern: '[AI] `batgrep` is a tool that searches text files for lines containing a specific pattern using regular expressions (regex). The `--search-pattern` option specifies the regex pattern to search for. For example, `--search-pattern="ERROR:.*"` would match lines starting with "ERROR:" followed by any character sequence. It''s a powerful way to filter and navigate through large files quickly.'
        smart-case: '[AI] `batgrep` is a command-line tool for searching text files with the `bat` pager. The `--smart-case` option influences how case sensitivity is applied during searches. With this flag enabled, `batgrep` will perform case-insensitive matches by default for terms that consist of only lowercase characters, but it will perform case-sensitive matches for terms containing uppercase characters. This behavior attempts to provide a good balance between flexibility and precision in text search scenarios.'
        terminal-width: '[AI] `bat` is a cat-like file viewer for the terminal with several useful features, including support for Unicode characters and syntax highlighting for various file types. The `--terminal-width` option is used to set the width of the terminal window that `bat` should adjust its output to fit within. This helps ensure that long lines in the files being viewed do not get truncated when displayed in the terminal.'
