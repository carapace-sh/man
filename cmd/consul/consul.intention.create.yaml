# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create
description: Create intentions for service connections.
flags:
    --allow: Create an intention that allows when matched.
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --deny: Create an intention that denies when matched.
    --file: Read intention data from one or more files.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --meta*=: Metadata to set on the intention, formatted as key=value.
    --namespace=: Specifies the namespace to query.
    --replace: Replace matching intentions.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] `consul intent create` is a command used in Hashicorp Consul, a service discovery and configuration management tool. This command creates an intent in Consul''s intentionality system. Intents represent desired state configurations for your application or infrastructure, such as declaring a service should be registered with a specific tag or port. The command takes an intent file as input, which describes the intended state. Once you create an intent, Consul continuously evaluates its difference from the actual state and proposes actions to converge them. This way, Consul can automatically keep your desired configuration in sync with the real world.'
    flag:
        allow: '[AI] The `consul intent create --allow` command is used in Hashicorp''s Consul service discovery and configuration management tool. This command creates an "intention" in Consul, which defines a desired state for a service or configuration item. The `--allow` flag indicates that Consul should allow this intention to be fulfilled automatically if it doesn''t conflict with any other intentions or policies currently in place. In summary, this command tells Consul to create an intention for a specific configuration and permit it to take effect if there are no conflicting rules.'
        ca-file: '[AI] The `flag "consul intent create --ca-file"` is used in Consul, a Connect and Orchestrate tool for service discovery, configuration, and secrets management. This flag is passed when creating an intent with the Consul API, specifically for specifying the file path to a custom CA (Certificate Authority) certificate that will be used to sign the created intent''s TLS certificate. The purpose of this is to enable secure communication between services using custom certificates signed by a trusted Certificate Authority.'
        ca-path: '[AI] The `consul intent create --ca-path` flag is used with Consul, a Connect and Secure service mesh, to specify the path where Consul should store or retrieve the Certificate Authority (CA) files when creating an intent. An intent represents a desired state for a service in Consul''s service discovery, configuration, and connectivity platform. The `--ca-path` flag helps ensure secure communication by allowing you to provide your own trusted CA certificates.'
        client-cert: '[AI] `consul intent create --client-cert` is a command used with the Consul service discovery and configuration tool. This command creates an Intent resource in Consul, which defines desired state for resources in the Consul service registry. The `--client-cert` flag specifies that the Intent resource will include a client certificate for secure communication between the client and Consul server. This flag is important for securing communications in environments where sensitive data is being managed or accessed by multiple clients.'
        client-key: '[AI] The `consul intent create --client-key` command is used in Hashicorp''s Consul service to create a new intent, which defines a desired state for a service or configuration, with a specified client key. This key uniquely identifies the client making the request and helps secure communication between Consul and the client applications. By specifying the client key during intent creation, you can enforce access control policies, ensuring that only authorized clients can modify the intended configuration.'
        datacenter: '[AI] The `consul intention create --datacenter` command is used in Hashicorp''s Consul service to create a new datacenter definition. A datacenter represents a physically or logically separate cluster of servers in the Consul system. The `create` intent specifies that Consul should create a new datacenter with the given name if it does not already exist. This command is typically used when setting up a new Consul deployment or when managing multiple, isolated Consul clusters.'
        deny: '[AI] The `consul intent create --deny` command in Consul is used to deny the creation of a new intention. An intention in Consul represents a desired state for a service or connection between services. By using `--deny`, you''re specifying that you want to block the creation of an intention with the given parameters, ensuring it does not get created within your Consul service mesh.'
        file: '[AI] The `consul intent create --file` command is used in the Consul service discovery and configuration management tool to create a new intent file. An intent file describes the desired state for a service or application in Consul, including its name, tags, address, and other properties. The `--file` flag specifies the path to an existing YAML or JSON file containing the intent definition, which is then applied to the Consul cluster using the `consul intent create` command. This allows for declarative configuration of services and easy management of their desired states in Consul.'
        http-addr: '[AI] The `--http-addr` flag in Consul''s `intent create` command is used to specify the HTTP address where the intent will be served. This address must be accessible from the Consul server and agent running the intent. When an intent is created with this flag, Consul sets up a service entry for it, allowing other services or applications to discover and communicate with the intent using its defined address.'
        meta: '[AI] The `consul intent create --meta` command is used in the Consul service discovery and configuration management tool to create a new intent with custom metadata. An intent represents a desired state for a service or configuration item in Consul. The `--meta` flag allows users to specify key-value pairs as metadata associated with the intent, enabling additional information to be stored and queried alongside the intent data.'
        namespace: '[AI] The `consul intent create --namespace` command is used with the Consul service discovery and configuration management tool. This specific command creates a new intent resource within a specified namespace in Consul. An intent resource represents a desired state for a service or configuration item, such as a running service instance or a particular configuration value. By using the `--namespace` flag, users can create intents in a specific namespace to manage and isolate resources in multi-tenanted environments.'
        replace: '[AI] `consul intent create --replace` is a command in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. The `--replace` flag modifies an existing resource in Consul with the specified new definition, effectively updating it instead of creating a new one. With `intent create`, Consul records your desired state for resources, and this command applies those intentions to the live configuration, making any necessary changes. Therefore, the `consul intent create --replace` command is used to update an existing resource''s intention, causing Consul to synchronize its live state with the new definition.'
        stale: '[AI] The `consul intent create --stale` command is used in Hashicorp Consul, a service discovery and configuration management tool. This command allows creating or updating an intent with stale data. An intent represents a desired state for resources registered in Consul''s catalog. By using the `--stale` flag, you can bypass Consul''s health checks and create or update an intent even if the associated service is not currently healthy. This might be useful when performing manual updates or when dealing with services that have temporary issues. However, it''s important to note that creating stale intents may cause inconsistencies in your application configuration and should be used with caution.'
        tls-server-name: '[AI] The `--tls-server-name` flag in the Consul `intent create` command is used to specify a custom TLS server name when creating an intent for a service discovery record. This name will be used during TLS handshake negotiations, allowing secure communication between clients and services that use Consul as a service discovery platform. By default, Consul uses the service name as the TLS server name, but this flag allows you to set a different name if required for your specific use case or security policies.'
        token: '[AI] `consul intent create --token` is a command used in the Consul service discovery and configuration management tool. This command creates an intention, which represents a desired state for a service or configuration in the Consul system. The `--token` flag specifies the token of the Consul agent or client that is authorized to create the intention. This command does not immediately apply the intention; it only sets up the intended change, and Consul will apply it during its next checkpoint or when manually triggered with `consul reload`.'
        token-file: '[AI] The `consul intent create --token-file` command is used with the Consul service discovery and configuration management tool. It creates a new intent, which represents a desired state for a resource managed by Consul, such as a service or a configuration. The `--token-file` flag specifies a file from which Consul should read an authentication token, allowing the command to be executed with the appropriate permissions.'
