# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: history [OPTIONâ€¦]
description: Show history
group: install
flags:
    --columns=: What information to show
    --installation=: Work on a non-default system-wide installation
    --ostree-verbose: Show OSTree debug information
    --reverse: Show newest entries first
    --since=: Only show changes after TIME
    --system: Work on the system-wide installation (default)
    --until=: Only show changes before TIME
    -h, --help: Show help options
    -u, --user: Work on the user installation
    -v, --verbose: Show debug information, -vv for more detail
documentation:
    command: '[AI] The `flatpak history` command is used to display the installation history of Flatpak packages on a system. It lists the installed apps, their versions, and the date and time of installation. This command provides a quick overview of the package management history in the Flatpak environment.'
    flag:
        columns: '[AI] `flatpak history` is a command-line utility in Flatpak, a software deployment and application packaging system. The `--columns` option modifies the output format of this command. Specifically, it sets the displayed columns to: Application ID, Version, Installed At, and Size. This means that when you run `flatpak history --columns=Application-ID,Version,Installed-At,Size`, each line in the output will display the Application ID, its Version number, the Installation Time, and the Installed Size of each installed application version in your Flatpak system.'
        help: '[AI] `flatpak history --help` is a command used in the Flatpak package manager to display information about the history of a specific Flatpak application or runtime. This command provides options for controlling the output, such as the number of revisions to be displayed and the format of the output. Some common options include `--limit=N` (to show only the first N revisions), `--output=format` (to specify the desired output format), and `--verbose` (for more detailed output). The command does not modify any packages, it just displays their revision history.'
        installation: '[AI] `flatpak history --installation` is a command used in Flatpak, a software deployment and package management system. This command displays the installation history of all installed applications managed by Flatpak, showing details like installation time, version number, and operation type (install, remove, or update). It helps users keep track of changes to their installed applications and provides useful information when troubleshooting issues.'
        ostree-verbose: '[AI] `flatpak history --ostree-verbose` is a command used in Flatpak, a software deployment and package management system. This command displays detailed information about the history of an application''s OSTREE filesystem snapshots. The `--ostree-verbose` option increases the level of detail provided in the output, displaying commit messages, parent commits, and other metadata related to each snapshot. This command is useful for debugging, tracking changes to installed applications, or managing complex software deployments with multiple versions.'
        reverse: '[AI] `flatpak history --reverse` is a command used in Flatpak, a software deployment and application packaging system. This command displays the installation history of a specific Flatpak application or runtime, but it does so in reverse order. By default, the history is displayed with the most recent installations first, but using `--reverse` will show the oldest installations first. This can be helpful for debugging or understanding the sequence of events leading up to the current state of an installation.'
        since: '[AI] `flatpak history` is a command used in the Flatpak package manager to display the history of installed or previously installed applications and their corresponding versions. The `--since` option filters the output to show only the history of applications that have been updated since a specific date or revision number. For example, `flatpak history --since="2021-03-01"` would display the history of applications that have been updated on or after March 1, 2021.'
        system: '[AI] `flatpak history --system` is a command used in Flatpak, a software deployment and application packaging system. This command displays the version history of all installed system-wide Flatpak applications on your system. It provides detailed information about each installation, such as the installation timestamp, the version number, and the repository from which the application was installed. The output also includes information about the operation that created the history entry (e.g., install, remove, or update). This command is helpful for tracking down when and from where specific applications were installed on your system.'
        until: |-
            [AI] The `flatpak history` command with the `--until` option is used to list the available checkpoints in a Flatpak application's history up until a specific point in time. This can be helpful for reverting an application back to a previous version or for troubleshooting issues.

            For example, running `flatpak history --until=2022-01-01` would display the list of available checkpoints for the application up until January 1, 2022. The output includes the checkpoint ID, date and time, and a brief description of the changes made in each checkpoint.
        user: '[AI] `flatpak history --user` is a command used in the Flatpak package management system to display the installation history of packages installed for a specific user on a Linux system. It lists the installed Flatpaks, their versions, and the date and time of installation. This command provides useful information for tracking down when a particular package was installed or for troubleshooting software issues related to package versions.'
        verbose: '[AI] `flatpak history --verbose` is a command used in Flatpak, a software deployment and package management system. This command displays detailed information about the history of installed Flatpak applications and their versions. The `--verbose` option increases the amount of output to provide more comprehensive information, including installation timestamps, checksums, and build information.'
