# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: init
description: Create a new cargo package in an existing directory
group: package
flags:
    --bin: Use a binary (application) template [default]
    --edition=: Edition to set for the crate generated
    --lib: Use a library template
    --name=: Set the resulting package name, defaults to the directory name
    --registry=: Registry to use
    --vcs=: Initialize a new repository for the given version control system (git, hg, pijul, or fossil) or do not initialize any version control at all (none), overriding a global configuration.
    -h, --help: Print help
    -q, --quiet: Do not print cargo log messages
documentation:
    command: '[AI] `cargo init` is a command used in Rust programming language''s build system, Cargo. It creates a new Rust project with default configuration and necessary files such as a `Cargo.toml` file, `src` directory, and `main.rs` file. The project structure and dependencies are set up based on the given project name.'
    flag:
        bin: '[AI] `cargo init --bin` is a command used in Rust programming language for creating a new Cargo project with a binary (executable) target. When you run this command in your terminal, it sets up a new directory with the basic structure of a Rust project, including a `Cargo.toml` file and source code files. The `--bin` flag indicates that the project''s main target will be an executable binary. Cargo is Rust''s package manager, which helps manage dependencies and build artifacts for your project.'
        edition: '[AI] `cargo init --edition` is a command used with Rust''s package manager, Cargo. This command creates a new Rust project using a specified edition of Rust. The `--edition` flag indicates which version of Rust''s language features to use for the project. By default, Cargo initializes projects with the latest stable edition, but you can specify a different edition if needed. For example, `cargo init --edition 2018` creates a new project using Rust 2018 edition language features.'
        help: '[AI] `cargo init --help` is a command used with Rust''s package manager, Cargo. This command displays detailed help information about initializing a new Rust project using Cargo. It sets up a basic project structure, including a new source file named `main.rs`, and necessary configuration files like `Cargo.toml`. Using this command without any arguments will provide you with an overview of the available options for customization during project creation.'
        lib: '[AI] `cargo init --lib` is a command used with Cargo, Rust''s package manager. This specific command creates a new Rust library project using the default Cargo.toml template. The `--lib` flag indicates that the project will be a library (as opposed to an executable), which means its primary purpose is to provide reusable code for other projects. After running this command, a new directory with the specified project name will contain the necessary files for managing dependencies and building the library using Cargo.'
        name: '[AI] `cargo init` is a command-line tool used in Rust programming language for creating new projects. The `--name` option specifies the name of the new project to be created. For instance, `cargo init --name my_project` creates a new Rust project named "my\_project" with default configurations and dependencies defined in Cargo.toml file.'
        quiet: '[AI] `cargo init --quiet` is a command used in Rust programming language''s build system, Cargo. This command creates a new Rust project with default settings and file structure. The `--quiet` flag suppresses the output of progress messages during the project creation process. In summary, it quickly initializes a new Rust project without any verbose output.'
        registry: '[AI] The `cargo init --registry` command is used to create a new Rust project using Cargo, Rust''s package manager. The `--registry` option specifies that Cargo should initialize the project from the crates.io registry, which is the default and largest registry of Rust packages. This command sets up the basic directory structure for the project, including the `Cargo.toml` file, and initializes it with the default dependencies for a new Rust project.'
        vcs: '[AI] `cargo init --vcs` is a command used with Cargo, Rust''s package manager. This command creates a new Rust project using a specified version control system (VCS), such as Git or Mercurial. It sets up the project structure, including a `Cargo.toml` file for project metadata and dependencies, and initializes the VCS in the new project directory.'
