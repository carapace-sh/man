# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: mirror [ID | URL | PATH] [flags]
description: Mirror a project/repository to the specified location using pull or push method.
flags:
    --allow-divergence: Determines if divergent refs are skipped.
    --direction!=: Mirror direction
    --enabled: Determines if the mirror is enabled.
    --protected-branches-only: Determines if only protected branches are mirrored.
    --url!=: The target URL to which the repository is mirrored.
documentation:
    command: '[AI] The `glab repo mirror` command is used with GitLab CLI (Command Line Interface) to create an exact replica of an existing remote repository, including branches and tags, locally. This allows for offline work or for faster development when working with large or slow repositories over the network. It does not affect the original remote repository.'
    flag:
        allow-divergence: '[AI] The `glab repo mirror --allow-divergence` command is a Git operation used with the Glab tool, which is an extension of Git for working with GitHub repositories from the command line. This command is used to mirror (clone and keep in sync) a repository while allowing divergent branches, meaning that local and remote branches can have different commits. This is useful when dealing with forks or when you want to make local changes that won''t be pushed upstream until you''re ready. The `--allow-divergence` option ensures that Git will track the remote branch but allow local commits that would normally result in a non-fast-forward update, allowing you to continue working on your local repository without worrying about merge conflicts until you''re ready to push your changes back upstream.'
        direction: |-
            [AI] The `glab repo mirror` command is a GitLab CLI (Command Line Interface) tool used to mirror repositories between GitLab instances. The `--direction` option determines the direction of the repository mirroring process.

            * `--mirror <source> <target>`: This is the default behavior, where `<source>` is the existing repository on the source GitLab instance and `<target>` is a new or existing repository on the target GitLab instance. In this case, the data from the source repository is synced to the target repository.
            * `--pull <target> <source>`: In this direction, `<target>` is the local or existing repository on your machine and `<source>` is a remote repository on GitLab. The local repository is updated with the latest changes from the remote repository.

            In summary, the `glab repo mirror --direction` option sets the direction of repository mirroring between two GitLab instances or between a local repository and a remote GitLab repository.
        enabled: |-
            [AI] The `glab repo mirror --enabled` command is a GitLab CLI (Command Line Interface) command used to enable or start mirroring a repository from one GitLab instance to another. This operation creates an exact copy of the original repository on the target GitLab server, keeping both repositories in sync with each other.

            This command does not create a new mirror repository but updates the existing configured mirror relationship between the source and target repositories. Once enabled, any push or pull request made to the source repository will be automatically propagated to the mirrored repository on the target GitLab instance.
        protected-branches-only: '[AI] The `glab repo mirror` command with the `--protected-branches-only` option is a GitLab CLI (Command Line Interface) command used to mirror or clone a GitLab repository while only fetching protected branches. Protected branches are those that have additional access restrictions set at the repository level, ensuring their integrity and preventing unauthorized modifications. By using this flag, you''ll only pull these specific branches during the mirror or clone operation.'
        url: '[AI] The `glab repo mirror --url` command is a GitLab CLI (Command Line Interface) instruction used to mirror a repository from one GitLab instance to another. In simple terms, it synchronizes the entire local copy of a Git repository with an exact remote copy, maintaining the same commit history and file structures between both instances. The `--url` option specifies the URL of the source repository to be mirrored.'
