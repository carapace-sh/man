# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: snapshot-freshness
description: Snapshots the current freshness of the project's sources
flags:
    --exclude*=: Specify the models to exclude
    --profile=: Which profile to load. Overrides setting in dbt_project.yml
    --project-dir=: Which directory to look in for the dbt_project.yml file
    --selector=: The selector name to use, as defined in selectors.yml
    --state=: Use the given directory as the source for json files to compare with this project.
    --threads=: Specify number of threads to use.
    --vars=: Supply variables to the project.
    -o, --output=: Specify the output path for the json report
    -s, --select*=: Specify the nodes to include
    -t, --target=: Which target to load for the given profile
documentation:
    command: '[AI] The `dbt source snapshot-freshness` command is a part of dbt (Data Build Tool), an open-source data transformation and testing toolkit. This specific command checks the freshness of external data sources used in dbt projects, ensuring that the data being referenced by your data models is up-to-date. It compares the last modified timestamp of the source file or database to the corresponding snapshot in the dbt project and reports any differences. Running this command can help prevent data discrepancies due to stale sources.'
    flag:
        exclude: '[AI] `dbt source snapshot-freshness --exclude` is a command in dbt (Data Build Tool) that generates or updates database snapshots for your data models, but skips specific source files or references to them during the process. The `--exclude` flag allows users to exclude certain sources from being included in the snapshot generation or comparison process. This can be useful when dealing with large datasets or when certain sources don''t need to be part of every snapshot, improving the efficiency and flexibility of the data validation workflow.'
        output: '[AI] The `dbt source snapshot-freshness --output` command is used in dbt (Data Build Tool) to check the freshness of data source snapshots. This command generates output in the form of a CSV file, listing all available snapshot ids along with their last modified timestamps and a boolean value indicating if they are considered "fresh" or not based on the `dbt_project.yml` configuration. Fresh snapshots have a boolean value "true" while stale ones have "false". This information can be used to identify and manage data sources with outdated data.'
        profile: |-
            [AI] The `dbt source snapshot-freshness --profile` command is used in dbt (Data Build Tool) to check the freshness of data source snapshots defined in dbt profiles. A dbt profile stores configuration settings for connecting to data sources, databases, and other external dependencies.

            With this command, dbt checks the last modification time of the snapshot files in the specified data sources against the corresponding snapshot IDs saved in the `profiles.yml` file. If there is a discrepancy between the two, dbt will raise a warning or an error, indicating that the snapshot may be outdated and needs to be updated.

            Additionally, this command also validates the connection configurations defined in the profile by attempting to connect to the data sources and retrieve metadata. This helps ensure that the profiles are properly configured before using them for data transformations.
        project-dir: |-
            [AI] The `dbt source snapshot-freshness --project-dir` command is used in dbt (Data Build Tool), an open-source data transformation and orchestration tool, to check the freshness of snapshot files in a given dbt project directory.

            Snapshot files are saved versions of the current state of a data model or database schema that dbt uses for materializing the results of queries. The `snapshot-freshness` command compares the timestamp of the latest snapshot file with the timestamp of the corresponding model or artifact in the source control system and reports if any discrepancy is detected, indicating potential issues with data consistency between the database and the source code.

            Using this command with the `--project-dir` flag specifies the directory path to the dbt project for which you want to check snapshot freshness.
        select: '[AI] `dbt source snapshot-freshness --select` is a command used in dbt (Data Build Tool), an open-source data transformation and testing toolkit. This specific command checks the freshness of snapshots for source files in your dbt project. Snapshots are saved states of the data that your models transform, which can be compared against subsequent runs to detect changes. The `--select` option allows you to filter the output to only display specific columns or rows based on a given SQL query. In summary, this command retrieves snapshot-freshness information for selected source files in your dbt project.'
        selector: '[AI] `dbt source snapshot-freshness --selector` is a command used in dbt (Data Build Tool), an open-source data transformation toolkit. This specific command checks and reports on the freshness of source data snapshots for selected models, helping ensure data consistency and accuracy in data pipelines. By using the `--selector` option, you can filter the models to be checked based on certain criteria such as a specific tag or a naming pattern.'
        state: |-
            [AI] `dbt source snapshot-freshness --state` is a command used in dbt (Data Build Tool), an open-source data transformation toolkit. This specific command checks and reports the freshness state of source snapshots in your dbt project.

            Source snapshots are saved states of external data sources, allowing you to lock in the data schema and data at a particular point in time for analysis. The `--state` flag is used to display the current state of each snapshot, indicating whether they are up-to-date or stale. This command helps ensure that your analytics and reporting are based on accurate and current data from your sources.
        target: '[AI] The `dbt source snapshot-freshness --target` command is a part of dbt (Data Build Tool), an open-source data transformation and testing toolkit. This specific command checks the freshness of sources in your dbt project by creating or updating snapshots for each source file. Snapshots are saved metadata about the state of a source at a particular point in time. By running `dbt source snapshot-freshness --target`, you ensure that dbt has accurate information about your source data, helping to maintain consistency and reproducibility within your data pipelines.'
        threads: '[AI] `dbt source snapshot-freshness --threads` is a command used in dbt (data build tool) to check the freshness of database snapshots. The `--threads` option specifies the number of threads to use for concurrent snapshot comparison, improving overall performance.'
        vars: '[AI] `dbt source snapshot-freshness --vars` is a command used in dbt (data build tool) to check the freshness of data source snapshots and verify if they match with the defined variables. The `--vars` option allows you to pass custom variables to be used during the comparison process. This command helps ensure data consistency between your sources and your analytical models by comparing their contents regularly.'
