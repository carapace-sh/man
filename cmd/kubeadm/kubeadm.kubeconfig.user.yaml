# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: user
description: Output a kubeconfig file for an additional user
flags:
    --client-name=: The name of user. It will be used as the CN if client certificates are created
    --config=: Path to a kubeadm configuration file.
    --org*=: The orgnizations of the client certificate. It will be used as the O if client certificates are created
    --token=: The token that should be used as the authentication mechanism for this kubeconfig, instead of client certificates
    --validity-period=: The validity period of the client certificate. It is an offset from the current time.
documentation:
    command: '[AI] `kubeadm kubeconfig user` is a command used in Kubernetes to generate a new KubeConfig file for a specific user. This command creates or updates an existing KubeConfig file with the necessary authentication and cluster information for that particular user, allowing them to interact with the Kubernetes cluster using various tools like `kubectl`. The generated file will typically be saved in the home directory of the user under `~/.kube/config`.'
    flag:
        client-name: '[AI] The `kubeadm kubeconfig user --client-name` option is used when generating a new Kubernetes configuration file using `kubeadm init`. This option sets the name of the user that will be associated with the client certificate and key in the resulting configuration file. The user name can be any string, and it helps to distinguish between different users or clients that may use this configuration file to interact with the Kubernetes cluster.'
        config: |-
            [AI] `kubeadm kubeconfig user --config` is a command used to create a new Kubernetes user configuration file with RBAC permissions. The `kubeadm` tool is utilized in setting up a Kubernetes cluster, and the `kubeconfig` subcommand manages the configuration files for interacting with the cluster.

            The `user --config` flag creates a new YAML configuration file containing user credentials (client certificate and key), and sets the necessary context and current-context fields. The RBAC permissions are defined in a separate ClusterRoleBinding or RoleBinding YAML file, which is provided as an argument or saved in a Kubernetes secret. This command allows users to securely access and manage resources in a cluster with fine-grained access control.
        org: '[AI] The `kubeadm kubeconfig user --org` flag is used when generating a new Kubernetes user configuration file using `kubeadm`. This flag sets the Organization field in the Kubernetes User resource to the specified value, which can be useful for organizing and managing access to multiple clusters or namespaces. The User resource is defined in the Kubernetes API and represents an identity within the cluster that has permissions associated with it.'
        token: '[AI] The `kubeadm kubeconfig user --token` command generates a new Kubernetes user token for authentication with the Kubernetes cluster managed by `kubeadm`. This token is essential for interacting with the Kubernetes API server using tools like `kubectl` or custom applications. The output of this command includes the user name, CA certificate, and the token itself, which should be kept securely as it grants access to the cluster.'
        validity-period: '[AI] `kubeadm kubeconfig user --validity-period` is a command-line option used in Kubernetes to configure the validity period of user certificates issued by the `kubeadm` initiative. The flag sets the duration for which each user certificate will be considered valid before needing to be renewed. This helps maintain security by ensuring that old certificates are replaced with new ones, reducing the risk of unauthorized access to your Kubernetes cluster.'
