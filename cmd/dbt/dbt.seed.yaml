# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: seed
description: Load data from csv files into your data warehouse
flags:
    --exclude*=: Specify the models to exclude
    --log-path=: Configure the 'log-path'
    --no-version-check: Skip ensuring dbt's version matches the one specified in the dbt_project.yml
    --profile=: Which profile to load. Overrides setting in dbt_project.yml
    --project-dir=: Which directory to look in for the dbt_project.yml file
    --selector=: The selector name to use
    --show: Show a sample of the loaded data in the terminal
    --state=: Jse the given directory as the source for json files to compare
    --target-path=: Configure the 'target-path'
    --threads=: Specify number of threads to use while executing models
    --vars=: Supply variables to the project
    -f, --full-refresh: Drop existing seed tables and recreate them
    -h, --help: show this help message and exit
    -m, --models*=: Specify the nodes to include
    -s, --select*=: Specify the nodes to include
    -t, --target=: Which target to load for the given profile
documentation:
    command: '[AI] `dbt seed` is a command used in dbt (data build tool) projects to execute SQL scripts that set up the initial state of a database schema or data. These scripts, often located in a `seeds` folder within a dbt project, are applied before modeling and transforming data with dbt''s core functionality. In simple terms, it is used for setting up the database environment with necessary data or schema using SQL scripts.'
    flag:
        exclude: '[AI] `dbt seed --exclude` is a command used in dbt (Data Build Tool), an open-source data transformation and testing toolkit. This command allows you to exclude specific seeds (scripts that generate test data) from being run during the seeding process. By default, all seeds are executed when using the `dbt seed` command. However, with `--exclude`, you can specify one or more seeds to be skipped by passing their filenames as arguments. This can be useful when you want to ensure that certain test data is not generated during a specific seeding process.'
        full-refresh: |-
            [AI] `dbt seed --full-refresh` is a command used in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This command is used to refresh a database seed file, which contains initial data needed for the data model.

            With `--full-refresh`, dbt will drop all existing data in the target tables before loading new seed data. It is often used when you want to ensure that your database starts with a clean slate, or when making significant changes to the seed data.

            Additionally, it will also call any seeds defined as "dependencies" of the current seed file, ensuring they are executed in order. This helps maintain consistency and accuracy in your data modeling process.
        help: '[AI] `dbt seed --help` is a command used in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This command displays detailed help information about the `seed` sub-command of dbt. The `seed` command is used to create initial data for your dbt project, often referred to as seed data. Using `dbt seed --help` will provide you with information on how to use this command, its available options and arguments, and examples of usage.'
        log-path: '[AI] `dbt seed --log-path` is a command used in dbt (data build tool) to generate seed data for your models. The `--log-path` option specifies the file path where the logs of the seeding process will be written. This option allows users to keep track of the seeding progress and any potential issues that may occur during the process, making it easier for debugging if necessary.'
        models: '[AI] `dbt seed --models` is a command used in dbt (data build tool), an open-source data transformation and modeling toolkit. This command is used to create, update, or replace database schema and seed data using SQL files stored in the `models/seed` directory. It runs these SQL files as seeds before running your regular data models in dbt projects. This helps ensure that your database starts in a known state for each execution of your tests and production workflows.'
        no-version-check: |-
            [AI] `dbt seed --no-version-check` is a command used in dbt (Data Build Tool), an open-source data transformation and testing tool. This specific command is used to run the seeding process, which is responsible for populating databases with initial data. The `--no-version-check` flag disables version checks during this process.

            By default, dbt checks the project's `profiles.yml` and `profiles_staging.yml` files to ensure that the seeding environment matches the versions of the profiles exactly. When using `--no-version-check`, dbt will not perform these checks and proceed with seeding regardless of any potential mismatches. This can be useful when working in development or testing environments where strict version adherence isn't necessary, but it is generally recommended to use caution when disabling version checks to avoid unintended side effects.
        profile: '[AI] `dbt seed --profile` is a command used in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This command executes seeds files, which are SQL scripts that contain initial data set up for your data models. The `--profile` option specifies the profile file containing database connection information for dbt to connect and execute the seeding scripts.'
        project-dir: '[AI] `dbt seed --project-dir` is a command used in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This command is used to create new seeds files for dbt models, which are the starting point for data transformations. The `--project-dir` option specifies the directory where the new seeds will be created. It assumes that there''s already a valid dbt project setup in the given directory.'
        select: '[AI] `dbt seed --select` is a command used in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This specific command is utilized for running seeds files selectively, rather than all of them at once. Seeds are scripts that contain initialization logic for your dbt project, such as creating tables or loading initial data. By using `--select` option followed by the names of the desired seeds, you can run only those specified seeds instead of the entire set. This command helps in maintaining better control over the seeding process and reduces unnecessary data manipulation.'
        selector: '[AI] `dbt seed` is a command used in dbt (data build tool) project for creating initial data for your database schema using seeds files. The `--selector` option filters which seeds files to run based on their tags. For instance, if you have multiple seeds files with different tags, running `dbt seed --selector tag:v1` would execute only the seeds file tagged as ''v1''. This allows for selective data population during development or testing.'
        show: '[AI] `dbt seed --show` is a command used in dbt (Data Build Tool), an open-source data transformation and modeling toolkit. This command displays information about seeds, which are scripts that initialize and prepare the environment for data model building. Specifically, it shows a list of available seeds along with their descriptions. It''s commonly used when setting up a new dbt project or when managing multiple seeds to choose the appropriate one for a given scenario.'
        state: '[AI] `dbt seed --state` is a command used in dbt (Data Build Tool), an open-source data transformation and orchestration tool. This command is used to apply seed data to your database schema. Seed data are initial data that need to be present for certain transformations to run properly. By using `--state`, you''re instructing dbt to check the current state of your database and only apply the necessary seed data, which can save time and resources by avoiding unnecessary data changes.'
        target: '[AI] `dbt seed --target` is a command used in dbt (data build tool), an open-source data transformation and orchestration tool. This command runs seeds, which are SQL scripts designed to create or initialize the metadata schema for a dbt project. The `--target` option specifies the database or cloud platform destination where these seeds will be applied. It ensures that the desired initial state of your database is established before running production transformations.'
        target-path: '[AI] `dbt seed --target-path` is a command used in dbt (Data Build Tool), an open-source data transformation tool. This command is for generating seed data, which is initial data that sets up the state of a database before running other transformations. The `--target-path` option specifies the local file path or directory where the generated seed data files will be saved. These files follow the dbt model format and can be loaded into the database using dbt or other methods.'
        threads: '[AI] `dbt seed --threads` is a command used in dbt (Data Build Tool), an open-source data transformation tool, to seed database tables with initial data. The `--threads` option specifies the number of threads to use for running the seeding process in parallel. By default, dbt uses one thread. Using multiple threads can improve the performance of the seeding process by allowing dbt to execute multiple tasks simultaneously. However, it''s essential to consider that using too many threads may lead to increased resource usage and potential contention issues.'
        vars: '[AI] `dbt seed --vars` is a command used in dbt (Data Build Tool), an open-source data transformation and modeling toolkit. This command is used to initialize a new dbt project and apply custom variable configurations through a `.variables.yml` file. The `--vars` option specifies the path to this file, allowing users to define project-specific variables that will be referenced within their dbt models and tests.'
