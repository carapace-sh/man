# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: rec
description: Record terminal session
flags:
    --append: append to existing recording
    --overwrite: overwrite the file if it already exists
    --raw: save only raw stdout output
    --stdin: enable stdin recording, disabled by default
    -c, --command=: command to record, defaults to $SHELL
    -e, --env=: list of environment variables to capture
    -h, --help: show this help message and exit
    -i, --idle-time-limit=: limit recorded idle time to given number of seconds
    -q, --quiet: be quiet, suppress all notices/warnings (implies -y)
    -t, --title=: title of the asciicast
    -y, --yes: answer "yes" to all prompts (e.g. upload confirmation)
documentation:
    command: '[AI] `asciinema rec` is a command used in Unix-like systems to start recording a new session video using asciinema, an application that records terminal sessions as replayable text-based movies. When executed without any arguments, it opens an interactive terminal and begins recording the session from that point onwards. The resulting video file can be saved and shared with others who can then replay it in a terminal emulator to see exactly what commands were executed and how the output looked at each step.'
    flag:
        append: '[AI] `asciinema rec --append` is a command used in the Asciinema project to record and append interactive terminal sessions as animated GIF or MP4 videos. The `--append` option tells Asciinema to add the new recording to an existing file instead of creating a new one. This allows for continuous recording of terminal sessions over multiple commands or sessions.'
        command: '[AI] `ascinema rec --command` is a command used in asciinema, a tool for recording and sharing terminal sessions as replayable texts or videos. The `rec` subcommand is used to record a new session, while `--command` is an option that specifies the command to be executed in that session. So, `ascinema rec --command [command]` records a new terminal session with the given command being run inside it.'
        env: '[AI] `asciinema rec --env` is a command used in the Asciinema project to record and save terminal sessions as replayable scripts or animated GIFs. The `--env` option sets environment variables for the recording, allowing customization of the recording process. For example, it can be used to set the terminal title or specify a custom theme. The recorded output can be saved as a .asciinema file, which can be played back in various terminals and IDEs.'
        help: '[AI] `asciinema rec --help` is a command used in the asciinema project to create and manage interactive terminal recordings. The `--help` option is for displaying detailed help information about the `rec` subcommand of asciinema. It provides a summary of what `rec` does (i.e., records terminal sessions), options for customizing the recording output, such as setting the name and format, and details on how to use it effectively.'
        idle-time-limit: '[AI] `asciinema rec --idle-time-limit` is a command used with the asciinema recording tool to set an idle time limit while creating a recording. The option `--idle-time-limit` followed by a numeric value in seconds specifies that any period of inactivity longer than this limit will be removed from the final recording file. This can help keep recordings concise and focused on active terminal sessions.'
        overwrite: '[AI] `asciinema rec --overwrite` is a command used in asciinema, a tool for recording and sharing terminal sessions as replayable texts or videos. The `--overwrite` option allows you to record a new session with the same file name as an existing one, replacing the previous recording instead of creating a new file. In summary, it overwrites an existing ascinema recording file with a new one.'
        quiet: '[AI] `asciinema rec --quiet` is a command used in the Asciinema project to record terminal sessions as videos or animated GIFs. The `--quiet` option tells Asciinema to run in quiet mode, which means it will not output any progress messages during recording. This can be useful for automating recordings or running them in background without interfering with the terminal output.'
        raw: '[AI] `asciinema rec --raw` is a command used in Unix-like operating systems to record terminal sessions as text-based files, using the asciinema recording tool. The `--raw` option tells asciinema to output the recorded data as plain text, without any additional formatting or encoding. This can be useful for sharing scripts or commands with others, allowing them to directly copy and paste the content into their own terminals.'
        stdin: '[AI] `asciinema rec --stdin` is a command used in Unix-like operating systems, specifically with the `asciinema` tool. This command records an interactive terminal session as a text file or a GIF animation. The `--stdin` flag indicates that input to the recorded session will come from standard input (usually a keyboard), instead of reading input from a file. This is useful when recording sessions where user input is required during the execution of commands. The resulting output can be shared with others, enabling reproducibility and ease of understanding of complex terminal interactions.'
        title: '[AI] `asciinema rec --title` is a command used in the `asciinema` recording tool for creating and saving terminal session recordings. The `--title` option allows users to specify a descriptive title for the recording file. When this command is executed, asciinema starts recording the terminal session with the given title and saves it as a .asciinema file.'
        "yes": '[AI] `asciinema rec --yes` is a command used in Unix-like operating systems, specifically in the asciinema project which records and replays terminal sessions as videos or animated GIFs. The `rec` subcommand is responsible for recording new sessions, and the `--yes` flag sets an option to automatically start recording when invoked without any further confirmation prompt. So, in simple terms, `asciinema rec --yes` starts recording a new terminal session immediately upon execution without asking for confirmation.'
