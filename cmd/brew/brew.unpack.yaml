# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: unpack
description: Unpack the source files for <formula> into subdirectories of the current working directory
group: developer
flags:
    --debug: Display any debugging information.
    --destdir: Create subdirectories in the directory named by <path> instead.
    --force: Overwrite the destination directory if it already exists.
    --git: Initialise a Git repository in the unpacked source. This is useful for creating patches for the software.
    --help: Show this message.
    --patch: Patches for <formula> will be applied to the unpacked source.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew unpack` is a Homebrew (MacOS package manager) command used to extract the contents of a previously downloaded, but not yet installed, Homebrew package. When you run `brew install` for a new package, Homebrew first downloads the package from its origin server and saves it in the `/usr/local/Homebrew/downloads/` directory. The `brew unpack` command extracts the contents of that downloaded package into the appropriate location in the `/usr/local/Homebrew/` directory, preparing it for installation with a later `brew install` command if desired.'
    flag:
        debug: '[AI] `brew unpack --debug` is a command used in Homebrew, a popular package manager for macOS. This command is used to download and extract the source code of a formula from a Git repository, but with debug mode enabled. The debug mode provides more detailed output and error messages during the build process, which can be helpful for troubleshooting and understanding what''s going on behind the scenes when installing or updating a Homebrew package.'
        destdir: '[AI] `brew unpack --destdir` is a command used in Homebrew, a package manager for macOS. This command unpacks an already downloaded Homebrew archive (often with a .tar.gz or .zip extension) into a specified directory (--destdir) within the system, allowing users to manually install or manage its contents.'
        force: '[AI] `brew unpack --force` is a command used in Homebrew, a popular package manager for macOS. This command is used to extract the contents of an already downloaded but not yet installed Homebrew formula or cask. The `--force` flag overrides any conflicts or errors that might occur during the extraction process. In summary, it forces the extraction of the contents of a previously downloaded package even if there are potential issues.'
        git: '[AI] `brew unpack --git` is a command used in Homebrew, a popular package manager for macOS. This command is used to download and extract the source code of a specific Git repository managed by Homebrew. The `--git` option specifies that the repository should be cloned from a given URL instead of using an existing local copy or a precompiled bottle. Once the repository is extracted, you can build and install its software using other Homebrew commands like `brew install` or `brew link`.'
        help: |-
            [AI] `brew unpack` is a command provided by Homebrew, a popular package manager for macOS. The `--help` option is used to display detailed information about how to use this specific command.

            When you run `brew unpack --help`, the output will explain that this command is used to extract files from Homebrew's bottle caches into a local directory. This can be useful when you need to install software from source or want to modify its source code before installing it. The help message will also provide examples of how to use the command, such as `brew unpack mysql` which would extract the MySQL bottle files to a new directory named `mysql`.
        patch: '[AI] `brew unpack --patch` is a command used in Homebrew, a popular package manager for macOS. This command is used to extract the source code of a patch file that has been downloaded but not yet applied during the installation or updating of a Homebrew formula. The `--patch` flag indicates that the file to be extracted is a patch file rather than the regular source code. Once extracted, the patch can be manually applied using tools like `git` before building and installing the software.'
        quiet: '[AI] `brew unpack` is a command-line tool from Homebrew, a popular package manager for macOS. The `--quiet` option is used to suppress output during the operation. So, when you run `brew unpack --quiet`, it extracts the contents of an previously downloaded but not yet installed Homebrew package without printing any messages or progress indicators to the terminal.'
        verbose: '[AI] `brew unpack --verbose` is a command used in Homebrew, a popular package manager for macOS. This command is used to extract the contents of an already downloaded Homebrew bottle, which is a pre-compiled and ready-to-install package. The `--verbose` option increases the amount of information output during the unpacking process, allowing users to see more details about what is being extracted.'
