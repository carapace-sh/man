# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: read
description: Read an ACL policy
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --id=: The ID of the policy to read.
    --meta: Indicates that policy metadata such as the content hash and raft indices should be shown for each entry
    --name=: The name of the policy to read.
    --namespace=: Specifies the namespace to query.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul acl policy read` command is used in Hashicorp Consul to retrieve the details of an access control list (ACL) policy. It returns the configuration of the specified policy, including its ID, name, and rules that define which principals have what permissions on which resources or scopes within the Consul service.'
    flag:
        ca-file: |-
            [AI] `consul acl policy read --ca-file` is a command used with Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is specific to Consul's Access Control List (ACL) feature.

            The `read` part of the command signifies that the intention is to retrieve information from the Consul server. In this context, it refers to reading an ACL policy.

            `--ca-file` is a flag that specifies the location of the CA (Certificate Authority) file. It is used to authenticate the communication between the client running the command and the Consul server. The CA file contains the digital certificates required for secure communication, ensuring data integrity and confidentiality during the exchange.
        ca-path: '[AI] The `consul acl policy read --ca-path` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command reads Access Control List (ACL) policies from a file signed with the specified CA (Certificate Authority) certificate path to ensure the authenticity and integrity of the policy files. The policies define who (identity or service) has access to what resources in the Consul cluster, enforcing security rules and access controls.'
        client-cert: |-
            [AI] The `consul acl policy read --client-cert` command is used with the Hashicorp Consul service, which is a popular service mesh and configuration management tool. This command is part of Consul's Access Control List (ACL) subsystem.

            The purpose of this command is to read and return an ACL policy that grants or denies access to specific resources within Consul. The `--client-cert` flag indicates that the requesting client should present a valid TLS client certificate for authentication. This adds an additional layer of security by requiring clients to provide a trusted certificate before the ACL policy is returned. The output of this command is usually in JSON format and contains the policy rules, which define what actions are allowed or denied on which resources.
        client-key: |-
            [AI] `consul acl policy read --client-key` is a command used with Consul, an open-source tool for service discovery, configuration, and orchestration. This command is specific to the Access Control List (ACL) feature in Consul, which helps manage permissions for different resources in the Consul ecosystem.

            The `read` part of the command refers to the action being performed, which is reading or retrieving an ACL policy from the Consul server. The `--client-key` flag specifies the client key, also known as the authentication token, used to authenticate the request and authorize access to the Consul API. This ensures that only authorized clients can read the sensitive ACL policies.
        datacenter: |-
            [AI] The `consul acl policy read --datacenter` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is specifically related to Access Control Lists (ACL) policies in Consul's Data Center feature.

            In simpler terms, this command reads the current ACL policy applied within a specific datacenter in Consul. It does not modify any policies but only retrieves their information. Using it helps understand the access control rules that apply to various resources within the targeted datacenter.
        format: '[AI] `consul acl policy read --format` is a command used with Hashicorp''s Consul service to retrieve an Access Control List (ACL) policy in a customized format. The `--format` flag determines how the output of the policy will be displayed, allowing for easier processing and parsing by scripts or other tools. Examples of formats include "json", "hcl" or "table". This command retrieves the current ACL policy from Consul and presents it in the specified format.'
        http-addr: '[AI] The `consul acl policy read --http-addr` command is used with the Consul Access Control List (ACL) tool to retrieve an ACL policy that grants read access to resources over HTTP, specifically specifying the given HTTP address. Consul is a popular service discovery, configuration, and orchestration tool, and its ACL feature allows you to define and enforce access policies for different services and resources within your infrastructure. By using this command, you can check the current policy that applies to reading data from Consul via an HTTP connection at the provided address.'
        id: |-
            [AI] The `consul acl policy read --id` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command reads the Access Control List (ACL) policy identified by the provided ID.

            Consul's ACL feature enables you to define roles and permissions for different users or teams in your infrastructure. The policies define who can access what resources within Consul.

            By executing `consul acl policy read --id <ID>`, you obtain the details of the specific policy with the given ID, allowing you to review and understand the rules defined for that policy, such as the allowed actions (read, write, delete), the resources scoped (services, keys, nodes, etc.), and any additional conditions or filters.
        meta: '[AI] The `consul acl policy read --meta` command is used with the Consul Access Control List (ACL) system to retrieve metadata about saved ACL policies in Hashicorp Consul. Metadata can include things like the name, ID, and creation time of a policy. This command does not change the policy itself, but rather provides additional information about it.'
        name: '[AI] The `consul acl policy read --name` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command retrieves the details of an Access Control List (ACL) policy by its name within the Consul system. It helps administrators view and manage the rules that control access to different resources within Consul.'
        namespace: |-
            [AI] The `consul acl policy read --namespace` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is specifically related to the Access Control List (ACL) feature of Consul, which allows defining and enforcing access policies to its various resources.

            The `read` keyword indicates that this command is used to check or retrieve the current policy rules, rather than modify them. The `--namespace` argument specifies a particular Kubernetes namespace in which to operate. This means that the command will return only the policies that apply to Consul resources within the specified Kubernetes namespace.
        stale: '[AI] The `consul acl policy read --stale` command is used in the Consul Access Control List (ACL) system to retrieve the current access control policies from the Consul server, even if those policies have expired or are marked as "stale." This means that the command will return policies that may no longer be up-to-date, but still provides a snapshot of the past policy configuration. It''s important to note that using stale policies can lead to security vulnerabilities, so they should only be used for troubleshooting or other non-production purposes.'
        tls-server-name: '[AI] `consul acl policy read --tls-server-name` is a command used with the Consul ACL (Access Control List) tool. It reads an Access Control Policy from a Consul server, but with added security by specifying a TLS server name as an argument. This ensures that the request to read the policy is encrypted and authenticated only with the named server, enhancing the security of accessing sensitive policies within the Consul service.'
        token: '[AI] The `consul acl policy read --token` command is used with the Consul Access Control List (ACL) tool to retrieve the details of an ACL policy identified by a specific token. Consul ACL policies define who has access to which resources within a Consul cluster, such as keys, values, and services. The `read` action allows viewing the specified policy''s information without making any modifications. The `--token` argument is used to provide the token associated with the desired policy. This command outputs JSON containing the policy''s name, ID, rules (permissions), and other metadata.'
        token-file: '[AI] The `consul acl policy read --token-file` command is used to read Consul Access Control List (ACL) policies from a file, authenticated by providing a valid Consul token via the `--token-file` flag. Consul ACL policies define access rules for different parts of the Consul service, such as keys, services, and nodes. By reading policies from a file with this command, an administrator can easily manage and update Consul access control configurations.'
