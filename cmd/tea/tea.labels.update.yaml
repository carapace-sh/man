# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update
description: Update a label
flags:
    --color=: label color value
    --description=: label description
    --id=: label id
    --name=: label name
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: '[AI] The `tea labels update` command is used in the TeaDB database management system to update existing labels in the metadata of tables or views. This command does not modify the data within these objects, but only changes their associated labels. These labels can be used for various purposes such as documentation, organization, or tagging objects with specific attributes. The syntax generally involves specifying the name of the database object and the new label value(s). For example: `tea labels update mytable label1="new_value1" label2="new_value2"`'
    flag:
        color: '[AI] The command `tea labels update --color` is used in the TeaDB database management system to update existing labels with new colors. It modifies the label data in the database, allowing users to change the visual representation of their labels for better organization and identification. This command does not affect any metadata or data associated with the labeled items, it solely updates the color information of the labels.'
        description: '[AI] The `tea labels update --description` command is used in the context of version control systems like Git to modify the description or comment associated with a specific tag or label. This command updates the description text provided when creating the label, allowing users to add more detailed or informative descriptions for easier identification and understanding of the labeled commit or tag.'
        id: '[AI] The `tea labels update --id` command is used to update the label of a specific tea item in a system or database, identified by the given ID. This command assumes that there is an existing labeling system for tea items and that the system provides an update function with an ID parameter to identify the specific item to be updated. The command may take additional arguments such as the new label value or may require user input to specify the new label.'
        login: '[AI] The command `tea labels update --login` is used in the TeaDB database management system to update existing label keys or add new ones to database objects, such as tables or indices. The `--login` option is required to authenticate and provide access credentials for connecting to the TeaDB server before running the update command. This ensures that only authorized users are able to modify labels associated with their databases.'
        name: '[AI] `tea labels update --name` is a command used in Kubernetes to update the metadata labels of one or more Kubernetes objects, such as Pods or Services, with a new label value or to add a new label. The `--name` flag is used to specify the name of the object(s) to be updated.'
        output: '[AI] The `tea labels update --output` command is used in the TeaDB, a database tool for managing and querying metadata of tea packages. This command updates the labels of selected tea packages with new information and outputs the changes as text. It modifies the database without requiring user confirmation for each label update.'
        remote: '[AI] The command `tea labels update --remote` is used in the TeaDB database management tool to update remote labels, which are metadata tags associated with Teaprojects or Teatags in a GitOps workflow managed by Tectilon''s TeaDB. This command synchronizes any changes made to labels on the remote repository with the local one, ensuring consistency between both.'
        repo: '[AI] `tea labels update --repo` is a command used in the Tea packaging system. It updates the labels of packages in a specific repository. Repositories are collections of packages managed by Tea. The command retrieves the latest label information from the upstream source and applies it to the local package labels, ensuring that they remain consistent with their sources.'
