# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: bugreport
description: Collect information for user to file a bug report
group: interrogator
flags:
    --diagnose?: Create a zip archive of supplemental information about the user’s machine
    --no-diagnose: Create a zip archive of supplemental information about the user’s machine
    -o, --output-directory=: Place the resulting bug report file in <path> instead of the current directory
    -s, --suffix=: Specify an alternate suffix for the bugreport name
documentation:
    command: |-
        [AI] The `git bugreport` command is not a standard Git command. There seems to be some confusion as it doesn't exist in Git's default functionalities. To create a bug report using Git, you can follow these steps instead:

        1. Isolate the issue by creating a new branch from the commit where the problem was introduced. `git checkout -b <new_branch> <commit>`
        2. Make and test your fix on the new branch.
        3. Commit your changes with an informative message that explains what the bug was and how you fixed it. Use `git add <file_path>` to stage files for commit, then `git commit -m "<commit_message>"`
        4. Push the new branch to a remote repository to share your fix, e.g., GitHub or GitLab: `git push origin <new_branch>`
        5. Open a new bug report in your issue tracking system (like GitHub Issues or Jira), and include the link to your new branch or commit message as part of the description.
    flag:
        diagnose: '[AI] `git bugreport --diagnose` is a command used in Git, a popular version control system. This command generates a detailed diagnostic report when an error occurs during a Git operation. The output includes relevant information such as the Git version, operating system, and a stack trace of the error, which can be useful for debugging and reporting bugs to the Git development community. It''s important to note that using this command requires Git to be compiled with debug information enabled, as it provides more extensive diagnostic data than the default output.'
        no-diagnose: |-
            [AI] `git bugreport` is a Git command used to generate a detailed report about a commit or a set of commits, which can be useful for reporting bugs or analyzing issues in a Git repository. The `--no-diagnose` option is an argument that can be passed to this command to disable the automatic diagnosis feature.

            When you run `git bugreport` without any options, it attempts to diagnose potential issues in the given commits by comparing them with their parent commits and checking for various types of changes such as file modifications, deleted files, or format differences. This diagnostic output is displayed along with the regular report.

            However, when you use `git bugreport --no-diagnose`, Git will only generate the standard report without performing any diagnostics or displaying any related messages. The generated report will only contain information about the commits, such as their hash values, authors, dates, and commit messages.
        output-directory: |-
            [AI] The `git bugreport` command is not a standard Git command, so it doesn't exist in Git by default. However, I assume you meant to ask about the `--format` and `--output-directory` options available with Git's built-in `log` command for generating reports related to commits or errors.

            The `git log --format=<format>` command is used to customize the output format of the commit history. The `--output-directory` option specifies a directory in which Git should write the output files instead of printing them on the console. When you combine these options with other format options like `--on-each-line`, `%h`, or `%an`, you can generate detailed reports for specific issues or bugs, which can be saved and shared easily.

            For example:
            ```bash
            git log --format='%h %ad | %s%d' --output-directory=path/to/output/directory <commit-hash>
            ```
            This command generates a report containing the commit hash, author date, commit message, and differences for the given commit and saves the report in the specified output directory.
        suffix: '[AI] The `git bugreport` command is not a standard Git command, but an extension or alias that might be used in specific workflows to generate a bug report from a set of commit differences or patches. The `--suffix` option, when used with this command, specifies a file suffix for the generated bug report file(s). For example, `git bugreport --suffix=.txt` would result in a text file containing the bug report content.'
