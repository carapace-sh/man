# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: generate
description: Generate Kubernetes CRD YAML file
flags:
    --annotation*=: Any annotations you want to add (to store functions only)
    --api=: CRD API version e.g openfaas.com/v1, serving.knative.dev/v1
    --arch=: Desired image arch. (Default x86_64)
    --envsubst: Substitute environment variables in stack.yml file
    --from-store=: generate using a store image
    --tag=: Override latest tag on function Docker image, accepts 'latest', 'sha', 'branch', 'describe'
    -n, --namespace=: Kubernetes namespace for functions
documentation:
    command: '[AI] The `faas-cli generate` command is used with the FaaS (Function-as-a-Service) CLI tool to create new serverless functions based on a chosen template. It generates a new directory containing the function code, required configuration files, and necessary dependencies based on the specified template. This command simplifies the process of setting up a new FaaS function from scratch.'
    flag:
        annotation: '[AI] The `faas-cli generate --annotation` command is a part of FaaS-CLI (Function-as-a-Service Command Line Interface) tool, used for generating Kubernetes annotations for serverless functions. Annotation is metadata that can be added to Kubernetes objects to store arbitrary key-value pairs. This command generates annotations specific to FaaS functions, simplifying the process of managing and deploying these functions on Kubernetes platforms.'
        api: '[AI] `faas-cli generate --api` is a command used in the FaaS (Function-as-a-Service) toolchain provided by OpenFaaS. This command generates an OpenAPI definition file (usually named `api.yaml`) based on the existing functions defined in the local FaaS registry. It helps to document and describe the input, output, and other properties of each function as OpenAPI specification, which is essential for various purposes such as enabling automatic generation of client code or visualizing the API in a user-friendly format.'
        arch: '[AI] The `faas-cli generate --arch` command is used with the FaaS (Function-as-a-Service) CLI tool to create a new serverless function project for a specific architecture. The `--arch` flag specifies the target architecture such as `arm64`, `x86_32`, or `x86_64`. This command generates the necessary project files, including the function template and Dockerfile, configured for the specified architecture. It sets up the development environment for building and deploying functions to FaaS platforms like OpenFaaS, AWS Lambda, etc., on the chosen architecture.'
        envsubst: '[AI] `faas-cli generate --envsubst` is a command from FaaS-cli (Function-as-a-Service CLI) tool used to generate and manage serverless functions with various cloud providers. This specific command performs environment variable substitution in YAML files. It scans the specified YAML file(s) for placeholders enclosed within ${} or $$ and replaces them with the corresponding values from the environment, allowing customization of configuration files without hardcoding sensitive data.'
        from-store: '[AI] The `faas-cli generate --from-store` command is a function in FaaS (Function as a Service) cli tool, specifically for the OpenFaaS project. It generates new functions from existing functions stored in the OpenFaaas registry. This means that you can reuse an existing function''s definition, configuration, and code to create a new function without having to write or deploy it again from scratch. The `--from-store` flag specifies where to pull the source function from, which is usually a local or remote OpenFaaS registry.'
        namespace: '[AI] The `faas-cli generate` command with the `--namespace` flag is used in FaaS (Function-as-a-Service) development with the FaaS CLI tool. This command generates Kubernetes resources, such as custom functions and their associated Ingress and Deployment configurations. The `--namespace` flag specifies the Kubernetes namespace where these generated resources will be created or updated.'
        tag: '[AI] `faas-cli generate --tag` is a command provided by the FaaS (Function-as-a-Service) CLI tool for creating and managing serverless functions using the OpenFaaS platform. This specific command generates a new function based on an existing template or codebase, and assigns it a specified tag as its version number. This tag is used to manage different versions of the same function and can be useful for rolling out updates or revert to previous versions if needed.'
