# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: split [OPTIONS] [PATHS]...
description: Split a revision in two
flags:
    -h, --help: Print help (see more with '--help')
    -i, --interactive: Interactively choose which parts to split. This is the default if no paths are provided
    -r, --revision=: The revision to split
documentation:
    command: '[AI] The `jj split` command is a Vim plugin that allows you to easily navigate between split windows. It extends the native Vim `:split` command, which splits the window vertically or horizontally and opens a new file in it. With `jj`, you can quickly move between different splits by pressing `jj` followed by the number of the desired split window. For example, `jj 3` moves the focus to the third split window from the left. This plugin makes it easier to work with multiple files or panes in Vim.'
    flag:
        help: |-
            [AI] The command `jj split --help` is used with the Jupyter-Jupyter tool, which is a plugin for Git that enables efficient Git workflows in Jupyter Notebooks and terminals. The `split` subcommand of this tool splits a Git repository into multiple repositories at a specified directory or file pattern.

            The `--help` flag provides information about how to use the `split` command, including arguments to specify directories or file patterns to split, options for creating new Git repositories with different names or initial commit messages, and other relevant details.
        interactive: |-
            [AI] The `jj` command is an interactive text editor for JSON files, often used in conjunction with Git for editing and committing changes to JSON files. The `--interactive` flag is an option passed to `jj split`.

            When you use `jj split --interactive`, it splits the active JSON document into two parts at the current cursor position. Each part becomes a separate file in the editor, allowing you to edit them individually. The new files are displayed side by side for easy comparison and editing. Once you have finished making changes to both parts, you can save and commit them separately using Git or any other version control system.
        revision: '[AI] `jj split --revision` is a Git command used in the JupyterJupyter Notebook interface, provided by the Jupyter extension for Git (jj). This command splits an active notebook into two at the current location and creates two new branches based on the current HEAD commit. The `--revision` option allows specifying a specific revision instead of the current one to create the new branches from. This way, you can split your notebook at a specific point in its history.'
