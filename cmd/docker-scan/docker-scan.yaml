# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: docker-scan
description: A tool to scan your images
flags:
    --accept-license: Accept using a third party scanning provider
    --dependency-tree: Show dependency tree with scan results
    --exclude-base: Exclude base image from vulnerability scanning (requires --file)
    --group-issues: Aggregate duplicated vulnerabilities and group them to a single one (requires --json)
    --json: Output results in JSON format
    --login: Authenticate to the scan provider using an optional token (with --token), or web base token if empty
    --reject-license: Reject using a third party scanning provider
    --severity=: Only report vulnerabilities of provided level or higher (low|medium|high)
    --token=: Authentication token to login to the third party scanning provider
    --version: Display version of the scan plugin
    -f, --file=: Dockerfile associated with image, provides more detailed results
documentation:
    command: '[AI] "docker-scan" is not a standard Docker command. It seems to be a custom or third-party tool used for performing security vulnerability scanning on Docker images and containers. The exact usage and implementation vary depending on the specific tool being used. Generally, you would provide it with a list of image names or container IDs to scan, and it would return information about any identified vulnerabilities along with suggested remediation steps. Always refer to the official documentation for the exact usage and installation instructions.'
    flag:
        accept-license: '[AI] `docker-scan` is a vulnerability scanning tool for Docker images and containers, developed by Aqua Security. The command `docker-scan --accept-license` is used to accept the EULA (End User License Agreement) or TOU (Terms of Use) during the first-time installation or upgrade of the tool. This command is necessary before running any scans with `docker-scan`, ensuring that you agree to the terms set by Aqua Security for using their software.'
        dependency-tree: '[AI] `docker-scan --dependancy-tree` is a command from the open-source Docker vulnerability scanning tool, Clair. This command generates a dependency tree analysis report for Docker images. It recursively examines each image''s components and their dependencies to identify the relationships between them. By understanding these relationships, security teams can assess risk levels more accurately and prioritize remediation efforts.'
        exclude-base: '[AI] `docker-scan` is a vulnerability scanning tool for Docker images and containers, developed by Aqua Security. The option `--exclude-base` is used to exclude the base image of a multi-stage build from the scan. In other words, it scans only the intermediate images built on top of the base image in the Dockerfile. This can help reduce the overall scanning time and focus resources on examining the modifications made during the build process, rather than rechecking the base image repeatedly for each application instance that uses the same base image.'
        file: '[AI] `docker-scan --file` is a command from the Anchore Scan tool in Docker. This option instructs Anchore Scan to read and analyze the specified Dockerfiles or Docker Compose files, instead of scanning running containers. The analysis includes vulnerability scanning, policy compliance checking, and image composition verification. By providing a file path using `--file`, Anchore Scan performs an analysis on that specific Docker configuration before building and potentially deploying the container, helping ensure security and compliance early in the development process.'
        group-issues: '[AI] `docker-scan --group-issues` is a command provided by the open source Docker security scanning tool, Clair. This specific command performs an analysis of Docker images for known vulnerabilities and returns information about groups of related issues instead of individual ones. The output includes details such as the affected package, its version with the known vulnerability, and links to the original vulnerability database entries for easy reference and remediation.'
        json: '[AI] `docker-scan --json` is a command from the Anchore Engine scanning tool for Docker images. The `--json` option tells Anchore to output the scan results in JSON format instead of human-readable text. The JSON output provides detailed information about the vulnerabilities and misconfigurations detected, as well as metadata about the scanned image, such as its name, tag, and repository. This data can be easily parsed and processed by scripts or other tools for further analysis and automation.'
        login: '[AI] `docker-scan --login` is a command used in the Docker Vulnerability Scanning tool, Anchore Engine, to authenticate with a container registry using your Docker Hub credentials. This allows Anchore to scan images and containers for known vulnerabilities and policy violations from that registry. The `--login` flag triggers the command to interactively log in to the specified registry before performing the scan.'
        reject-license: '[AI] `docker-scan` is an open-source tool used to identify vulnerabilities in Docker images. The command `--reject-license` option is used to reject and exclude images with specific licenses that do not comply with your organization''s policies during a scan. This option helps maintain security and compliance by ensuring that only images with approved licenses are used in your environment.'
        severity: |-
            [AI] The `--severity` flag in Docker Bench Security scans specifies the minimum severity level of the vulnerabilities or issues to be displayed. It accepts three levels:

            1. `LOW`: Displays only low-level and high-level vulnerabilities. Medium-level vulnerabilities are ignored.
            2. `MEDIUM`: Displays all vulnerabilities (low, medium, and high). This is the default level.
            3. `HIGH`: Displays only high-level vulnerabilities. Low- and medium-level vulnerabilities are ignored.

            The goal of adjusting this flag is to customize the output based on the user's preferences or priorities for remediation.
        token: '[AI] The `docker-scan --token` command is used with the Docker Bench Security tool to authenticate and scan Docker hosts or containers for security vulnerabilities and misconfigurations. The `--token` option is where you provide a personal access token (PAT) for an external registry, such as Docker Hub or Amazon Elastic Container Registry, to allow the tool to pull images during the scan. It ensures that only authenticated scans are performed.'
        version: '[AI] `docker-scan --version` is a command used with Docker''s vulnerability scanning tool, called `docker-bench-security` or simply `docker-scan`, to check its current version. When executed, it prints out the version number and any associated build information. This helps in ensuring that the correct version of the tool is being used for security scans and keeping the tool up-to-date with the latest vulnerability definitions.'
