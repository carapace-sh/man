# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: st
description: simple terminal
flags:
    -T=: defines the window title (default 'st').
    -a: disable alternate screens in terminal
    -c=: defines the window class (default $TERM).
    -e=: st executes command instead of the shell.
    -f=: defines the font to use when st is run.
    -g=: defines the X11 geometry string.
    -i: will fixate the position given with the -g option.
    -l=: use a tty line instead of a pseudo terminal.
    -n=: defines the window instance name (default $TERM).
    -o=: writes all the I/O to iofile.
    -t=: defines the window title (default 'st').
    -v: prints version information to stderr, then exits.
    -w=: embeds st within the window identified by windowid
documentation:
    command: '[AI] The `st` command is a terminal-based text editor that comes with the BusyBox software package. It provides simple text editing capabilities, similar to other minimalistic editors like `nano` or `vim` in a command-line interface. Users can open files, make modifications, and save changes using basic keyboard shortcuts.'
    flag:
        T: '[AI] The `-T` option in `stat` command of Unix-like operating systems is used to display file type and permission symbols instead of the default raw mode output. With this option, the output will include the file type (e.g., file, directory, symbolic link) represented by a single character, followed by the permissions represented by a string of eleven characters. This format makes it easier for humans to interpret the output as it corresponds to common file and directory representation symbols.'
        a: '[AI] The `-a` option used with the `ls` (list) command in Unix-based systems changes its behavior to show all files, including hidden files, in a directory listing. With the `-a` flag, the `ls` command will display files starting with a dot (.) as well as regular files and directories. This can be useful for viewing or managing files that are not normally visible in a standard directory listing.'
        c: '[AI] The `st` command with the option `-c` is a simple text editor available in Unix-like operating systems. The `-c` flag is used to specify a command script that defines custom keybindings or automate certain tasks within the text editor. It allows users to create their own workflows and customizations in the `st` text editor, making it more efficient for specific use cases.'
        e: '[AI] The `st -e` command is a part of the `sed` family of stream editors in Unix-like operating systems. The `st` stands for "stream editor," and the `-e` option indicates that a script or a series of editing commands will follow. This flag tells sed to execute the given editing instructions on the input data stream.'
        f: '[AI] The `-f` option in `st`, a terminal emulator for the GTK interface, tells it to open files in text mode without creating a new terminal window for each file. In other words, it allows multiple files to be opened in tabs within the same terminal window.'
        g: '[AI] The `st -g` command in Unix-like operating systems refers to the `stat` utility with the `-g` option. This option displays the file''s Access Control List (ACL) and the default ACL mask if set. It provides more detailed information about file permissions, including user and group ownership and additional access rights for different users or groups.'
        i: '[AI] The `-i` or `--interactive` option with `st`, which is a text editor in the SuSe Linux distribution, allows the user to confirm each file overwrite during a copy or move operation. With this option enabled, `st` will prompt the user before replacing an existing file. If the user does not confirm the replacement, the operation will be aborted. This behavior can help prevent unintended data loss during file manipulation.'
        l: '[AI] The `-l` option used with the `ls` (list) command in Unix and Unix-like operating systems provides a long listing format. It displays detailed information about each file, including the file permissions, number of links, owner, group, size, and modification time. This can be useful for understanding the properties of files and directories in more detail.'
        "n": '[AI] The `-n` option in the `stat` (or `st`) command in Unix-based systems is used to display only the numeric value of the file or directory''s modification time, instead of the full timestamp string. It takes the output format from the default `%A %B %d %T %Z %Y` to just `%s`, which represents the number of seconds since the Unix epoch (January 1, 1970). For example, using `st -n <filename>` will print the number of seconds elapsed since the file was last modified.'
        o: |-
            [AI] The `st -o` command in Unix-like operating systems is not a standard flag for any particular tool or command. It appears to be a typo or misinterpretation of the `stat` and `-o` options.

            The correct usage is:

            ```bash
            stat <file> -c <format>
            ```

            Here, `stat` is the command, and `-o` is an option that specifies the output format using the given `<format>`. For example, `-c "%A %n %s %Tz %W %G" <file>` will display the file's access permissions, name, size, last modification time in UTC, st_atim.tv_sec (time since epoch), and st_gid, respectively.
        t: |-
            [AI] The `st -t` command is not a standard Unix or Linux command, but rather an alias or shorthand used in some shell environments such as zsh for displaying the output of the `stat` command with a human-readable time format.

            The `stat` command provides detailed information about a file's attributes, including its access permissions, ownership, size, and modification and access times. When used with the `-t` option or the zsh alias `st -t`, it displays only the file's timestamp information in a more readable format (e.g., "2021-12-13 14:56:37.012345").
        v: '[AI] `st -v` is a command in the `st` terminal emulator for the GNU Screen tool. The `-v` option is used to run `st` in verbose mode. This means that `st` will print more detailed information about its actions and interactions with the underlying terminal or terminal multiplexer (such as GNU Screen) during startup and execution. This can be helpful for debugging issues or understanding how `st` is interacting with the terminal environment.'
        w: '[AI] The `-w` flag in `st`, the TTY-based text editor, enables real-time updating of the file being edited. When used with the `-st` command (which opens a new terminal window and runs `st`), it allows changes made to the file to be reflected immediately on the screen without needing to save the file first. This flag is useful for editing configuration files or other text files where quick updates are necessary.'
