# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ssh-keygen
description: OpenSSH authentication key utility
flags:
    -A: Generate missing host keys for each of the key types
    -B: Show the bubblebabble digest of specified private or public key file
    -C=: Provides a new comment
    -D=: Download the public keys provided by the PKCS#11 shared library pkcs11
    -E=: Specifies the hash algorithm used when displaying key fingerprints
    -F=: Search for the specified hostname in a known_hosts file
    -H: Hash a known_hosts file
    -I=: Specify the key identity when signing a public key
    -K: Download resident keys from a FIDO authenticator
    -L: Prints the contents of one or more certificates
    -M=: Moduli
    -N=: Provides the new passphrase
    -O*=: Specify a key/value option
    -P=: Provides the (old) passphrase
    -Q: Test whether keys have been revoked in a KRL
    -R=: Removes all keys belonging to the specified hostname from a known_hosts file
    -U: Indicates that a CA key resides in a ssh-agent
    -V=: Specify a validity interval when signing a certificate
    -Y=: Operation
    -Z=: Specifies the cipher to use for encryption when writing an OpenSSH-format private key file
    -a=: Number of KDF rounds used when saving a private key
    -b=: Specifies the number of bits in the key to create
    -c: Requests changing the comment in the private and public key files
    -e: This option will read a private or public OpenSSH key file and print to stdout
    -f=: Specifies the filename of the key file
    -g: Use generic DNS format when printing fingerprint resource records
    -h: When signing a key, create a host certificate instead of a user certificate
    -i: Read an unencrypted key file and print an OpenSSH compatible key to stdout
    -k: Generate a KRL file
    -l: Show fingerprint of specified public key file
    -m=: Specify a key format for key generation
    -n=: Specify one or more principals to be included in a certificate
    -p: Requests changing the passphrase of a private key file
    -q: Silence ssh-keygen
    -r=: Print the SSHFP fingerprint resource record named hostname for the specified public key file
    -s=: Certify (sign) a public key using the specified CA key
    -t=: Specifies the type of key to create
    -u: Update a KRL
    -v: Verbose mode
    -w=: Specifies a path to a library that will be used when creating FIDO authenticator-hosted keys
    -y: This option will read a private OpenSSH format file and print an OpenSSH public key to stdout
    -z=: Specifies a serial number to be embedded in the certificate
documentation:
    command: '[AI] `ssh-keygen` is a command-line utility in OpenSSH for generating, managing, and converting SSH key pairs. SSH (Secure Shell) keys are used for securely accessing remote servers or hosting services via the SSH protocol. The generated key pair consists of a private key and a public key. The private key is kept secret on your local machine, while the public key can be shared with trusted parties to enable secure password-less authentication or signing of SSH communications. By default, `ssh-keygen` generates an RSA key pair but supports other algorithms like ED25519 as well.'
    flag:
        A: '[AI] `ssh-keygen -A` is a command used in OpenSSH to generate a new SSH key pair with multiple algorithms (RSA, DSA, ECDSA, or ED25519). The `-A` option stands for "advanced," indicating that it allows generating keys using various algorithms instead of the default one. This can be useful when you want to have keys compatible with different SSH versions and servers that support multiple key types.'
        B: '[AI] `ssh-keygen -B` is a command used in OpenSSH for generating a new SSH key pair, but with an added option `-B` (or `--batch`) which enables batch mode operation. In this mode, ssh-keygen does not present any interactive prompts and generates the keys based on information provided in the command line or in a file. This can be useful for automating the key generation process in scripts.'
        C: '[AI] `ssh-keygen -C` is a command used in OpenSSH for managing and generating SSH keys. The `-C` option stands for "comment." When you generate or edit an existing key using this option, it allows you to set or modify a descriptive comment associated with the private key. This information is stored as a metadata within the key file and can be displayed when connecting to remote servers using SSH clients. It can help in keeping track of which keys correspond to which systems or users.'
        D: '[AI] `ssh-keygen -D` is a command used in OpenSSH for managing SSH keys. The `-D` option stands for "decode a public key file." This command allows you to input a known public key, and the tool will attempt to decrypt it using a passphrase if one was set during generation. If successful, the private key corresponding to that public key is displayed for potential use or comparison purposes.'
        E: '[AI] The `ssh-keygen` command is a tool used to generate, manage, and convert SSH keys for secure access to remote servers. The `-E` option is not a standard option for this command. It may be specific to certain SSH key implementations or versions. In general, the `-E` flag is used to display the encryption algorithm and other details of an existing SSH public key file. For example: `ssh-keygen -E -i id_rsa.pub`. However, it''s important to note that using this option might not be necessary in most cases as the default output from `ssh-keygen` includes the encryption algorithm and other relevant information. Always refer to your specific SSH key implementation or version documentation for accurate information.'
        F: '[AI] `ssh-keygen -F` is a command used with OpenSSH''s `ssh-keygen` utility for managing SSH keys. The `-F` option stands for "forget." When you use this flag followed by the email address or exact fingerprint of a previously generated key, OpenSSH will remove all information associated with that key from the local SSH known_hosts file and your private key file, effectively forgetting the key. This is useful when you want to revoke access for an old or compromised key.'
        H: '[AI] `ssh-keygen -H` is a command used in OpenSSH to manage SSH keys. The `-H` option stands for "hash file." It generates or updates an SSH known_hosts file, which stores the cryptographic hashes of the host keys. This file helps ensure the authenticity of remote hosts during SSH connections and prevents man-in-the-middle attacks. When you use `ssh-keygen -H`, it will read your existing known_hosts files, recalculate their hashes, and write them back to the original files or a new one if specified.'
        I: '[AI] `ssh-keygen -i` is a command used in OpenSSH to generate or manage RSA or ED25519 SSH keys for secure remote login to servers. The `-i` (identify) option is used with the `-l` (list) or `-f` (file) flags to display the detailed public key information, such as its fingerprint and size. It doesn''t directly generate a new key but serves as an essential tool for working with existing keys.'
        K: '[AI] `ssh-keygen -K` is a command used in OpenSSH to generate or manage RSA or ED25519 private key files with a specified passphrase for key backup or recovery. The "-K" option stands for "keep-backups," which means that the old key file will be kept and given a new name before creating a new one. If no filename is provided, the new key will be saved as the current key filename with "_id\_rsa\_" appended to it. This command does not create a new public key file; use `ssh-keygen` without any options for that.'
        L: '[AI] `ssh-keygen -L` is a command used in OpenSSH to display the details of an existing SSH key file. The `-L` option stands for "list." When you run this command followed by the path to an SSH key file, it will output the key''s type, size, and the creation and modification dates. This information can be helpful for verifying the correctness and authenticity of a public key when used in SSH configurations or during secure data transfers.'
        M: '[AI] `ssh-keygen -M` is a command used in OpenSSH to generate or manage SSH key pairs for secure access to remote servers via the SSH protocol. The `-M` option stands for "memo" or "label". This flag allows you to specify a memorable comment or label for the generated key pair, which can help keep track of which key corresponds to which server or account. By default, OpenSSH generates keys without any label.'
        "N": '[AI] `ssh-keygen -N` is a command used in OpenSSH to generate or manage SSH keys for secure remote login to servers. The `-N` option is used to set a passphrase for the newly generated key or existing key file. This passphrase adds an additional layer of security by requiring the user to enter it each time the key is used, helping protect against unauthorized access even if the private key file is compromised.'
        O: '[AI] The `ssh-keygen` command with the `-O` option is used to generate or manage SSH keys with specific openSSH options. The `-O` flag followed by an option lets you set OpenSSH options for the generated key. For instance, using `ssh-keygen -O "Compress:no" -f mykey` will create a new SSH key named `mykey` without data compression.'
        P: '[AI] `ssh-keygen -P` is a command used in OpenSSH for generating or managing SSH keys. The `-P` option stands for "password." When using this option, you will be prompted to enter a password for the newly generated key file or the existing one if you''re modifying it. This password adds an extra layer of security as it encrypts your private key file.'
        Q: '[AI] The `ssh-keygen` command with the `-Q` option is used to check the fingerprint or signature of an existing SSH key in OpenSSH. The output displays the key''s type, size, and its SHA-256 or SHA-1 fingerprint, allowing you to verify that the key matches a known key before using it for secure connections.'
        R: '[AI] `ssh-keygen -R` is a command used with the OpenSSH `ssh-keygen` tool. The `-R` option stands for "remove." This command is used to remove an SSH public key from the local `~/.ssh/known_hosts` file. The file stores information about trusted hosts for authentication purposes in SSH connections. Provide a hostname or IP address as an argument to remove the specific entry.'
        U: '[AI] `ssh-keygen -U` is a command used in OpenSSH for generating or managing SSH keys, specifically for creating or updating an ed25519 user key with no passphrase. The "-U" option stands for "--user", allowing you to specify the name of the user associated with the key being generated or updated. No passphrase is set using this command by default, increasing convenience at the cost of security.'
        V: '[AI] `ssh-keygen -V` is a command used with OpenSSH''s `ssh-keygen` tool to verify the integrity and expiration date of an existing SSH key (private and public). The `-V` option displays the key fingerprint, creation date, and the expected SHA256 DSA or RSA signature for the public key. If the key is valid, it will display a message confirming this; if not, it will indicate that the key has expired or its signature does not match the expected value, signaling the need to generate a new key.'
        "Y": '[AI] `ssh-keygen` is a command-line utility used to generate, manage, and convert SSH keys for secure remote login to servers. The option `-Y` or `--verify` is not a valid option for this command. If you meant to ask about other options such as `-g`, which generates a new key pair in the OpenSSH format for use with other SSH implementations, or `-l`, which lists key information (length, fingerprint, etc.), please let me know and I''d be happy to provide more details.'
        Z: '[AI] `ssh-keygen -Z` is a command used in OpenSSH to add or update a comment label, referred to as a "zone", for an SSH key. The zone provides metadata about the key, such as a description or a purpose. Using this command adds or updates the specified zone for the default SSH key file located in `~/.ssh/id_rsa.pub` or `~/.ssh/id_rsa.pub`, depending on whether it is for the private or public key, respectively. For example, `ssh-keygen -Z my_alias:my_description id_rsa` sets a label "my\_alias:my\_description" for the private key file "id\_rsa". This command is useful when managing multiple SSH keys and helps in easier identification of specific keys.'
        a: |-
            [AI] `ssh-keygen` is a command-line tool for generating and managing SSH keys in OpenSSH. The `-a` option, short for `-algorithm`, specifies the encryption algorithm used to create or sign the key.

            Using `ssh-keygen -a` with no further arguments will display a list of available algorithms, allowing you to choose one explicitly. If no algorithm is specified, OpenSSH defaults to RSA for generating new keys or signing existing ones with RSA. However, there are other encryption algorithms such as Ed25519 or ECDSA, which you can choose with the `-a` option when creating a new key or signing an existing one. For instance, `ssh-keygen -t ed25519 -a ed25519` will create a new ED25519 key pair.
        b: '[AI] `ssh-keygen -b` is a command used in OpenSSH to generate or manage SSH keys for secure remote login using the Secure Shell (SSH) protocol. The `-b` option sets the bitlength of the generated key. A higher bitlength provides greater security, so common values are 2048-bit RSA or 3072-bit RSA or 4096-bit Ed25519 keys. By default, ssh-keygen generates a new 2048-bit RSA key.'
        c: '[AI] `ssh-keygen -c` is a command used in OpenSSH to "cache or retrieve the comment for an SSH key." In other words, it allows you to edit the label or description associated with an existing RSA or DSA SSH key. This can be useful when you want to add or modify a comment that describes the purpose or owner of the key, making it easier to identify in various contexts.'
        e: '[AI] `ssh-keygen -e` is a command used with OpenSSH''s `ssh-keygen` tool. This option, short for "encode," is employed to convert an existing SSH key from one format to another, typically converting between the old `v1` and newer `rsa` or `ed25519` formats. When you use this command, it converts the private key into the specified format and creates a corresponding public key in the new format. The resulting keys can be used with OpenSSH servers and clients that support the specified format.'
        f: '[AI] `ssh-keygen` is a command-line utility used to generate, manage, and convert SSH keys for secure remote login to servers. The option `-f` followed by a file name specifies the location where the new key pair (public and private) will be saved. For example, `ssh-keygen -f mykeypair`. This creates or updates an existing key pair named "mykeypair" in the default format (RSA or ED25519). The public key is saved with a .pub extension, and is automatically added to the ssh-agent and/or ~/.ssh/ directory.'
        g: '[AI] The `ssh-keygen` command is a utility used to generate, manage, and convert SSH keys for secure remote login to servers. The option `-g` (or `--generate-rsa`) is used to specify that a new key should be generated using the RSA algorithm. There are other algorithms such as DSA or ECDSA which can also be used with the corresponding options. The default key type when no algorithm is specified is RSA.'
        h: '[AI] `ssh-keygen -h` is a command used in OpenSSH to display help information about the "ssh-keygen" utility. The option "-h" stands for "help" and when this command is executed, it will show a detailed usage message that explains all the available options, arguments, and their meanings for generating, managing, and converting SSH key pairs.'
        i: '[AI] `ssh-keygen -i` is a command used in OpenSSH to generate or manage SSH keys for secure authentication into remote systems. The option `-i` (lowercase ''i'' ) specifies that an existing private key file should be displayed in its PEM or OpenSSH format. If no file is specified, the output is written to stdout (standard input stream). It does not create a new key pair but can be useful for checking the content of existing keys.'
        k: '[AI] `ssh-keygen -k` is a command used in OpenSSH to generate or manage RSA or ECDSA cryptographic keys for secure access to remote servers via SSH protocol. The `-k` option stands for "generate a new key" and specifies that an existing private key file should be replaced with a new one. By default, it creates a new pair of key files (private and public) with the name `id_rsa` or `id_ecdsa`, respectively. These keys can then be used for authentication when configuring SSH clients to connect to remote servers.'
        l: '[AI] `ssh-keygen -l` is a command used in OpenSSH to list details about an existing SSH key. The option `-l` stands for "list" and when used with the `ssh-keygen` command, it displays the length, type (RSA or DSA), and fingerprint of the specified SSH key file. The output also includes the key''s creation date and the name of the host where the key was generated. This command is useful for verifying the integrity of an SSH key, especially when sharing keys between different systems.'
        m: '[AI] `ssh-keygen` is a command-line utility used for generating, managing, and converting SSH keys. The `-m` option ("--multifile") is used when handling multiple private key files instead of just one. It allows you to generate a new public key for each private key file given as an argument, resulting in a separate public key file for each corresponding private key. This can be useful when dealing with multiple keys or configuring SSH access for different users or hosts.'
        "n": '[AI] `ssh-keygen` is a command-line tool used to generate, manage, and convert SSH keys for secure remote login into servers. The option `-n` is used to specify a name or label for the key being generated. It doesn''t directly create or modify the key itself, but helps in managing multiple keys with descriptive names for easy identification.'
        p: '[AI] The command `ssh-keygen -p` is used to modify the passphrase of an existing SSH key in OpenSSH. The option "-p" stands for "change-passphrase." When you run this command, you''ll be prompted to enter your current passphrase and then the new passphrase twice. This helps maintain security by updating the passphrase if you suspect it has been compromised or simply want to create a stronger one.'
        q: '[AI] The `ssh-keygen` command with the `-q` option is used to generate or manage SSH keys in a quiet mode. Quiet mode suppresses most of the informational messages that are displayed during the key generation or operation process, providing a more streamlined experience for users who prefer a minimal output. The goal is to make the execution of the command less verbose and focus solely on the result, which is the creation or management of an SSH key pair (private and public keys).'
        r: '[AI] `ssh-keygen -r` is a command used with OpenSSH''s ssh-keygen tool. The `-r` option stands for "random number", and it''s used to generate an RSA or ECDSA key for another server or user, instead of generating a new key pair for the local machine. This is often employed in creating a ''known_hosts'' entry with a specific key before connecting to an unfamiliar remote host for the first time, increasing security by verifying its identity.'
        s: '[AI] The `ssh-keygen` command is used to generate, manage, and convert SSH keys for secure remote login to servers. The option `-s` (or `--sign`) is used with this command to specify the name of an existing private key file to use as a base for creating a new key pair, but with the added feature of signing the new key with the specified old one. This increases security by adding the old private key''s signature to the new public key, allowing it to be trusted more easily when added to remote servers.'
        t: '[AI] `ssh-keygen -t` is a command used in OpenSSH to generate or manage SSH keys for secure remote login to servers. The `-t` option specifies the key type to be generated, typically "rsa" or "ed25519". This command creates a new private key file and an associated public key file in the default location or specified directory.'
        u: '[AI] The `ssh-keygen -u` command is used to update an existing SSH public key in the ssh-known-hosts file. This can be helpful when you want to change the name or fingerprint of a known host without having to remove and re-add it. By using this option, you are telling OpenSSH to update the record with the new information instead of creating a new entry. It''s important to note that this command doesn''t generate or manage key pairs, only updates the associated hosts in the ssh-known-hosts file.'
        v: '[AI] `ssh-keygen` is a command-line tool used to generate, manage, and convert SSH keys for secure remote login to servers or for authentication with GitHub and other services. The `-v` option when used with the `ssh-keygen` command displays the version number of OpenSSH (the implementation of SSH in this tool) and performs a key generation or conversion operation in verbose mode, providing additional information about the progress and completion status during the process.'
        w: '[AI] `ssh-keygen` is a command-line tool used to generate, manage, and convert SSH keys. The `-w` option is used to create a RSA key pair with a larger 4096-bit or 2048-bit key size instead of the default 1024-bit size for increased security. The `-w` flag stands for "wides" as in wider keys, offering better resistance against brute force attacks.'
        "y": '[AI] `ssh-keygen -y` is a command used in OpenSSH to extract the public key from an existing private key file. The option `-y` tells the `ssh-keygen` utility to output only the public key content, without creating or modifying any keys.'
        z: '[AI] The `ssh-keygen` command is a utility used to generate, manage, and convert SSH keys. The specific option `-Z file:name` generates a random 128-bit SHA-256 hash and saves it to the given file named `file:name`. This option is useful for creating a new key just for its hash value. However, it''s important to note that this command does not generate an SSH key pair; instead, it only generates the hash.'
