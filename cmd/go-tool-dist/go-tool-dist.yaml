# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: go-tool-dist
description: Dist helps bootstrap, build, and test the Go distribution
documentation:
    command: |-
        [AI] `go-tool-dist` is not a standard command in Go programming language. It seems like a misinterpretation or typo of some common Go tools. Here are some widely used Go tools that have "dist" in their names and a brief description of each:

        1. **go get**: Downloads and installs the specified Go packages and their dependencies from the Go Modules repository into your `$GOPATH`.
        2. **go build**: Builds Go source files by compiling them, linking the resulting object files, and producing an executable or archive (depending on the file type) for each source file.
        3. **go install**: Similar to `go build`, but instead of placing the output in the current directory, it installs the package into your `$GOPATH` and makes it available for import by other Go programs.
        4. **go run**: Compiles and runs a single Go source file without creating an executable or archive file. This command can be used to test changes quickly.
        5. **go tool dist**: The "dist" subcommand of the `go` tool generates distribution archives for a Go project, including all dependencies, from the specified directory (usually the root of the project). It creates an archive in the format of your choice (tarball or zipfile) for easy distribution and deployment.

        Refer to the official [Go documentation](https://golang.org/doc/) for more information on these tools and how to use them.
