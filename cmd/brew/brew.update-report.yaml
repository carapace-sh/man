# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update-report
description: The Ruby implementation of `brew update`
group: main
flags:
    --auto-update: Run in 'auto-update' mode (faster, less output).
    --debug: Display any debugging information.
    --force: Treat installed and updated formulae as if they are from the same taps and migrate them anyway.
    --help: Show this message.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew update-report` is a Homebrew command used to display a report of available software updates and their corresponding changes. It does not apply or install the updates; it only shows the information. Running this command helps users stay informed about potential upgrades for their installed packages.'
    flag:
        auto-update: '[AI] The `brew update-report --auto-update` command is used in Homebrew, a popular package manager for macOS, to generate an report detailing packages that have available updates and can be automatically installed with the `--auto-update` flag. This helps users keep their system up-to-date with the latest versions of installed packages while saving time by applying the updates automatically.'
        debug: '[AI] The command `brew update-report --debug` is used in Homebrew, a popular package manager for macOS. This command generates a detailed report of the actions that would be taken during an update or upgrade process in Homebrew. The `--debug` flag increases the verbosity of the output, providing more information about the specific packages and their current versions, as well as the proposed updates and the reasons for those updates. It is often used for troubleshooting or for gaining a better understanding of the package management process.'
        force: '[AI] `brew update-report --force` is a command used in Homebrew, a popular package manager for macOS. This command generates a report of all available formula and cask upgrades, forcing checks against all repositories, even if they may already be up-to-date. The report shows the current version, the newest available version, and the potential changes, including size differences and new dependencies. It''s often used when system administrators want to ensure their systems are updated with the latest packages or before performing a large-scale update across multiple machines.'
        help: |-
            [AI] `brew update-report` is a Homebrew command used to generate a report of available software updates. The `--help` option provides information on how to use this command effectively. Here's a quick summary:

            - Syntax: `brew update-report [--help]`
            - The main function of `brew update-report` is to list out the available software updates for your Homebrew installation.
            - The `--help` option displays detailed usage instructions and possible flags or options for this command. It provides information on how to filter or save the report in various formats, like CSV, JSON, or HTML. This can be helpful if you want to automate your software update process or analyze updates over time.
        quiet: '[AI] `brew update-report --quiet` is a command used in Homebrew, a popular package manager for macOS. This command generates a report showing which taps (external repositories) have new versions of formulas (packages). The `--quiet` flag suppresses the output of progress messages and verbose information, resulting in a more concise and clean report.'
        verbose: '[AI] `brew update-report --verbose` is a command used in Homebrew, a popular package manager for macOS. This command generates a detailed report after running the `brew update` command to check for and download available updates to Homebrew and its installed packages. The `--verbose` flag increases the amount of output, providing more information about each step taken during the update process.'
