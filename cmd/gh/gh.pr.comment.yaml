# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: comment [<number> | <url> | <branch>]
description: Add a comment to a pull request
group: Targeted commands
flags:
    --edit-last: Edit the last comment of the same author
    -F, --body-file=: Read body text from `file` (use "-" to read from standard input)
    -b, --body=: The comment body `text`
    -e, --editor: Skip prompts and open the text editor to write the body in
    -w, --web: Open the web browser to write the comment
documentation:
    command: '[AI] The `gh pr comment` command is used in the GitHub CLI (Command Line Interface) tool to add or edit comments on a specific pull request. It takes the required parameters: the GitHub personal access token, the repository owner and name, the branch name, and the pull request number followed by the comment message text. For example: `gh pr comment <token> <owner> <repo> <branch> <pr-number> "Your comment here"`'
    flag:
        body: '[AI] The `gh pr comment` command is a GitHub CLI (Command Line Interface) command used to create, edit, or reply to comments on a specific pull request in a GitHub repository. The `--body` option is used to provide the text content of the comment. Therefore, `gh pr comment --body "Your comment message here"` creates a new comment with the specified text message on the given pull request.'
        body-file: '[AI] The `gh pr comment --body-file` command is a GitHub CLI (Command Line Interface) command used to create or update comments on a pull request. The `--body-file` option specifies the path to a file containing the text for the comment body. For example, `gh pr comment <pull_request_number> --body-file=path/to/comment/file` will create or update a comment with the content from the specified file on the given pull request.'
        edit-last: '[AI] `gh pr comment --edit-last` is a command used in GitHub''s `git-hub` CLI (Command Line Interface) tool. This command is designed to edit the last comment on the latest pull request in your current repository. It allows users to modify or update their previous comments, providing flexibility and ensuring effective communication during collaboration.'
        editor: |-
            [AI] The `gh pr comment --editor` command is used with GitHub's `gh` CLI (Command Line Interface) tool. It allows you to edit the comments on a pull request interactively in your terminal, using your default text editor.

            Here's a quick breakdown of its usage:

            1. `gh pr comment`: This command manages comments related to pull requests.
            2. `--editor`: This option specifies that you want to edit an existing comment instead of creating a new one.
            3. The command then opens the default text editor with the content of the selected comment, allowing you to make edits and save them, which will update the comment on the pull request.
        web: '[AI] `gh pr comment --web` is a command used in GitHub''s Command Line Interface (CLI) tool, `git-hub`. This specific command is used to create or reply to a comment on a GitHub Pull Request (PR) interactively through a web browser. The `--web` option opens the PR page in the default web browser for easy input of your comment without having to switch between terminals and browsers.'
