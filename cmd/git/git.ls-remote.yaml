# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ls-remote
description: List references in a remote repository
group: low-level interrogator
flags:
    --exit-code: exit with exit code 2 if no matching refs are found
    --get-url: take url.<base>.insteadOf into account
    --refs: do not show peeled tags
    --sort?: field name to sort on
    --symref: show underlying ref in addition to the object pointed by it
    --upload-pack=: path of git-upload-pack on the remote host
    -h, --heads: limit to heads
    -o, --server-option=: option to transmit
    -q, --quiet: do not print remote URL
    -t, --tags: limit to tags
documentation:
    command: '[AI] `git ls-remote` is a Git command used to fetch the list of branches and commits from a remote repository. It displays the names of the branches, their upstream tracking status, and the tip commit hash for each branch. The command accepts the URL or path to the remote repository as an argument. For example: `git ls-remote <remote_url>`. This command is often used to check for the existence of specific branches before creating or merging them locally.'
    flag:
        exit-code: |-
            [AI] `git ls-remote --exit-code` is a Git command used to fetch the list of commits and branches from a remote repository, but with an added feature of returning an exit code based on the result of the operation.

            With the `--exit-code` flag, Git will return 0 if the operation was successful (i.e., if there are commits or branches to be fetched), and a non-zero value if there's an error or no data to retrieve. This can be useful in scripts for handling different scenarios based on the outcome of the `git ls-remote` command.
        get-url: '[AI] The `git ls-remote` command is used to fetch a list of all refs (branches and tags) along with their corresponding remote URLs from a given remote repository. The `--get-url` option tells Git to print only the remote URL for each ref. So, when you run `git ls-remote --get-url [remote-url]`, it returns the URL of the specified remote repository.'
        heads: '[AI] `git ls-remote --heads` is a Git command used to fetch the list of branch names from a remote repository. The command takes one required argument which is the URL or path to the remote repository. The `--heads` option tells Git to only return the names of the branches that can be checked out. This command does not create a local branch or checkout any branches, it simply displays the list of available branches on the specified remote.'
        quiet: '[AI] `git ls-remote --quiet` is a Git command used to fetch the list of branches and their corresponding tip commit hash from a remote repository without any output or confirmation messages. The `--quiet` option suppresses all informational messages that usually accompany this command, making it useful for scripts and automated workflows where only the data is needed.'
        refs: '[AI] `git ls-remote` is a Git command used to fetch the list of branches and tags from a remote repository. The `--refs` option instructs it to only return the names of the references (branches or tags) instead of the full objects. This command does not update your local repository or change any files, but provides you with an up-to-date list of available branches and tags in the specified remote repository.'
        server-option: '[AI] `git ls-remote` is a Git command used to fetch the list of refs and their corresponding commit hashes from a remote repository. The `--server-option` flag is an option that allows passing custom options directly to the remote Git server, typically using the `--via-option` or `--config` parameters. For instance, `git ls-remote --server-option=''User-Agent: MyCustomClient/1.0'' <remote> <refspec>`. This can be useful when interacting with specific remote servers that require certain headers or configurations.'
        sort: '[AI] `git ls-remote --sort` is a Git command used to fetch and display the remote repositories'' branch and tag information from a specified remote repository. The `--sort` option sorts the output by default in a human-readable way, either alphabetically or by last update time. This command helps in quickly identifying the latest branches and tags between local and remote repositories for potential updates or merges.'
        symref: '[AI] `git ls-remote --symref` is a Git command used to fetch the remote refs and their associated symbols (like tags, branches) from a specified remote repository. The `--symref` option tells Git to output each ref as a symbolic reference instead of its raw hash value. This can be useful when you want to check which local refs correspond to which remote refs or tags.'
        tags: '[AI] `git ls-remote --tags` is a Git command used to fetch all the available tags from a remote repository. The command takes the URL of the remote repository as an argument and outputs a list of tags, along with their corresponding commit hash and tag message. The `--tags` option tells Git to only show the tags instead of the full list of refs.'
        upload-pack: '[AI] The `git ls-remote --upload-pack` command is a Git utility used to fetch remote repository information, specifically the upload packs, which are the scripts that handle receiving pushes and performing fast-forward or merge operations. It doesn''t modify the local repository but instead fetches the required metadata from the remote repository. This information includes the list of branches, their corresponding commits, and the available refspecs for pushing. This command is typically used in CGI scripts, Git servers, or automated workflows to handle incoming pushes efficiently.'
