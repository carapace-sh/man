# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: new
description: Create an Angular workspace
flags:
    --commit: Initial git repository commit information.
    --create-application: Create a new initial application project in the 'src' folder of the new workspace.
    --defaults: Disable interactive input prompts for options with a default.
    --directory=: The directory name to create the workspace in.
    --interactive: Enable interactive input prompts.
    --minimal: Create a workspace without any testing frameworks.
    --new-project-root=: The path where new projects will be created, relative to the new workspace root.
    --package-manager=: The package manager used to install dependencies.
    --routing: Generate a routing module for the initial project.
    --skip-install: Do not install dependency packages.
    --strict: Creates a workspace with stricter type checking and stricter bundle budgets settings.
    --style=: The file extension or preprocessor to use for style files.
    --view-encapsulation=: The view encapsulation strategy to use in the initial project.
    -S, --skip-tests: Do not generate "spec.ts" test files for the new project.
    -c, --collection=: A collection of schematics to use in generating the initial application.
    -d, --dry-run: Run through and reports activity without writing out results.
    -f, --force: Force overwriting of existing files.
    -g, --skip-git: Do not initialize a git repository.
    -p, --prefix=: The prefix to apply to generated selectors for the initial project.
    -s, --inline-style: Include styles inline in the component TS file.
    -t, --inline-template: Include template inline in the component TS file.
documentation:
    command: '[AI] `ng new` is a command used in Angular CLI (Angular Command Line Interface) for creating a new Angular project with the preferred configuration and file structure. It sets up a new Angular application by initializing the necessary directories, installing required dependencies and generating essential files such as component, service, and app modules. The newly created project is ready to be developed using Angular CLI tools.'
    flag:
        collection: '[AI] The `ng new --collection` command is used with Angular CLI to create a new Angular project using a pre-configured collection of tools and features. Angular CLI provides several collections like Material, Ionic, and PWA Starter, which come with additional packages and configurations for specific use cases. By using `--collection` option, you can quickly set up a project with the desired configuration without manually installing and configuring each package individually.'
        commit: '[AI] The `ng new --commit` command is used with Angular CLI (Command Line Interface) to create a new Angular project and automatically commit the generated files into the Git repository after creation. It skips the interactive creation of source files, instead using default configurations. The `--commit` flag automates the git add and commit steps, saving time and reducing manual effort for developers setting up a new Angular project in a Git-managed environment.'
        create-application: '[AI] The `ng new --create-application` command is used with Angular CLI (Command Line Interface) to create a new Angular project from scratch. This includes setting up the project structure, installing required dependencies, and initializing various configuration files such as `app.module.ts`, `package.json`, and `angular.json`. It creates a fully functional Angular application ready for development.'
        defaults: '[AI] `ng new --defaults` is a command used in Angular CLI (Angular Command Line Interface) for creating a new Angular application with the default configuration. The `--defaults` option tells Angular CLI to use the default options for all configurations, such as the default project name, directory layout, and other default settings. This results in a quick and straightforward way to create a new Angular project without having to specify each configuration option individually.'
        directory: |-
            [AI] `ng new --directory` is a command used in Angular, a popular JavaScript framework for building web applications. This command is part of Angular CLI (Command Line Interface), which is a tool that helps create and build Angular projects.

            The `--directory` option specifies the name of a directory or a path within an existing project where a new Angular application will be created as a sub-project, rather than overwriting the entire existing project. This allows developers to create multiple applications within one larger project while keeping their files separate.
        dry-run: '[AI] `ng new --dry-run` is a command used in Angular CLI to create a new Angular project without actually generating and writing the files to disk. It performs a simulation of the creation process, showing which files would be generated, but leaves the current directory unchanged. This can be useful for understanding what files will be created during the actual generation process, without committing to creating a new project yet.'
        force: '[AI] `ng new --force` is a command used with Angular CLI (Angular Command Line Interface) for creating a new Angular project. The `--force` flag is an option that overwrites existing directories without asking for confirmation before creating a new one. It''s useful when you want to re-create a project from scratch without being prompted for confirmations each time. By using `ng new --force`, you can forcefully create a new Angular project even if there is an existing directory with the same name in your current working directory.'
        inline-style: '[AI] The `ng new --inline-styles` command is used when creating a new Angular project using the Angular CLI. This option instructs the CLI to generate components with inline styles instead of separating them into separate `.css` files. Inline styles mean that the CSS rules are written directly in the component''s corresponding `.ts` file, rather than having a separate `.css` file for each component. This can make it easier to get started and understand the relationship between the HTML, TS and CSS files in a new project, but it may not be ideal for larger or more complex projects where separation of concerns is important.'
        inline-template: '[AI] The `ng new --inline-template` command is used when creating a new Angular project using the Angular CLI. The `--inline-template` flag enables inline templates and styles in components by default instead of separating them into separate files (`.html` and `.css`). This can make the initial setup simpler for small projects, but it might not be the best practice for larger or more complex applications where separation of concerns is important.'
        interactive: '[AI] `ng new --interactive` is a command used in Angular CLI (Command Line Interface) for creating a new Angular project with an interactive mode. In this mode, users are prompted to make choices during the creation process such as selecting a preset style, choosing a test runner, or providing a project name and location. It allows for more control and flexibility over the initial setup of the Angular project.'
        minimal: '[AI] `ng new --minimal` is a command used in Angular CLI (Command Line Interface) for creating a new Angular project with minimal configuration files and dependencies. This means that only essential files like `app.component.ts`, `app.module.ts`, and `package.json` will be generated, excluding pre-configured routing and other features. This command is useful when you want to have more control over the project structure from the beginning or when creating a library or custom Angular application.'
        new-project-root: |-
            [AI] The `ng new` command is used to create a new Angular project with the Angular CLI (Command Line Interface) in TypeScript. The `--new-project-root` option specifies a custom root directory for the newly created project, instead of using the default one named `angular`. This allows you to create multiple Angular projects within the same workspace and manage them separately. For example, if you want to create a new project with the name `myApp` in a directory called `projects`, you would use the following command:

            ```bash
            ng new projects/myApp --new-project-root=projects
            ```

            This will create a new Angular project named `myApp` within the `projects` directory. The Angular CLI will automatically set up the project structure, install dependencies, and configure the `angular.json` file for you.
        package-manager: '[AI] The `ng new --package-manager` command is used with Angular CLI (Command Line Interface) to create a new Angular project. The `--package-manager` option specifies which package manager to use for installing dependencies, such as npm or yarn. For example, `ng new myApp --package-manager=yarn` will initialize and create a new Angular project using Yarn as the package manager.'
        prefix: '[AI] The `ng new --prefix` command is used with Angular CLI (Command Line Interface) to create a new Angular application with a custom prefix for all the generated files and directories. This option helps in managing multiple Angular projects with similar names by giving each project a distinct identifier in their file structures. For instance, if you run `ng new myApp --prefix=myPrefix`, then in the new application, the default component file `app.component.ts` will be named as `myPrefix-app-component.ts`.'
        routing: '[AI] The `ng new --routing` command is used with Angular CLI to create a new Angular application with preconfigured routing. This means that Angular will automatically set up its routing module, allowing for the creation of multiple views and navigation between them without requiring any additional setup. The result is an Angular app where different components can be accessed by specific URLs.'
        skip-git: '[AI] `ng new --skip-git` is a command used in Angular CLI (Angular Command Line Interface) for creating a new Angular project. The `--skip-git` option is used to disable the Git initialization during project creation. This means that the Angular project will be created without setting up a Git repository, allowing users who prefer not to use Git or have existing version control systems in place to create their projects with minimal setup.'
        skip-install: '[AI] The `ng new --skip-install` command is used when creating a new Angular project using the Angular CLI. Instead of installing all dependencies and running the default setup tasks, this command only generates a new Angular project with an empty workspace. You will need to manually install and run npm packages or use other methods to build and serve your project afterwards.'
        skip-tests: '[AI] The `ng new --skip-tests` command is used when creating a new Angular project with Angular CLI (Command Line Interface). This command skips the generation of test files during project creation to save time and reduce the initial project size. However, it''s important to note that skipping tests might result in missing out on essential testing features, which can impact the overall quality of the application.'
        strict: '[AI] `ng new --strict` is a command used in Angular CLI (Angular Command Line Interface) for creating a new Angular project with stricter type checking. This means that TypeScript''s strict types and optionally-static type checking are enabled by default, enhancing the overall project quality and potential for catching errors earlier during development.'
        style: '[AI] The `ng new --style` command is used with Angular CLI (Command Line Interface) to create a new Angular project with a specific pre-defined style architecture. Angular provides some built-in styles such as "SCSS" or "CSS". By using this command, you can select the desired style at the time of creation and have it pre-configured in your new project. For instance, `ng new myApp --style=scss` will create a new project with SCSS as the default styling language.'
        view-encapsulation: |-
            [AI] The `--view-encapsulation` flag in Angular CLI (Command Line Interface) is used to configure how Angular applies CSS styles and Shadow DOM encapsulation to components. There are three options:

            1. **None**: No encapsulation at all, meaning that the component's CSS will be applied globally and could potentially conflict with other components.
            2. **Native**: Encapsulates the component using web standards (Shadow DOM). This is the default option when creating a new Angular application with `ng new`.
            3. **Emulated**: Similar to Native but provides backward compatibility with older browsers which don't support Shadow DOM. It creates separate shadow root for each component and injects the styles directly into the host element, instead of using Shadow DOM.

            Choosing the right encapsulation strategy depends on your use case and browser support requirements.
