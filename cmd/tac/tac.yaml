# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: tac
description: concatenate and print files in reverse
flags:
    --help: display this help and exit
    --version: output version information and exit
    -b, --before: attach the separator before instead of after
    -r, --regex: interpret the separator as a regular expression
    -s, --separator=: use STRING as the separator instead of newline
documentation:
    command: '[AI] `tac` is a Unix utility command used to display the contents of a file in reverse order, meaning it outputs each line followed by the preceding one. It stands for "take the opposite end of" and acts as an alternative to the `cat` command which displays files from beginning to end.'
    flag:
        before: '[AI] `tac` is a Unix command-line utility that stands for "text handling and printing in the opposite order." The `--before` option is used with `tac` to output the input files in reverse order, but with the lines numbered or preceded by a context line indicating the number of lines from the end of the file. For example, `tac --before=-3 filename` will print the contents of `filename` with three lines of context before each line.'
        help: '[AI] The `tac` is a Unix utility command that stands for "take the adversary''s cut." Its primary function is to read files line by line in reverse order. The `--help` option, when used with this command, will display detailed information about how to use it effectively. This includes details on syntax, examples, and options available. In essence, running `tac --help` provides a user guide for using the `tac` command.'
        regex: |-
            [AI] `tac` is a Unix command-line utility that stands for "take the opposite end of a file." It is typically used to read files from the end to the beginning instead of the default behavior, which is reading from the beginning to the end.

            The option `--regex` is not a standard flag for the `tac` command in Unix. If you meant to use another tool such as `grep` or `sed` with the `-tac` or `--reverse-print` flags and regular expressions, that's a different story:

            - The `--regex` option is used with tools like `grep` and `sed` to apply regex patterns in searching for lines instead of simple strings.
            - With `grep`, for example, you can use `--regexp=PATTERN` or the shorthand `-E PATTERN` to search for lines containing the specified regular expression pattern.
            - The `--reverse-print` or `-tac` flag is used with tools like `sed` and `grep` to output matched lines in reverse order (from last occurrence to first occurrence) within a file.
        separator: '[AI] The `--separator` flag in the `tac` (short for "take") command in Unix-based systems is used to specify a custom delimiter character when handling input files as pairs of lines. It overrides the default delimiter, which is a newline character. For instance, if you have a file with data separated by tabs and you want to process each pair of lines around those tabs, use `tac --separator ''\t'' file`.'
        version: '[AI] The `tac` command with the `--version` option is used to display the version information of the `tac` (take and print files from the end) utility. When run in a Unix or Linux terminal, it will output a line containing the `tac` version number and sometimes additional information such as the compile time or commit hash.'
