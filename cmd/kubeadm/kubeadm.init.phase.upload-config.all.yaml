# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: all
description: Upload all configuration to a config map
flags:
    --config=: Path to a kubeadm configuration file.
    --kubeconfig=: The kubeconfig file to use when talking to the cluster. If the flag is not set, a set of standard locations can be searched for an existing kubeconfig file.
documentation:
    command: '[AI] The `kubeadm init` command is used to bootstrap a new Kubernetes cluster. The `phase upload-config all` is one of its sub-commands. This command downloads and applies the initial configuration for joining worker nodes to the master node in the cluster. It uploads the configuration files to each worker node, allowing them to be joined to the cluster using `kubeadm join`. These files contain the necessary information such as the master''s public IP address, TLS certificates, and Kubernetes version details for the worker nodes to properly communicate with the master node and become part of the cluster.'
    flag:
        config: '[AI] `kubeadm init` is a command-line tool used to bootstrap and initialize a Kubernetes cluster. The specific command `kubeadm init phase upload-config all --config` instructs the tool to upload the initial configuration files for setting up a Kubernetes control plane to the configured etcd server, which is part of the Kubernetes distribution''s data store. The `--config` flag specifies the location or path of the config file that contains the required information for the setup process. This command is typically run during the initial setup of a Kubernetes cluster, as subsequent commands like joining worker nodes to the cluster will require different commands.'
        kubeconfig: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster. The `phase upload-config all --kubeconfig` argument specifies that this command should upload the Kubernetes configuration to all nodes in the cluster, creating or updating the `kubeconfig` file on each node. This allows clients to communicate with the cluster using the `kubeconfig` file. In summary, this command is used to configure a multi-node Kubernetes cluster by uploading the necessary configuration files to all nodes.'
