# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: chart
description: show the chart's definition
flags:
    --ca-file=: verify certificates of HTTPS-enabled servers using this CA bundle
    --cert-file=: identify HTTPS client using this SSL certificate file
    --devel: use development versions, too. Equivalent to version '>0.0.0-0'. If --version is set, this is ignored
    --insecure-skip-tls-verify: skip tls certificate checks for the chart download
    --key-file=: identify HTTPS client using this SSL key file
    --keyring=: location of public keys used for verification
    --pass-credentials: pass credentials to all domains
    --password=: chart repository password where to locate the requested chart
    --repo=: chart repository url where to locate the requested chart
    --username=: chart repository username where to locate the requested chart
    --verify: verify the package before using it
    --version=: specify a version constraint for the chart version to use. This constraint can be a specific tag (e.g. 1.1.1) or it may reference a valid range (e.g. ^2.0.0). If this is not specified, the latest version is used
documentation:
    command: '[AI] The `helm show chart` command is used to display detailed information about a specific Helm chart, including its structure, dependencies, and values. This command provides useful insights for developers and operators who need to understand the composition and configuration options of a Helm chart before installing or upgrading it in their Kubernetes cluster.'
    flag:
        ca-file: '[AI] `helm show chart` is a Helm command used to inspect the details of a Helm chart, which is a package of configuration and code for deploying applications using Kubernetes. The option `--ca-file <path>` specifies the path to a custom CA (Certificate Authority) certificate file for secure communication with the Helm repository server. This flag allows users to connect to a Helm repository that uses a custom CA instead of the default trusted certificates, ensuring secure transfer of chart data.'
        cert-file: '[AI] `helm show chart --cert-file` is a command used with Helm, a popular package manager for Kubernetes. This command displays detailed information about a specific Helm chart, including its values, dependencies, and configuration. The `--cert-file` option specifies the path to a certificate file, which can be used to authenticate and secure communication between Helm and the remote chart repository if it uses HTTPS.'
        devel: '[AI] `helm show chart --deval` is a Helm command used to display the raw values and configurations of a Helm chart. The `--devel` flag enables development mode, which provides access to all chart values including those marked as `internal` or `override-only`. This can be useful for understanding the underlying structures and configurations of a complex Helm application during development or troubleshooting.'
        insecure-skip-tls-verify: '[AI] `helm show chart` is a command used in Helm, a popular package manager for Kubernetes, to display detailed information about a specific Helm chart. The `--insecure-skip-tls-verify` flag is an optional argument that disables TLS certificate verification when communicating with the Helm repository or chart repositories. This means that Helm will not check the authenticity of the SSL certificates presented by the server during a connection, potentially exposing your system to man-in-the-middle attacks or other security risks. It is generally not recommended to use this flag unless you are certain of the security implications and have valid reasons for bypassing certificate verification.'
        key-file: |-
            [AI] The `helm show chart --key-file` command is used in Helm, a popular Kubernetes package manager. This command displays the detailed configuration of a specific Helm chart, including its values and secrets.

            The `--key-file` option specifies the path to a file containing private keys for accessing repositories that are protected by TLS or other authentication methods. By providing this key file, you can authenticate and retrieve the desired Helm chart configuration securely.
        keyring: '[AI] The `helm show chart --keyring` command is used in Helm, a popular Kubernetes package manager, to display the keyring file associated with a specific Helm chart. A Helm chart is a collection of Kubernetes resources and configuration data that can be installed on a Kubernetes cluster using Helm. The keyring file contains encryption keys for securing sensitive data, such as TLS certificates or API keys, used by the Helm chart. By running `helm show chart <chart-name> --keyring`, you can view the contents of this file and ensure that it is properly encrypted before deploying your chart to a production environment.'
        pass-credentials: '[AI] `helm show chart --pass-credentials` is a command used in Helm, a popular Kubernetes package manager. This command displays detailed information about a specific Helm chart, including its dependencies and values. The `--pass-credentials` flag is used to provide Helm with Kubernetes authentication credentials when the chart being displayed uses Helm''s `helmDependencies` or `values.yaml` files that contain secrets or other sensitive data. By passing these credentials, you enable Helm to retrieve the necessary information securely from your local Kubernetes configuration file without prompting for interactive input during the command execution.'
        password: '[AI] `helm show chart --password` is a Helm command used to display the values file and Tiller key used for authentication in a Helm chart repository. The `--password` flag is optional, but if provided, it will also display the encrypted value of the Tiller password. This command does not decrypt or reveal the password itself; instead, it presents the necessary information to apply a chart using Helm with secure access to the chart repository.'
        repo: |-
            [AI] The `helm show chart --repo` command is used with Helm, a popular package manager for Kubernetes applications. This command displays detailed information about a specific Helm chart stored in a repository.

            The `--repo` flag specifies the name of the Helm repository where the chart is located. When executed, this command will output various details about the chart such as its name, version, description, dependencies, and values. It's often used for debugging, learning about available charts or checking the latest updates in a specific repository.
        username: '[AI] The `helm show chart --username` command is used in Helm, a popular package manager for Kubernetes, to display the username associated with a given chart repository. Helm charts are packages of Pre-configured Kubernetes resources, and a chart repository contains multiple versions of different charts. By using this command followed by the name of the desired repository, you can obtain information about that repository, including its default version, description, and the username or email address of the chart author or maintainer.'
        verify: '[AI] `helm show chart --verify` is a Helm command used to validate a Helm chart before installing or upgrading it. The `--verify` flag checks the chart for syntax errors, missing files, and other issues without making any changes to the target Kubernetes cluster. It''s an essential step in ensuring the chart''s integrity and readiness for deployment.'
        version: '[AI] The `helm show chart --version` command is used with Helm, a popular package manager for Kubernetes, to display the version information of a specific chart. A Helm chart is a collection of Kubernetes resources and configuration files that can be installed on a Kubernetes cluster using Helm. This command provides details about the specific version of the chart, including its name, description, version number, and creation time. It helps users to identify the version they have deployed or to check for updates before installing a new version.'
