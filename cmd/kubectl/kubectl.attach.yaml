# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: attach (POD | TYPE/NAME) -c CONTAINER
description: Attach to a running container
group: troubleshooting
flags:
    --pod-running-timeout=: The length of time (like 5s, 2m, or 3h, higher than zero) to wait until at least one pod is running
    -c, --container=: Container name. If omitted, use the kubectl.kubernetes.io/default-container annotation for selecting the container to be attached or the first container in the pod will be chosen
    -i, --stdin: Pass stdin to the container
    -q, --quiet: Only print output from the remote session
    -t, --tty: Stdin is a TTY
documentation:
    command: '[AI] `kubectl attach` is a command used in Kubernetes to establish a terminal connection with a running container within a pod. It connects to a specific container''s standard input, output, and error streams. This allows users to interact directly with the container, debug issues, or run ad-hoc commands inside the container environment. The general syntax is: `kubectl attach <pod-name> -c <container-name>`'
    flag:
        container: '[AI] `kubectl attach --container` is a command used with Kubernetes'' `kubectl` tool to establish a shell or terminal connection directly into the specified container running in a Kubernetes cluster. The command connects to a container instance in an active pod, allowing users to interact with the container''s process and troubleshoot issues. By default, it uses the primary container in the pod but can be used with a specific container by providing its name after `--container`.'
        pod-running-timeout: '[AI] The `kubectl attach` command with the `--pod-running-timeout` flag is used to establish a terminal connection with a running container in a Kubernetes pod. The `--pod-running-timeout` flag sets the maximum duration (in seconds) that `kubectl` will wait for a pod with at least one running container before attempting to attach to it. This can be useful when working with ephemeral or short-lived containers, where immediate access may not always be available upon creation. If no container is found after the specified timeout, an error message will be displayed.'
        quiet: '[AI] `kubectl attach --quiet` is a command used with the Kubernetes command-line tool (`kubectl`) to establish a TELNET or SSH connection to the container''s standard input, output, and error streams of a running pod. The `--quiet` flag ensures that no progress messages are displayed during the attachment process, making it suitable for scripts or automated tasks where minimal human interaction is desired.'
        stdin: '[AI] `kubectl attach --stdin` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command allows users to connect to the standard input (STDIN) of a running container in a Kubernetes cluster and interactively send commands. The `--stdin` flag specifies that the connection should be made to the STDIN of the container rather than its console. This can be useful for debugging or troubleshooting processes within a container. For example, you might use it to inspect logs in real-time or to execute ad hoc commands.'
        tty: '[AI] `kubectl attach --tty` is a command used with the Kubernetes command-line interface (CLI) tool `kubectl`. This command allows attaching a terminal session to the standard input, output, and error streams of a running container within a Kubernetes cluster. The `--tty` flag ensures that the session is opened with a TTY (Teletype) connection, which provides more advanced terminal functionality, such as support for cursor control and other escape sequences. This command can be useful for debugging or interactively managing containers in real-time.'
