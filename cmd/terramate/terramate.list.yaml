# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: List stacks
flags:
    --cloud-status=: Filter by status
    --experimental-status=: Filter by status (Deprecated)
    --run-order: Sort stacks by order of execution
    --why: Shows the reason why the stack has changed
documentation:
    command: '[AI] The `terramate list` command is used in Terraform, an open-source infrastructure as code software tool, to display a list of all the available modules registered with the Terraform registry or locally. These modules are pre-built solutions for managing various cloud resources and infrastructure components, allowing users to easily apply infrastructure definitions common to their use case.'
    flag:
        cloud-status: '[AI] `terraform init --list --cloud-status` is a command used in Terraform, an open-source infrastructure as code software tool. This command is part of the initialization process and provides a list of cloud provider configurations that are detected on your local system. The `--cloud-status` argument displays the current status of each backend configuration, indicating whether it''s connected to its respective cloud provider or not. The output will include information such as the backend type (e.g., S3), the address (URL), and a connection status message. This command helps ensure that your Terraform configurations are properly set up and connected to their corresponding cloud providers before running any infrastructure deployments or updates.'
        experimental-status: '[AI] The `terramate list` command is a part of Terraform, an open-source infrastructure as code software tool. The `--experimental-status` flag is used to display information about experimental features that are not yet stable and may change in future releases. These experimental features can be enabled for use by passing the `true` value with this flag. By running `terramate list --experimental-status`, you will get a list of all available experimental features along with their current status, which can help you make informed decisions about using them in your Terraform configurations.'
        run-order: '[AI] `terraform init --list` is a command used in Terraform, an open-source infrastructure as code software tool. This command displays a list of all the available Terraform configuration files (known as workspaces or modules) in the current directory and their execution order. The `--run-order` flag refines this output by displaying only the execution order of the configurations, indicating which one should be applied before others based on dependencies defined in their `terraform.tffiles`. This information is crucial for ensuring that Terraform executes your infrastructure configuration in the intended sequence.'
        why: '[AI] The `terraform init --list` command is a part of Terraform, an open-source infrastructure as code software tool. This specific command is used to list all the available backend configurations that can be used by Terraform. The `--why` flag is optional and it provides an explanation for why Terraform suggests each particular configuration. It helps users understand the rationale behind each suggestion, making it easier to make informed decisions about which backend to use based on their specific requirements.'
