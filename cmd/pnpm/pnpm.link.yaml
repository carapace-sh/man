# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: link
aliases:
    - ln
description: Connect the local project to another one
group: manage
flags:
    --aggregate-output: Aggregate output from child processes that are run in parallel
    --color: Controls colors in the output
    --loglevel=: What level of logs to report
    --no-color: Controls colors in the output
    --stream: Stream output from child processes immediately
    --use-stderr: Divert all output to stderr
    -C, --dir=: Change to directory <dir>
    -h, --help: Output usage information
    -w, --workspace-root: Run the command on the root workspace project
documentation:
    command: '[AI] `pnpm link` is a command used with PnPM, an alternative package manager to npm. It creates a symbolic link between the local packages directory and the node_modules directory of another project, allowing that project to use the linked packages instead of having them installed locally. This can be useful for sharing and developing libraries or applications in a decentralized way without using a central registry like npm or Yarn.'
    flag:
        aggregate-output: |-
            [AI] `pnpm link --aggregate-output` is a command provided by PnP (Plug'n'Play) package manager for linking and aggregating outputs of packages in Node.js projects.

            When you run `pnpm link <package>`, it creates symbolic links between the source and target directories so that when you import a module, it looks for it in the local directory instead of the global npm installation.

            The `--aggregate-output` flag is an optional argument to this command. It collects all the outputs (e.g., compiled JavaScript files or static assets) generated by linked packages during their build process into one or more output directories, typically in the target project's `node_modules/.pnpm/<package>/node_modules`. This can simplify the management of dependent projects, as they will have consistent outputs and reduce the need for rebuilding individual packages.
        color: '[AI] `pnpm link --color` is a command used with PnPM, a package manager for JavaScript projects. This command facilitates the creation of symbolic links between packages in different projects, allowing them to share common dependencies. The `--color` option enables color output in the terminal for a more visually clear and informative experience during the linking process.'
        dir: '[AI] `pnpm link --dir` is a command used with npm or Yarn package managers, specifically with PnPM, which is a faster and parallel version of them. This command links a local package development dependency to another project in the same workspace without publishing it to a registry. The `--dir` option specifies the directory path of the linked package. This means that when you run this command, the referenced package will be available as a link inside the specified project, allowing other projects within the same workspace to import and use it as a local dependency.'
        help: |-
            [AI] `pnpm link` is a command provided by pnpm, a package manager for Node.js projects. The `--help` option is used to display detailed information about how to use the `link` command. Here's what it does in a nutshell:

            `pnpm link [package-name]` is used to share or publish a local npm package for other developers on your network, or vice versa. When you run `pnpm link --help`, it displays detailed information about how to use this command, including the following options and usage:

            - Links the local package with the given name to the global installation or another project.
            - By default, it links in both directions (i.e., both packages can import each other). However, you can use the `--global` flag to only link to the global installation or the `--local` flag to only link to a local project.
            - You can also specify a version number using `link <package-name>@<version>`.
            - If you're publishing a package to npm, you may need to first run `pnpm publish`, which will create an `.npm` directory with the packaged files and then link that to your local npm installation (using `pnpm link .`) or another project using its name.

            The help message also includes examples of how to use this command in various scenarios.
        loglevel: '[AI] `pnpm link --loglevel` is a command used with pnpm, a package manager for JavaScript projects. The `link` command facilitates creating links between different directories in your local file system, allowing you to share dependencies among multiple projects. The `--loglevel` option sets the logging level for pnpm output. You can use "info", "warning", "error", or "silent" to specify the desired log output. For example, `pnpm link --loglevel info` will display only informational messages during the linking process.'
        no-color: '[AI] `pnpm link --no-color` is a command used with pnpm, a package manager for JavaScript projects. The `link` command allows creating links between different directories in your project, enabling the use of shared dependencies without having to manage them individually. The `--no-color` option disables colored output during the linking process. This can be useful when running scripts in environments where color output isn''t supported or desired.'
        stream: '[AI] `pnpm link --stream` is a command provided by pnpm (Parallel NPM), a package manager for Node.js projects. This command facilitates real-time linking between packages during development, allowing changes to be reflected instantly without the need for manual reinstallation or restarting the development server. The `--stream` flag enables this live-reload functionality by creating a stream of events between the linked packages, ensuring that any updates are propagated in near real-time.'
        use-stderr: '[AI] `pnpm link --use-stderr` is a command used with pnpm, a package manager for Node.js projects. This command is used to create symbolic links between packages in a local development environment. The `--use-stderr` flag is optional and it instructs pnpm to output error messages to the standard error stream instead of mixing them with normal output. This can be useful when automating tasks or when working with scripts that only need to know if an operation succeeded or failed.'
        workspace-root: '[AI] `pnpm link --workspace-root` is a command used with the package manager PnPM (Parcel NPM). It facilitates sharing and linking of packages between different projects within a multi-package workspace. The `--workspace-root` flag specifies the root directory of the workspace, allowing PnPM to correctly resolve the links between the projects. This command is typically used when you want to develop multiple interconnected packages, keeping their codebase modular and easily manageable.'
