# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: pod [NAME | -l label]
aliases:
    - pods
    - po
description: Display resource (CPU/memory) usage of pods
flags:
    --containers: If present, print usage of containers within a pod.
    --field-selector=: Selector (field query) to filter on, supports '=', '==', and '!='.(e.g. --field-selector key1=value1,key2=value2). The server only supports a limited number of field queries per type.
    --no-headers: If present, print output without headers.
    --sort-by=: If non-empty, sort pods list using specified field. The field can be either 'cpu' or 'memory'.
    --sum: Print the sum of the resource usage
    --use-protocol-buffers: Enables using protocol-buffers to access Metrics API.
    -A, --all-namespaces: If present, list the requested object(s) across all namespaces. Namespace in current context is ignored even if specified with --namespace.
    -l, --selector=: Selector (label query) to filter on, supports '=', '==', and '!='.(e.g. -l key1=value1,key2=value2). Matching objects must satisfy all of the specified label constraints.
documentation:
    command: '[AI] The `kubectl top pod` command is used to display resource usage statistics (CPU and memory) for the containers in running Kubernetes pods. This command provides real-time insights into the resource consumption of individual containers within a cluster, allowing for efficient resource management and capacity planning.'
    flag:
        all-namespaces: '[AI] `kubectl top pod --all-namespaces` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This specific command displays real-time resource metrics for all pods across all namespaces in a Kubernetes cluster. The output includes CPU and memory usage statistics, allowing users to monitor and identify potentially resource-intensive or struggling pods.'
        containers: '[AI] `kubectl top pod --containers` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command displays the resource usage (CPU and memory) of containers within selected Kubernetes Pods in real time. The output shows the container name, namespace, and current resource usage as well as historical resource usage over a selectable period. It''s often used for monitoring and troubleshooting containerized applications on a Kubernetes cluster.'
        field-selector: '[AI] `kubectl top pod` is a command used to display real-time statistics of Kubernetes Pods, such as CPU and memory usage. The `--field-selector` option allows filtering the output based on specific labels or metrics. For example, `--field-selector status.phase=Running,app=my-app` would display only the running Pods with the label ''app'' equals to ''my-app''. This can help in monitoring and troubleshooting specific workloads within a Kubernetes cluster.'
        no-headers: |-
            [AI] `kubectl top pod` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. The `--no-headers` flag is an optional argument that is passed to this command.

            The main purpose of running `kubectl top pod` is to display real-time resource metrics for containers in a pod, such as CPU usage, memory usage, and network traffic. By default, the output includes headers with column names. The `--no-headers` flag removes these column headers from the output, making it simpler to parse and process the data programmatically using tools like awk, sed, or other command-line utilities.

            So, in summary, when you run `kubectl top pod --no-headers`, you're asking for real-time container resource metrics without any column headers in the output.
        selector: '[AI] `kubectl top pod` is a command used with the Kubernetes CLI (Command Line Interface) tool to display real-time resource metrics for selected pods in a cluster. The `--selector` option filters which pods are displayed based on their labels. For example, `kubectl top pod --selector app=my-app` will show the CPU and memory usage for all pods with the label `app=my-app`. This command is useful for monitoring resource consumption and identifying potential performance issues or bottlenecks in real time.'
        sort-by: '[AI] `kubectl top pod` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command displays real-time statistics of the selected pods in a Kubernetes cluster. The option `--sort-by` allows you to sort the output based on a specific metric such as CPU usage, memory usage, or the number of containers in each pod. For instance, `kubectl top pod --sort-by=CPU` will display the list of pods sorted by their current CPU usage.'
        sum: '[AI] `kubectl top pod` is a command used with the Kubernetes command-line tool, `kubectl`. This command displays real-time resource usage statistics for containers in selected Pods. The `--sum` flag aggregates the resource usage statistics across all containers in the specified Pod(s). Therefore, using `kubectl top pod --sum` will display the summed up resource usage (CPU and memory) for all containers within the selected Pod(s).'
        use-protocol-buffers: |-
            [AI] `kubectl top pod` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`, to display real-time resource usage statistics for running pods in a cluster. The `--use-protocol-buffers` flag modifies how data is serialized and transmitted between the client and server.

            Protocol Buffers is an efficient binary serialization format developed by Google. Using `--use-protocol-buffers` overcomes potential limitations of text-based formats like JSON or YAML for transferring large amounts of data or handling complex structures, as Protocol Buffers offer compact serialized data sizes and fast parsing.

            In summary, using `kubectl top pod --use-protocol-buffers` allows for more efficient real-time resource usage statistics transfer between the client and server by utilizing the Protocol Buffers serialization format.
