# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dap
description: Starts a headless TCP server communicating via Debug Adaptor Protocol (DAP).
flags:
    --client-addr=: host:port where the DAP client is waiting for the DAP server to dial in
documentation:
    command: '[AI] `dlv dap` is a command used in Delve debugger (dlv), which is a popular source-level debugging tool for the Go programming language. The command `dap` stands for "Delve remote attachment protocol." It establishes a remote debugging connection between the Delve debugger and a target Go process running on another machine or even in a different container. This allows for distributed debugging, which can be useful when working with large projects or complex architectures. In summary, `dlv dap` starts a new delve debugger session using the remote attachment protocol to connect to a target process.'
    flag:
        client-addr: '[AI] `dlv dap --client-addr` is a command used with the Delve debugger (dlv) for Go programs in the context of the DAP (Delve Attach and Launcher) protocol. The `--client-addr` flag specifies the IP address and port number where the client (IDE or another tool) should connect to the debug server started by Delve. The format is `<IP:Port>`, for example, `127.0.0.1:3039`. This allows remote debugging of running Go applications from an IDE or other tools.'
