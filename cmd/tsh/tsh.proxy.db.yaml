# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: db
description: Start local TLS proxy for database connections when using Teleport in single-port mode.
flags:
    --cert-file&=: Certificate file for proxy client TLS configuration
    --db-name=: Optional database name to log in to.
    --db-user=: Optional database user to log in as.
    --key-file&=: Key file for proxy client TLS configuration
    --no-tunnel&: Open authenticated tunnel using database's client certificate so clients don't need to authenticate
    --tunnel: Open authenticated tunnel using database's client certificate so clients don't need to authenticate
    -c, --cluster=: Specify the Teleport cluster to connect
    -p, --port=: Specifies the source port used by proxy db listener
documentation:
    command: '[AI] The `tsh proxy db` command is used in the Tsung load testing tool to manage and display information related to proxies configured in Tsung scripts. Specifically, it allows users to list (with `tsh proxy db list`) or get detailed information about a specific proxy (with `tsh proxy db get <proxy_name>`). These commands help in managing and troubleshooting proxies in complex load testing scenarios.'
    flag:
        cert-file: '[AI] The `tsh proxy db --cert-file` command in Traefik, a reverse proxy and load balancer, is used to manage SSL certificates for proxied services. The `--cert-file` option specifies the path to the local SSL certificate file. This flag tells Traefik to use the provided certificate file when establishing secure connections between clients and the backend services. By default, Traefik does not provide any SSL certificates, so this flag is necessary when using SSL for proxied services.'
        cluster: '[AI] The `tsh proxy db --cluster` command is used with the Tsung load testing tool to configure a database cluster for distributed load testing. In this configuration, multiple Tsung proxies are set up to simulate clients that connect and interact with different database nodes in a database cluster. By running `tsh proxy db --cluster`, you specify that you want to use the database proxy feature of Tsung, and that you will be configuring a cluster of databases for testing. The specific details of the cluster setup, such as the number of database nodes and their respective addresses, are typically defined in a separate configuration file or passed as command line arguments.'
        db-name: |-
            [AI] The `tsh proxy db --db-name` command is a part of Tsung, an open-source load testing tool. This specific command is used to configure the database settings for Tsung's proxy server.

            The `--db-name` option sets the name or identifier of the database that Tsung will interact with during the load test. It's essential to provide this information as part of the configuration, so Tsung knows where to send its test data and queries during the testing process.
        db-user: '[AI] The `tsh proxy db --db-user` command is used in Traffic Server (TS), an open-source reverse proxy and caching system developed by Yahoo. This command sets the database user account for Traffic Server''s proxy processes. When you start the Traffic Server, it reads its configuration from various files, including a file named `ts.conf`. In this file, you can define various settings for Traffic Server, such as the number of worker threads, caching policies, and database connection parameters. The `--db-user` option is provided when starting the Traffic Server proxy process from the command line to override the default database user specified in the configuration file. This helps ensure that the Traffic Server can connect to its database using a specific database user account with appropriate permissions.'
        key-file: '[AI] The `tsh proxy db --key-file` command is used in Tsung, a load testing tool. This command loads or saves keys from a database using the Tsung proxy. The `--key-file` option specifies the path to the private key file that will be stored or retrieved from the database. The flag itself (`tsh proxy db`) tells Tsung to interact with its built-in database component for managing keys.'
        no-tunnel: '[AI] The `tsh proxy db --no-tunnel` command is used with the Tectia SSH (TSH) tool to manage the ssh-known-hosts database. The `--no-tunnel` option indicates that this command will only operate on regular host keys and not on any tunneled or proxy-forwarded keys. This means it will only interact with directly connected hosts, excluding those accessed via SSH proxies or jump hosts. The overall purpose of this command is to manage the trusted host keys for secure SSH connections without involving intermediary servers or tunnels.'
        port: '[AI] The `tsh proxy db --port` command is used in Traefik, a reverse proxy and load balancer for modern applications, to view or modify the listening port number of the dynamic configuration backend database. The `--port` flag specifies the port number to be displayed or set.'
        tunnel: '[AI] The `tsh proxy db --tunnel` command is a part of Tsung, an open-source load testing tool, specifically used to create and manage proxies and tunnels for SSH (Secure Shell) tests. This command loads a database of SSH proxies with tunnel configurations, which allows Tsung to establish secure connections through those intermediary hosts during the load test execution. The goal is to simulate real-world traffic passing through proxy servers, improving test accuracy and security.'
