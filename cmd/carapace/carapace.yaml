# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: carapace [flags] [COMPLETER] [bash|elvish|fish|nushell|oil|powershell|tcsh|xonsh|zsh]
description: multi-shell multi-command argument completer
flags:
    --clear-cache: clear caches
    --codegen: generate code for spec file
    --condition: list or execute condition
    --diff: diff completion
    --list: list completers
    --macro: list or execute macros
    --run: run spec
    --schema: json schema for spec files
    --style: set style
    -h, --help: help for carapace
    -v, --version: version for carapace
documentation:
    command: '[AI] "Carapace" is not a standard command in any widely used operating system or programming language. It may refer to the hard, protective outer covering of certain animals like turtles. In a computing context, there might be some specific use of this term in certain applications or tools, but without further information, it''s impossible to provide an accurate explanation.'
    flag:
        clear-cache: '[AI] The `carapace --clear-cache` command is used to clear the cache of Carapace, a completion framework for zsh and bash shells. It removes all stored completions in the cache to free up memory or start fresh with new completions. This can be helpful when experiencing issues with the autocompletion or if you want to reset your completions configuration.'
        codegen: '[AI] `carapace --codegen` is a command used in programming, specifically within the Carapace framework. It generates code snippets for various use cases based on user input or predefined templates. The codes are generated to interact with specific tools or APIs, streamlining the development process and reducing the need for manual coding. This can save time and reduce errors in the codebase.'
        condition: '[AI] The `--condition` flag in Carpenter, a Kubernetes cluster management tool by Microsoft, is used to specify conditions that must be met before Carpenter applies a particular resource configuration or update. This helps ensure that Carpenter only performs actions when certain prerequisites are fulfilled, enhancing the safety and reliability of your Kubernetes environment. For instance, you might use `--condition` to check if a specific version of a dependency is installed before deploying an application.'
        diff: '[AI] `carapace --diff` is a command used in zsh (an open-source Unix shell) for comparing and displaying the differences between two files or directories. The `--diff` flag enables the use of an external diff tool, such as `git diff` or `bdiff`, to show the changes between the specified files or directories in an unified or context format. It is particularly useful when working with text files and wanting to see the modifications made before applying those changes.'
        help: '[AI] `carapace` is a bash completion framework for various command-line tools and languages. The `--help` flag is used to display help information about `carapace` itself, not the specific tool or language it''s being used with. This includes details on how to install, configure, and use `carapace`. It may also list supported completions and their associated options. For more detailed help on a specific completion, use the `carapace completions [completion-name] --help` command.'
        list: '[AI] `carapace --list` is a command used in zsh or bash shells to display a list of available completions for the current command or argument. Carapace is a completion framework that extends the standard tab completion functionality, providing more accurate and context-aware suggestions based on various sources like file systems, git repositories, and custom scripts. By using `--list`, users can inspect the available options before deciding which one to select.'
        macro: '[AI] The `--macro` flag in Carpenter''s Carapace tool is used to execute a Carpenter macro, which is a predefined set of actions written in Carpenter DSL (Domain Specific Language). These macros can automate common tasks within Carpenter, such as creating resources or configuring infrastructure. By passing the `--macro` flag followed by the name of the macro file, you instruct Carapace to execute that specific macro.'
        run: '[AI] The `carapace --run` command is used in zsh or bash shells to execute a specific command or script with Carpenter''s Carapace autocompletion utility preloaded for potential completions. This can be useful when the user is unsure of the exact command they want to run but have a hint or partial input. The flag `--run` executes the command immediately, providing real-time suggestions as you type.'
        schema: '[AI] The `carapace --schema` command is used with Carapace, a tab completion framework for various shells. This command generates or displays schema files that define completions for specific applications or tools. Schema files are YAML-formatted data structures that describe the available completions, including their possible completions and metadata. By generating and using these schema files, Carapace can provide more accurate and relevant tab completion suggestions for users.'
        style: '[AI] `carapace --style` is a command-line option for the Carapace autocompletion framework in zsh or bash shells. It allows users to customize the appearance of autocompletion suggestions by specifying a particular style. Different styles provide various visual cues, such as highlighting matched parts, underlining or bolding specific elements, and displaying icons. For example, `carapace --style powerline` would enable a Powerline-like style for the autocompletions.'
        version: '[AI] The command `carapace --version` is used to check for the current version of Carapace, a popular zsh completion framework. When executed in a terminal or command line interface, it returns output displaying the major and minor version numbers of Carapace installed, along with any additional build information or metadata. This helps users ensure they are running the latest or desired version of Carapace for their use case.'
