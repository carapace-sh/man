# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: supervisorctl
description: control applications run by supervisord from the cmd line
flags:
    -c, --configuration=: configuration file path
    -h, --help: print usage message and exit
    -i, --interactive: start an interactive shell after executing commands
    -p, --password=: password to use for authentication with server
    -r, --history-file: keep a readline history
    -s, --serverurl=: URL on which supervisord server is listening
    -u, --username=: username to use for authentication with server
documentation:
    command: '[AI] `supervisorctl` is a command-line interface for managing Supervisor, a process monitoring system. It allows users to start, stop, and check the status of processes under its control, as well as configure and update Supervisor''s configuration files. Supervisor automatically restarts processes that have crashed or are unresponsive, ensuring their continued operation. This tool is particularly useful for managing background services in Unix-based systems.'
    flag:
        configuration: '[AI] `supervisorctl --configuration` is a command used with Supervisor, a popular system monitoring tool in Python ecosystem. This command displays the current configuration of Supervisor, showing details such as the list of processes being monitored and their respective settings. It helps users understand the current state of their Supervisor setup without having to edit or inspect the underlying configuration files directly.'
        help: |-
            [AI] `supervisorctl` is a command-line tool used to control the Supervisor process manager. The `--help` option displays detailed help information about various commands and their usage. Here's a brief explanation:

            1. `supervisorctl <command> --help`: Displays help information for a specific `<command>`. For instance, `supervisorctl start all --help` will show the help for starting all processes.
            2. `supervisorctl --help`: Displays overall help information about all available `<commands>`, including how to use them and their purpose. This is useful when you're not sure which command to use for a particular task.
        history-file: '[AI] `supervisorctl --history-file` is a command used with Supervisor, a popular system monitoring tool in Python ecosystem. This command writes the output of supervisorctl''s actions (such as starting or stopping services) to a file instead of displaying it on the console. The file specified by this option acts as a history log for Supervisor''s operations.'
        interactive: '[AI] `supervisorctl --interactive` is a command-line tool used to control the Supervisor process manager in system administration. The `--interactive` option starts an interactive shell where you can execute various Supervisor commands directly, such as starting, stopping, or checking the status of processes, without having to write and run scripts or configurations files. It provides real-time feedback and allows for more complex or ad-hoc tasks.'
        password: '[AI] `supervisorctl` is a command-line interface for managing the Supervisor process manager. The `--password` option is used to specify the password for authentication when connecting to the Supervisor control interface over Unix socket or over network. This option ensures only authorized users can make changes to the supervised processes.'
        serverurl: '[AI] `supervisorctl` is a command-line tool for managing the Supervisor process manager in various Unix-based systems. The option `--serverurl` specifies the URL of the Supervisord daemon to connect and interact with. This is typically used when running Supervisor across multiple machines or in a distributed environment, where each machine might have its own instance of Supervisord listening on a different URL. By providing this URL via `--serverurl`, you can use `supervisorctl` to control all those instances remotely from a single location.'
        username: '[AI] `supervisorctl` is a command-line interface for managing the Supervisor process manager. The option `--username <username>` specifies the username to use when connecting to a Supervisord instance running under RPC interface for remote supervision. This helps in implementing access control measures by restricting supervision actions only to authorized users.'
