# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - ls
description: List variables
flags:
    --json*=: Output JSON with the specified `fields`
    -e, --env=: List variables for an environment
    -o, --org=: List variables for an organization
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] `gh variable list` is a GitHub CLI (git-hub) command used to display a list of defined GitHub repository variables. These variables are often referred to as GitHub Secrets or Encrypted Variables, and they are encrypted at rest for security. This command allows users to view the names, values, and creation dates of these variables without having to navigate directly to the GitHub repository settings page.'
    flag:
        env: '[AI] The `gh` flag `variable list --env` is used in GitHub''s `gh` CLI (Command Line Interface) tool to list down all the environment variables defined in a GitHub repository or organization. This command returns the name, value, and encryption status of each variable as output. It helps developers to easily view and manage environment variables configured for their projects within GitHub.'
        jq: '[AI] `gh` is a GitHub CLI tool. The command `gh variable list` lists all GitHub repository environment variables. The option `--jq` passes the output of this command to `jq`, which is a lightweight and flexible data processing tool in JSON format. Together, these commands allow filtering, transforming, and parsing the JSON output of GitHub repository variables with `jq`.'
        json: '[AI] `gh` is a command-line tool for GitHub interaction, developed by GitHub. The `variable list --json` command is used to retrieve a JSON representation of all the project''s GitHub Actions workflow variables. This command helps users programmatically access and manage their GitHub Actions variables.'
        org: '[AI] The `gh` command is a GitHub CLI tool used to interact with GitHub from the terminal. The specific command `gh variable list --org` lists all the organization-level variables of an given GitHub organization. This command returns a JSON object containing key-value pairs for each variable, including name, value, and encryption status (if applicable). It can be used to manage and view configuration variables for an entire organization from the command line.'
        template: |-
            [AI] `gh` is a GitHub CLI tool. The command `gh variable list --template` returns a JSON or YAML formatted output of all project variables for the current repository or specified organization, based on the provided template.

            The `--template` option specifies the format of the output using Go's text/template syntax. Users can define custom templates to extract specific data from the variable list. For example, one could use a template to print out only the key and value for each variable or filter variables by tag.
