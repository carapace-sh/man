# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: tmate
description: Instant terminal sharing
flags:
    -F: set the foreground mode, useful for setting remote access
    -S=: set the socket path, useful to issue commands to a running tmate instance
    -V: print version
    -f=: set the config file path
    -k=: specify an api-key, necessary for using named sessions on tmate.io
    -n=: specify the session token instead of getting a random one
    -r=: same, but for the read-only token
    -v: set verbosity (can be repeated)
documentation:
    command: '[AI] `tmate` is a text editor built on top of the Vim keybindings and SSH protocol. It allows users to edit remote files as if they were local, with real-time syncing between the client and server. This makes it an efficient solution for editing files over SSH without the need to transfer entire files back and forth.'
    flag:
        F: '[AI] The `-F` option in the `tmate` command is used to treat input as files instead of inline text. With this option, each line of input provided to `tmate` is considered a separate file, and `tmate` applies its text manipulation commands (like search, replace, or selection) to each file individually. This flag is particularly useful when dealing with large numbers of files, where processing them one at a time using this approach can be more efficient.'
        S: '[AI] The `tmate` command is a text editor built on top of the terminal. The option `-S` sets the name of the session file, which saves and restores the editing state, including the buffer content, cursor position, and other settings. With this option, you can specify a custom session file name instead of using TMATE_HOME or the default one. For example, `tmate -S mysession.tmate` opens or creates a session with the name "mysession".'
        V: '[AI] `tmate -V` is a command used in the Tmate terminal multiplexer application to display its version information. When executed, it prints out detailed information about the installed Tmate version, including the major and minor releases, the build number, and the Git commit hash if available. This command helps users keep track of their current Tmate installation''s version and ensures they have the latest features or bug fixes when updating their system.'
        f: '[AI] The `tmate` command is a text editor built on top of the terminal, and the option `-f` is used to specify a file or URL to open in that text editor. For example, `tmate -f filename.txt` opens the specified file for editing, while `tmate -f https://example.com` opens a web page as if it were a file in the text editor. In summary, option `-f` is used to open a specific file or URL in Tmate.'
        k: '[AI] The `tmate` command is a text editor built on top of the terminal. The option `-k` stands for "kill" or "detach" in this context. When used, it detaches the current TMATE session from the terminal and runs it as a background process. This allows the terminal to be returned to the user while keeping the editing session active.'
        "n": '[AI] `tmate` is a terminal multiplexer similar to `screen` or `tmux`. The command `tmate -n` is used to create a new `tmate` session without attaching it to a terminal. This means that a new detached session is started in the background, which can be attached later using the `tmate attach` command with the session ID.'
        r: '[AI] `tmate` is a text editor built on top of the Vim and Tmux terminals. The command `tmate -r` stands for "remote-session restore". It restores a previously saved text editing session in a remote server, allowing you to resume your work exactly where you left off. When you save a session with `tmate save`, it stores the current terminal state, including the text editor buffer and the terminal layout, which can be later restored using `tmate -r`. This is useful for working on projects across multiple sessions or machines.'
        v: '[AI] `tmate` is a tool for transferring and synchronizing text between terminals, also known as "terminal multimedia transportation protocol" or "text mode remote copy". The command `tmate -v` displays the version information of the installed `tmate` application. This includes the version number, build date, and commit hash if available. It provides developers and users with important details about their specific installation, helping them troubleshoot issues, check for updates, or understand compatibility between different versions.'
