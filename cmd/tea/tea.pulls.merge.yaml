# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: merge
aliases:
    - m
description: Merge a pull request
flags:
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -m, --message=: Merge commit message
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
    -s, --style=: 'Kind of merge to perform: merge, rebase, squash, rebase-merge'
    -t, --title=: Merge commit title
documentation:
    command: '[AI] The `tea pull request merge` command is a custom Git alias used in TEA (TensorFlow Ensemble Automl) projects. It automates the process of pulling the latest changes from a remote repository, merging a specific pull request into the local branch, and resolving any potential conflicts. This command saves time and effort when dealing with multiple branches and collaborative development tasks.'
    flag:
        login: '[AI] `git pull` is a command used in Git version control system to fetch and merge changes from a remote repository into your local one. The option `--login` is used when you want to access a repository hosted on a secure server using HTTPS, which requires authentication. When using `--login`, Git will prompt you for your username and password before performing the pull operation. The `tea pulls merge --login` command seems incorrect as it doesn''t correspond to any valid Git command or option. If you meant to use `git pull --rebase --login`, then it is similar to `git pull` but instead of merging changes, it reapplies your local commits on top of the updated remote branch, making both branches have the same history.'
        message: '[AI] The command `git pull --rebase origin master --teeny-tiny-commit-message` is used in Git version control system to fetch and merge changes from a remote repository (origin) into your local repository, using the rebase strategy instead of the default merge. The "--merge" flag is optional and includes both a fast-forward merge if possible and a commit if necessary. The `--message="teeny-tiny-commit-message"` specifies a custom commit message for the merged changes.'
        output: |-
            [AI] The `git` command `tee pulls merge --output <file>` is used to merge two branches in Git while piping the output to a file. This can be useful for documenting or saving the merge commit message, conflicts resolved during the merge process, or other relevant information.

            The `tee` part of the command is a utility that allows you to read from standard input (in this case, the merge process), write the data to standard output (the actual merge), and also save a copy of the data to a file (specified by `--output <file>`).

            When executing this command in a Git Bash or terminal window, you would first navigate to your Git repository, then write something like:

            ```bash
            git checkout <branch1>
            git pull origin <branch2>
            git checkout <target-branch>
            git merge --no-ff <branch1>
            git tee --wait --no-pager --output=<merge-log.txt> .
            ```

            Replace `<branch1>` with the name of the branch you want to merge into `<target-branch>`, and replace `<branch2>` with the name of the branch containing the changes you wish to merge. The command above merges the branches using the three-way merge method (`--no-ff`) and writes the resulting commit message, conflicts, or any other output to the specified file named `merge-log.txt`.
        remote: |-
            [AI] The `git` command `teapull merge --remote` is used to pull and merge changes from a remote repository into your local branch, resolving any potential conflicts manually. Here's an explanation of each part:

            1. `git`: This is the Git version control system command-line tool.
            2. `teapull`: A custom extension or alias for Git that automates some steps during the merge process and displays a summary of the changes, making it easier to review before merging.
            3. `merge`: The Git command to merge branches, combining the differences between two branches into your current branch.
            4. `--remote`: An option that tells Git to fetch the latest changes from the remote repository (instead of just checking for local changes) before attempting the merge. This is useful when you want to ensure you have the most up-to-date code from the remote branch before merging it into your local one.

            So, the entire command `git teapull merge --remote` performs the following tasks:
            1. Fetches the latest changes from the remote repository.
            2. Merges the fetched changes (from the remote branch) with your current local branch, creating a new commit if there are any conflicts that need to be resolved manually.
            3. Displays a summary of the changes before committing them to your local branch.
        repo: '[AI] The command `git pull --rebase origin TEADATABASE_BRANCH` is used in Git version control system to fetch and merge changes from a remote repository (in this case named "origin") into the current local branch, using the rebase merging strategy. The option `--rebase` tells Git to perform a rebase instead of a fast-forward merge, allowing for more fine-grained control over the merge process and a cleaner commit history. The argument `TEADATABASE_BRANCH` is the name of the branch on the remote repository that you want to merge changes from.'
        style: |-
            [AI] The `git pull` command with the option `--rebase --merge --strategy=tee` is used to fetch and merge changes from a remote repository into your local branch. Here's a breakdown of each part:

            1. `git pull`: This is the base Git command for fetching and merging changes from a remote repository.
            2. `--rebase`: Instead of creating a new commit for every change, this option reapplies your local commits on top of the updated remote commits.
            3. `--merge`: In addition to rebasing, this option merges any commits that cannot be rebased (such as merge commits) using a three-way merge.
            4. `--strategy=tee`: This is an advanced Git merge strategy which stores the changes from both branches in a separate "Temporary" or "TEE" branch, allowing you to manually resolve any conflicts before committing the merge.
        title: '[AI] The command `git pull --rebase origin master --tee-pdf TEAPULLS_MERGE.txt` is used in Git version control system to perform a rebase merge with an upstream repository and save the resulting commit messages into a file named "TEAPULLS\_MERGE.txt". The flag `--tee-pdf` specifies that the output should be written to the specified file in Portable Document Format (PDF), which can be easily viewed and searched using PDF readers. The overall purpose is to maintain a record of merge commit messages in a readable format for future reference.'
