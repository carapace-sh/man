# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: reopen
aliases:
    - open
description: Change state of one or more issues to 'open'
flags:
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: '[AI] The `tea issues reopen` command is used in the Trello project management tool to reopen a previously closed issue or ticket. When an issue is marked as resolved, it is moved out of the active workflow and into the closed list. However, if new information arises or if it''s discovered that the initial resolution did not fully address the problem, the issue can be reopened using this command. Once reopened, it will move back into the active workflow so that further action can be taken.'
    flag:
        login: |-
            [AI] The flag `--tea-issues-reopen` followed by `--login` is used in GitLab's CI/CD pipeline configuration files (`.gitlab-ci.yml`). This combination of flags does the following:

            1. `--tea-issues-reopen`: When a job or stage fails, this flag enables GitLab to automatically create and assign issues for each failed test in the CI/CD pipeline. These issues are created with the prefix "TEA-" and can be found under the project's issue tracker.
            2. `--login`: This flag tells GitLab that the runner should attempt to log back into a GitLab instance after being disconnected. When a runner finishes its job, it logs off automatically. With this flag, if the runner is disconnected during the pipeline execution and needs to reconnect for subsequent jobs or stages, it will try to log back in using the provided credentials.
        output: |-
            [AI] The command "tea issues reopen --output" is used in GitLab's Terminal or Command Line Interface (CLI) for managing issues.

            The command consists of several parts:

            1. `tea`: This is an alias for the GitLab CLI commands related to issues and merge requests.
            2. `issues`: Specifies that we want to work with issues, not merge requests or other types of objects.
            3. `reopen`: Instructs GitLab to reopen the previously closed issues. By default, this will only reopen issues marked as "closed" and not those with any other state.
            4. `--output`: Specifies that the output of the command should be displayed in a human-readable format on the terminal instead of just the raw JSON or other formats.

            In summary, this command is used to reopen closed issues in GitLab using the CLI and display the results on the terminal.
        remote: |-
            [AI] The command "`git fetch --unshallow origin tea-issues reopen --remote`" is used in Git version control system to fetch and update a local repository from a remote one, specifically the "origin" repository in this case. The "--unshallow" flag allows Git to work with a repository that was initially cloned as a shallow clone, meaning it only contains the history up to the point of the last fetch.

            The "--remote" flag tells Git to not merge any new commits from the remote into the local branch automatically, but instead leaves them as detached heads in the remote tracking branches. This is useful if you want to review and manually merge the changes yourself.

            The "tea-issues reopen" part refers to the name of the remote branch(es) or repository being worked with. In this context, it may represent a branch where there are open issues related to tea that have been marked as reopened for further work.
        repo: |-
            [AI] The `tea issues reopen --repo` command is used in Git, a version control system. It specifically refers to reopening an issue marked as resolved or closed within a Git repository.

            The `--repo` flag indicates that the command should be applied to a specific Git repository, instead of the global Git configuration.

            Here's a breakdown of each part of the command:

            - `tea`: This is likely a custom alias for Git commands, similar to how `git` is an alias for the Git executable. The name `tea` is arbitrary and doesn't have any meaning related to the command itself.
            - `issues`: This part of the command tells Git to work with issues tracked in the repository using a Git hosting service like GitHub or GitLab.
            - `reopen`: This action reopens an issue that was previously closed or marked as resolved, allowing further changes or discussions on the issue.
            - `--repo <repository>`: This flag specifies the name of the Git repository to apply the command to. If no repository is specified, the command will be applied to the default repository configured in your Git settings.
