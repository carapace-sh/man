# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: merge-one-file
description: The standard helper program to use with git-merge-index
group: low-level helper
documentation:
    command: |-
        [AI] The `git merge-one-file` is not a valid Git command. Git uses various merge strategies to combine changes from different branches, but it doesn't have a specific command to merge only one file. Instead, you can use `git checkout`, `git merge`, and `git add` to merge changes from one branch into another while keeping conflicts in specific files for resolution:

        1. Check out the target branch: `git checkout <target-branch>`
        2. Fetch or pull changes from the source branch: `git fetch origin <source-branch>` or `git pull origin <source-branch>`
        3. Merge the specific file(s) from the source branch: `git checkout <file-path> HEAD^` (check out the file from the previous commit), `git merge <source-branch>/<file-path>`, and `git add <file-path>`. If there are any conflicts, resolve them manually.
        4. Commit the merged changes: `git commit -m "Message describing the change"`.

        This way, you can merge changes from a specific file from one branch into another while preserving the stability of the target branch.
