# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: citool
description: Start git gui and arrange to make exactly one commit before exiting and returning to the shell
flags:
    --amend: Automatically enter the Amend Last Commit mode of the interface
    --nocommit: Behave as normal citool, but instead of making a commit simply terminate with a zero exit code
documentation:
    command: '[AI] `git gui` is a graphical user interface (GUI) tool for Git, a popular version control system. `citool` is actually an older name for the same Git GUI developed by the same team. So, the command `git gui citool` is equivalent to running the `git gui` command with the `citool` configuration file or backend. This will open the Git GUI application with its default settings based on the `citool` configuration. Users can use it to view and manage their Git repositories, commit changes, resolve conflicts, and more through an intuitive GUI interface.'
    flag:
        amend: '[AI] `git gui` is a graphical user interface for Git, a popular version control system. The command `git gui citool --amend` opens the "Commit" tab of Git GUI with the last commit that was made in the current repository. This command allows you to edit the message or messages associated with the most recent commit, as well as modify the list of files being committed or unstage any changes before making the amended commit. It''s an efficient way to change the latest commit message without creating a new one.'
        nocommit: '[AI] `git gui --nocommit` is a command used in Git, a popular version control system. This command opens the Git GUI (Graphical User Interface) tool called "Citool" without allowing any commits. In other words, it allows users to view and stage changes, but they cannot commit those changes until they explicitly choose to do so outside of the GUI. It is useful for previewing changes before committing or resolving conflicts without affecting the repository''s history.'
