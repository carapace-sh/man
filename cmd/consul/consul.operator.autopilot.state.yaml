# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: state
description: Display the current Autopilot configuration
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --format=: Output format
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul operator autopilot state` command is used with the Consul Operator, which is a tool for deploying and managing Consul service mesh using Kubernetes. This command queries the current status of the Consul Operator''s autopilot mode. Autopilot mode automates various aspects of operating a Consul service mesh, such as creating and updating services, creating and configuring connectors, and managing certificates. The output of this command provides information about the current state of these automated processes.'
    flag:
        ca-file: '[AI] The `consul operator autopilot state --ca-file` command is used with the Consul service mesh Operator in Kubernetes to configure the TLS certificate authority (CA) file for the Autopilot mode. Autopilot is a feature that automates various aspects of managing a Consul service mesh, including certificates and traffic management. The `--ca-file` flag specifies the path to a CA file that will be used to sign the server and client certificates for the service mesh components. The CA file should contain the private key and public certificate of a trusted Certificate Authority (CA). This command ensures secure communication between different components in the Consul service mesh by using TLS encrypted traffic.'
        ca-path: '[AI] The `consul operator autopilot state --ca-path` command is used with the Consul Operator, which is a tool for managing and deploying Hashicorp''s Consul service. This specific command retrieves the CA (Certificate Authority) path from the current autopilot state of the Consul Operator. The CA is responsible for issuing and managing certificates for secure communication between different components in the Consul cluster, ensuring data security and integrity. By providing the CA-path, you can verify and trust the certificates used by these components.'
        client-cert: '[AI] The `consul operator autopilot state --client-cert` command is used with the Consul Operator, which is a tool for managing and deploying the Consul service discovery and configuration management solution. This specific command retrieves the client certificate that is being used by the Consul Operator in its Autopilot mode. Autopilot is a feature that automates various operational tasks such as upgrades and reconfigurations, and it requires a client certificate for secure communication with the Consul server.'
        client-key: '[AI] The `consul operator autopilot state --client-key` command is used with the Consul Operator, which is a tool for managing and deploying Consul, a Connect and Service Mesh platform. This specific command retrieves the client key of an autopilot in Consul Operator''s management. Autopilots are Kubernetes Custom Resource Definitions (CRDs) that automatically manage Consul services based on Kubernetes resources. The `--client-key` flag returns the unique, secret client key associated with the specified autopilot state.'
        datacenter: '[AI] The `consul operator autopilot state --datacenter` command is used with the Consul Operator, which is a tool for managing and deploying the Consul service discovery and configuration management system. This specific command retrieves the current datacenter configuration in the Consul cluster that is being managed by the Consul Operator''s autopilot mode. Autopilot is a feature of the Consul Operator that allows it to automatically configure and manage your Consul deployment based on predefined policies, making it easier to operate and maintain your Consul infrastructure. The `--datacenter` flag restricts the output to only display information related to the datacenter configuration.'
        format: |-
            [AI] `consul operator autopilot state --format` is a command used with the Consul Operator, which is a tool for managing and deploying HashiCorp Consul, a popular service discovery, configuration, and orchestration tool.

            The `autopilot state` subcommand retrieves the current state of Consul's Autopilot mode, which is a feature that automates the deployment, configuration, and scaling of Consul services based on predefined rules.

            The `--format` flag specifies the output format for the command result. The most common formats are "table" or "json". By default, the command outputs in a table format, but you can use the `--format=json` option to get the result as a JSON object.

            Therefore, the overall command purpose is to display the current Consul Autopilot mode state in either table or JSON format.
        http-addr: '[AI] The `consul operator autopilot state --http-addr` command is used with the Consul Kubernetes Operator to check or set the HTTP address of the Consul server running in the autopilot mode. Autopilot mode is a feature of the Consul Operator that automatically manages and scales Consul servers based on the size and complexity of the cluster. The `--http-addr` option specifies the external IP address or hostname:port combination where the Consul server can be accessed via HTTP. This command provides the current value when used without an argument, and sets a new value when provided as an argument.'
        stale: '[AI] The `consul operator autopilot state --stale` command is used with the Consul Kubernetes Operator to check the current autopilot state and identify any services or clients that are not in their desired state, also known as stale resources. Autopilot mode automates the configuration of Consul services in a Kubernetes cluster. The `--stale` flag filters the output to only display resources that have drifted from their expected state.'
        tls-server-name: |-
            [AI] The `consul operator autopilot state --tls-server-name` command is used with the Consul Service Mesh Operator, which automates the deployment and management of a Consul service mesh using Kubernetes.

            The `--tls-server-name` flag sets the TLS server name for the Consul service mesh. This is important because it specifies the hostname or IP address that clients should use when connecting to the Consul server over a secure TLS connection. Setting this value correctly ensures secure communication between services in the mesh.
        token: '[AI] The `consul operator autopilot state --token` command is used with the Consul Template operator, which automates the management of Consul configurations. The token provided is for authentication purposes and is required to interact with the Consul API. This specific command retrieves the current autopilot state (enabled or disabled) of the operator using the given token.'
        token-file: '[AI] The `consul operator autopilot state --token-file` command is used with the Consul Operator, which is a tool for managing and configuring Consul, a distributed computing platform that provides service discovery, configuration, and orchestration. The `autopilot state` subcommand sets up or updates an Autopilot configuration, which allows Consul to automatically manage your infrastructure. The `--token-file` option specifies the path to a file containing an API token for authenticating with Consul. This command sets the Autopilot into a running state using the provided API token.'
