# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: lock
description: Lock administrative files from being pruned automatically
flags:
    --expire=: add 'prunable' annotation to worktrees older than <time>
    --porcelain: machine-readable output
    -v, --verbose: show extended annotations and reasons, if available
    -z: terminate records with a NUL character
documentation:
    command: '[AI] `git worktree lock` is a Git command used to set a read-only lock on a specific work tree or branch in a Git repository. This command prevents users from making changes to the locked work tree or branch, ensuring consistency and preventing conflicts during collaborative development. When a work tree or branch is locked, other Git clients will receive an error message if they try to checkout or make modifications to it. The lock can be released using `git worktree unlock`.'
    flag:
        expire: '[AI] `git worktree lock --expire` is a Git command used to release locks on shared Git work-trees that have exceeded their specified expiration time. When you use `git worktree add` to create a new work-tree, by default, it creates a locked work-tree. This prevents other users from making changes to the same branch simultaneously. The `--expire` option sets an expiration time for the lock, after which the lock is automatically released. If you want to release locks manually before their expiration time, use `git worktree lock --release`. To remove locked work-trees regardless of their status or expiration time, use `git worktree prune`.'
        porcelain: '[AI] `git worktree lock --porcelain` is a Git command used to set a lock on a particular worktree, which prevents others from making changes to it while keeping the shared repository unlocked. The `--porcelain` option makes the output in a format suitable for scripting and processing with other tools. With this command, you can specify a worktree using its path or its name. Once a lock is set, any attempt to checkout, pull, merge, or push changes to that worktree will be denied until the lock is released. This can be useful when multiple developers need to work on different branches or features of a project while ensuring that conflicting changes do not overlap.'
        verbose: '[AI] `git worktree lock` is a Git command used to set a lock on a specific worktree, preventing others from making changes to it. The `--verbose` option increases the amount of output provided during the locking process, displaying detailed information about the worktree being locked and any conflicts that may arise. When used together, this command sets a lock on the specified worktree and provides verbose output for better understanding of the locking process.'
        z: '[AI] `git worktree lock` is a Git command used to set a read-only lock on one or more worktrees. The `-z` option stands for "zero length refs," which means that the command creates zero-length branches or references in the specified worktrees, effectively freezing them at their current state. When a worktree is locked with this option, no commits or other changes can be made to the frozen branches until the lock is released. This feature is useful when you want to prevent accidental modifications to specific branches while keeping multiple working copies of a repository synchronized.'
