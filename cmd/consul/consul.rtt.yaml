# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: rtt
description: Estimates network round trip time between nodes
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
    --wan: Use WAN coordinates instead of LAN coordinates.
documentation:
    command: '[AI] The `consul rtt` command is not a recognized Consul CLI (Command Line Interface) command. There seems to be a typo in the given input as there isn''t any Consul RTT (Round Trip Time) command documented in Consul''s official CLI documentation. For more information about available Consul commands, refer to their official documentation: https://www.consul.io/docs/command-line-interface.html'
    flag:
        ca-file: '[AI] The `consul rtt` command is a tool from Hashicorp''s Consul service for testing the round-trip time (RTT) to reach services registered in a Consul cluster. The option `--ca-file` specifies the path to a file containing the root certificate authority (CA) bundle, which is used to authenticate and encrypt communication between the client running the command and the Consul servers. This is important for ensuring secure communication with the Consul API in order to access up-to-date service information.'
        ca-path: '[AI] The `consul rtt --ca-path` command is used with the Consul REST API to perform Round Trip Time (RTT) tests between two Consul agents or servers. The `--ca-path` option specifies the path to a directory containing CA (Certificate Authority) certificates, which are used for SSL/TLS certificate verification during the communication between the agents or servers. This option ensures secure and encrypted communication during the RTT test.'
        client-cert: |-
            [AI] The `consul rtt --client-cert` command is used with the Consul CLI (Command Line Interface) tool, which is a part of the Consul service discovery and configuration management platform.

            The `--client-cert` flag specifies the path to a client certificate file for TLS (Transport Layer Security) authentication when communicating with a Consul server or agent. This is an important security measure that ensures only authenticated and authorized clients can access the Consul service registry, configuration data, and other functionality.

            By providing this flag, you are ensuring secure communication between your client application and the Consul server or agent. It is essential for maintaining the confidentiality, integrity, and authenticity of information exchanged during the interaction.
        client-key: '[AI] The `consul rtt --client-key` command is used with the Consul discovery service to perform Round-Trip Time (RTT) tests against a specific client identified by its key. Consul is a popular service discovery and configuration management tool. By using this command, you can measure the latency between your local agent and a remote agent or server to evaluate network performance and identify potential issues in your infrastructure. The `--client-key` option allows you to specify the unique identifier of the client whose RTT you want to test.'
        http-addr: '[AI] The `--http-addr` flag in Consul''s RTT (Remote Timeout Test) command is used to specify the HTTP address where Consul agent or server listens for RTT requests. This allows users to test the network connectivity and latency between different services registered in Consul using the RTT command, while specifying the correct Consul instance to interact with. For example: `consul rtt --http-addr=192.168.0.1:8500` will target the Consul agent or server running at the given IP address and port.'
        tls-server-name: '[AI] The `consul rtt --tls-server-name` command is used in the Consul service discovery and configuration tool to perform Round Trip Time (RTT) tests over a secure Transport Layer Security (TLS) connection. The `--tls-server-name` option specifies the name of the TLS server to connect to. This flag ensures that secure communication with the specified Consul server is established before running the RTT test, adding an extra layer of security.'
        token: '[AI] The `consul rtt --token` command is used in Consul, a distributed configuration and service discovery tool, to perform a Round-Trip Time (RTT) test against a specific member or service registered in the Consul system. The `--token` argument provides the necessary authentication token to access Consul''s HTTP API. This command helps measure network latency between two Consul agents, which can be useful for monitoring and troubleshooting performance issues within the Consul infrastructure.'
        token-file: '[AI] The `consul rtt` command is a tool from Hashicorp''s Consul service for performing round-trip time (RTT) tests to check the health and latency of services discovered by Consul. The option `--token-file` specifies a file containing an API token used to authenticate with the Consul server. This is important to ensure secure communication between the client running the RTT command and the Consul server, as only authenticated requests are allowed to access service information in a production setup.'
        wan: '[AI] The `consul rtt --wan` command is used with the Consul system monitoring and discovery tool. It specifically runs a Round-Trip Time (RTT) test against a target server over a Wide Area Network (WAN) connection. This measurement provides an estimate of the latency between the local machine running Consul and the remote server, which can be helpful for understanding network performance and identifying potential issues in distributed systems.'
