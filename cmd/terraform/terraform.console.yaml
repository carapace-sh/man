# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: console [options]
description: Try Terraform expressions at an interactive command prompt
flags:
    -state?: Legacy option for the local backend only
    -var*=: Set a variable in the Terraform configuration
    -var-file?: Set variables in the Terraform configuration from a file
documentation:
    command: '[AI] `terraform console` is a command-line interface tool provided by Hashicorp''s Terraform infrastructure as code software. It allows users to interactively explore and manipulate their Terraform configuration files, execute arbitrary Terraform expressions, and test changes without applying them to the real infrastructure. This can be useful for debugging complex configurations or experimenting with new features before committing them to version control.'
    flag:
        state: '[AI] The `terraform console` command is a feature in Terraform, an open-source infrastructure as code software tool, that provides an interactive shell for querying and manipulating your infrastructure''s state. The `-state` option specifies the path to a Terraform backend state file. This allows you to interact with your current or specified state data without running a full Terraform apply or plan command. It can be useful for debugging, exploring the relationships between resources in your infrastructure, and performing ad-hoc queries on your infrastructure''s configuration.'
        var: |-
            [AI] `terraform console` is a command-line tool provided by Terraform to interactively explore and modify your infrastructure configuration. The `-var` option allows you to pass HCL maps or strings as variables when invoking the console. This enables working with dynamic values during the console session, making it easier to test different scenarios without modifying the actual configuration files. For example:

            ```bash
            terraform console -var="my_map={key1 = value1, key2 = value2}" -var="my_string=some_value"
            ```
        var-file: '[AI] The `-var-file` flag in Terraform console command is used to specify a file containing Terraform input variables and their values. This flag enables passing external configuration data to the console session, overriding any default or previously set variable values. It''s useful for applying different configurations or environments while interactively working with your infrastructure using the console.'
