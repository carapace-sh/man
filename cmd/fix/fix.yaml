# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fix
description: Fix finds Go programs that use old APIs
flags:
    -diff: display diffs instead of rewriting files
    -force=: force these fixes to run even if the code looks updated
    -go=: go language version for files
    -r=: restrict the rewrites to this comma-separated list
documentation:
    command: |-
        [AI] The `fix` command is not a standard command in Unix or Linux operating systems. It might be specific to certain software applications or tools, where it could refer to various actions such as:

        1. Repairing or modifying files or system configurations.
        2. Correcting errors or inconsistencies in data.
        3. Restoring default settings for a particular option or configuration.

        For example, in the context of the Git version control system, `git fix` could be used to create a new commit that corrects an error in the previous commit. In other systems, it might have different meanings or no meaning at all. Always refer to the specific documentation for the software you are using to understand the implications and usage of the `fix` command.
    flag:
        diff: '[AI] `git diff --cached --static --ignore-space-at-eol` or simply `git diff --cache`, more commonly known as `git diff --cached` or `git diff --staged`, is a Git command used to show the differences between the files that are currently staged (ready to be committed) and their last commit. The `--diff` flag is used to display the difference between the files, and the `--cached` flag restricts the comparison to only the changes that have been staged. The `--static` and `--ignore-space-at-eol` options are optional and make the tool behave in a more stable way across different environments.'
        force: '[AI] `flag "fix -force"` in a Unix-like operating system context is used to forcefully apply changes without asking for confirmation. When this flag is passed to certain commands, such as `git commit` or `cp`, it overrides the default behavior of prompting for confirmation before making the changes. Using `flag "fix -force"` can help streamline workflows but also carries the risk of unintended consequences if used carelessly.'
        go: |-
            [AI] The `-flag` option in Go programming language is used to define build constraints or flags for the `go build`, `go test`, and other Go commands. The specific flag `"-go"` does not exist in standard Go usage. Instead, you can use various predefined flags like `-v` for verbose output, `-mod` to enable module mode, etc., or define your own custom flags using the `-ldflags` option to set environment variables or compile-time constants. For example:

            ```bash
            go build -o myapp main.go -ldflags="-X 'Main.version=1.0'"
            ```

            This command compiles the `main.go` file and sets the `version` constant to `"1.0"` in the generated binary named `myapp`.
        r: '[AI] The `-r` flag in the `git` command `git checkout -- <file>` or `git restore --staged <file>` with the `--force` or `-f` option, when used with `fix`, creates or updates a commit to discard changes in the working directory or the staging area. The changes are replaced with those from the latest commit in the current branch. This is useful for resolving conflicts or restoring files to their previous state.'
