# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: build
description: Build a new versioned artifact from source
flags:
    --label=: Labels to set for this operation.
    --plain: Plain output
    --push: Push the artifact to the configured registry.
    --remote: True to use a remote runner to execute.
    --remote-source=: Override configurations for how remote runners source data.
    --var-file=: HCL or JSON file containing variable values to set for this operation.
    --var=: Variable value to set for this operation.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint build` command is used in Waypoint, an open-source Kubernetes YAML generator and manager, to create Docker images or Kubernetes manifests based on defined configuration files. It processes templates, applies variables, and performs any other necessary transformations to generate the output artifacts. These artifacts can be Docker images, Helm charts, or Kubernetes manifest files depending on the Waypoint project setup. The command executes the build process defined in the Waypoint project file(s) and generates the resulting output in the specified directory or Docker registry.'
    flag:
        app: '[AI] `waypoint build --app` is a command used in Google''s Waypoint configuration management tool to build and create a Docker image for a specific Kubernetes application. This command pulls the application source code from its repository, applies any specified custom builds or transformations, and finally packages the application into a new Docker image with a version number. The resulting image is ready to be deployed on a Kubernetes cluster using Waypoint''s deployment workflows.'
        label: |-
            [AI] The `flag "waypoint build --label"` is used in Kubernetes with the Waypoint software development tool to set labels for containers built using Waypoint. Labels are key-value pairs that provide metadata and help select and organize resources in Kubernetes clusters. When using this flag, developers can specify one or more key-value label pairs that will be applied to the Docker images built by Waypoint when they're pushed to a container registry. This can help with management and organization of containers within a cluster. For example:

            ```sh
            waypoint build --label app=myapp,version=v1.0.0
            ```

            This command would set the 'app' label with value 'myapp' and 'version' label with value 'v1.0.0'. This information can then be used to select or filter containers in Kubernetes based on these labels.
        plain: '[AI] `waypoint build --plain` is a command used in Waypoint, an open-source Kubernetes application delivery platform. This command initiates a new build of your applications defined in Waypoint Manifests, generating plain YAML output instead of the usual human-readable format for easier consumption by other scripts or tools.'
        project: '[AI] The `waypoint build --project` command is used in Waypoint, an open-source continuous delivery and infrastructure automation tool by Google. This specific command triggers a build process for a defined project within Waypoint. It fetches the latest version of the project''s configuration files from the version control system (VCS), applies any local changes, validates the configurations against the policy, then packages and builds the related artifacts such as Docker images or Kubernetes manifests based on the project''s defined architecture. Once the build is successful, Waypoint stores the built artifacts in a registry for easy deployment.'
        push: |-
            [AI] `flag "waypoint build --push"` is a command used in Kubernetes and specifically with the Waypoint open-source multi-cloud application delivery platform. This command triggers the following actions:

            1. Builds Docker images for your application using the specified Waypoint configuration file, which includes instructions on source code location, image name, and build context.
            2. Authenticates and pushes the newly built Docker images to a container registry such as Docker Hub, Google Container Registry, or Amazon Elastic Container Registry.
            3. Updates the relevant Kubernetes deployment or service with the latest image tag if specified in your Waypoint configuration file.
            4. Performs other optional actions such as testing, linting, and security scanning before pushing images to ensure application quality and security.

            In summary, `flag "waypoint build --push"` is used to build Docker images, authenticate and push them to a container registry, and update your Kubernetes deployment or service with the latest image version.
        remote: '[AI] `waypoint build --remote` is a command used with Waypoint, an open-source Kubernetes infrastructure automation tool. This specific command initiates a remote build process using Waypoint. In simple terms, it fetches the latest configuration from a remote repository (usually Git), compiles and builds the application containers, and pushes the newly created images to a container registry. It''s commonly used when working with distributed teams or continuous integration/continuous deployment pipelines.'
        remote-source: '[AI] The `waypoint build` command is a tool used in Kubernetes for building and deploying container images. The `--remote-source` flag specifies that the image configuration files, also known as YAML manifests, should be fetched from a remote source instead of the local directory. This can be useful when working with multiple environments or collaborating on infrastructure as code projects. The remote source could be a Git repository, a tarball, or any other accessible location.'
        var: '[AI] `waypoint build --var` is a command used in Waypoint, an open-source Kubernetes infrastructure automation tool. This command triggers a new build of your application using Waypoint''s continuous delivery workflow. The `--var` option is for passing and updating variables in the context of your application''s configuration. By providing key-value pairs with this flag, you can change the values of your input variables without modifying the source code itself. This allows for dynamic customization and easier management of your applications while maintaining a git-based workflow.'
        var-file: '[AI] The `--var-file` flag in the `docker-compose` `waypoint` build command is used to specify a file containing variable overrides for the Compose file. When you run `waypoint build <project-name> --var-file <path-to-vars-file>`, Waypoint reads the variables defined in the specified file and overrides the corresponding values in the Compose file before building and starting the services. This allows for easy management of configuration values, such as environment variables or volume mounts, without modifying the Compose file directly.'
        workspace: '[AI] The `waypoint build --workspace` command is used in Google''s Cloud Native Computing Foundation (CNCF) project, `Terraform-based Kubernetes Infrastructure Definition with Waypoint`. This command initiates a build process with Waypoint using the defined workspaces. Workspaces in Waypoint define a logical grouping of resources for a specific environment or application within an infrastructure definition. By using this command, Waypoint processes the configured resources within the specified workspace and generates the Kubernetes manifests to be applied to your cluster.'
