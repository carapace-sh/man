# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: check-ignore
description: Debug gitignore / exclude files
group: low-level helper
flags:
    --no-index: ignore index when checking
    --stdin: read file names from stdin
    -n, --non-matching: show non-matching input paths
    -q, --quiet: suppress progress reporting
    -v, --verbose: be verbose
    -z: terminate input and output records by a NUL character
documentation:
    command: '[AI] `git check-ignores` is not a Git command, but rather a script provided by Git for checking the list of files or directories that are ignored by Git based on the .gitignore files in your repository. This can be useful when setting up a new project or troubleshooting why certain files are not being tracked by Git. To run it, use the command `git check-ignores -- verbose` in your Git Bash or terminal window. The output will list the .gitignore files in your repository and the paths of the files and directories that are ignored according to those files.'
    flag:
        no-index: '[AI] `git check-ignores` is a Git command used to manually add or modify files and directories that are ignored by Git, without modifying the `.gitignore` files. The `--no-index` option disables checking for ignored files against the current index, allowing you to modify the list of ignored files while not committing any changes to the repository yet.'
        non-matching: '[AI] `git check-ignores` is a Git command used to query or modify the list of files that are ignored by Git, specified in `.gitignore` files and other ignore patterns. The `--non-matching` option filters the output to only show files that are currently being tracked by Git but are not excluded by any ignore pattern. This can be useful for understanding which files might unintentionally be included in commits when there''s a suspicion of unwanted files being tracked.'
        quiet: '[AI] The `git check-ignore --quiet` command is used to query Git about whether a file or a directory is ignored based on its presence in the .gitignore files in your repository. It runs quietly, meaning it will not output any message if the file or directory is not ignored, making it useful when you want to check multiple files or directories without being flooded with messages. If the file or directory is ignored, an error message will be displayed instead.'
        stdin: '[AI] `git check-ignore --stdin` is a Git command used to read the contents of a file from the standard input stream and determine if it should be ignored by Git based on the rules specified in the `.gitignore` files or custom ignore patterns. This command can be useful when dealing with large numbers of files, as it allows ignoring files without modifying the `.gitignore` files directly. The `--stdin` option indicates that the filenames should be read from standard input instead of file paths provided on the command line.'
        verbose: '[AI] `git check-ignores` is a Git command used to display or manipulate the list of files and directories ignored by Git. The `--verbose` option increases the verbosity of output, providing detailed information about each ignored file or directory, including the reason for being ignored based on the rules specified in .gitignore files.'
        z: '[AI] `git check-ignore` is a Git command used to query the .gitignore file or the checkignores cache, which records the files ignored by Git based on .gitignore files in the repository and in the project directory. The `-z` option modifies the output format by appending null characters at the end of each line instead of adding a newline character. This allows for easier processing of the output in scripts or other programs that require NUL-terminated strings. Essentially, it makes the output of the command suitable for passing directly to tools like `find` or `grep` without having to remove newlines first.'
