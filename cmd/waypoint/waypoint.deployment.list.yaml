# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: List deployments
flags:
    --desc: Sort the values in descending order.
    --json: Output the deployment information as JSON.
    --limit=: How many values to show.
    --long-ids: Show long identifiers rather than sequence numbers.
    --order-by=: Order the values by which field.
    --physical-state=: Show values in the given physical states.
    --plain: Plain output
    --state=: Filter values to have the given status.
    --url: Display deployment URL.
    --verbose: Display more details about each deployment.
    --workspace-all: List builds in all workspaces for this project and application.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint deployment list` command is used in Waypoint, an open-source platform for managing Kubernetes applications. It returns a list of currently deployed applications and their associated revisions. This command helps users to get an overview of their active deployments, allowing them to easily identify and manage specific applications within the Waypoint ecosystem.'
    flag:
        app: '[AI] The `kubectl flag "waypoint deployment list --app"` is used to list all deployments in a Kubernetes cluster that are associated with a specific application defined using Waypoint, a Git-op based multicloud application delivery platform. This command retrieves the metadata of those deployments, including their names and statuses, from the Kubernetes API server. It helps developers and operators keep track of their applications'' current deployment status across multiple environments.'
        desc: '[AI] The `kubectl flag "waypoint deployment list --desc"` is used to display a description or help text of the `deployment list` sub-command under Waypoint, which is a Kubernetes application delivery controller by Microsoft. This command is not a standard Kubernetes command but rather an extension provided by Waypoint. The description will provide information about how to use this command effectively, including any required flags or arguments and the expected output format. In summary, it provides you with detailed usage information for listing deployments using Waypoint.'
        json: '[AI] `flag "waypoint deployment list --json"` is a command used in Waypoint, an open-source continuous delivery and deployment tool for Kubernetes. This command returns the list of deployed applications as JSON format. It allows users to programmatically access and manipulate the data about their application deployments. This can be useful for automation, scripting, or integrating with other tools in a CI/CD pipeline.'
        limit: '[AI] The `kubectl flag --limit` used with the `waypoint deployment list` command in Kubernetes is used to limit the number of deployments returned in the output. It takes an integer value, and by default, it returns all deployments. Using this flag helps to paginate through large lists or focus on a specific subset of deployments for easier management.'
        long-ids: '[AI] The `kubectl flag --flag "waypoint-deployment-list --long-ids"` is used to display the list of Waypoint (a GitOps tool for Kubernetes) deployments with their long, hexadecimal IDs in addition to the default name and namespace information. This can be useful when working with multiple deployments and wanting to quickly identify which is which based on the unique ID.'
        order-by: '[AI] The `waypoint decomposition list --order-by` command is used with the Waypoint deployment tool in Kubernetes to retrieve a sorted list of deployments based on specific criteria. The `--order-by` flag allows specifying the field by which the list should be ordered, such as "Name", "CreationTime", or custom fields like "DesiredRevision". By default, the list is sorted in ascending order. Using this command helps to easily manage and understand the deployment order or status based on selected criteria.'
        physical-state: '[AI] The `waypoint deployment list --physical-state` command is used in Microsoft Azure Kubernetes Service (AKS) to retrieve the current physical state of all deployments managed by Waypoint, which is a GitOps tool for managing Kubernetes applications. This includes the desired and actual replica counts, availability zones, and other relevant information for each deployment. The output provides a clear and concise overview of the current state of the application infrastructure in the AKS cluster.'
        plain: '[AI] `waypoint deployment list --plain` is a command used in the Kubernetes tool, Waypoint, to list all deployed applications and their associated revisions in a plain text format. The `--plain` option is used to output the information without any extra formatting or decoding. This can be useful for scripting or parsing the output of Waypoint.'
        project: '[AI] The `kubectl flag "waypoint deployment list --project"` is used to list all deployments created by Waypoint, a Git-based continuous delivery tool for Kubernetes, in a specific Kubernetes project. It retrieves and displays the name, namespace, creation timestamp, and status of each deployment from the given project. This command helps users manage and keep track of their deployed applications within a particular project.'
        state: '[AI] The `kubectl waypoint deployment list --state` command is used to retrieve the current state of all deployments in a Kubernetes cluster managed by Waypoint, which is a continuous delivery tool for Kubernetes. The `--state` flag filters the output to display only the desired phase of each deployment such as "running", "pending", or "failed". This information can be useful for understanding the current status and health of applications deployed in the cluster.'
        url: '[AI] The `waypoint deployment list --url` command is used with Waypoint, an open-source Kubernetes application delivery and management platform. This command retrieves the URLs of all active deployments in a given Waypoint environment. It returns a JSON response containing the name, namespace, and URL for each deployment. This information can be useful for accessing or managing applications deployed using Waypoint.'
        verbose: '[AI] The `kubectl flag "waypoint deployment list --verbose"` is used with the Kubernetes command-line tool (`kubectl`) to list all deployments managed by Waypoint, an open-source continuous delivery platform for Kubernetes. The `--verbose` flag increases the amount of output provided, displaying more details about each deployment such as its status, creation timestamp, and descriptor information. This command helps users gain a deeper understanding of their application deployments in their Kubernetes cluster.'
        workspace: '[AI] The `kubectl flag --workspace` is used with the `kubectl apply` and `kubectl create` commands in Kubernetes to specify which workspace, or context, to use for deploying a new resource. A workspace represents a collection of clusters, users, and namespaces that are connected through `kubectl config`. By using this flag, you ensure that the correct cluster and namespace are targeted when deploying a new application or updating existing resources. This is important for managing multiple projects or environments in your Kubernetes setup.'
        workspace-all: '[AI] The `waypoint deployment list --workspace-all` command is used in Hashicorp''s Waypoint, a continuous delivery tool for infrastructure. It lists all deployed infrastructure resources across multiple workspaces in the current Waypoint configuration. This command provides an overview of the currently active infrastructure configurations, helping users manage and keep track of their deployments.'
