# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update
description: ' Update an ACL policy'
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --description=: A description of the policy
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --id=: The ID of the policy to update.
    --meta: Indicates that policy metadata such as the content hash and raft indices should be shown for each entry
    --name=: The policies name.
    --namespace=: Specifies the namespace to query.
    --no-merge: Do not merge the current policy information with what is provided to the command.
    --rules=: The policy rules.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
    --valid-datacenter=: Datacenter that the policy should be valid within.
documentation:
    command: |-
        [AI] The `consul acl policy update` command is used to modify an Access Control List (ACL) policy in Hashicorp Consul. This command updates an existing policy with new or modified rules, without having to create a new policy from scratch.

        The basic syntax of the command is:

        ```sh
        consul acl policy update <name> [--set key=value]...
        ```

        Here, `<name>` is the name of the existing ACL policy that you want to modify. The optional `[--set key=value]...` arguments allow you to specify new or updated policy rules by providing a list of key-value pairs. For example:

        ```sh
        consul acl policy update my_policy --set "rules[].service = 'webserver'" --set "rules[].actions[] = 'read'"
        ```

        This command updates the `my_policy` ACL policy by setting a new rule for the `webserver` service, allowing the `read` action.
    flag:
        ca-file: '[AI] The `consul acl policy update` command is used to modify Access Control Lists (ACL) policies in Consul, an open-source tool for service discovery and configuration management. The `--ca-file` option is a flag that specifies the path to a file containing the client certificate authority (CA) used to authenticate the client making the API request. This flag ensures secure communication between Consul and the client while updating ACL policies.'
        ca-path: '[AI] `consul acl policy update --ca-path` is a command used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command is used to update Access Control Lists (ACL) policies in Consul''s Key Value Store or HTTP API, with a specific focus on managing the CA (Certificate Authority) paths for certificates used by clients authenticated through TLS. The `--ca-path` option specifies the path to a file containing the CA certificates that will be trusted for client authentication. This command helps ensure secure communication between Consul and its clients while allowing fine-grained access control over the data stored in the Key Value Store or served via HTTP API.'
        client-cert: '[AI] The `consul acl policy update` command is used to modify Access Control List (ACL) policies in Consul, a popular service discovery and configuration management tool. The `--client-cert` flag refers to the client certificate that should be used when making the API request to update an ACL policy. This certificate must be authenticated by Consul''s certificate authority, and its private key should be provided through other means (such as an environment variable or a file). By using `--client-cert`, the user ensures secure communication between the client and the Consul server while updating the ACL policies.'
        client-key: |-
            [AI] The `consul acl policy update --client-key` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command allows updating Access Control Lists (ACL) policies programmatically through the Consul API.

            The `--client-key` option specifies the client key of an authenticated request. The client key is a unique identifier used to authenticate API requests from Consul clients. With this authentication, you can modify ACL policies only if you have the required permissions in your organization. This command helps maintain security and control over who can make changes to Consul's access rules.
        datacenter: |-
            [AI] The `consul acl policy update --datacenter` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration, to update Access Control Lists (ACL) policies specifically related to a datacenter.

            With this command, you can modify the rules defining which entities have access to what resources within the given datacenter. The changes made will affect only the specified datacenter. If you have multiple datacenters in your Consul setup, using this command with the correct datacenter parameter is essential to ensure the intended policies are updated.
        description: '[AI] The `consul acl policy update` command is used to modify Access Control List (ACL) policies in Consul, a Connectivity and Orchestration Toolkit. The `--description` option allows you to provide or update the description for the specified ACL policy. This can help maintain clear documentation of the purpose and scope of each policy within your Consul environment.'
        format: '[AI] The `consul acl policy update --format` command is used in Hashicorp Consul, an open-source tool for service discovery and configuration management. This command updates Access Control Lists (ACL) policies within the Consul server and outputs the updated policies in a human-readable format, making it easier to review changes before applying them.'
        http-addr: '[AI] The `consul acl policy update` command is used to update access control lists (ACLs) in Hashicorp Consul, a connectivity and service management platform. The `--http-addr` option specifies the HTTP address where Consul''s ACL API can be reached. When you run this command with the `--http-addr` flag, you are telling Consul to apply the policy update at the specified Consul HTTP API endpoint instead of the default local one.'
        id: '[AI] The `consul acl policy update` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. The `--id` flag specifies the ID of the access control list (ACL) policy that will be updated. When you run this command with the `--id` flag followed by a specific policy ID, it updates the existing ACL policy with new rules or modifications instead of creating a new one. This way, you can manage and modify your Consul policies effectively while keeping your existing configurations.'
        meta: '[AI] The `consul acl policy update --meta` command is used in Hashicorp Consul to update an Access Control List (ACL) policy''s metadata without changing its rule set. Metadata can include custom key-value pairs that provide additional information about the policy, such as its description or creation timestamp. This command allows for modifying these metadata fields while keeping the underlying policy rules intact.'
        name: '[AI] The `consul acl policy update` command is used in Consul, an open-source distributed, highly available, and data center aware toolkit for configuring and managing services. The `--name` flag specifies the name of the Access Control List (ACL) policy that will be updated. This command updates the specified ACL policy with new rules or modifications to existing ones. It is a key component in managing access control in Consul, enabling fine-grained permissions and securing communications between services.'
        namespace: '[AI] The `consul acl policy update` command is used to modify Access Control List (ACL) policies in Hashicorp''s Consul service. The `--namespace` option specifies the Kubernetes namespace where Consul is running, and the ACL policy changes will be applied. For instance, if your Consul service runs inside a Kubernetes cluster with the "mynamespace" namespace, you would use `consul acl policy update --namespace mynamespace`. This command does not directly modify the policies themselves but instead updates them via the ACL API, making it an essential tool for managing access to services and resources within Consul.'
        no-merge: '[AI] The `consul acl policy update --no-merge` command is used to update Consul Access Control Lists (ACL) policies without merging conflicting changes. When using `--no-merge`, Consul will not automatically merge differences between the new and existing policies, instead it will replace the entire policy with the updated one. This can be useful in situations where you want to ensure that only your specific changes are applied and avoid potential conflicts from overlapping or conflicting rules.'
        rules: '[AI] The `consul acl policy update --rules` command is used to update an Access Control List (ACL) policy in Consul, a connectivity and configuration management tool. This command takes one or more rules as arguments, which define permissions for different actions on resources in the Consul ecosystem. The updated rules will replace the existing policy, enforcing new access control restrictions or granting new permissions.'
        stale: '[AI] The `consul acl policy update --stale` command in Consul is used to update Access Control Lists (ACL) policies with changes that have been marked as stale, meaning they have been proposed but not yet applied due to consistency checks or other conflicts. This command helps ensure that the ACL policies are up-to-date and correctly enforced within the Consul environment.'
        tls-server-name: '[AI] The `consul acl policy update --tls-server-name` command is used to update Access Control Lists (ACL) policies in Hashicorp Consul, a popular service discovery and configuration management tool. This specific command is used when making updates over TLS (Transport Layer Security), and allows you to specify the TLS server name to connect to. By providing this information, Consul can verify the identity of the remote server during the secure connection, enhancing security by preventing man-in-the-middle attacks. The main purpose is ensuring secure communication when modifying ACL policies in Consul through a TLS connection.'
        token: '[AI] The `consul acl policy update` command is used to modify Access Control List (ACL) policies in Consul, an open-source tool for service discovery, configuration, and orchestration. The `--token` option specifies the token that authorizes the request. This token is used to authenticate the user or process making the policy update request with Consul''s ACL system. Without a valid token, updating policies would not be possible.'
        token-file: '[AI] The `consul acl policy update` command is used to modify Access Control List (ACL) policies in Consul, an open-source tool for service discovery, configuration, and orchestration. The specific flag `--token-file` is used to provide the path to a file containing a valid Consul token as an argument. This token is required to authenticate the user making the policy update request. Without this flag, you wouldn''t be able to execute the command with the necessary permissions to modify ACL policies in your Consul deployment.'
        valid-datacenter: '[AI] The `consul acl policy update --valid-datacenter` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration, to validate an Access Control List (ACL) policy update against the current datacenter''s data before applying it. This ensures that any changes made to access control policies will only affect the intended datacenter and do not inadvertently impact other datacenters. The `--valid-datacenter` flag is used with the Consul ACL policy CLI command to perform this validation check.'
