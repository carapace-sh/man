# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: gist-logs
description: Upload logs for a failed build of <formula> to a new Gist
group: main
flags:
    --debug: Display any debugging information.
    --help: Show this message.
    --new-issue: Automatically create a new issue in the appropriate GitHub repository after creating the Gist.
    --private: The Gist will be marked private and will not appear in listings but will be accessible with its link.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
    --with-hostname: Include the hostname in the Gist.
documentation:
    command: |-
        [AI] The `brew gist-logs` command is a custom command used with Homebrew, a popular package manager for macOS. This command doesn't exist by default in Homebrew but can be created as a wrapper script to fetch and display the logs of various Git repositories managed by Homebrew using Gist.

        In simpler terms, assuming you have set up such a command: `brew gist-logs` fetches the logs of all Homebrew repositories stored in your Gist account and displays them in your terminal. This can be useful for reviewing changes made to Homebrew formulas over time.
    flag:
        debug: |-
            [AI] `brew gist-logs --debug` is a command used in Homebrew, a popular package manager for macOS and Linux. This specific command invokes the `gist-logs` helper tool with debug mode enabled.

            The `gist-logs` tool is designed to log various information related to Homebrew's Git operations, which includes fetching, pulling, and pushing. The `--debug` flag amplifies this functionality by providing a more detailed output, including error messages and additional diagnostic data that can be useful for troubleshooting or investigating issues when using Homebrew.
        help: '[AI] The command `brew gist-logs --help` is used with Homebrew, a popular package manager for macOS, to display help information about the `gist-logs` subcommand. This subcommand is used to log and manage GitHub Gists. When you run this command with the `--help` option, you will see a detailed explanation of how to use `gist-logs` with Homebrew, including available options and their meanings. It provides information on how to authenticate with GitHub, create new gists, list existing gists, and more.'
        new-issue: '[AI] `brew gist-logs --new-issue` is a command used with Homebrew, a popular package manager for macOS. This command retrieves and creates a new GitHub issue from the logs of Homebrew''s installed packages or its own repository. The logs contain important details like installations, updates, and errors that can be helpful when reporting issues to the Homebrew project.'
        private: '[AI] The command `brew gist-logs --private` is used with Homebrew, a popular package manager for macOS. This command retrieves and pushes Git log data from Homebrew''s private repositories to a Gist on GitHub. By using the `--private` option, only logs from Homebrew''s private repositories are included. This can be useful for keeping track of changes made to those repositories or for sharing the logs with others.'
        quiet: '[AI] The command `brew gist-logs --quiet` is a terminal instruction for Homebrew, a popular package manager for macOS. This command retrieves and uploads Git log histories as text files to a public or private GitHub Gist. The `--quiet` option suppresses the progress output during the upload process, making the command run more silently.'
        verbose: '[AI] `brew gist-logs --verbose` is a command used in Homebrew, a popular package manager for macOS and Linux. This command retrieves Git log data for Homebrew''s installed packages and sends it to a GitHub Gist. The `--verbose` option increases the amount of output displayed during the execution of the command. In simpler terms, it generates a GitHub Gist containing version history information for all installed Homebrew packages and displays detailed progress while doing so.'
        with-hostname: '[AI] `brew gist-logs --with-hostname` is a command used in Homebrew, a popular package manager for macOS and Linux. This command is used to log the installation history of Homebrew packages to a GitHub Gist. The `--with-hostname` option includes the hostname or IP address of the machine where the installation occurred with each log entry. This can be useful for tracking installation history across multiple machines or environments.'
