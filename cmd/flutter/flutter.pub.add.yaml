# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Add a dependency to pubspec.yaml
flags:
    --git-path=: Path of git package in repository
    --git-ref=: Git branch or commit to be retrieved
    --git-url=: Git URL of the package
    --hosted-url=: URL of package host server
    --no-offline: Do not use cached packages instead of accessing the network.
    --no-precompile: Do not build executables in immediate dependencies.
    --offline: Use cached packages instead of accessing the network.
    --path=: Local path
    --precompile: Build executables in immediate dependencies.
    --sdk=: SDK source for package
    -C, --directory=: Run this in the directory <dir>.
    -d, --dev: Adds package to the development dependencies instead.
    -h, --help: Print this usage information.
    -n, --dry-run: Report what dependencies would change but don't change
documentation:
    command: '[AI] `flutter pub add` is a command used in Flutter project development to add new dependencies to the pubspec.yaml file. When executed, it fetches the specified package from the Flutter Package Manager and adds its entry to the pubspec file under the "dependencies" section. After running this command, you can import and use the added dependency in your Dart code without requiring manual downloads or setups.'
    flag:
        dev: '[AI] `flutter pub add --dev` is a command used in Flutter development to add new Dev dependencies to a project''s `pubspec.yaml` file. Dev dependencies are packages that aren''t required for the app to run but are useful during development, such as testing frameworks or development tools. The command retrieves and installs the specified package and its dependencies from the Flutter Package registry.'
        directory: '[AI] The `flutter pub add --directory` command is used in Flutter development to add a package dependency directly to the `pubspec.yaml` file of a specific directory within a Flutter project instead of adding it to the root directory. This can be useful when working with multi-module projects, where each module may have unique dependencies. By specifying the `--directory` option followed by the path to the desired directory, you''re instructing Flutter to modify only that directory''s `pubspec.yaml`.'
        dry-run: '[AI] `flutter pub add --dry-run` is a command used in the Flutter framework for testing the effect of adding a new dependency to the project''s `pubspec.yaml` file without actually installing it. The `--dry-run` flag performs a simulation, showing what changes would be made if the command was run without actually executing them. This way, you can review the impact on your `pubspec.lock` and `pubspec.yaml` files before committing the change.'
        git-path: |-
            [AI] The `flutter pub add --git-path` command is used to specify a custom Git URL when adding a dependency to a Flutter project using the `pubspec.yaml` file. By default, Flutter's `pub get` command fetches dependencies from the public GitHub registry. However, this command allows you to point to a specific Git repository that may not be publicly accessible. The format is as follows:

            ```bash
            flutter pub add <package_name> --git-path=<Git_repository_URL>
            ```

            Replace `<package_name>` with the name of the dependency package and `<Git_repository_URL>` with the URL to the Git repository.
        git-ref: '[AI] `flutter pub add --git-ref` is a command used in the Flutter framework for adding dependencies from a specific Git reference, such as a branch or tag, instead of the latest version. This allows developers to use a specific version of a dependency that may not be the most recent one, providing more control over their project''s dependencies and potentially resolving issues with compatibility between different packages.'
        git-url: '[AI] `flutter pub add --git-url` is a command used in Flutter development for adding dependencies from a specific Git URL instead of the regular Flutter packages index. This command directly interacts with the `pubspec.yaml` file, modifying the `dependencies` section to include the given Git URL and adding it as a network dependency. The Git URL should point to a repository hosting the custom package code. This way, you can use custom or non-indexed packages in your project.'
        help: '[AI] `flutter pub add --help` is a command used in Flutter development for adding dependencies to a project''s `pubspec.yaml` file. The `--help` option is used to display detailed help information about the command. It explains what the command does, how to use it with various options, and provides examples. It helps users understand how to effectively manage their project''s dependencies using Flutter and the `pubspec.yaml` file.'
        hosted-url: '[AI] `flutter pub add --hosted-url` is a command used in Flutter development for adding a new hosted repository URL to the `pubspec.yaml` file. This command modifies the `flutter` section of the `pubspec.yaml` file, updating the list of URLs from which packages will be fetched using `flutter pub get`. By specifying a new `--hosted-url`, you can add a new remote repository as a valid source for dependencies. This command is particularly useful when working with private package repositories or when switching between different hosting services like GitHub Packages or Bintray.'
        no-offline: '[AI] `flutter pub add --no-offline` is a command used in Flutter development for adding new dependencies to a project''s `pubspec.yaml` file without using cached packages from the local `~/.pub-cache` directory. This means that the dependency will be downloaded directly from the remote package repository, ensuring that you have the latest version of the package. The `--no-offline` flag disables offline mode, which is useful when you want to ensure that you''re getting the most up-to-date packages.'
        no-precompile: '[AI] `flutter pub add --no-precompile` is a command used in Flutter development to add new dependencies to a project''s `pubspec.yaml` file without compiling or building the project. The `--no-precompile` option disables the automatic precompilation of added dependencies during this operation, resulting in faster execution time for the `pub get` command, but requiring manual precompilation before running the app.'
        offline: '[AI] `flutter pub add --offline` is a command used in Flutter development to install packages from the local cache instead of fetching them online. This can be useful when internet connection is unstable or not available at all, allowing the developer to use previously downloaded packages without needing to re-download them. The `--offline` flag instructs Flutter to use the locally cached packages instead of checking for updates in the remote repository.'
        path: '[AI] `flutter pub add --path` is a command used in Flutter development to add packages from a custom location other than the default Flutter packages repository. The `--path` option specifies the path to the custom package directory, and Flutter will add those packages as dependencies in the project''s `pubspec.yaml` file.'
        precompile: '[AI] `flutter pub add --precompile` is a command used in Flutter development to precompile dependencies'' Dart code into native ARM machine code, which can improve the app''s startup time and reduce the overall download size of the application. This process takes place during the build process and makes it faster for the app to load the necessary code when it runs on an ARM-based device like a mobile phone or tablet. It does this by creating an arm64-v8a apk file instead of an standard apk, which can be installed directly on devices without requiring a JIT compiler at runtime.'
        sdk: '[AI] `flutter pub add --sdk` is a command used in the Flutter development framework for adding a new software development kit (SDK) to a Flutter project. The `--sdk` option specifies the path or URL of the SDK to be added. When executed, this command retrieves and installs the specified SDK from the Flutter package repository (named "pub.dev") as a dependency in the project''s `pubspec.yaml` file. This enables your project to use the new library or tool provided by the added SDK.'
