# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: credentials
description: Get credentials for kubectl access
hidden: true
flags:
    --kube-cluster!=: Name of the Kubernetes cluster to get credentials for.
    --teleport-cluster!=: Name of the Teleport cluster to get credentials for.
documentation:
    command: '[AI] The `tsh kube credentials` command is a part of the Treasure Data Toolbox Shell (tsh) which is used for managing interactions with Treasure Data''s services, particularly those related to Kubernetes. This specific command is employed to retrieve or display the Kubernetes authentication credentials in YAML format. These credentials include client certificate, key, and the CA certificate, and they can be utilized to authenticate and interact with a Kubernetes cluster managed by Treasure Data.'
    flag:
        kube-cluster: '[AI] The `tsh kube credentials --kube-cluster` command is used with the `kubectx` and `ksubectl` tools in the `tkns` (Tanzu Kubernetes Grid Services) toolkit, which is a component of Tanzu Application Service. This command retrieves the Kubernetes cluster configuration for the currently active context in `kubectx`, and saves it as a file named `cluster.yml` under the `$HOME/.kube/config/tsh-<cluster_name>` directory. The resulting file can be used to provide the necessary authentication information when interacting with that specific Kubernetes cluster using other tools like `kubectl`.'
        teleport-cluster: '[AI] The `tsh kube credentials --teleport-cluster` command is a part of TemporalWorkflow''s `tsh` (Temporal CLI) tool, specifically the subcommand for managing Kubernetes credentials. This command is used to generate or update Kubernetes credential configuration for use with Teleport, a secure access plane for protocols like SSH, HTTP/2, and gRPC. The flag `--teleport-cluster` specifies the name of the Teleport cluster that the generated or updated config will be associated with. The command retrieves the necessary Kubernetes credentials, encrypts them, and stores the configuration in a file or directory that can be accessed by Teleport. This allows secure access to Kubernetes clusters from within a TemporalWorkflow workflow without exposing sensitive credentials directly.'
