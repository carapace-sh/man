# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: attach [OPTIONS] CONTAINER
description: Attach local standard input, output, and error streams to a running container
flags:
    --detach-keys=: Override the key sequence for detaching a container
    --no-stdin: Do not attach STDIN
    --sig-proxy: Proxy all received signals to the process
documentation:
    command: |-
        [AI] The `docker container attach` command is used to connect the standard input, output, and error streams of a running Docker container to the current terminal session. This allows you to interact directly with the container's processes and see their output in real-time. The syntax for this command is as follows:

        ```bash
        docker container attach CONTAINER
        ```

        Replace `CONTAINER` with the name or ID of the running Docker container you want to attach to. When you run this command, you'll be attached to the container, and any input you provide at your terminal will be sent to the container, and any output produced by the container will be displayed on your terminal. This can be useful for debugging or monitoring applications in real-time.
    flag:
        detach-keys: '[AI] The `docker container attach` command is used to connect the standard input, output, and error streams of a running Docker container to the current terminal session for real-time interaction. The `--detach-keys` flag sets keyboard shortcuts (default: Ctrl+P and Ctrl+Q) to detach from the container while keeping it running in the background. When you press these keys together, the container will be detached, but its process will still run in the background.'
        no-stdin: '[AI] The `docker container attach --no-stdin` command is used to connect the standard input, output, and error streams of a running Docker container to the current terminal session. However, with the `--no-stdin` flag, the container will not receive any input data from the attached terminal, allowing you to observe its output without influencing it directly.'
        sig-proxy: '[AI] The `docker container attach --sig-proxy` command is used to attach a terminal or another process to the standard input, output, and error streams of an existing Docker container. The `--sig-proxy` flag enables proxy transmission of signals between the host and the container. This means that signals sent from the host (such as those generated by keyboard interruptions) will be propagated to the container, allowing for better interaction and control.'
