# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: diffedit
description: Touch up the content changes in a revision with a diff editor
flags:
    --from=: Show changes from this revision. Defaults to @ if --to is specified
    --to=: Edit changes in this revision. Defaults to @ if --from is specified
    -h, --help: Print help (see more with '--help')
    -r, --revision=: The revision to touch up. Defaults to @ if neither --to nor --from are specified
documentation:
    command: '[AI] The `jj diffedit` command is a Vim plugin (called "JumpList") shortcut for opening the diff view of the file being edited in Vim with an external diff tool, such as `mvimdiff` or `vdiff`. This allows users to compare and merge changes between two versions of a file more easily.'
    flag:
        from: '[AI] `jj` is a text editor for Vim users, designed for efficient interactive editing of JSON files. The command `jj diffedit --from` initiates a diff edit mode in `jj`. In this mode, `jj` compares the current local file with a remote file or another local file and displays the differences between them side by side. This allows users to easily identify and manipulate changes before committing them.'
        help: |-
            [AI] `jj` is a popular Vim-based text editor for Git and Mercurial repositories, providing features like easy branching, merging, staging, and committing. The command `jj diffedit --help` is used to display the help information for the "diffedit" feature of `jj`.

            This feature allows users to open a split window with the difference between the current local file and its latest remote or commit counterpart. Users can then edit both versions in parallel, make changes, and commit them. The changes are automatically staged and committed once the user saves the file. In summary, `jj diffedit` facilitates efficient and effective handling of differences and merging between local and remote files during development.
        revision: '[AI] `jj` is a text editor integrated with Git for efficient editing of files in version control systems. The command `jj diffedit --revision <commit>` opens a new window with the difference between the current working file and the specified Git commit''s content. This helps developers to visually compare changes, merge conflicts, or review previous versions while keeping the context of their Git repository.'
        to: |-
            [AI] The `jj` command is a text editor built into Git, specifically designed for interactive staging and patch editing in Git. The `diffedit` subcommand is used to open an editor to view and edit the differences between your working directory files and the index or commit files.

            The option `--to <commit>` specifies that the differences to be shown are those between the current branch's HEAD and the specified <commit>. This allows you to compare your changes with a specific commit, helping in resolving merge conflicts or reviewing older versions of the file.
