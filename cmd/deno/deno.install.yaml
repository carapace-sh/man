# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: install
description: Install script as an executable
flags:
    --allow-env?: Allow environment access
    --allow-ffi?: Allow loading dynamic libraries
    --allow-hrtime: Allow high resolution time measurement
    --allow-net?: Allow network access
    --allow-read?: Allow file system read access
    --allow-run?: Allow running subprocesses
    --allow-write?: Allow file system write access
    --cached-only: Require that remote dependencies are already cached
    --cert=: Load certificate authority from PEM encoded file
    --import-map=: Load import map file
    --inspect-brk?: Activate inspector on host:port and break at start of user script
    --inspect?: 'Activate inspector on host:port (default: 127.0.0.1:9229)'
    --location=: Value of 'globalThis.location' used by some web APIs
    --lock-write: Write lock file (use with --lock)
    --lock=: Check the specified lock file
    --no-check: Skip type checking modules
    --no-remote: Do not resolve remote modules
    --prompt: Fallback to prompt if required permission wasn't passed
    --root=: Installation root
    --seed=: Seed Math.random()
    --unsafely-ignore-certificate-errors?: 'DANGER: Disables verification of TLS certificates'
    --v8-flags?: 'Set V8 command line options (for help: --v8-flags=--help'
    -A, --allow-all: Allow all permissions
    -c, --config=: Load configuration file
    -f, --force: Forcefully overwrite existing installation
    -n, --name=: Executable file name
    -r, --reload?: Reload source code cache (recompile TypeScript)
documentation:
    command: '[AI] `deno install` is a command provided by Deno, a modern JavaScript running engine and toolkit. It''s used to download and install Deno packages or modules from the registry (https://deno.land) into your project directory, making them ready for import and usage within your Deno scripts or applications.'
    flag:
        allow-all: |-
            [AI] The `deno install` command is used to download and install Deno, a modern JavaScript runtime, along with its standard library. The `--allow-all` flag is an optional argument that modifies Deno's default security settings.

            By default, Deno enforces a strict permissions model, preventing the execution of code that imports or calls functions from files outside of the project directory without explicit permissions. This helps ensure the security of your system and projects.

            The `--allow-all` flag, however, disables these restrictions. With this option, you can install and run Deno scripts with full access to the file system and other system resources, making it easier to test or use scripts that need read/write access to specific files or directories. Be aware that using this flag may expose your system to potential security risks if used with untrusted code.
        allow-env: '[AI] The `deno install` command is a utility provided by Deno, a modern and secure TypeScript runtime. The `--allow-env` option is a security feature that specifies environment variables which are allowed when running the installed script. It helps prevent potential security vulnerabilities arising from unsanitized use of environment variables in Deno scripts. When using this option, Deno only allows the specified environment variables to be accessed by the installed script, thereby enhancing the platform''s built-in security.'
        allow-ffi: '[AI] The `deno install` command is used to download and install Deno packages as executables. The option `--allow-ffi` grants permission for the installed package to use foreign function interfaces (FFIs), which allow calling C code from Deno. This flag is necessary when installing packages that depend on FFI functionality, ensuring that they can properly function when run as standalone executables.'
        allow-hrtime: '[AI] The `deno install` command is used to download and install Deno, a modern JavaScript runtime, and its dependencies on various operating systems. The option `--allow-hrtime` is a permission flag that grants the Deno application access to the system''s high-resolution timer for more precise timing measurements. By including this flag during installation, users ensure Deno can fully utilize these features when running their scripts.'
        allow-net: '[AI] `deno install --allow-net` is a command used in Deno, a modern and secure TypeScript runtime. This command installs and runs a Deno application with a specific permission set. The `--allow-net` flag grants the installed script the ability to make network requests using the Fetch API. Without this flag, such functionality would be denied for security reasons, as part of Deno''s built-in sandboxing mechanism.'
        allow-read: '[AI] The `deno install` command is used to download and install Deno projects as executables on various platforms. The `--allow-read` option specifies that the installed application will be granted read permissions for files in its environment. This flag ensures that the application can access necessary input files during execution without requiring explicit user interaction each time it runs.'
        allow-run: '[AI] The `deno install` command is a tool provided by Deno, a modern and secure TypeScript runtime. The `--allow-run` option is used to grant permission to run scripts downloaded using the Deno package manager. When you install a Deno package with this flag, Deno will create a symlink in your system''s PATH that executes the script with the appropriate permissions. This way, you can easily run the script from the command line without having to navigate to its location. However, keep in mind that using `--allow-run` could potentially pose security risks if used with untrusted packages.'
        allow-write: '[AI] The `deno install` command is used to download and install Deno applications as executable files on various operating systems. The option `--allow-write` grants the installed application the permission to write files on the user''s file system. This can be essential when working with Deno programs that need to create or modify files, such as configuration files or data storage. By default, Deno applications run in a sandboxed environment and are not allowed to write to the file system unless explicitly granted this permission.'
        cached-only: '[AI] `deno install --cached-only` is a command used in Deno, a modern and secure TypeScript runtime. This command instructs Deno to download and cache the latest version of a specific module or package from the registry, without actually installing it globally or locally in your project. By using this flag, you can ensure that the required modules are up-to-date in your Deno project''s cache, while keeping your installed packages unchanged. This is useful when working on multiple projects with varying dependencies or testing changes to a specific module without affecting other projects.'
        cert: '[AI] The `deno install --cert` command is used to download and install a Deno project as a binary, along with its necessary SSL certificates. These certificates enable secure communication between the client and server during runtime. The `--cert` flag ensures that the installation process also includes these certificates in the binary package for seamless deployment.'
        config: '[AI] `deno install --config` is a command used in Deno, a modern and secure TypeScript runtime. This command downloads and installs a specific Deno application from a URL or Git repository, while also setting up the user-level configuration for Deno. The `--config` flag tells Deno to create or update the user configuration file (deno.json) with necessary information like installed packages'' locations, proxy settings, etc., enabling seamless usage of the installed application.'
        force: '[AI] The `deno install --force` command is used to install or reinstall a Deno project from its Git repository, overwriting any existing installation. The `--force` option is used to bypass potential conflicts or errors that might arise due to having an existing installation with potential differences. It ensures that the latest version of the project is installed and that any previous customizations or modifications are lost.'
        import-map: '[AI] The `deno install` command is a utility provided by Deno, a modern runtime for JavaScript and TypeScript. When used with the `--import-map` flag, it generates an import map file instead of a regular deno executable. An import map is a JSON file that maps external module dependencies to their locations, allowing fine-grained control over the imports in Deno applications. This feature enables efficient caching, tree shaking, and other optimizations during the build process, making it particularly useful for large projects with complex dependency structures.'
        inspect: '[AI] `deno install --inspect` is a command used in Deno, a modern and secure TypeScript runtime. This command downloads and installs the specified Deno package from the registry, and additionally enables the inspector mode for that application. Inspector mode allows developers to debug their Deno applications using various tools such as Visual Studio Code''s built-in debugger, providing real-time insights into the code execution flow, variables, and more.'
        inspect-brk: '[AI] `deno install --inspect-brk` is a command used in Deno, a modern JavaScript runtime, to download and install a specific Deno application along with setting up a debugger breakpoint during installation. This allows the developer to start the debugging process directly after installing their code without having to manually set up the debugger. The `--inspect-brk` flag instructs Deno to start the installed application in debug mode and pause execution at the first line of the code, waiting for a debugger to attach.'
        location: '[AI] The `deno install --location` command is used to install Deno, a modern JavaScript runtime, and save it as a global binary on your system. The `--location` option specifies the directory where you want to install Deno. It sets up Deno''s executable in that location for easy access from anywhere in your terminal. This allows you to use Deno without having to include long paths or write complex scripts just to run it.'
        lock: '[AI] The `deno install --lock` command is a part of Deno, a modern and secure TypeScript runtime. This command is used to download and install dependencies defined in the `lock.json` file generated by Deno''s built-in `deno upgrade` or `deno get` commands. When you run this command, it will automatically download and install all the required dependencies for your Deno project into the `vendor/` directory, ensuring consistent and reproducible builds.'
        lock-write: '[AI] The `deno install` command is used to download and install Deno projects as executables, managing dependencies via lock files. The `--lock-write` option instructs Deno to write or update the lock file (deno.lock) in the project directory with the exact dependency versions being installed for reproducibility and deterministic builds.'
        name: '[AI] The `deno install` command is used to install Deno projects as self-contained executables on various operating systems. The `--name` option sets the name of the executable file that will be generated after installation. For example, `deno install --name myapp myapp.ts` installs the TypeScript file `myapp.ts` from a Deno project and generates an executable named `myapp`.'
        no-check: |-
            [AI] The `deno install --no-check` command is a utility provided by Deno, a TypeScript-based runtime for building and running web applications. This command allows users to download and install a specific Deno package from the registry without performing any checks on it, such as version compatibility or security scanning.

            By using `--no-check`, the user assumes full responsibility for the package they are installing and bypasses the built-in safety measures of Deno. This can be useful when testing untrusted packages or working with development dependencies that may not be publicly available yet, but it should be used with caution to avoid potential security risks.
        no-remote: '[AI] The `deno install --no-remote` command is used to install a Deno project as a single executable file without using Deno''s remote server. This means that the entire application, along with its dependencies, will be downloaded and compiled locally into a single executable file which can then be run without requiring an internet connection or starting the Deno server. It''s often used for deploying Deno applications to environments where an external dependency manager is not available or desired.'
        prompt: '[AI] The `deno install` command is used to download and install Deno, a modern JavaScript runtime, on your system. The `--prompt` option is an argument that specifies how Deno should ask for user confirmation before installing. It accepts two values: "none" or "interactive". With the "none" value, Deno will not show any installation prompts and will automatically continue with the installation process. With the "interactive" value, Deno will display a prompt for each step of the installation process, allowing the user to confirm each action before it is executed.'
        reload: '[AI] `deno install --reload` is a command used in Deno, a modern JavaScript runtime, to install and compile a Deno project while keeping the server running with live reloading enabled. This allows developers to make changes to their codebase and see those changes reflected in the running application without having to restart the server manually. The `--reload` flag is responsible for enabling this automatic hot module replacement functionality.'
        root: '[AI] The `deno install` command is used to download and install Deno, a modern JavaScript runtime, on various operating systems. The `--root` option specifies the directory where Deno''s executable will be installed. This means that when you run `deno install --root /path/to/installation`, Deno''s binary file will be placed at `/path/to/installation`. This allows for fine-grained control over the installation location, which can be useful in managing multiple Deno installations or setting up environments for development projects.'
        seed: '[AI] The `deno install --seed` command is used to install Deno, a modern and secure TypeScript runtime, from its official repository with a random seed for reproducibility. The `--seed` option generates a specific checksum for the downloaded files, ensuring that the installation is consistent across different machines and runs. This helps maintain consistency and reduces the risk of unexpected issues during setup.'
        unsafely-ignore-certificate-errors: '[AI] The `deno install --unsafely-ignore-certificate-errors` command is used when installing Deno packages from sources other than the Deno registry, which may not have valid or trusted SSL certificates. This flag tells Deno to bypass certificate validation checks during the installation process, increasing security risks as it allows for potential man-in-the-middle attacks. It''s recommended to use this command only when connecting to trusted sources and understanding the associated risks.'
        v8-flags: '[AI] `deno install --v8-flags` is a command used in Deno, a modern and secure TypeScript runtime. This command installs or reinstalls Deno on your system with specific V8 flags passed to the V8 JavaScript engine that Deno uses under the hood. These flags can be used for various purposes such as enabling experimental features, optimizing performance, or increasing memory usage. By using `--v8-flags`, you have more control over how Deno interacts with the V8 engine.'
