# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: which
description: Write the full path of COMMAND(s) to standard output
flags:
    --help,: Print this help and exit successfully.
    --read-functions: Read shell functions from stdin.
    --show-dot: Don't expand a dot to current directory in output.
    --show-tilde: Output a tilde for HOME directory for non-root.
    --skip-alias: Ignore option --read-alias; don't read stdin.
    --skip-dot: Skip directories in PATH that start with a dot.
    --skip-functions: Ignore option --read-functions; don't read stdin.
    --skip-tilde: Skip directories in PATH that start with a tilde.
    --tty-only: Stop processing options on the right if not on tty.
    -a, --all,: Print all matches in PATH, not just the first
    -i, --read-alias,: Read list of aliases from stdin.
    -v, --version,: Print version and exit successfully.
documentation:
    command: '[AI] The `which` command in Unix-based systems is used to locate the executable file associated with a given command name in the system''s $PATH environment variable. It searches from left to right in the defined order and returns the first matching path, printing it on the standard output. This can help determine which version of a command or utility is being invoked when using an alias or another command with the same name.'
    flag:
        all,: '[AI] The `--all` flag is a common option used with various command-line tools, including the `git` version control system. When passed to a Git command, `--all` tells Git to operate on all branches and/or remote repositories mentioned in the command. It''s often used with commands like `push`, `pull`, or `fetch` when you want to perform the action on all branches instead of just the current one. Keep in mind that using `--all` can be risky if not used carefully, as it may result in unintended consequences like pushing or pulling unwanted changes.'
        help,: '[AI] The `--help` option, when used with the `which` command in Unix-like operating systems, displays detailed information about how to use the `which` utility effectively. It explains what `which` does (i.e., locates executable files), its syntax, and offers examples. This can be helpful for users who are new to the command or need a refresher on its usage.'
        read-alias,: '[AI] The `--read-alias` option is a flag used with the `git config` command in Git version control system. This flag instructs Git to read and apply alias definitions from various files during configuration processing. Aliases are shortcuts for complex or frequently used Git commands, making it easier to use Git effectively. By using `--read-alias`, users can make their custom aliases available across all their Git repositories, enhancing productivity.'
        read-functions: '[AI] The `--read-functions` option in Git is used when running a custom `git-*` command. It allows you to specify one or more functions to be read from a file instead of the default implementation in Git. This can be useful for extending or modifying Git functionality, such as defining new commands or changing how existing ones behave. The functions should be written in a scripting language like shell, Perl, Python, or any other language supported by Git''s `git-sh` or `git-python` interfaces. The specified file(s) should reside in the system''s PATH or be otherwise accessible to the command being run.'
        show-dot: '[AI] The `--show-dot` option in `git` is used when running the `git status` command to display a single dot for each file with uncommitted changes, and no output for files that are clean or have no changes. This provides a clearer representation of which files have been modified and need attention. The dot represents an untracked or modified file, while a clean file is represented by an empty output under its name.'
        show-tilde: '[AI] The `--show-tilde` option is a flag used with the Git command line tool. It affects the output of certain Git commands, specifically those that list branches or commits. When this flag is used, Git will display a tilde (~) symbol before the name of any local branch that is not currently checked out. This helps users easily identify which branches are available locally but not currently in use.'
        skip-alias: '[AI] The `--skip-alias` option is a command-line argument for GNU `find` utility. It instructs `find` not to follow symbolic links when they are encountered in the search path, effectively skipping the resolution of alias targets. This can be useful in cases where you want to exclude the contents of directories that only contain symbolic links and not traverse deeper into the directory hierarchy.'
        skip-dot: '[AI] The `--skip-dot` flag is a option for the `git` command `branch`. It prevents the creation of an automatic local branch when checking out a remote tracking branch. In other words, it skips creating a new local branch if the current branch is already at the same commit as the desired remote branch tip. This can be useful in cases where you want to work on a remote branch without having a local counterpart.'
        skip-functions: '[AI] The `--skip-functions` flag is a command-line option used with the `git diff` and `git format-patch` commands in Git version control system. It is used to exclude functions or specific blocks of changes from being included in the output of the given command. By using this flag, only the context surrounding the changes will be displayed, without the actual function definitions or code within the functions. This can be useful when one wants to review or share differences between files without including unnecessary function details.'
        skip-tilde: |-
            [AI] The `--skip-tilde` flag is a command-line option used with the `git` version control system. It is passed to `git config` or `git fetch` commands to prevent Git from automatically expanding tilde-notated home directories (~) in remote repository URLs.

            When a Git user sets up a remote repository, they may use a tilded username to represent their home directory, e.g., `username@github.com`. When the `git fetch` or `git config` command is run without the `--skip-tilde` option, Git automatically expands these tildes to the user's home directory on the local machine, which might not be the same as the remote system where the repository resides. This could result in incorrect URLs, leading to fetch or configuration issues.

            By using the `--skip-tilde` flag, Git will leave the tildes in the URLs as is and will not attempt to expand them. This ensures that users always use the correct remote repository URLs regardless of their local system configurations.
        tty-only: '[AI] The `--tty-only` flag is a option for GNU `find` command. It restricts the output of find to terminals and pipes (i.e., it excludes files that don''t have a terminal device as their file descriptor). This can be useful when you want to avoid printing the names of large files or directories, which might take too long to display and clutter the terminal output.'
        version,: '[AI] `which --version` is a command used in Unix-based systems to locate and display the path to the executable file of a given command, along with its version information. The `--version` option is provided as an argument to specify that the output should include the version number of the command. For instance, `which --version git` will print out the location of Git on your system and its current version.'
