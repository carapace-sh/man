# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: just
description: Just a command runner
flags:
    --changelog: Print changelog
    --check: Run `--fmt` in 'check' mode. Exits with 0 if justfile is formatted correctly. Exits with 1 and prints a diff if formatting is required.
    --choose: Select one or more recipes to run using a binary. If `--chooser` is not passed the chooser defaults to the value of $JUST_CHOOSER, falling back to `fzf`
    --chooser=: Override binary invoked by `--choose`
    --clear-shell-args: Clear shell arguments
    --color=: 'Print colorful output [default: auto]  [possible values: auto, always, never]'
    --completions=: 'Print shell completion script for <SHELL> [possible values: zsh, bash, fish, powershell, elvish]'
    --dotenv-filename=: Search for environment file named <DOTENV-FILENAME> instead of `.env`
    --dotenv-path=: Load environment file at <DOTENV-PATH> instead of searching for one
    --dry-run: Print what just would do without doing it
    --dump: Print justfile
    --dump-format=: 'Dump justfile as <FORMAT> [default: just]  [possible values: just, json]'
    --evaluate: Evaluate and print all variables. If a variable name is given as an argument, only print that variable's value.
    --fmt: Format and overwrite justfile
    --highlight: Highlight echoed recipe lines in bold
    --init: Initialize new justfile in project root
    --list-heading=: Print <TEXT> before list
    --list-prefix=: Print <TEXT> before each list item
    --no-dotenv: Don't load `.env` file
    --no-highlight: Don't highlight echoed recipe lines in bold
    --set=: Override <VARIABLE> with <VALUE>
    --shell-arg=: Invoke shell with <SHELL-ARG> as an argument
    --shell-command: Invoke <COMMAND> with the shell used to run recipe lines and backticks
    --shell=: Invoke <SHELL> to run recipes
    --summary: List names of available recipes
    --unstable: Enable unstable features
    --variables: List names of variables
    -V, --version: Print version information
    -c, --command=: Run an arbitrary command with the working directory, `.env`, overrides, and exports set
    -d, --working-directory=: Use <WORKING-DIRECTORY> as working directory. --justfile must also be set
    -e, --edit: Edit justfile with editor given by $VISUAL or $EDITOR, falling back to `vim`
    -f, --justfile=: Use <JUSTFILE> as justfile
    -h, --help: Print help information
    -l, --list: List available recipes and their arguments
    -q, --quiet: Suppress all output
    -s, --show=: Show information about <RECIPE>
    -u, --unsorted: Return list and summary entries in source order
    -v, --verbose: Use verbose output
documentation:
    command: '[AI] "Just" is a modifier or adverb used in English language to indicate that an action was recently completed or to emphasize that an action should be done without delay. It does not form a separate command on its own but can modify various other commands or instructions. For example, "I just finished eating," means that the action of eating has been completed very recently. Or "Just do it," is a popular phrase encouraging immediate action.'
    flag:
        changelog: '[AI] `just --changelog` is a command used in the Just build tool. It generates a changelog file based on Git commits, showing the summary of each commit and the author''s name and email. This can be helpful for creating project documentation or release notes. The output format is customizable using templates.'
        check: '[AI] The `--check` flag in Composer, a dependency manager for PHP, is used to perform a dry run or a simulation of an installation or update operation without actually making any changes to the files or directories on the system. It allows users to see what would be done without causing any side effects. In other words, it checks the lock file and package manifests against the current state of dependencies in the project and reports potential changes if any, enabling users to review and confirm before running the actual installation or update command.'
        choose: '[AI] The `--choose` flag is used in Git when performing an interactive rebase or reset. It allows you to selectively pick specific commits from a staging area and continue the rebasing or resetting process with those commits. In other words, it provides a way to choose which commits to keep during a git rebase/reset operation.'
        chooser: '[AI] The `--chooser` flag is a command-line option used with some software, particularly those based on GTK+ library, such as GnuPG or Nautilus file manager. It''s designed to launch an interactive selection dialog when executing a specific command. Instead of automatically choosing an item from the list, the user can manually pick the desired one using this dialog before the main operation is executed. The flag ensures that the chooser dialog is displayed instead of making an automatic choice.'
        clear-shell-args: '[AI] The `--clear-shell-args` flag is a command-line option used with tools like Docker and Podman. It is used to clear any arguments specified for a shell that will be run in a container, such as the `/bin/sh` or `/bin/bash` entrypoint. This can be useful when you want to ensure that no arguments are passed to the shell, allowing you to manage the container''s environment more explicitly through other means. It is important to note that clearing shell args does not affect any arguments passed to the command or image that runs the container itself.'
        color: '[AI] The `--color` option in the `just` build tool is used to enable colored output during the execution of tasks and jobs. This makes it easier to identify the status (success, failure, error) of each task or job in the terminal, improving the readability and clarity of the build output.'
        command: '[AI] The `--just-command` flag is used in Docker Compose files to specify that only a particular service or command within a service should be run when using the `docker-compose up` command. This flag helps in running specific services or commands on demand, reducing the time and resources needed for building and starting unnecessary services.'
        completions: |-
            [AI] The `--completions` flag in the `just` tool is used to specify the type of completions that `just` should suggest when running autocomplete commands in your terminal. It can be set to one of three modes: `none`, `basic`, or `recommended`.

            * `none`: No completions are shown by default.
            * `basic`: Basic completions based on file extensions and simple context are suggested.
            * `recommended`: Advanced completions based on the current context, including function names and arguments, module imports, and more.

            The flag is passed to `just` commands as part of its configuration options, for example: `just run -- --completions recommended`.
        dotenv-filename: '[AI] `--dotenv-filename` is an option used with the `just` testing tool. It specifies a file containing key-value pair configurations, which will be treated as environment variables during the execution of tests or tasks defined in the `justfile`. This helps keep sensitive information out of the codebase while still allowing easy access to the required environment variables for testing purposes.'
        dotenv-path: '[AI] The `--dotenv-path` flag in the `just` command line tool is used to specify a file path containing environment variables that should be loaded before running tasks. This can be useful when working with projects where some configuration settings are stored in environment variables rather than hardcoded in the task definitions or code itself. By using this flag, you can centralize and manage your project''s environment variables in a separate file without having to modify multiple files across your project.'
        dry-run: '[AI] The `--dry-run` flag is a command-line option used in various Unix-like tools, including Git and Composer, among others. It''s used to simulate or preview the effects of a command without actually executing it. In other words, it allows you to see what would happen if you ran a command, but does not make any changes to the system. This can help you avoid potential mistakes and understand the impact of a command before applying it in a production environment.'
        dump: '[AI] `just --dump` is a command used in the Just build tool. It shows a list of all available tasks and their dependencies, without executing any of them. It''s useful for understanding the task dependency graph in a project and for debugging build issues.'
        dump-format: |-
            [AI] The `--dump-format` option is used with MySQL's `mysqldump` tool to specify the output format of the generated SQL dump file. The `just --dump-format` mention seems unusual because there isn't a widely-used tool named 'just' that interacts with MySQL in this way. If you meant 'MySQL dump' with 'just', then here is a brief explanation:

            The `--dump-format` option can take one of the following values:

            1. `quick`: Generates the smallest possible backup file by only recording changes since the last full backup.
            2. `extended`: Generates a more comprehensive backup that includes all tables, data, and structure information, suitable for restoring the entire database.
            3. `complete-insert`: Similar to extended but writes INSERT statements for each table instead of using ALTER TABLE statements for schema changes.
            4. `single-transaction`: Dumps the current state of the database in a single transaction, which is useful when you want to minimize locking during the backup process.
            5. Custom: Allows users to specify their own custom output format using an SQL script file.
        edit: '[AI] The `--edit` flag is a command-line option used in version control systems, such as Git. When used with a `commit` command, it opens the default text editor for the user to modify the commit message before the commit is made. This allows users to make corrections or additions to the initial commit message before the change is permanently recorded in the repository history.'
        evaluate: '[AI] The `--evaluate` flag in Bash or other Unix-like shells is used with the `bash` or `sh` command to evaluate a single expression or script without invoking a new subshell. This means that any changes made within the expression will affect the current shell environment directly, instead of creating a new environment as would happen in a subshell (created by default when running a command without specifying `--evaluate`). This flag is particularly useful when working with scripts or expressions that modify variables or perform other actions that should persist beyond the scope of the given command.'
        fmt: '[AI] `just --fmt` is a command used in the Just build tool. It formats the source code files specified without running any tests or building the project, ensuring that the code conforms to a consistent style.'
        help: |-
            [AI] The `--help` flag is a common option used in various command-line interfaces, including applications written in different programming languages. It is typically invoked by running the command with this flag as an argument, for example: `command --help`.

            When you run a command with the `--help` flag, the output provides information about how to use the command correctly. This includes a brief description of what the command does, a list of available options and their meanings, and examples of correct usage. The goal is to help users understand how to use the command effectively and efficiently.
        highlight: '[AI] The `--highlight` option in the `just` command line tool is used to specify a highlighting format for the output of tests or tasks. This can be useful when running tests or scripts in a terminal, as it makes it easier to identify which tests passed or failed by adding colors or other formatting to the output. The exact formatting depends on the specific highlighter used, but common options include `plain`, `all`, `simple`, and various themes for popular terminals like `vim`, `xterm`, or `ansi`.'
        init: |-
            [AI] The `--init` flag is used with Docker Compose, a tool for defining and running multi-container Docker applications. When you run `docker-compose up --init`, it will create a new directory with the same name as your current working directory if it doesn't already exist. Inside that directory, it will generate three essential files:

            1. `docker-compose.yml`: The main file where you define your services, networks, and volumes.
            2. `Dockerfile` (optional): If this file exists at the root level of your project, Compose will use it to build the images for your services.
            3. `.dockerignore` (optional): This file is used to define files or directories that should be ignored when building the Docker image using the `Dockerfile`.

            These generated files help you get started quickly with a new Docker Compose project and set up the basic structure for your multi-container application.
        justfile: '[AI] The `--just-file` flag is a command line option used in testing frameworks, such as Jest or Mocha, to specify that only the given file(s) should be tested. Instead of running all tests in a project, this option allows for selective testing, which can save time and resources by focusing on specific parts of the codebase. The flag is typically followed by one or more filenames or globs, indicating the files to test.'
        list: '[AI] The `--list` flag is a command-line option used with various tools, including the `just` build tool. When this flag is passed to `just`, it instructs the tool to display a list of all available tasks without executing them. It provides an overview of what tasks can be run within a project and helps users plan their actions in advance.'
        list-heading: '[AI] The `--list-heading` option is used with the `git fetch` or `git pull` commands in Git version control system. It instructs Git to display only the remote branch names as headings when listing the fetched branches, making it easier to identify which branches have been updated. This is particularly useful when fetching multiple branches at once and wanting a clear view of which ones have new commits.'
        list-prefix: '[AI] The `--list-prefix` flag is a command-line option used with some Unix-like tools, such as `find` or `aws s3 ls`. It modifies the output format to include a prefix before each item in the list. This prefix is usually a directory path, helping users navigate the file system or identify the context of the listed items more easily.'
        no-dotenv: '[AI] The `--no-dotenv` flag is a command-line option used with Yarn or NPM package managers. It disables the use of `.env` files for loading environment variables during the installation or running of scripts. By using this flag, you ensure that sensitive information in `.env` files won''t be accidentally exposed or accessed unintentionally when sharing or collaborating on projects.'
        no-highlight: '[AI] The `--no-highlight` flag is used in various command-line tools, including Git and other version control systems, to disable syntax highlighting of output. It prevents colored or formatted text from being displayed with the commands'' output. This can be useful when working with terminals or scripts that don''t support colors or formatting, or for users who prefer a plain text display.'
        quiet: '[AI] The `--quiet` flag is a common option used in various Unix-like commands and tools, including the `find`, `grep`, and `make` utilities. Its primary function is to suppress or minimize output that is not essential for understanding the command''s result. In other words, it makes the command run more quietly by reducing extraneous messages and focusing on the core information. The exact behavior may vary slightly depending on the specific tool being used, but generally, it results in a less verbose output.'
        set: '[AI] `just --set` is a command-line option used with Just, a build tool for Haskell projects. It allows you to modify or update the configuration of your project without changing the source code. The modified settings are stored in a file named `.just` in the root directory of your project and will be picked up by Just during subsequent builds. This way, you can easily experiment with different build settings without affecting the core codebase.'
        shell: '[AI] The `--shell` flag in the `just` build tool is used to specify the shell interpreter for running tasks defined in a Justfile. It takes the path to the desired shell as an argument, such as `/usr/bin/bash` or `~/.zshrc`. This flag ensures that the specified shell is used when executing the tasks, allowing for greater flexibility and compatibility with different systems and user preferences.'
        shell-arg: '[AI] The `--shell-arg` flag is a command line argument used by tools like `docker run` and `kubectl exec`. It allows passing an argument directly to the shell or command that is being executed inside the container or pod, instead of it being treated as an argument for the tool itself. This can be useful when dealing with complex commands that require multiple arguments or special characters, preventing the need to escape them or split them into separate commands. For example, `--sh-args ''-c "echo $VAR;\nmysql -h db_host -u user -p password mydb < script.sql"` passes the given shell command with its arguments as a single argument to the shell in the container.'
        shell-command: '[AI] The `--flag just --shell-command` is a command-line option used in Jenkins, a popular continuous integration and delivery tool. This flag instructs Jenkins to run a single shell command as part of a pipeline or build step, without entering the interactive shell. Instead, it will output the command''s result directly to the console or log file without creating a new slave instance or container. The syntax is typically `sh ''command'' --just ''sh-command''`, where `command` represents the main pipeline script or build step and `sh-command` is the specific shell command you want to run using this flag.'
        show: '[AI] The `--show` option with the `just` command in Unix-based systems is used to display information about tasks or jobs that are registered in a `Justfile`. It does not run any tasks, but only shows their details such as dependencies and descriptions. This can be useful for understanding the relationships between different tasks without triggering unnecessary build steps.'
        summary: '[AI] The `--summary` flag in Git is used with the `git diff` and `git log` commands to display a summary of the changes made instead of the full diff or log output. This includes the changed files, a brief description of each change, and the number of added and deleted lines for each file. It provides an overview of the commits or differences without going into the detailed view.'
        unsorted: '[AI] `--unsorted` is an option under the Git command `git add`. It tells Git to include files in the next commit without staging them first. In other words, it skips the sorting and selection process during the `git add` command, allowing you to add multiple unstaged changes in one go before committing.'
        unstable: '[AI] The `--unstable` flag is used in various command-line tools, particularly those following Semantic Versioning (SemVer). It signifies that the user intends to use a pre-release version or an unstable build of the software. This means that the software might contain bugs or breaking changes and should be used with caution. Users opt for this flag when they want to test new features or fixes before they are officially released as stable versions.'
        variables: '[AI] The `--variables` option in the `kubectl apply` or `kubectl create` commands with the `kubefed flag set to just` is used to apply only the specified Kubernetes configuration variables without creating or updating any resources. This can be useful for testing changes to YAML files or applying configuration changes to a cluster without affecting existing resources. The flags updates the Kubernetes clusters state with the given variable definitions and validates them against the API server, but no actual resource objects are created or updated.'
        verbose: '[AI] The `--verbose` flag, often used with various command-line tools like `git` or `make`, increases the amount and detail of output that is displayed during the execution of a command. With `just --verbose`, the Just build tool will provide more extensive information about each task being executed, including intermediate steps and potential errors. This can be helpful for debugging builds and understanding the underlying process.'
        version: '[AI] The `--version` option is a common argument used with various command-line tools and applications to display their current version information. When you run the command `just --version`, assuming `just` is the name of the tool or application, it will print out the specific version number of `just` installed in your system, along with any other relevant build metadata such as the compilation date or commit hash. This helps users to check which version of a tool they are using and if there is an update available.'
        working-directory: '[AI] The `--working-directory` flag in various command-line tools is used to specify the initial working directory for the tool or process that will be run. It allows you to set the directory as a argument, ensuring that the process starts in that particular location when executed. This can be useful for keeping project files organized, maintaining consistency across runs, and simplifying complex command sequences.'
