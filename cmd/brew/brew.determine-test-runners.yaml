# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: determine-test-runners
description: Determines the runners used to test formulae or their dependents
group: developer
flags:
    --all-supported: Instead of selecting runners based on the chosen formula, return all supported runners.
    --debug: Display any debugging information.
    --dependents: Determine runners for testing dependents. Requires `--eval-all` or `HOMEBREW_EVAL_ALL`.
    --eval-all: Evaluate all available formulae, whether installed or not, to determine testing dependents.
    --help: Show this message.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] The `brew determine-test-runners` command is a Homebrew (a popular package manager for macOS) subcommand used to identify test runners installed in your system managed by Homebrew. It does not execute tests or perform any testing itself, but instead returns the list of known test runners in your installation, allowing you to manage and work with them effectively.'
    flag:
        all-supported: '[AI] `brew determine-test-runners --all-supported` is a command used with Homebrew, a popular package manager for macOS. This command is used to identify and list all test runners that are supported by Homebrew. The `--all-supported` option ensures that the command covers all available options, providing a comprehensive output. In essence, it helps developers discover and manage testing tools for their projects in Homebrew environment.'
        debug: '[AI] The command `brew determine-test-runners --debug` is a Homebrew (a popular package manager for macOS) subcommand used to list test runners installed in your system, along with their locations and versions. The `--debug` flag increases the verbosity of the output, providing more detailed information about the process. It''s often used for troubleshooting or understanding the underlying mechanics of Homebrew commands.'
        dependents: '[AI] The `brew determine-test-runners --dependents` command is a Homebrew (a popular package manager for macOS) subcommand used to identify test runners that are dependencies of an installed Homebrew package. This command scans through the list of packages that depend on the primary package and prints out the names of those packages that include a test runner as one of their dependencies. It helps in determining which test runners might be needed when running tests for the primary package or its dependencies.'
        eval-all: '[AI] `brew determine-test-runners --eval-all` is a command used in Homebrew, a popular package manager for macOS and Linux. This command is used to automatically discover test suites for Homebrew installed packages. The `--eval-all` flag instructs the command to evaluate test runners for all packages in the Homebrew repository, regardless of whether they have an explicitly declared test suite or not. The output of this command will be a list of test runners and their corresponding packages.'
        help: '[AI] `brew determine-test-runners --help` is a command used with Homebrew, a package manager for macOS. This specific command is used to list information about available test runners that can be installed via Homebrew. The `--help` flag displays detailed help and usage information for this command, including a list of supported test runners, their brief descriptions, and installation instructions.'
        quiet: '[AI] The command `brew determine-test-runners --quiet` is a function provided by Homebrew, a popular package manager for macOS and Linux. This function is used to detect and list test runners installed on your system via Homebrew. The `--quiet` flag reduces the output of the command to just the names of the detected test runners, without any additional messages or verbosity. Essentially, it returns a list of the installed test runners in a quiet mode.'
        verbose: '[AI] The command `brew determine-test-runners --verbose` is a Homebrew (a popular package manager for macOS) subcommand used to identify test runners installed in your system. With the `--verbose` flag, it provides detailed output during the process, displaying each test runner found and its corresponding install path.'
