# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: restic
description: Backup and restore files
flags:
    -h, --help: help for restic
persistentflags:
    --cacert*=: '`file` to load root certificates from (default: use system certificates)'
    --cache-dir=: 'set the cache `directory`. (default: use system default cache directory)'
    --cleanup-cache: auto remove old cache directories
    --insecure-tls: skip TLS certificate verification when connecting to the repo (insecure)
    --json: set output mode to JSON for commands that support it
    --key-hint=: '`key` ID of key to try decrypting first (default: $RESTIC_KEY_HINT)'
    --limit-download=: 'limits downloads to a maximum rate in KiB/s. (default: unlimited)'
    --limit-upload=: 'limits uploads to a maximum rate in KiB/s. (default: unlimited)'
    --no-cache: do not use a local cache
    --no-lock: do not lock the repository, this allows some operations on read-only repositories
    --password-command=: 'shell `command` to obtain the repository password from (default: $RESTIC_PASSWORD_COMMAND)'
    --repository-file=: '`file` to read the repository location from (default: $RESTIC_REPOSITORY_FILE)'
    --tls-client-cert=: path to a `file` containing PEM encoded TLS client certificate and private key
    -o, --option*=: set extended option (`key=value`, can be specified multiple times)
    -p, --password-file=: '`file` to read the repository password from (default: $RESTIC_PASSWORD_FILE)'
    -q, --quiet: do not output comprehensive progress report
    -r, --repo=: '`repository` to backup to or restore from (default: $RESTIC_REPOSITORY)'
    -v, --verbose*?: be verbose (specify multiple times or a level using --verbose=`n`, max level/times is 3)
documentation:
    command: '[AI] `restic` is a versatile backup program that uses the Git data model for efficient incremental backups. It allows users to easily create, manage, and restore backups of multiple directories and files. restic supports various storage backends like local filesystem, S3, Azure Blob Storage, and others. The command itself is used to invoke different functionalities such as creating a new backup, listing existing backups, or restoring data from backups. It offers features like encryption, compression, and efficient incremental backups for large datasets.'
    flag:
        help: '[AI] `restic --help` displays a detailed help message for the `restic` backup program. It lists all available commands and their usage, as well as brief descriptions for each option. The help text also includes examples to illustrate how to use `restic`. Overall, it provides an overview of `restic`''s functionality and capabilities.'
