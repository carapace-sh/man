# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: uniq
description: report or omit repeated lines
flags:
    --all-repeated=: like -D, but allow separating groups
    --group=: show all items, separating groups with an empty line;
    --help: display this help and exit
    --version: output version information and exit
    -D: print all duplicate lines
    -c, --count: prefix lines by the number of occurrences
    -d, --repeated: only print duplicate lines, one for each group
    -f, --skip-fields=: avoid comparing the first N fields
    -i, --ignore-case: ignore differences in case when comparing
    -s, --skip-chars=: avoid comparing the first N characters
    -u, --unique: only print unique lines
    -w, --check-chars=: compare no more than N characters in lines
    -z, --zero-terminated: line delimiter is NUL, not newline
documentation:
    command: '[AI] The `uniq` command is a utility in Unix-like operating systems for removing duplicate lines from input. When used without options, it prints each unique line followed by a blank line. With the `-c` option, it instead prints each unique line preceded by the number of occurrences. Other options include `-d` to print only lines that are duplicates and `-f` to use fields within lines instead of the whole line for determining uniqueness.'
    flag:
        D: '[AI] `uniq` is a command-line utility in Unix and Unix-like operating systems used to remove duplicate lines from input. The `-d` option is used with `uniq` to print only the duplicate lines. When you use `uniq -d file`, it will output only those lines that appear more than once in the input file.'
        all-repeated: '[AI] `uniq` is a command-line utility in Unix and Unix-like operating systems for filtering out duplicate lines from input data. The option `--all-repeated` (or just `-d`) instructs `uniq` to print only the lines that are repeated in the input, not just adjacent ones. In other words, it shows all instances of duplicate lines, not just those that appear next to each other.'
        check-chars: '[AI] `uniq` is a command-line utility in Unix and Unix-like operating systems for removing duplicate lines from input. The `--check-chars` option is used to report if there are adjacent input lines that differ only by a specified number of characters at the beginning. If no number is specified, it defaults to 1 character. For example, with the command `uniq --check-chars=2 file`, uniq will report lines that differ in their first two characters and print both lines if they are adjacent in the input.'
        count: '[AI] `uniq --count` is a command in Unix-based operating systems used to remove duplicate lines from input, while also displaying the number of occurrences of each unique line. This means that after running `uniq --count`, every line will appear only once in the output with a prefix indicating its count. For example, if there are three identical lines in the input, `uniq --count` will output that line once with a count of 3.'
        group: |-
            [AI] `uniq` is a command-line utility in Unix and Unix-like operating systems used to remove duplicate lines from sorted input. The `--group` option changes the output behavior so that it groups together adjacent identical lines, followed by a count of how many occurrences there are for each group. For example:

            ```bash
            $ echo "apple" "banana" "apple" "orange" "apple" | sort | uniq --group
            apple: 4
            banana: 1
            orange: 1
            ```

            This command will output a single line for each unique string, followed by a colon and the count of how many occurrences there are for that string in the input.
        help: |-
            [AI] `uniq` is a command-line utility in Unix-based systems for removing duplicate lines from input. Its help option, `--help`, displays detailed usage information. Here's a brief summary:

            ```
            usage: uniq [-c] [-d] [-f fn] [-i] [input_file] [output_file]

            Options:
              -c      prefix each output line with the number of occurrences
              -d      print only lines which are repeated
              -f fn   consider fields separated by characters in fn as unique
              -i      ignore case distinctions, i.e. treat upper and lowercase alike
            ```

            This help information shows that `uniq` can take various options, such as `-c` for counting occurrences or `-d` for printing only duplicate lines. It also accepts an input file (by default, it reads from standard input) and an optional output file to write the result to. The last two options, `-f` and `-i`, are used to specify fields as unique based on their delimiters and to ignore case distinctions, respectively.
        ignore-case: '[AI] `uniq` is a command-line utility in Unix and Unix-like operating systems used to remove duplicate lines from input. The `--ignore-case` option makes `uniq` ignore cases when comparing lines, meaning it will treat uppercase and lowercase letters as equivalent when determining duplicates. For instance, if the input contains "apple" and "Apple", `uniq --ignore-case` will consider them identical and output only one of them.'
        repeated: '[AI] `uniq` is a command-line utility in Unix and Unix-like operating systems used to remove duplicate lines from input. The `--repeated` option refines this functionality by only removing adjacent duplicates and keeping non-adjacent ones. In other words, it filters out repeated lines within a sequence while preserving unique lines that do not appear consecutively in the input stream.'
        skip-chars: '[AI] The `uniq` command with the `--skip-chars` option in Unix or Linux is used for filtering out adjacent duplicate lines within a sorted input where the difference between them is less than or equal to the specified number of characters. This option allows you to skip over a certain number of characters when comparing lines, making it useful for handling data with minor variations while preserving unique lines.'
        skip-fields: '[AI] The `uniq` command with the `--skip-fields=N` option is used to skip the first N fields when comparing input lines for uniqueness. This means that only differences in fields beyond position N will be considered when determining if lines are duplicate. For example, if you have a tab-delimited file where the first field is a common identifier and you want to find unique records based on the values in columns after the first, you would use `uniq --skip-fields=1`.'
        unique: '[AI] `uniq --unique` is a command in Unix-based operating systems used to remove duplicate lines from sorted input. The `--unique` option ensures only unique lines are kept, discarding any duplicates. This filtering results in a new stream where each line appears at most once.'
        version: '[AI] `uniq --version` is a command used in Unix-based systems to remove duplicate lines from sorted input. The `--version` option is used to display the version information of the `uniq` utility installed on the system, including its name, version number, and other relevant details such as compilation date and author.'
        zero-terminated: '[AI] `uniq` is a command-line utility in Unix and Unix-like operating systems for removing duplicate lines from input. The option `--zero-terminated` (or simply `-z`) is used when the input is zero-terminated strings instead of regular text files. In other words, it processes data as if it were coming from a binary file where each string is followed by a null character (''\0''). This option is often used with tools like `awk`, `sed`, or `mapfile` to process such data streams efficiently without having to read the whole input into memory at once.'
