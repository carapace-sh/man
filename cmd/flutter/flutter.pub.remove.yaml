# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: remove
description: Removes a dependency from the current package
flags:
    --no-offline: Do not use cached packages instead of accessing the network.
    --no-precompile: Do not precompile executables in immediate dependencies.
    --offline: Use cached packages instead of accessing the network.
    --precompile: Precompile executables in immediate dependencies.
    -C, --directory=: Run this in the directory<dir>.
    -h, --help: Print this usage information.
    -n, --dry-run: Report what dependencies would change but don't change any.
documentation:
    command: '[AI] `flutter pub remove` is a command used in Flutter development to delete dependencies from the project''s `pubspec.yaml` file and the local cache. When you run this command, followed by the package name, it modifies the `pubspec.yaml` file to remove the specified dependency, and then removes the cached package from the `.dart_tool/cache` directory. This can be useful when you no longer need a particular package in your project or if you encounter issues with a specific dependency.'
    flag:
        directory: '[AI] `flutter pub remove --directory` is a command used in the Flutter framework for managing dependencies. This specific command removes an entire directory of dependencies from the `pubspec.yaml` file, effectively removing those packages from the project''s dependency tree without leaving any traces in the configuration file. It can be helpful when you want to completely remove and re-add certain dependencies.'
        dry-run: '[AI] `flutter pub remove --dry-run` is a command used in Flutter project development. It simulates the removal of dependencies from the `pubspec.yaml` file without actually modifying it. This helps to check the impact of the removal before executing the operation in real, ensuring that necessary packages are not accidentally deleted.'
        help: '[AI] `flutter pub remove --help` is a command used in Flutter development to remove dependencies from the `pubspec.yaml` file and the local cache. The `--help` option displays detailed usage information for this specific command. When executed, it will remove the specified dependency from both the project''s configuration and the local cache, allowing developers to manage their project''s dependencies effectively.'
        no-offline: '[AI] `flutter pub remove --no-offline` is a command used in Flutter development to unpublish a package from the public Pub package repository. The `--no-offline` option disables the use of locally cached packages and forces the command to fetch the latest versions of packages from the remote server before performing the removal. This ensures that the package being removed is not only uncached in the local cache but also completely removed from the published version on Pub.com.'
        no-precompile: '[AI] `flutter pub remove --no-precompile` is a command used in Flutter development to remove dependencies from the `pubspec.yaml` file without removing the compiled code for those dependencies in the project''s `build/deliverables` directory. The `--no-precompile` option disables the automatic precompilation of the dependencies during removal, which helps keep the size of the build artifacts smaller and avoid unnecessary recompilations when making changes to the dependency list.'
        offline: '[AI] The `flutter pub remove --offline` command is used to remove a dependency from the local cache of your Flutter project without connecting to the internet. This can be useful when you want to ensure that only the currently cached version of the dependency is used, or if you''re offline and need to work on an existing project without downloading new dependencies. The command removes the specified package from the `pubspec.yaml` file as well as the local cache.'
        precompile: '[AI] `flutter pub remove --precompile` is a command used in Flutter development to unpublish and remove precompiled binary artifacts from the `pubspec.yaml` file and the remote repository of the Flutter Package Manager (pub.dev). This command removes the reference to the precompiled artifacts, allowing users to rebuild and publish new versions of their packages without using the cached binaries. Using this command helps ensure that the latest code changes are reflected in the published package.'
