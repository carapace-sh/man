# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Add notes for a given object
flags:
    --allow-empty: Allow an empty note object to be stored
    -C, --reuse-message=: Take the given blob object as the note message
    -F, --file=: Take the note message from the given file
    -c, --reedit-message=: Like -C, but with -c the editor is invoked
    -m, --message=: Use the given note message
documentation:
    command: '[AI] `git notes add` is a Git command used to create or update an annotated note in the Git repository associated with a specific commit. The command takes one argument: the message containing the note content. Once you''ve executed this command, the note becomes a part of the commit history and can be viewed using various Git commands like `git notes view` or `git show`.'
    flag:
        allow-empty: '[AI] The `git notes add --allow-empty` command is used to create or update a note in the annotated history of a Git repository with an empty message. By default, Git requires non-empty messages for creating and updating notes. However, this option allows an empty message if desired. This can be useful when adding placeholders or markers for future annotations without committing changes to the repository yet.'
        file: '[AI] The `git notes add --file` command is used to create or update a note in Git associated with a specific commit. This command takes a file as an argument, which contains the note message that will be added to the commit. When this command is run, Git will read the contents of the specified file and use it as the body of the new note or update the existing one if the commit already has a note associated with it.'
        message: |-
            [AI] `git notes add` is a Git command used to create or update annotated tags, also known as notes, in Git repositories. The `--message` option allows you to provide a message that describes the purpose of the note. This message is displayed when you view the tag with the `git show` command. For example:

            ```bash
            $ git notes add v1.0 --message="Initial release of version 1"
            ```

            This command creates or updates a tag named "v1.0" and associates the message "Initial release of version 1" with it.
        reedit-message: '[AI] The `git notes add` command is used to create or update a note in Git''s annotated tag or commit message. The `--rewrite-message` option allows you to edit the existing message before committing the new note. It opens up your default text editor with the current message, enabling you to modify it and save for the updated message to be committed with the new note.'
        reuse-message: '[AI] The `git notes add --reuse-message` command is used to create a new Git note with the same message as a previous one. This can be useful when you want to add multiple related notes with similar content without having to retype the message each time. When you run this command, Git will prompt you for the note content and then create a new note using the specified message from a previous note.'
