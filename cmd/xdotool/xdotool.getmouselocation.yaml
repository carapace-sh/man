# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: getmouselocation
description: Outputs the x, y, screen, and window id of the mouse cursor
flags:
    --shell: This makes getmouselocation output shell data you can eval
documentation:
    command: '[AI] `xdotool getmouselocation` is a command from the xdotool toolkit used to retrieve the current mouse position on an X11 system. It returns the absolute screen coordinates of the mouse pointer tip in the format "x y", where x and y are integers representing the horizontal and vertical coordinates, respectively. This information can be utilized by scripts or other applications for automation tasks.'
    flag:
        shell: |-
            [AI] `xdotool getmouselocation --shell` is a command used in Linux and Unix systems to retrieve the current mouse position and output it as a shell script variable. The `xdotool` utility is a versatile tool for automating various tasks, including controlling the mouse and keyboard.

            In this specific usage, `getmouselocation` is a subcommand of `xdotool` that returns the current mouse position in the form of two numbers: the x-coordinate and the y-coordinate. The option `--shell` instructs `xdotool` to output the result as a shell script variable, which can then be used directly within scripts for further processing or assignment to variables.

            Example:
            ```bash
            mouse_position=$(xdotool getmouselocation --shell)
            echo $mouse_position
            # Output: "X=<current_x_coord> Y=<current_y_coord>"
            ```
            This command captures the current mouse position and stores it as a shell variable named 'mouse\_position', which can be used in further scripting or automation tasks.
