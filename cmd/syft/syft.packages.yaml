# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: packages [SOURCE]
description: Generate a package SBOM
flags:
    --catalogers*=: enable one or more package catalogers
    --exclude*=: exclude paths from being scanned using a glob expression
    --file=: file to write the default report output to (default is STDOUT)
    --name=: set the name of the target being analyzed
    --platform=: an optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux')
    -o, --output*=: report output format, options=[syft-json cyclonedx-xml cyclonedx-json github-json spdx-tag-value spdx-json syft-table syft-text template]
    -s, --scope=: selection of layers to catalog, options=[Squashed AllLayers]
    -t, --template=: specify the path to a Go template file
documentation:
    command: '[AI] `syft packages` is a command used in Syft, an open-source tool for transferring and managing Kubernetes resources and container images between clusters or registries securely. This command lists all the packages (container images) that are managed by Syft in your local configuration. It provides information such as image name, tag, repository URL, and size, enabling users to easily manage their container image inventory.'
    flag:
        catalogers: '[AI] The `syft packages --catalogers` command is used with Syft, a tool for transferring files and directories between local and remote systems using Hadoop WebHDFS or S3 compatible storage. This specific command lists the current catalogers (or index servers) that are registered with Syft''s package repository. Catalogers help in keeping track of packages and their versions, making it easier to install and manage them across clusters or environments.'
        exclude: '[AI] The `syft packages --exclude` command is used with Syft, an open-source tool for transferring files between Hadoop clusters or between a local machine and Hadoop. This command allows you to exclude specific packages from being synced during the transfer process. You provide a list of packages or patterns to exclude using the `--exclude` option followed by the package names separated by commas. For example, `syft packages --exclude mypackage1,mypackage2`. This will exclude the specified packages from being transferred during the sync operation.'
        file: '[AI] The `syft packages --file` command is a subcommand of Syft, an open-source tool for transferring files and directories between local and remote machines securely. This specific command generates a file that lists the names and hashes of all installed Python packages in the current virtual environment or project directory, which can then be shared with someone else for them to install identical packages on their end using the same command with the generated file as an argument. This ensures reproducibility of environments across different machines.'
        name: '[AI] The `syft packages --name` command is used in the Syft data transfer tool to list the names of installed packages in a remote environment, such as Jupyter notebooks or remote machines. Syft is designed for secure data transfer between different environments, and this specific command helps in identifying which packages are present in the target environment before initiating data transfer. This information can be crucial when planning data transfer between systems with differing package versions to ensure compatibility and avoid unexpected issues.'
        output: '[AI] `syft` is a tool for transferring files and directories between different clusters or machines in a secure way, using SSH under the hood. The command `syft packages --output <file>` lists all installed Syft packages and saves the output to the specified file (<file>) in JSON format. This can be useful for keeping track of installed packages or transferring package information between different systems.'
        platform: '[AI] `syft packages --platform` is a command used in Syft, an open-source tool for transferring files and directories between local and remote machines securely. This specific command lists the available platforms that Syft supports for package installation. Platforms refer to the operating systems or environments where packages can be installed. For instance, you might see options like "docker", "conda", or "pip" representing different package managers on various platforms such as Linux distributions or containerized environments. By running this command, you can determine which platforms and corresponding package managers Syft is configured to work with, allowing you to install packages tailored to specific environments.'
        scope: '[AI] The `syft` command is a tool used for syncing and managing files between local and remote systems. The `--scope` option, when used with the `packages` sub-command, limits the synchronization to only the specified npm scopes. For example, `syft packages --scope=myscope` would synchronize only the packages with the "myscope" scope. This can be useful for managing dependencies with specific scopes across multiple systems.'
        template: '[AI] `syft packages --template` is a command used with Syft, an open-source tool for transferring files between clusters and Hadoop Distributed File System (HDFS) locations. The `--template` flag is used to generate a Bash script template that can be customized for automating the process of installing packages from remote S3 or HDFS locations into local Python environments. This command generates a template file containing Syft commands to download and install specified packages, which can then be modified and executed in a local terminal to complete the installation process.'
