# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: batdiff
description: Diff a file against the current git index, or display the diff between two files
flags:
    --color: Force color output.
    --delta: Display diffs using delta.
    --no-color: Force disable color output.
    --pager=: Specify the pager to use.
    --paging=: Enable/disable paging.
    --terminal-width=: Generate output for the specified terminal width.
    -C, --context=: The number of lines to show before and after the differing lines.
documentation:
    command: '[AI] `batdiff` is a command-line tool for Windows systems, written in PowerShell, used to compare and display text differences between two files or two portions of the same file. It''s similar in functionality to Unix''s `diff` but designed specifically for use with the `better-than-half` (`bat`) PowerShell format. The command displays the differences side by side for easy comparison, and supports various options like `--ignore-blank-lines` or `--ignore-case` to customize the comparison process.'
    flag:
        color: '[AI] `batdiff` is a text diffing tool, and its `--color` flag is used to enable colorized output in the command line interface. This can make it easier for users to visually distinguish between added, modified, or deleted text when comparing files. The colors used generally conform to common git diff color scheme (red for deletions, green for additions, and various shades of pink and yellow for modifications).'
        context: '[AI] `batdiff` is a Git diff viewer and file comparison tool written in Bash. The `--context` option, when used with `batdiff`, displays a context around each changed line. This means that besides showing the differences between two files or commits, it also shows some lines of surrounding context before and after the changes. It helps users better understand the impact of changes by providing additional visual cues in the output.'
        delta: '[AI] `bat diff --delta` is a command used in Bat, an alternative terminal pager for Windows. The `--delta` option generates side-by-side unified text differences between two files. It enhances readability and helps in identifying and resolving the changes made to one file compared to another.'
        no-color: '[AI] `bat` is a cat-like pager for highlighting text files in the terminal. The command `bat diff --no-color` is used to show the difference between two text files using `bat`, but without color. The `--no-color` option disables the colored output, making it more accessible in environments that don''t support colors or when the user prefers a monochrome display.'
        pager: '[AI] `bat` is a cat-like pager for hackers and is designed to make it easy to review files with syntax highlighting. The `--pager` option in `bat` commands is used when you want to use an external pager (such as `less` or `more`) instead of `bat`''s built-in one, for handling large outputs. The `bat diff --pager` command is specifically used when comparing two files with `bat`, and the output will be piped through the specified pager for easy review of the differences.'
        paging: |-
            [AI] `bat` is a cat-like pager for terminal output, providing several improvements over the default `cat` command in Unix-based systems. The option `--paging` enables pagination mode, which means that `bat` will display output one page at a time, allowing users to navigate through the content using arrow keys or numbered pages.

            When using `bat --paging`, the tool will automatically wrap long lines and split the content into pages of a convenient height. Additionally, it provides syntax highlighting for various file types by default, making it particularly useful when working with configuration files or code. Overall, `bat` is designed to improve the readability and navigation of terminal output.
        terminal-width: '[AI] `bat` is a cat-like pager for terminal output that provides several enhancements like syntax highlighting, folded context, and git diff integration. The `--terminal-width` option is a configurable setting that adjusts the width of the terminal output to fit the content being displayed in bat. This ensures proper display of wide characters, long lines, and optimizes screen space usage for better reading experience.'
