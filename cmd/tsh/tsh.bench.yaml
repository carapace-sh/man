# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: bench
description: Run Teleport benchmark tests.
hidden: true
flags:
    --duration=: Test duration
    --export: Export the latency profile
    --no-export&: Export the latency profile
    --path=: Directory to save the latency profile to, default path is the current directory
    --rate=: Requests per second rate
    --scale=: Value scale in which to scale the recorded values
    --ticks=: Ticks per half distance
    -c, --cluster=: Specify the Teleport cluster to connect
documentation:
    command: '[AI] `tsh bench` is a command in TortoiseSVN, a popular Subversion client for Windows. This command is used to run performance tests on the working copy or repository, measuring the time it takes to perform various Subversion operations such as checkout, update, or commit. The results are displayed in a report format, helping users assess the system''s Subversion performance and identify potential bottlenecks.'
    flag:
        cluster: '[AI] `tsh bench --cluster` is a command used in Tsung, an open-source load testing tool. This specific command runs the Tsung benchmarking feature on a defined cluster or a group of servers. The cluster configuration should be previously set up and defined in a Tsung script file (usually with a `.tsng` extension). During the execution, `tsh bench --cluster` measures and reports various metrics such as throughput, response time, and concurrency for the services running on each server within the cluster. This information helps assess the performance, scalability, and potential bottlenecks of the tested application or system.'
        duration: '[AI] The command `tsh bench --duration` is used in TSH (Telnet Simulator for Unix) to execute a benchmark test on a remote host or device. The `--duration` option specifies the length of time, in seconds, that the benchmark test should run. The output will display various performance metrics, such as throughput and latency, during and after the test.'
        export: '[AI] `tsh bench --export` is a command used in TSHeap Analyzer (TSH), a Java Garbage Collector diagnostic tool from Oracle. This command initiates a benchmark run with the built-in TSH tests and exports the results to an external file or a standard output stream in JSON format for further analysis or automation purposes.'
        no-export: '[AI] `tsh bench --no-export` is a command used in TortoiseSVN, a popular Subversion (SVN) client for Windows. This command runs the TortoiseSVN Benchmark tool to measure the performance of your Subversion repository. The `--no-export` option instructs the tool not to generate any exported reports or statistics files after the benchmark test is completed, keeping the testing process faster and more lightweight.'
        path: '[AI] `tsh bench --path` is a command used in TS Highway (TSH), an open-source Testing and Benchmarking Framework for Terraform. This specific command runs benchmarks against the Terraform configuration files located at the specified path. The flags `--bench` and `--path` are passed to invoke the benchmarking functionality of TSH, with `--path` indicating the directory or file path of the Terraform configurations to be tested.'
        rate: '[AI] `tsh bench --rate` is a command used in Tsung, an open-source load testing tool. The `--rate` option specifies the desired throughput rate in requests per second to be maintained during the benchmark test. It helps measure and evaluate the system''s capacity to handle a given load.'
        scale: '[AI] `tsh bench --scale` is a command used in Tsung, an open-source load testing tool. This specific command configuration sets the scale option for the benchmarking process. The scale parameter indicates the number of virtual users or concurrent tasks Tsung should simulate during the test run. By using this flag, you can specify the desired workload size to evaluate your system''s performance under different loads.'
        ticks: '[AI] `tsh bench --ticks` is a command used in Tsh (Telnet Shim), a tool for measuring and comparing TCP/IP stack performance. The option `--ticks` requests that the test output be reported in the number of CPU ticks instead of the more common unit of time, such as milliseconds or microseconds. This can be useful when making very fine-grained comparisons between different systems or configurations.'
