# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: link
description: Symlink all of <formula>'s installed files into Homebrew's prefix
group: main
flags:
    --HEAD: Link the HEAD version of the formula if it is installed.
    --debug: Display any debugging information.
    --dry-run: List files which would be linked or deleted by `brew link --overwrite` without actually linking or deleting any files.
    --force: Allow keg-only formulae to be linked.
    --help: Show this message.
    --overwrite: Delete files that already exist in the prefix while linking.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew link` is a Homebrew command used to establish a link between a installed Homebrew package and its corresponding bin directory in your system''s $PATH. This enables you to run the executable from anywhere in your terminal without having to specify the full path to the binary each time. In other words, it makes the installed packages easily accessible and convenient to use.'
    flag:
        HEAD: '[AI] `brew link --HEAD` is a command used in Homebrew, a package manager for macOS. This command links the HEAD version of a previously installed Homebrew formula, which means it creates a symbolic link from the Cellar (Homebrew''s installation directory) to the user''s /usr/local directory. This allows users to access and use the software directly without having to run `brew install` again. The command fetches the HEAD version of the formula''s repository, ensuring you have the latest development changes if available.'
        debug: '[AI] `brew link --debug` is a command used in Homebrew, a popular package manager for macOS. This command creates or updates a symlink between Homebrew-installed packages and their counterparts in /usr/local. The `--debug` flag enables verbose output, providing additional information about the linking process, which can be helpful in troubleshooting issues.'
        dry-run: '[AI] `brew link --dry-run` is a command used with Homebrew, a popular package manager for macOS. This command performs a "dry run" simulation of the `brew link` command. The purpose of this command is to show what would happen if you were to create or update symbolic links for Homebrew installations at their default locations without actually creating or modifying the files on disk. It helps in avoiding unintended side effects by allowing users to preview the outcome before running the command with the actual flags.'
        force: '[AI] `brew link --force` is a command used in Homebrew, a popular package manager for macOS. This command creates hard links between Homebrew installed packages and their binaries in the /usr/local directory. The `--force` flag is optional but forceful; it overwrites any existing symbolic links with hard links to ensure that the command correctly sets up the executables'' paths. By default, Homebrew installs software using symlinks. However, some applications might not work correctly when run via symlinks. Using `brew link --force` creates a more stable setup by using hard links instead.'
        help: |-
            [AI] The `brew link` command is a utility from Homebrew, a popular package manager for macOS. It is used to establish a link between Homebrew-installed packages and their target directories in /usr/local. The `--help` option displays detailed help information about the `brew link` command. Here's a concise explanation:

            `brew link [FORMULA] --help`

            This command shows you how to use `brew link` with optional arguments and options. It provides a brief description of what `brew link` does, followed by a list of possible actions with their corresponding usage syntax. This includes creating links for installed packages (default behavior), linking a specific formula, managing links, showing the link tree, and unlinking packages.

            For example, you can see how to create links for all Homebrew-installed packages:

            ```bash
            brew link --help | grep create
            Create links for:
              -f           FORMULA                   Create links for the given formula (without installing it if already installed)
              -d           [DIR]                      Manually create links from the given directory to Homebrew Cellar formulas
              *            (implicit)                Create links for all installed Homebrew packages and their dependencies.
            ```

            The help text also includes information on options, like `--force`, which can be used to force linking even if it appears the package is already linked. Additionally, you will find details on how to manage symbolic links and more.
        overwrite: '[AI] `brew link --overwrite` is a command used in Homebrew, a package manager for macOS. It creates a symbolic link from an installed Homebrew formula to /usr/local, allowing other applications to find the installed software easily. The `--overwrite` option forces the creation of a new link even if a link with the same name already exists, replacing the old one.'
        quiet: '[AI] `brew link --quiet` is a command used in Homebrew, a package manager for macOS. This command creates a symlink from a Homebrew-installed formula or cask to /usr/local without displaying any output or messages. The "--quiet" option suppresses verbose output, making the process run quietly in the background.'
        verbose: '[AI] `brew link --verbose` is a command used in Homebrew, a popular package manager for macOS. This command creates or updates symbolic links between Homebrew installations and their corresponding directories in /usr/local. The `--verbose` flag increases the output of the command to provide more detailed information about the linking process. It shows the paths of the linked and current versions of each package, as well as any error messages if applicable.'
