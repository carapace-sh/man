# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: nodes
description: Lists all nodes in the given datacenter
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --detailed: Output detailed information about the nodes including their addresses and metadata.
    --filter=: Filter to use with the request
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --near=: Node name to sort the node list in ascending order based on estimated round-trip time from that node.
    --node-meta=: Metadata to filter nodes with the given `key=value` pairs.
    --service=: Service `id or name` to filter nodes.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul catalog nodes` command is used in Consul, a Connect and Service Mesh platform, to list all the known live nodes in a Consul datacenter. This command provides information about each node such as its ID, address, data center, status, and tags. It helps in managing and monitoring the nodes in a Consul cluster.'
    flag:
        ca-file: '[AI] The `consul catalog nodes --ca-file` command is used with Consul, an open-source tool for service discovery, configuration, and orchestration. This command returns the list of cataloged nodes in a Consul cluster along with their SSL certificates, which are saved to a specified CA file (`--ca-file`) instead of being printed on the terminal. The purpose is to securely distribute the CA file among clients or services for verifying the identities of communicating parties within the Consul service mesh.'
        ca-path: '[AI] `consul catalog nodes --ca-path` is a command used in Hashicorp Consul, a service discovery and configuration management tool. This command lists theCatalog (a data center in Consul) nodes along with their SSL certificates'' CA paths. The CA path refers to the location of the Certificate Authority (CA), which has issued the SSL certificates for those nodes. This information can be used for verification purposes when communicating with these nodes over secure channels.'
        client-cert: '[AI] The `consul catalog nodes --client-cert` command is used in Consul, a service discovery and configuration management tool, to list the catalog of nodes along with their client certificates. This command helps in verifying the identity of nodes joining or already in the Consul cluster. By providing the `--client-cert` option, the output includes an additional column displaying the client certificate thumbprint or base64-encoded certificate data for each node. This information is useful when implementing security policies based on certificate verification.'
        client-key: '[AI] `consul catalog nodes --client-key` is a command used in Hashicorp''s Consul service discovery and configuration tool. This command retrieves the catalog of service registrations and their associated metadata, including the client key of each registered node. The client key is a unique identifier assigned to each Consul agent when it joins a Consul cluster, allowing fine-grained access control and communication between services.'
        datacenter: '[AI] The `consul catalog nodes --datacenter` command is used in Consul, a Connect and Service Mesh platform from Hashicorp. It lists the nodes that are currently part of a specific datacenter in the Consul service discovery and configuration system. By specifying the `--datacenter` option followed by the name of a defined datacenter, this command enables users to filter and view only the nodes belonging to that particular datacenter within the Consul cluster.'
        detailed: '[AI] `consul catalog nodes --detained` is a command used in Consul, a service discovery and configuration management tool. This command displays detailed information about all cataloged nodes in the Consul cluster. The output includes the node ID, address, datacenter, status, tags, and other metadata. It provides a comprehensive view of the nodes in the Consul catalog, which can be useful for monitoring and managing the cluster.'
        filter: '[AI] `consul catalog nodes --filter` is a command used in Consul, a service discovery and configuration management tool. This command displays information about the cataloged nodes in a Consul cluster. The `--filter` option allows you to filter the output based on specific labels or tags. For instance, you can use it to list only nodes belonging to a particular service or having a certain tag value. In summary, this command helps in querying and filtering the nodes information from the Consul catalog.'
        http-addr: '[AI] The `consul catalog nodes --http-addr` command is used in Consul, a distributed, highly available, and data center aware toolchain for service discovery, configuration, and orchestration. This specific command retrieves the list of catalog nodes'' addresses that are reachable over HTTP. Catalog nodes store and manage the entire state of the Consul cluster, providing a centralized API to query and modify services, configurations, and more. The output of this command helps users determine which HTTP-reachable nodes they can interact with for managing their Consul configuration.'
        near: '[AI] The `consul catalog nodes --near` command is used with the Consul Discovery service to list the available nodes in the Consul cluster that are geographically closest to the current location. This command helps in load balancing and availability of services by ensuring that requests for a particular service are routed to the nearest node, reducing latency and improving performance. The `--near` flag filters the output to show only those nodes that are considered "nearby" based on the Consul data center and physical location information.'
        node-meta: '[AI] The `consul catalog nodes --node-meta` command is used with the Consul service discovery and configuration management tool. It returns a JSON formatted output showing metadata associated with the cataloged nodes in the Consul cluster. This metadata can be used to tag and filter nodes based on various attributes, helping in efficient service discovery and management within the Consul ecosystem.'
        service: '[AI] The `consul catalog nodes --service` command is used with the Consul service discovery and configuration management tool. It returns a list of nodes in the Consul cluster that are registered as providing a specific service, along with their addresses and tags. This can be helpful for discovering and managing services within a distributed application environment.'
        stale: '[AI] The `consul catalog nodes --stale` command is used in Hashicorp''s Consul service discovery and configuration management tool to list all registered nodes, even if they are no longer alive or reachable. The `--stale` flag allows the inclusion of such nodes in the output, which may be useful for troubleshooting or manually managing the Consul cluster. By default, Consul only shows live and reachable nodes.'
        tls-server-name: |-
            [AI] The `consul catalog nodes --tls-server-name` command is used in Hashicorp Consul, a service discovery and configuration management tool. This command displays the catalog of available services and nodes in a Consul cluster, but with an additional flag `--tls-server-name`.

            This flag specifies the TLS server name that should be used when connecting to the Consul HTTP API over TLS. It helps ensure secure communication by verifying the identity of the Consul server during the TLS handshake, thus preventing man-in-the-middle attacks. The `--tls-server-name` value should match the DNS name or IP address of the Consul server.
        token: '[AI] The `consul catalog nodes --token` command is used in the Consul service discovery tool to list all cataloged nodes along with their associated tags and addresses, wrapped with the provided HTTP token for authentication. It helps to obtain accurate and up-to-date information about registered services or nodes within a Consul cluster for effective service discovery and management.'
        token-file: '[AI] `consul catalog nodes --token-file` is a command used with the Consul service discovery and configuration tool. It lists all registered service nodes in a Consul cluster, but requires a token file for authentication. The `--token-file` option specifies the path to a file containing a valid ACL token or API key, enabling secure access to Consul''s catalog information.'
