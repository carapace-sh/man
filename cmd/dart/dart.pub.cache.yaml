# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: cache
description: Work with the system cache
flags:
    -h, --help: Print this usage information.
documentation:
    command: |-
        [AI] The `dart pub cache` command is used to manage Dart's package caching system, called `pub`. It maintains a local repository of packages and their dependencies for a project. Commands include:

        1. `publish_cache --help`: Shows help for all available subcommands.
        2. `publish_cache resolve <package>`: Resolves and installs the dependencies for a given package.
        3. `publish_cache activate <package>`: Activates a package in the current project's pubspec.yaml file.
        4. `publish_cache deactivate <package>`: Deactivates a package from the current project's pubspec.yaml file.
        5. `publish_cache get` or `pub get`: Fetches and installs all dependencies defined in the current project's pubspec.yaml file.
        6. `publish_cache run <script>`: Runs a script within a package from the cache.
        7. `publish_cache remove <package>`: Removes a package and its dependencies from the cache.
        8. `publish_cache clean`: Deletes the entire pub cache, including all packages and their dependencies.
    flag:
        help: '[AI] The `dart pub cache --help` command is used to display help information about the Dart Pub package cache management tool. It shows various sub-commands and their usage, along with brief descriptions of what each command does. For instance, you can see options like `cache`, `add`, `get`, `list`, `outdated`, etc., and how they are invoked with specific arguments if needed. Overall, it''s an essential tool for managing Dart packages in your project, and this command helps you understand its capabilities.'
