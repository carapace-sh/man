# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: login
description: Log in to a Waypoint server
flags:
    --auth-method=: Auth method to use for login.
    --from-kubernetes: Perform the initial authentication after Waypoint is installed to Kubernetes.
    --from-kubernetes-namespace=: The name of the Kubernetes namespace that has the Waypoint token.
    --from-kubernetes-secret=: The name of the Kubernetes secret that has the Waypoint token.
    --from-kubernetes-service=: The name of the Kubernetes service to get the server address from.
    --plain: Plain output
    --server-addr=: Address for the server.
    --server-tls: Connected to via TLS.
    --server-tls-skip-verify: Skip verification of the TLS certificate advertised by the server.
    --token=: Auth with a token.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint login` command is used in Waypoint, a tool for managing and securing Terraform configurations. It allows you to authenticate with a Waypoint server so that you can securely access and manage your Terraform projects. When you run this command in your terminal, you will be prompted to enter an API token or other authentication method recognized by Waypoint. Upon successful login, Waypoint configures your local environment with the necessary context and permissions for interacting with the specified server.'
    flag:
        app: '[AI] The `waypoint login --app` command is used in Hashicorp''s Waypoint, an open-source application delivery platform. It initiates the process of logging into a target OCI (Open Container Initiative) registry or cloud provider using an authenticated app configuration. This command assumes that you have already set up your `WAYPOINT_CONFIG` environment variable to point to the Waypoint config file, which includes the necessary app configuration details. By executing this command, you authorize Waypoint to manage and deploy applications from the specified registry or cloud provider using your account credentials.'
        auth-method: |-
            [AI] The `waypoint login --auth-method` command is used with Hashicorp's Waypoint tool, which is a multi-cluster Kubernetes management solution. This command is responsible for configuring the authentication method when logging into a Kubernetes cluster. By default, Waypoint uses a context-driven approach to determine the authentication method based on the `kubeconfig` file. However, you can explicitly specify an authentication method using this command. Supported methods include "token", "client-cert" and "service-account". For example:

            ```bash
            waypoint login mycluster.example.com --auth-method=token --token=mylongtoken
            ```

            This command logs into the cluster named `mycluster.example.com` using a token authentication method with the provided token `mylongtoken`.
        from-kubernetes: '[AI] The `waypoint login --from-kubernetes` command is used with Hashicorp''s Waypoint tool for managing Kubernetes applications. It allows users to log in to a Waypoint server using their existing Kubernetes cluster authentication, eliminating the need to manually provide credentials. This enhances security and simplifies the login process when working with multiple clusters or teams.'
        from-kubernetes-namespace: '[AI] The `waypoint login --from-kubernetes-namespace` command is used in Hashicorp''s Waypoint tool to authenticate and log into a Kubernetes cluster using an existing service account in that cluster''s namespace. This command sets up Waypoint to manage resources within the specified Kubernetes namespace, enabling you to easily deploy, manage, and update infrastructure as code using Waypoint and Terraform. It simplifies the process of managing multiple clusters by centralizing your access to them through a single tool.'
        from-kubernetes-secret: '[AI] The `waypoint login` command with the `--from-kubernetes-secret` flag is used in Hashicorp''s Waypoint tool for securely accessing Kubernetes clusters. This flag instructs Waypoint to retrieve the authentication credentials (client certificate and key) from a Kubernetes Secret. Once the Secret is accessed, Waypoint uses this information to establish an SSH connection to a Kubernetes worker node or cluster control plane, allowing you to manage resources in that cluster using Waypoint.'
        from-kubernetes-service: '[AI] `waypoint login` is a command from Hashicorp''s Waypoint, an open-source SSH and Bastion Host solution for secure access to infrastructure. The `--from-kubernetes-service` flag is used to specify that the SSH key or identity file to be added to the Waypoint Bastion host should be fetched from a Kubernetes service account. This allows automating the process of granting access to infrastructure resources by managing the service account''s private key within your Kubernetes environment.'
        plain: '[AI] The `waypoint login --plain` command is used in Hashicorp''s Waypoint configuration management tool. This command is utilized to log in to a target environment using plain text credentials instead of other methods like SSH keys or OAuth tokens. By providing the `--plain` flag, Waypoint will prompt for the username and password interactively and then securely encrypt and store the credentials in the `waypoint.hcl` configuration file for later use. This approach can be useful when working with environments that do not support other authentication methods or where you want to manually enter your credentials each time for added security.'
        project: '[AI] The `waypoint login --project` command is used in Hashicorp''s Nomad and Consul tools for authentication against a specific project or namespace in a given cluster. It sets up a secure communication between your local environment and the remote Nomad or Consul server, allowing you to manage resources under that project''s context. This command is essential for accessing and managing services, jobs, and other configurations within a project in your Hashicorp platform.'
        server-addr: '[AI] The `waypoint login` command is used in Hashicorp''s Nomad and Consul tools for securely configuring a client to communicate with a running server instance. The `--server-addr` option specifies the address of the Nomad or Consul server to authenticate against, typically in the format "address:port". For example, `--server-addr=192.168.0.5:8080`. This command enables clients to securely access and manage resources on the server.'
        server-tls: '[AI] The `waypoint login` command is a part of Hashicorp''s Waypoint, an open-source SSH and TLS client for managing multiple SSH and TLS connections. The `--server-tls` flag is used to specify that the remote server uses Transport Layer Security (TLS) for encrypting the communication channel between the client and server. By using this flag, Waypoint will establish an encrypted connection with the provided server using its SSL/TLS certificate. This adds an extra layer of security by ensuring data transmitted between the client and server is encrypted.'
        server-tls-skip-verify: '[AI] The `--server-tls-skip-verify` flag is used with the OpenCV library''s `cv::dns_lookup()` function in Waypoints (a SLAM system developed by Intel) for login purposes. This flag disables TLS certificate verification during secure communication between the client and server, resulting in a potential security risk as it allows connecting to servers with invalid or self-signed certificates without raising an error. It is generally not recommended to use this flag for production environments due to the increased security risk. Instead, proper certificate handling should be implemented for secure communications.'
        token: '[AI] The `waypoint login` command with the `--token` option is used to authenticate and log in to a Tanzu Application Service (TAS) environment in Cloud Native Foundation''s (CNF) Tanzu CLI, Waypoint. This command allows users to provide an access token instead of using SSO or other authentication methods. The `--token` argument should contain the valid access token which grants permission to manage applications within the specified TAS environment. After successful login, you can use other Waypoint commands to interact with your applications and infrastructure managed by TAS.'
        workspace: '[AI] The `waypoint login --workspace` command is used with Hashicorp''s Waypoint configuration management tool. This command facilitates logging into a specific workspace in a target provider, such as Azure, AWS, or Google Cloud. By providing the necessary authentication credentials and specifying the desired workspace name, Waypoint will establish a secure connection to manage resources within that particular environment.'
