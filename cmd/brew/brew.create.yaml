# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create
description: Generate a formula or, with `--cask`, a cask for the downloadable file at <URL> and open it in the editor
group: developer
flags:
    --HEAD: Indicate that <URL> points to the package's repository rather than a file.
    --autotools: Create a basic template for an Autotools-style build.
    --cask: Create a basic template for a cask.
    --cmake: Create a basic template for a CMake-style build.
    --crystal: Create a basic template for a Crystal build.
    --debug: Display any debugging information.
    --force: Ignore errors for disallowed formula names and names that shadow aliases.
    --go: Create a basic template for a Go build.
    --help: Show this message.
    --meson: Create a basic template for a Meson-style build.
    --no-fetch: Homebrew will not download <URL> to the cache and will thus not add its SHA-256 to the formula for you, nor will it check the GitHub API for GitHub projects (to fill out its description and homepage).
    --node: Create a basic template for a Node build.
    --perl: Create a basic template for a Perl build.
    --python: Create a basic template for a Python build.
    --quiet: Make some output more quiet.
    --ruby: Create a basic template for a Ruby build.
    --rust: Create a basic template for a Rust build.
    --set-license: Explicitly set the <license> of the new formula.
    --set-name: Explicitly set the <name> of the new formula or cask.
    --set-version: Explicitly set the <version> of the new formula or cask.
    --tap: Generate the new formula within the given tap, specified as <user>`/`<repo>.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew create` is a Homebrew command used to create a new, empty formula in the Homebrew repository on GitHub. It does not install or build anything; instead, it generates a new file structure for a potential new formula under the `Homebrew/homebrew-core` or `Homebrew/homebrew-tap` directory (depending on where you run the command). This command is typically used when you want to contribute a new Homebrew package and are following the official contribution workflow.'
    flag:
        HEAD: |-
            [AI] `brew create --HEAD` is a command used with Homebrew, a popular package manager for macOS. The `create` sub-command is used to create a new Homebrew Formula, which is a set of instructions that Homebrew uses to install and manage software packages.

            The `--HEAD` option tells Homebrew to use the current HEAD commit of a Git repository as the source for the new Formula. This means that the Formula will be based on the most recent changes in the Git repository, allowing users to easily install the latest version of the software.

            So, in summary, `brew create --HEAD` creates a new Homebrew Formula using the latest commit from a specified Git repository.
        autotools: |-
            [AI] `brew create --autotools` is a command used with Homebrew, a popular package manager for macOS. This specific command creates a new Homebrew Formula for installing software using the Autotools build system.

            Autotools is a set of software development tools that help manage and automate the build process, including configuration, compilation, and installation. When creating a new Homebrew Formula with `--autotools`, Homebrew generates essential files like a Makefile and other necessary scripts for building and installing the software using Autotools.

            Once the Formula is created, you can edit it to add dependencies, build options, or customize the installation process. After making modifications, use `brew install <formula-name>` to test your changes locally before submitting them to the Homebrew community for others to use.
        cask: '[AI] `brew create --cask` is a command used with Homebrew, a popular package manager for macOS. This specific command creates a new Homebrew "Formula" or "Cask" for installing software that is distributed as a pre-compiled binary bundle, rather than source code. The flag `--cask` indicates that this Formula will be specifically for Cask packages, which are generally GUI applications bundled with their dependencies. Once created, the new Formula can be added to Homebrew''s repository and shared within the Homebrew community for others to easily install the application using brew.'
        cmake: '[AI] `brew create --cmake` is a command used with Homebrew, a popular package manager for macOS. This specific command is used to create a new Homebrew Formula, which is a set of instructions that tells Homebrew how to install and manage software packages. The `--cmake` option indicates that the Formula being created is for a project that uses CMake as its build system. Homebrew will generate a skeleton file structure for the Formula based on this information, making it easier for users to contribute or maintain open-source projects with CMake builds.'
        crystal: '[AI] `brew create --crystal` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew formula for managing Crystal, a modern, statically-typed programming language. The formula enables users to easily install and manage Crystal using Homebrew, providing an efficient way to set up the development environment.'
        debug: '[AI] `brew create --debug` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew Formula, which is a set of instructions for installing and managing software packages. The `--debug` flag enables detailed output during the creation process, helping developers to identify and troubleshoot any issues that may arise while creating or updating the formula. In summary, `brew create --debug` generates a new Homebrew formula with debugging information.'
        force: '[AI] `brew create --force` is a command used with Homebrew, a popular package manager for macOS. The `create` subcommand generates a new Homebrew formula for installing software from source code. With the `--force` option, it will overwrite an existing formula with the same name if one already exists. This can be useful when updating or refining an existing formula.'
        go: '[AI] `brew create --go` is a command used with Homebrew, a popular package manager for macOS. This specific command creates a new Homebrew tap (a repository where Homebrew can download and install software from). The `--go` flag indicates that this particular tap will be used to build and distribute Go packages using Homebrew. Once the tap is created, it can be added to Homebrew''s list of repositories with `brew tap <username>/<tapname>`, allowing users to easily install Go packages through Homebrew.'
        help: '[AI] `brew create` is a command used in Homebrew, a popular package manager for macOS. This command creates a new Homebrew Formula, which is a set of instructions for installing and managing software using Homebrew. The `--help` flag provides information about how to use the `create` command with various options. Some common options include specifying the formula name and providing a Git or Subversion repository URL containing the initial source code for the formula. For example, `brew create my-formula https://github.com/user/my-repository`.'
        meson: '[AI] `brew create --meson` is a command used with Homebrew, a popular package manager for macOS. The `create` subcommand is used to generate a new Homebrew formula for installing and managing software packages. When you use `--meson`, Homebrew sets up the formula to build and install software projects using Meson, a modern build system. This command generates a new directory with the desired package name containing the essential files to create a Homebrew formula including a meson build file, and a Makefile for Homebrew''s dependencies handling.'
        no-fetch: '[AI] The `brew create --no-fetch` command is a function in Homebrew, a popular package manager for macOS, that creates a new Homebrew Formula without downloading or installing it. This means that the formula file with its necessary metadata will be generated locally but not fetched from any remote sources. It is often used when writing or modifying existing formulas and preferring to work offline or in an isolated environment before making the changes public.'
        node: '[AI] `brew create --node` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew formula for installing Node.js, a JavaScript runtime environment. The formula defines the source of the software, how to build it if necessary, and any dependencies or optional components. Once created, the formula can be committed to a Git repository and later installed using Homebrew with `brew install node`.'
        perl: '[AI] `brew create --perl` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew "Formula" for installing Perl, a high-level, general-purpose programming language. The `--perl` option instructs Homebrew to use the upstream Perl distribution when creating the Formula, ensuring that the installed Perl is built from the latest sources and includes all the standard modules. Once the Formula is created, it can be committed to a Homebrew repository, allowing others to easily install Perl using Homebrew.'
        python: '[AI] `brew create --python` is a command used in Homebrew, a popular package manager for macOS, to create a new Homebrew formula for installing Python using that manager. The `--python` argument instructs Homebrew to use an official Apple-supplied distribution of Python (if available) or the most recently announced release from the Python.org download page. Once the formula is created, you can use `brew install python` to install the software.'
        quiet: '[AI] `brew create --quiet` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew formula in the `Homebrew/Library` directory without displaying any informational messages during the process. The `--quiet` flag suppresses output, allowing you to create a new formula silently.'
        ruby: '[AI] `brew create` is a command-line tool for Homebrew, a popular package manager for macOS. The `--ruby` option creates a new Homebrew "Formula" for managing the installation and upgrades of Ruby and its dependencies. When you run `brew create --ruby <ruby-version>`, it generates a new Formula file in the Homebrew `Homebrew/formulas` directory, specifically tailored for the named Ruby version (e.g., 2.7.3). This formula automates the process of installing and managing that particular Ruby version using Homebrew.'
        rust: '[AI] `brew create --rust` is a command used with Homebrew, a popular package manager for macOS. This specific command creates a new Homebrew formula for installing Rust and its packages using Rustup. The `--rust` flag instructs Homebrew to use Rustup for managing Rust toolchains instead of the default method. Once the formula is created, it can be shared and installed via Homebrew.'
        set-license: '[AI] `brew create` is a Homebrew command used to create a new Formula, which is a script used by Homebrew to build, install, and manage packages on macOS. The `--set-license` option sets the license for the new formula during its creation. It takes a license string as an argument, ensuring that the created package will adhere to the specified open source software licensing terms.'
        set-name: '[AI] `brew create --set-name` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew Formula, which is a script that defines how to build, install, and update software packages. The `--set-name` option sets the desired name for the new formula. Once created, this formula can be further edited and submitted to the Homebrew community for others to use.'
        set-version: '[AI] `brew create --set-version` is a command used in Homebrew, a popular package manager for macOS. This command creates a new Homebrew Formula with a specified version of a software. The `--set-version` option sets the initial version of the formula to the given value. Once created, the formula can be modified and submitted to the Homebrew community for others to use.'
        tap: '[AI] `brew create --tap` is a command used with Homebrew, a popular package manager for macOS. This command creates a new Homebrew tap (a repository where Homebrew can find and install software packages). The `--tap` option specifies the name of the GitHub or other version control system repository that contains the Homebrew formulae to be tapped. Once created, other users can install your software using Homebrew with `brew install <username>/<repository>`.'
        verbose: '[AI] `brew create --verbose` is a command used in Homebrew, a popular package manager for macOS. This command creates a new Homebrew formula with detailed output. The `--verbose` flag increases the amount of information displayed during the creation process, providing more insights into each step involved in setting up the new formula file. It helps in understanding the underlying mechanisms and troubleshooting issues when creating a custom formula.'
