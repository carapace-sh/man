# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: pr-automerge
description: Find pull requests that can be automatically merged using `brew pr-publish`
group: developer
flags:
    --autosquash: Instruct `brew pr-publish` to automatically reformat and reword commits in the pull request to the preferred format.
    --debug: Display any debugging information.
    --help: Show this message.
    --ignore-failures: Include pull requests that have failing status checks.
    --publish: Run `brew pr-publish` on matching pull requests.
    --quiet: Make some output more quiet.
    --tap: 'Target tap repository (default: `homebrew/core`).'
    --verbose: Make some output more verbose.
    --with-label: Pull requests must have this label.
    --without-approval: Pull requests do not require approval to be merged.
    --without-labels: 'Pull requests must not have these labels (default: `do not merge`, `new formula`, `automerge-skip`, `pre-release`, `CI-published-bottle-commits`).'
    --workflow: Workflow file to use with `brew pr-publish`.
documentation:
    command: '[AI] `brew pr-automerge` is a Homebrew command used to automatically merge conflicting branches or commits during a Pull Request (PR) process. It''s an extension of Homebrew Core designed to simplify the PR merging workflow for Git projects, by performing the merge operation and resolving any potential conflicts. By default, it utilizes the `git-merge` and `git-rebase` tools under the hood to handle the merges. This command should be run in your terminal or command prompt after navigating to the directory of your Homebrew-managed project and while having an active pull request open.'
    flag:
        autosquash: |-
            [AI] `brew pr-automerge --autosquash` is a command used with Homebrew, a popular package manager for macOS and Linux. This command runs an automated process called "autosquash" within a pull request (PR) workflow.

            When developers make changes to Homebrew's source code in a PR, they may need to update the `ChangeLog` file with brief descriptions of their modifications. The `--autosquash` option automates this process by analyzing commit messages and generating ChangeLog entries based on the changes made in the commits within the PR.

            The output from this command is a list of proposed ChangeLog entries, which can be reviewed and committed as part of the PR to keep the project's change history clear and concise.
        debug: |-
            [AI] `brew pr-automerge --debug` is a command used in Homebrew, a popular package manager for macOS and Linux. This command triggers the `pr-automerge` workflow with debug mode enabled.

            The `pr-automerge` workflow automerges pull requests, meaning it merges pull requests that have been reviewed and approved by other developers, reducing manual merge efforts. The `--debug` flag turns on detailed debugging information to help diagnose any potential issues during the process.
        help: |-
            [AI] `brew pr-automerge --help` is a command used in Homebrew, a package manager for macOS. The `pr-automerge` part of the command refers to a specific Homebrew tap (repository) named "Homebrew/repositories" which contains this formula.

            The `--help` flag is a standard option requested from any command-line utility or script to display its usage information, including available commands, options, and their corresponding descriptions.

            So, running this command will provide you with the help documentation for using `brew pr-automerge`, which could include instructions on installing, updating, or deleting it.
        ignore-failures: '[AI] The `brew pr-automerge --ignore-failures` command is used in Homebrew, a popular package manager for macOS. It''s designed to automatically merge pull requests from the Homebrew core repository into the local installed version of Homebrew, ignoring any build or installation failures during the process. This can be useful when managing large numbers of pull requests or when merging frequently to keep a system up-to-date with the latest Homebrew changes. However, it''s important to note that this command can potentially introduce broken installations or dependencies, so it should be used with caution and only after thoroughly reviewing the pull requests being merged.'
        publish: |-
            [AI] `brew pr-automerge --publish` is a command used in Homebrew, a popular package manager for macOS and Linux. This command is part of Homebrew's PR Automatic Merging (PR-Automerge) workflow.

            When a pull request is opened on the Homebrew core GitHub repository, PR-Automerge automatically runs tests to determine if the changes in the pull request are safe and beneficial for merging into the main branch. If the tests pass, `brew pr-automerge --publish` command is used to publish the changes from the pull request to the Homebrew Tap, making them available for installation by users via Homebrew.

            In summary, this command publishes the changes from a successfully tested and approved pull request into the Homebrew repository, allowing other users to easily install the updated software packages.
        quiet: '[AI] `brew pr-automerge --quiet` is a command used in Homebrew, a package manager for macOS. The `pr-automerge` part refers to a specific Homebrew formula that automerges branches or pull requests in Git prior to installation. The `--quiet` option tells the command to run without printing any informational messages during execution. So, this command automatically merges branches/pull requests and installs the software silently.'
        tap: |-
            [AI] `brew pr-automerge --tap` is a command used with Homebrew, a popular package manager for macOS and Linux. The `pr-automerge` part refers to a third-party GitHub repository named "Homebrew-pr-automerge-tap" which contains custom Homebrew taps (repositories of formulae).

            The `--tap` flag specifies that the command should fetch and install this tap, adding its formulae to be built and installed by Homebrew. It's a way of integrating new repositories into your Homebrew setup for managing software packages.
        verbose: '[AI] `brew pr-automerge --verbose` is a command used with Homebrew, a popular package manager for macOS. This specific command triggers an automatic merge of pending pull requests in Homebrew''s GitHub repository. The `--verbose` option increases the level of output detail provided during the execution of this command. This can be helpful for users who want to monitor the progress and potential issues that may arise from the merge process.'
        with-label: '[AI] `brew pr-automerge --with-label` is a command used in Homebrew, a popular package manager for macOS. This command initiates an automatic merge of a pull request (PR) in the Homebrew Core repository using the `pr-automerge` tool. The `--with-label` option specifies that the PR should be labeled with a particular name during the merge process. The labeling helps in identifying and managing merged PRs effectively.'
        without-approval: '[AI] `brew pr-automerge --without-approval` is a command used in Homebrew, a popular package manager for macOS. This command initiates an automated merge of a pull request without requiring approval from reviewers or the merge bot. It can be useful when you want to quickly merge changes that have passed all checks and tests during continuous integration. However, using this option bypasses some level of manual review and should be used with caution to ensure the changes being merged are safe and do not introduce unwanted issues into the project.'
        without-labels: '[AI] `brew pr-automerge --without-labels` is a command used with Homebrew, a popular package manager for macOS and Linux. This command initiates an automatic merge of pending pull requests in Homebrew''s GitHub repository without applying any label changes. It helps keep the main branch up-to-date with the latest accepted changes from the community while maintaining a clear and organized Git history.'
        workflow: |-
            [AI] `brew pr-automerge --workflow` is a command used with Homebrew, a popular package manager for macOS and Linux. This command interacts with GitHub's pull request automation features using Homebrew's `pr-automerge` tool.

            In simple terms, this command automerges pull requests that meet specific criteria, such as having no conflicting changes or passing all tests. By including the `--workflow` flag, you're instructing Homebrew to use a specified GitHub workflow file for this automerge process. This allows you to customize and control the merging of pull requests automatically within your project workflows.
