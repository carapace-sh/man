# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: play
description: Replay the recorded session (SSH, Kubernetes, App, DB).
flags:
    -c, --cluster=: Specify the Teleport cluster to connect
    -f, --format=: Format output (pty, json, yaml)
documentation:
    command: '[AI] The `tsh play` command is used in the Telescope Observing System (TSH) to begin executing a previously defined observing sequence or script. This command starts the planned observations according to the specified parameters such as filter, exposure time, and target coordinates. Once started, TSH will automatically control the telescope and instruments to carry out the observation plan.'
    flag:
        cluster: '[AI] `tsh play --cluster` is a command used in the Tshoot networking troubleshooting tool. This command is used to execute a specific set of checks against multiple nodes or clusters in parallel. The `--cluster` option indicates that the check should be performed on all nodes belonging to a specific cluster, which is typically defined by a label or tag in the inventory file used by Tshoot. The `play` sub-command then runs the configured checks against each node in the cluster simultaneously, allowing for efficient and comprehensive troubleshooting of network issues across a group of devices.'
        format: |-
            [AI] The `tsh` command with the argument `play --format` is a part of Tsushima Shell (Tsh), a configuration management tool for Ansible. This specific command is used to execute an Ansible Playbook and modify its output format.

            Here's a breakdown of each component:

            1. `tsh`: The Tsushima Shell command-line interface.
            2. `play`: A subcommand that runs an Ansible Playbook.
            3. `--format`: A flag specifying the desired output format for the Playbook execution results. Common formats include `json`, `yaml`, and `plain`.

            For example, running `tsh play my_playbook.yml --format json` will execute 'my_playbook.yml' using Ansible and return the output as a JSON object.
