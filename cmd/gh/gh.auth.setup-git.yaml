# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: setup-git
description: Setup git with GitHub CLI
flags:
    -f, --force: Force setup even if the host is not known. Must be used in conjunction with `--hostname`
    -h, --hostname=: The hostname to configure git for
documentation:
    command: '[AI] `gh auth setup-git` is a GitHub command used to authenticate a new local Git repository with your GitHub account. This allows you to push and pull code changes directly from the command line without having to enter your username and password each time. The command sets up a secure SSH key or OAuth token, depending on your GitHub settings, and configures your Git repository to use it for authentication.'
    flag:
        force: '[AI] The command `gh auth setup-git --force` is used to set up Git authentication with GitHub (Git Hub) using SSH keys, overriding any existing configurations. This command is part of the GitHub for Windows and GitHub for Linux tools. When executed, it forces the tool to reconfigure Git to use the specified SSH key file or agent for authenticating with GitHub, regardless of any previous settings. It''s typically used when you have recently added, removed, or updated your SSH keys and want to ensure that your Git client uses the new ones.'
        hostname: '[AI] The `gh auth setup-git` command is used to authenticate Git with GitHub''s authentication server, allowing you to push and pull code from repositories using SSH keys instead of HTTPS. The `--hostname` option specifies the hostname or IP address of the GitHub instance to authenticate against. This can be useful if you''re working behind a proxy or firewall that requires specific hostnames for outgoing connections. Overall, this command streamlines the process of configuring Git to securely interact with GitHub repositories.'
