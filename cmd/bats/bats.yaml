# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: bats
description: Bash Automated Testing System
flags:
    -c, --count: Count the number of test cases without running any tests
    -h, --help: Display this help message
    -p, --pretty: Show results in pretty format (default for terminals)
    -t, --tap: Show results in TAP format
    -v, --version: Display the version number
documentation:
    command: '[AI] "Bats" is not a command, but a name of a popular text-based unit testing framework written in Bash scripting language. It allows users to write tests using simple syntax and structure, making it easy for users accustomed to other testing frameworks like Jest or Mocha to adapt. The main advantage of using Bats is its simplicity, as it doesn''t require additional dependencies beyond a standard Unix-like environment. This makes it a good choice for projects that prefer lightweight tooling and a strong emphasis on portability.'
    flag:
        count: '[AI] The `bats` command with the `--count` flag is a part of Bats, a Bash-compatible testing and automation framework for Node.js. This flag instructs Bats to print the number of tests run and the number of tests that failed instead of displaying test results in the traditional format. It''s useful when you want to automatically check the success or failure status of your tests without viewing the detailed output.'
        help: '[AI] The `--help` flag is a common option used in various command-line tools and applications, including Bats (a batched Bash scripting language). When you run a Bats script with `--help` as an argument, it displays detailed information about how to use the script, its available options, and their meanings. This helps users understand how to correctly invoke the script and what arguments or flags they can pass to modify its behavior.'
        pretty: '[AI] The `--pretty` option in Bats, a Bash test assertion library, is used to customize the output format of test results. It takes a string argument that specifies the desired output style. For example, `--pretty="%F{yellow}%p%F{reset} %T: %E"` will display test names in yellow color, test status (pass or fail), and time taken to execute with reset color. The default format is plain text without colors. This option can help improve the readability and organization of test output.'
        tap: '[AI] The `bat` command is a popular tool for handling and manipulating large text files. The `--tap` option is used with the `bat` file viewer to output data in a tab-separated format, making it easier to process further with other tools such as spreadsheet programs or scripting languages like Python or R. When you run `bat --tap <file.txt>`, it reads the specified text file and converts its content into tab-separated values, outputting it to the standard output (STDOUT), ready for further processing.'
        version: '[AI] The `bats` is a Bash test and automation framework. Its main command-line interface (CLI) utility is also named `bats`. The `--version` option, when passed to this utility, displays the version number and other relevant information about the installed `bats` package, including its build date and Git commit hash if available.'
