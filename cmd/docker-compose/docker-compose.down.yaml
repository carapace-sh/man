# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: down [OPTIONS] [SERVICES]
description: Stop and remove containers, networks
flags:
    --remove-orphans: Remove containers for services not defined in the Compose file.
    --rmi=: Remove images used by services. "local" remove only images that don't have a custom tag ("local"|"all")
    -t, --timeout=: Specify a shutdown timeout in seconds
    -v, --volumes: Remove named volumes declared in the "volumes" section of the Compose file and anonymous volumes attached to containers.
documentation:
    command: |-
        [AI] `docker-compose down` is a command used with Docker Compose files to perform the following actions:

        1. Stop: Stops all services defined in the Compose file.
        2. Remove: Removes containers, networks, and volumes created by those services.
        3. Optionally, it can also remove the Docker images that were used to run the containers.

        This command is useful when you want to cleanly tear down your environment, for example, before making changes or pushing code to a remote repository.
    flag:
        remove-orphans: '[AI] `docker-compose down --remove-orphans` is a command used in Docker Compose to stop and remove containers, networks, and volumes defined in a `docker-compose.yml` file. The `--remove-orphans` option removes containers that are not linked to any other services and have no dependents, ensuring a clean state when bringing up the application again.'
        rmi: '[AI] `docker-compose down --rmi` is a command used with Docker Compose files to stop and remove containers, networks, and volumes defined in the Compose file. The `--rmi` flag tells Docker to also remove any unused images on the host system after the containers have been removed. This can help keep the Docker image repository clean and reduce disk space usage.'
        timeout: '[AI] `docker-compose down --timeout` is a command used with Docker Compose to stop and remove containers, networks, and volumes created by the Compose file. The `--timeout` option sets the amount of time (in seconds) to wait for each container to terminate before considering it failed and forcefully removing it. If not specified, the default timeout is 10 seconds. This command can be useful when you need to shut down your services in a controlled way, but still want to ensure that they are stopped within a reasonable timeframe.'
        volumes: '[AI] `docker-compose down --volumes` is a command used in Docker Compose to stop and remove containers, networks, images, and volumes defined in a `docker-compose.yml` file. The `--volumes` option specifically forces the removal of persistent data stored in named volumes, even if the data might cause data loss or application downtime. It''s recommended to use this command with caution as it can result in data loss.'
