# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: set <key> <value>
description: Updates configuration with the value of a given key
flags:
    -g, --global: Write to global ~/.config/glab-cli/config.yml file rather than the repository .git/glab-cli/config.yml file
    -h, --host=: Set per-host setting
documentation:
    command: '[AI] `glab config set` is a GitLab CLI (Command-Line Interface) command used to configure global or personal settings for GitLab. The command sets a new value for an existing configuration variable. The syntax is as follows: `glab config set <key> <value>`. For instance, you can set the default branch name for a remote repository with `glab config set url.<remote_name>.fetch.prune true` or set your GitLab personal access token with `glab config set credential.username <username>` and `glab config set credential.password <token>`. Changes take effect after the command is executed, and can be verified using `glab config get <key>`.'
    flag:
        global: '[AI] `glab` is a Git interface tool for working with multiple Git repositories. The command `glab config set --global` sets a new global configuration variable for `glab`. For example, `glab config set --global user.name "John Doe"` sets the name used for commits and tags created by `glab` to "John Doe". Global configurations apply to all repositories using `glab`.'
        host: '[AI] `glab` is a Git client developed by GitLab for working with Git repositories. The command `glab config set --host` is used to configure the `ssh-config` file for `glab`. Specifically, it sets or updates the value for the "Host" key in the configuration file, which defines an alias or label for a specific Git remote server. Following this command would be the name or label of the remote, followed by the SSH server address and other optional arguments such as port number or authentication keys. For example: `glab config set --host my_remote git@example.com:my_git_repo.git`.'
