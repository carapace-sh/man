# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: prof
description: Run Homebrew with a Ruby profiler
group: developer
flags:
    --debug: Display any debugging information.
    --help: Show this message.
    --quiet: Make some output more quiet.
    --stackprof: Use `stackprof` instead of `ruby-prof` (the default).
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] `brew prof` is a command provided by Homebrew, a popular package manager for macOS. It generates a report on the resources consumed (CPU and memory usage) by installed Homebrew applications. The output helps users identify potential performance bottlenecks among their Homebrew installations.'
    flag:
        debug: '[AI] `brew prof --debug` is a command used with Homebrew, a popular package manager for macOS. This specific command runs the `prof` sub-command in debug mode. The `prof` tool measures and reports the CPU profile of a given process or script, providing insights into which parts of the code consume the most resources. Running it in debug mode enables more detailed and comprehensive output to help diagnose performance issues.'
        help: '[AI] `brew prof --help` is a command used with Homebrew, a popular package manager for macOS. This specific command generates a profile report showing the resources (CPU, memory, disk usage) consumed by installed Homebrew packages. The `--help` flag provides additional information about how to use this command effectively.'
        quiet: '[AI] The `brew prof --quiet` command is a function provided by Homebrew, a popular package manager for macOS, that generates a report on the resources (CPU, memory, and disk usage) consumed by installed Homebrew packages. The `--quiet` flag suppresses output of progress messages during the scanning process, resulting in a quieter execution.'
        stackprof: '[AI] `brew prof` is a command-line tool provided by Homebrew, a popular package manager for macOS and Linux. The `--stackprof` option enables the use of the Stack Profiler, which is a performance analysis tool that helps identify CPU bottlenecks in Go programs. When you run `brew prof --stackprof <go-executable>`, it will profile your Go executable, collecting and analyzing data on the functions called during the execution to pinpoint potential performance issues. The result provides insights into the CPU usage distribution across functions.'
        verbose: '[AI] The `brew pros --verbose` command is used with Homebrew, a popular package manager for macOS. This command runs the `profiles` helper tool with the `--verbose` flag, which increases the level of output detail provided during the operation. The verbose mode displays extensive information about each profile Homebrew manages, including its source URL, branch or revision, and installation date. It can help users troubleshoot issues, understand the current state of their Homebrew configuration, and gain insights into how different profiles interact with one another.'
