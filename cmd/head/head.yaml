# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: head
description: output the first part of files
flags:
    --help: display this help and exit
    --silent: never print headers giving file names
    --version: output version information and exit
    -c, --bytes=: print the first NUM bytes of each file;
    -n, --lines=: print the first NUM lines instead of the first 10;
    -q, --quiet: never print headers giving file names
    -v, --verbose: always print headers giving file names
    -z, --zero-terminated: line delimiter is NUL, not newline
documentation:
    command: '[AI] The `head` command is a common Unix utility used to display the first n lines of a file. Its syntax is typically `head <file> [<num_lines>]`. If no number of lines is specified, it will display the first 10 lines by default. This can be useful for quickly previewing the contents of large files or logs without having to open them entirely.'
    flag:
        bytes: '[AI] The `head --bytes` command in Unix-based systems is used to display the first n bytes of a file instead of the default first 10 lines. The option `--bytes=n` specifies that only the first n bytes should be output, where n is the number of bytes specified. This can be useful for quickly examining specific parts of large files or checking file integrity by comparing the beginning bytes with known values.'
        help: '[AI] The `--help` option, when used with the Git command `git checkout`, displays detailed help information about the specific subcommand, which in this case is `checkout`. It explains what the command does, the different modes of operation, and provides examples and options that can be used with it. In essence, it provides a comprehensive guide on how to use `git checkout` effectively.'
        lines: '[AI] The `--lines` option in the `head` command is used to display only the specified number of lines from the beginning of a file instead of the default which is to display the first 10 lines. For instance, `head -n 5 filename.txt` will print the first 5 lines of the file while `head --lines=3 filename.txt` will display the initial 3 lines.'
        quiet: '[AI] The `--quiet` flag for the `head` command in Unix-based systems is used to suppress the output of header lines when displaying only the first few lines of a file or input stream. In other words, it makes the output consist only of the data without any additional labels or indicators.'
        silent: '[AI] The `--silent` flag, when used with the Unix `head` command, instructs it to suppress all output other than the specified number of lines. In other words, it only prints the specified number of lines at the beginning of a file and does not print any message indicating how many lines were printed.'
        verbose: |-
            [AI] The `--verbose` flag, when used with the `head` command in Unix-like operating systems, increases the amount of output displayed. When `head` is used to view the first n lines of a file, adding `--verbose` will display the filename and the line numbers preceding each line of output. For example, `head --verbose file.txt` will display something like:

            ```bash
            - file.txt 2013-05-14 18:29:57.634358542 +0200
            ------+-----------------------------------------+
            1      line1
            2      line2
            3      line3
            ```

            This output helps to keep track of the context in case you are dealing with multiple files or large amounts of data.
        version: '[AI] The `head --version` command is used to display the version information of the Git tool called "head". Head is a Git command-line utility that allows you to inspect and manipulate the tip (most recent commit) of a local or remote branch. Running this command with the `--version` option will print out the version number, revision, and other relevant information about the installed Git head tool.'
        zero-terminated: '[AI] The `--zero-terminated` flag is used with the `head` command in Unix-based systems for reading the first n bytes of a file instead of the first n lines. This option ensures that the output is terminated by a null character (ASCII code 0) at the end, making it suitable for processing binary data or fixed-length records without leading/trailing whitespace or line terminators.'
