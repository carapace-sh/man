# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: sync-schema
description: Synchronizes the schema of this Benthos instance with a studio session
flags:
    -s, --session=: The session ID to synchronize with.
    -t, --token=: The single use token used to authenticate the request.
documentation:
    command: '[AI] `benthos studio sync-schema` is a command used in Benthos Studio, an open-source data integration toolkit. This specific command is responsible for synchronizing schema metadata between two different systems. It facilitates keeping the data models in both systems consistent by transferring schema definitions from one to another. This command plays a crucial role in maintaining data interoperability and enabling seamless data flow between integrated systems.'
    flag:
        session: |-
            [AI] The `benthos studio sync-schema --session` command is a part of Benthos Studio, an open-source data integration tool developed by Datawire. This command is used to synchronize schema changes between databases or data sources in real-time.

            When invoked with the `--session` flag, this command creates or joins a specific session for schema synchronization. A session is essentially a named grouping of related schema differences and configurations. Multiple instances of schema sync can run concurrently within different sessions to manage multiple sets of schema changes independently.

            This command helps ensure that both the source and target databases maintain consistent schema versions, which is crucial when dealing with data integration across different systems or applications. By using a session, you can manage, monitor, and troubleshoot schema synchronization tasks more effectively while minimizing the risk of conflicts between schemas in your integrated environment.
        token: '[AI] The `benthos studio sync-schema --token` command is a part of Benthos Studio, an open-source data processing platform. This specific command is used to synchronize schema definitions between different environments or instances, such as development and production. The `--token` option is for providing an authentication token to securely access the target environment or instance. This ensures that only authorized users can make changes to the schema definitions, maintaining data consistency and security.'
