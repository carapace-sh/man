# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: export
aliases:
    - ex
description: Export project or group variables.
flags:
    -P, --per-page=: Number of items to list per page.
    -p, --page=: Page number.
persistentflags:
    -R, --repo=: Select another repository using the `OWNER/REPO` or `GROUP/NAMESPACE/REPO` format or full URL or git URL
    -g, --group=: Select a group or subgroup. Ignored if a repository argument is set.
documentation:
    command: '[AI] `glab` is a Git interface for working with multiple repositories, and the `variable export` command is used to set or export environment variables that can be used across all your working directories. When you run `glab variable export <name> <value>`, it sets the specified environment variable `<name>` with the value `<value>` in the current Git context (i.e., within the currently active branch or repository). This allows you to set consistent variables across multiple repositories without having to modify your shell configuration files individually for each project.'
    flag:
        page: '[AI] The `flag "glab variable export --page"` is a command used in Glab, a Git interface tool for PowerShell and Bash. This command exports one or more environment variables from Gitlab CI/CD project''s variables to the local machine. The `--page` option specifies that only the variables of a specific page should be exported. For instance, if your project has multiple pages of variables (e.g., production and staging), you can use this command to export only the variables from the specified page. This way, you can easily access and use these environment variables for different environments in your local development or other tasks.'
        per-page: '[AI] The `flag "glab variable export --per-page"` is a command used in GitLab CI/CD pipelines with Glab (GitLab CLI) to export environment variables as Bash scripts, one script per page or job, in the YAML format. This flag helps separate and manage large numbers of exported variables by creating individual files for each variable set or page, improving pipeline readability and organization.'
