# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: debug
description: Display debug information
flags:
    --abi=: Only use wheels compatible with Python abi
    --implementation=: Only use wheels compatible with Python implementation
    --platform=: Only use wheels compatible with <platform>
    --python-version=: The Python interpreter version to use for wheel
documentation:
    command: '[AI] `pip debug` is not a valid command in Pip, which is a package manager for installing and managing Python packages. There seems to be some confusion as it might be mistaken for `pip show --debug`, which is an advanced option for displaying detailed information about a specific package when used with the `pip show` command.'
    flag:
        abi: |-
            [AI] The `pip debug --abi` command is used with Pip, which is a package manager for Python. This specific command is used to generate debug information about the built ABIs (Application Binary Interfaces) of installed Python packages.

            When you run `pip debug --abi`, it produces detailed output containing the name, location, and other metadata of each installed Python package along with their corresponding ABIs. This information can be helpful for debugging and resolving compatibility issues related to different Python package versions and their dependencies.
        implementation: '[AI] `pip debug --implementation` is a command used with Pirate, an alternative implementation of the Python Package Index (PyPI) server. This command activates the Pirate debug mode and provides detailed debugging information about the implemented package and its dependencies. It helps in troubleshooting installation issues or investigating specific aspects of a package''s metadata and dependency resolution within the Pirate environment.'
        platform: '[AI] The `pip debug --platform` command is a diagnostic tool for Python''s package manager, pip. It provides detailed information about the current Python and pip environment, including the installed packages and their locations, as well as the active virtual environments and their corresponding platform details (e.g., architecture: 64bit or 32bit, system: Windows, Linux, macOS etc.). This command can be helpful when troubleshooting installation or compatibility issues with pip and Python packages.'
        python-version: '[AI] The `pip debug --python-version` command is used to display detailed information about the Python version that is being used by pip, which is a popular package manager for Python. When you run this command in your terminal or command prompt, it will print out the location of the active Python executable and its corresponding version number. This can be helpful for debugging issues related to Python version compatibility with specific packages or projects.'
