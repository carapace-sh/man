# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: publish
description: Publish a package
flags:
    --access=: publish as public or restricted
    --dry-run: only report changes
    --otp=: one-time password
    --tag=: register with given tag
    --workspaces: Enable running a command in the context fo all workspaces
    -w, --workspace*=: Enable running a command in the context of the given workspace
documentation:
    command: '[AI] `npm publish` is a command used in Node.js package development for publishing a new version of an npm (Node Package Manager) package to the npm registry. It builds and packages the source code, updates metadata such as version number and description, generates a Git tag for the release, and then publishes the package to the registry so that it can be installed by other developers using `npm install`. This command should only be run when ready to share the package with the npm community.'
    flag:
        access: |-
            [AI] `npm publish --access` is a command used in npm (Node Package Manager) to publish a package to the npm registry with a specified access level. The `--access` flag allows you to set one of three access levels: "public", "restricted", or "private".

            * Public: anyone can view and download the package without authentication.
            * Restricted: only authenticated users with valid npm tokens (either publishers or collaborators) can view, download, or install the package.
            * Private: similar to restricted but requires additional authentication (an npm token with "read-only" or "publish" scopes) to access the package. This is useful for organizations that want to keep their packages internal and secured.
        dry-run: '[AI] `npm publish --dry-run` is a command used in Node.js package development. It simulates the publication process of an npm package without actually publishing it to the npm registry. This command checks if all prerequisites are met, validates the `package.json` file, builds the project (if necessary), and generates the `.tgz` and `.zip` files for the package. It also displays what would be uploaded to the registry without actually doing so. This is useful for testing the build process, checking versioning, and avoiding unintentional publishing.'
        otp: |-
            [AI] `npm publish --otp` is a command used in npm (Node Package Manager) for publishing a package to the npm registry with an over-the-perison (OTP) token for enhanced security. This command does the following:

            1. Builds and prepares your local package for publication.
            2. Prompts you for your npm username and email address, if not already set in your `~/.npmrc` file.
            3. Asks you to input an OTP token to authenticate the publish process, which is obtained from an external service (e.g., a GitHub action or an environment variable).
            4. Publishes the package to the npm registry using the provided OTP token for added security and preventing unauthorized publishing.
        tag: '[AI] `npm publish --tag` is a command used in Node.js package management with npm (Node Package Manager). This command publishes a new version of a local npm package to the npm registry. The `--tag` option allows specifying a release tag for the published version, which can be useful for managing different branches or versions of the package. For instance, you could use `v1.0.0` as a tag for a major release, or `beta` for a beta version. This way, users can install specific tags to access desired versions of your package.'
        workspace: '[AI] `npm publish --workspace` is a command used in Node.js projects with multiple packages under one `package.json` file, also known as a monorepo. This command publishes all the packages listed in the `workspaces` field of the root `package.json` file to the npm registry at once. The `--access token` flag can be added to provide an npm publishing token for authentication. This simplifies the process of versioning and releasing multiple related packages together as part of a larger project.'
        workspaces: '[AI] `npm publish --workspaces` is a command used in npm (Node Package Manager) to publish multiple packages located in a single Git repository, each with its own `package.json` file, as part of an npm workspace. The `--workspaces` flag instructs npm to build and publish each package independently before moving on to the next one, ensuring consistent versions across all packages in the workspace. This streamlines the publishing process for monorepos or projects with multiple interconnected packages.'
