# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: untaint [options] name
description: Remove the 'tainted' state from a resource instance
flags:
    -allow-missing: succeed even if the resource is missing.
    -ignore-remote-version: A rare option used for the remote backend only.
    -lock: Don't hold a state lock during the operation.
    -lock-timeout?: Duration to retry a state lock.
documentation:
    command: '[AI] The `tofu untaint` command is a utility function in some implementations of the Polkadot and Substrate ecosystems, used for cleaning potentially tainted or compromised key pairs or certificates by regenerating their corresponding private keys from their public keys. It does not involve actual tofu (soybean curd), but rather takes its name from the similarity between the process of regenerating keys and the traditional Japanese method of curing tofu. This function ensures the security of affected keys without requiring access to the original, possibly compromised, private key.'
    flag:
        allow-missing: '[AI] The `tofu untaint -allow-missing` flag is used in Haskell programming with the `binary` package for Cabal build systems. It disables the safety checks that prevent loading of potentially tainted or missing binary files during the compile process. By allowing missing binaries, it can speed up the build process but may introduce security risks if the missing files are critical or malicious in nature. Use with caution.'
        ignore-remote-version: '[AI] The `tofu untaint --ignore-remote-version` flag is a command used in Docker security scanning. It tells the TUF (Trusted Unified Logging and Configuration) tool to ignore checking the remote version of trust lists or keys during the verification process. This flag can be useful in certain situations where network access to the original sources is restricted, but the local copies of the trust list are trusted. By ignoring the remote version check, the verification process can continue using the locally stored trust lists.'
        lock: '[AI] The term "tofu untaint-lock" is not a recognized or standard flag in computing or programming. It seems to be a made-up term without any defined meaning or function. If you meant to ask about specific flags, please provide the correct context and name for better understanding.'
        lock-timeout: '[AI] The "tofu untaint-lock-timeout" flag is a configuration option in Tofu, a library used for securing dependency injection and deserialization in Rust programming language. This flag sets the timeout for acquiring a lock on the untainted data cache, which is used to store data that has undergone strict input validation checks. The purpose of this flag is to prevent Tofu from blocking indefinitely when trying to acquire a lock, potentially causing deadlocks or other issues in the application. A reasonable timeout value should be set based on the expected usage scenario to balance security and performance.'
