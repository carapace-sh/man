# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: gen FILE
description: Generate CLI reference documentation
hidden: true
flags:
    --frontmatter=: Prepend content to beginning of generated file
    --include-experimental: Show experimental commands in the generated documentation
    -o, --output=: Save to file
documentation:
    command: '[AI] `dagger gen` is a command used in Dagger, a dependency injection and build tool for Java and Kotlin. It generates artifacts such as compiled code, test code coverage reports, and other metadata based on your Dagger configuration files. This helps to prepare your project for building and running with Dagger''s dependency injection capabilities.'
    flag:
        frontmatter: '[AI] `dagger gen --frontmatter` is a command used with Dagger, a popular build tool for Kubernetes. This command generates YAML frontmatter for Docker images and Kubernetes resources based on annotations in your source code. The generated frontmatter includes metadata such as image name, tags, labels, and other custom properties, facilitating automation and consistency in managing your containerized applications and infrastructure.'
        include-experimental: '[AI] `flag "dagger gen" with argument `--include-experimental` is used to invoke Dagger''s experimental features during code generation. The command runs Dagger''s code generation tool (`gen`) with the flag telling it to include any potentially unstable or breaking changes that have not yet been released as stable features. This can be helpful for trying out new functionality before they are officially supported, but keep in mind there is a risk of encountering bugs or incompatibilities.'
        output: '[AI] `dagger gen` is a command from Dagger, a build tool for Kotlin and Java projects. The `--output` option specifies the directory where generated artifacts will be saved. So, `dagger gen --output <directory>` generates Dagger-related files and saves them in the specified output directory.'
