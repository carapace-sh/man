# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: close [<number>]
description: Close a project
flags:
    --format=: 'Output format: {json}'
    --owner=: Login of the owner. Use "@me" for the current user.
    --undo: Reopen a closed project
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] The `gh project close` command is used in the GitHub CLI (Git Hub for Desktop also has a similar feature) to stop actively tracking and collaborating on a specific GitHub project, while keeping a local copy of the project''s code for reference. This command removes the linked GitHub repository from your local Git configuration and uninstalls any associated tokens or SSH keys. It does not delete the local project directory or its contents.'
    flag:
        format: |-
            [AI] The `gh project close --format` command is used in GitHub's `gh` CLI (Command Line Interface) tool to close a specific project and output the result in a customized format specified by the `--format` flag.

            The default output will show the project name, slug, and whether it is now closed or not. By using a custom format string with `--format`, you can tailor the output to display any relevant information that suits your needs. For instance, you might want to include other metadata such as the number of forks, stars, or open issues. The format string uses placeholders, which correspond to various pieces of data available from the project.

            Example: `gh project close <PROJECT_NAME> --format '{{ .Title }}: closed ({{ .CreatedAt | date "2006-01-02" }})'` would close the project with the given name and display its title followed by "closed" and the project creation date in the specified format.
        jq: '[AI] The command `gh project close --jq` is used in GitHub''s `gh` CLI (Command Line Interface) tool. This command closes an open project in your GitHub account and then uses the `jq` data manipulation tool to process and filter the JSON output of the `gh` command. The flag `--jq` allows you to apply JQ queries directly on the command line, making it easier to extract specific information from the JSON response. In summary, this command closes a GitHub project and then processes or filters the JSON output using JQ.'
        owner: '[AI] The `gh project close` command is a GitHub CLI (Command Line Interface) command used to close a specific project in a GitHub organization. The `--owner` option is used to specify the owner of the repository or organization that manages the project. By providing the correct owner name, this command allows you to close projects under their ownership. This can be helpful for organizations looking to manage and archive old or inactive projects.'
        template: '[AI] The `gh project close --template` is a GitHub CLI (Command Line Interface) command used to close a GitHub Project with a specific template. This command takes an argument which represents the name or ID of the project you want to close. The `--template` option specifies the name of the closing issue template to be applied when the project is closed. When executed, this command creates a new issue using the specified template and sets its state to open. Afterward, it transitions the project to the closed state, making all future workflow runs inactive.'
        undo: '[AI] `gh project close --undo` is a GitHub command used to reopen a previously closed GitHub project. The `close` subcommand closes a project, and the `--undo` option undoes the last project close action. When you run this command in your terminal or Git Bash, it will reopen the most recently closed project for you.'
