# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: login [OPTIONS] [SERVER]
description: Log in to a registry
group: common
flags:
    --password-stdin: Take the password from stdin
    -p, --password=: Password
    -u, --username=: Username
documentation:
    command: '[AI] `docker login` is a command used to log in to a Docker registry. It allows users to authenticate and gain access to repositories where they can pull or push Docker images. The command requires specifying the registry URL and your credentials, such as username and password or an authentication token. Once logged in, you can manage images and containers using the Docker CLI with the authenticated registry.'
    flag:
        password: |-
            [AI] The `docker login` command is used to log in to a Docker registry, such as Docker Hub. The `--password` option is for providing the password directly in the command-line interface (CLI), instead of using other methods like a `.dockercfg` file or environment variables.

            When you use `--password <your_password>`, you're entering your password as an argument to the command. This approach may not be recommended for security reasons, as your password is visible in plain text while typing and during the execution of the command.

            It's generally safer to use other methods like a `.dockercfg` file or environment variables to store your credentials securely. For example, you can create a `.dockercfg` file with your username and password:
            ```bash
            cat > ~/.dockercfg <<EOL
            username: <your_username>
            password: <your_password>
            email: <your_email>
            EOL
            ```
            Then, you can log in using the following command:

            ```bash
            docker login --config ~/.dockercfg
            ```
            This method ensures that your credentials are not visible during execution.
        password-stdin: '[AI] `docker login --password-stdin` is a command used to log in to a Docker registry with an authenticated user. The `--password-stdin` flag allows the user to provide their password as input, typically from another program or through a pipe, instead of entering it directly on the command line for security reasons. This way, the password is not visible during the login process and stays hidden from the command history.'
        username: '[AI] The `docker login` command is used to log in to a Docker Registry, which is a repository where Docker images are stored and managed. The `--username` option is used to specify the username for the account with which you want to log in. This command requires additional information such as password or two-factor authentication token, which can be provided using options like `--password`, `--password-stdin` or `--tlsverify`. Once logged in, you can pull and push Docker images between your local machine and the registry using the `docker pull` and `docker push` commands.'
