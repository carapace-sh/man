# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: gimp
description: an image manipulation and paint program
flags:
    --batch-interpreter=: The procedure to process batch commands with
    --class=: Program class as used by the window manager
    --debug-handlers: Enable non-fatal debugging signal handlers
    --display=: X display to use
    --dump-gimprc: Output a gimprc file with default settings
    --g-fatal-warnings: Make all warnings fatal
    --gegl-cache-size=: How much memory to (approximately) use for caching imagery
    --gegl-disable-opencl: Disable OpenCL
    --gegl-quality=: The quality of rendering, a value between 0.0 (fast) and 1.0 (reference)
    --gegl-swap-compression=: Compression algorithm used for data stored in the swap
    --gegl-swap=: Where GEGL stores its swap
    --gegl-threads=: The number of concurrent processing threads to use
    --gegl-tile-size=: Default size of tiles in GeglBuffers
    --gtk-g-fatal-warnings: Make all warnings fatal
    --gtk-module=: Load additional GTK+ modules
    --help-all: Show all help options
    --help-gegl: Show GEGL Options
    --help-gtk: Show GTK+ Options
    --license: Show license information and exit
    --name=: Program name as used by the window manager
    --no-cpu-accel: Do not use special CPU acceleration functions
    --no-shm: Do not use shared memory between GIMP and plug-ins
    --pdb-compat-mode=: PDB compatibility mode (off|on|warn)
    --screen=: X screen to use
    --session=: Use an alternate sessionrc file
    --show-playground: Show a preferences page with experimental features
    --stack-trace-mode=: Debug in case of a crash (never|query|always)
    --sync: Make X calls synchronous
    --system-gimprc=: Use an alternate system gimprc file
    --verbose: Be more verbose
    -a, --as-new: Open images as new
    -b, --batch=: Batch command to run (can be used multiple times)
    -c, --console-messages: Send messages to console instead of using a dialog
    -d, --no-data: Do not load brushes, gradients, patterns, ...
    -f, --no-fonts: Do not load any fonts
    -g, --gimprc=: Use an alternate user gimprc file
    -h, --help: Show help options
    -i, --no-interface: Run without a user interface
    -n, --new-instance: Start a new GIMP instance
    -s, --no-splash: Do not show a splash screen
    -v, --version: Show version information and exit
documentation:
    command: '[AI] GIMP (GNU Image Manipulation Program) is a free and open-source software for editing and retouching images. It provides tools for adjusting colors, manipulating brightness and contrast, adding text or layers, and more advanced features like creating custom brushes and plugins for image processing. Users can work on various formats of graphic files, apply filters, and perform batch processing. GIMP functions as a powerful alternative to commercial photo editing software.'
    flag:
        as-new: '[AI] The `--as-new` option in GIMP (GNU Image Manipulation Program) is used to create a new image with default settings. It does not open an existing image file but instead initializes a blank canvas with the currently set default dimensions, color mode, and channels. This command is often used when creating a new project from scratch.'
        batch: '[AI] `gimp --batch` is a command-line option for the GIMP (GNU Image Manipulation Program) image editor. It starts GIMP in batch mode, allowing users to automate image processing tasks by providing a series of image files and commands as input, which are executed sequentially without user interaction. This can be useful for large-scale image manipulation projects or creating complex image workflows.'
        batch-interpreter: '[AI] `gimp --batch-interpreter` is a command-line option for the GIMP (GNU Image Manipulation Program) image editor. It runs GIMP in non-interactive mode, allowing scripts and batch processing of images. The "--batch" flag enables this functionality, while "--interpreter" specifies that commands should be read from standard input or a file instead of using the graphical user interface. Thus, it facilitates automating tasks and applying consistent editing workflows to multiple images.'
        class: '[AI] `gimp --class` is a command-line argument used with the GIMP (GNU Image Manipulation Program) to specify a custom window title or class name for the application when it''s launched. This can be useful when running GIMP within other applications that support inter-application communication, like workspace managers or window managers with advanced features. By setting the class name, you can more easily manage and identify GIMP windows in these environments.'
        console-messages: '[AI] The `--console-messages` option in GIMP (GNU Image Manipulation Program) is used to display all messages, including debug and warning messages, in the console window instead of showing them as dialogs. This can be useful for scripting or automation tasks where it''s necessary to capture and process all messages programmatically.'
        debug-handlers: '[AI] The `--debug-handlers` option is a command-line argument for GIMP (GNU Image Manipulation Program). It is used to enable and show debug messages related to the handling of various events and signals in GIMP. These messages can provide useful information for developers during debugging and troubleshooting. When using this flag, GIMP will print additional debug information to the terminal or console, helping identify issues in its event handling and signal processing.'
        display: '[AI] The `--display` option in GIMP (GNU Image Manipulation Program) is used to specify the X Window System display where GIMP should open its graphical user interface (GUI). It takes a string argument representing the display name, typically in the format `:<screen_number>.<connection_number>`. For example, `--display=:0.0` refers to the primary screen and connection of your local machine. This option is important when running GIMP from the command line or scripting environments, as it ensures that the application opens on the desired display instead of the default one.'
        dump-gimprc: '[AI] The `gimp --dump-gimprc` command is used to dump the current GIMP (GNU Image Manipulation Program) preferences to a text file in GNU RC format. This command is typically used for backup or transfer purposes, allowing users to save their custom settings and configurations and apply them to other installations of GIMP.'
        g-fatal-warnings: '[AI] The `--g-fatal-warnings` flag in GIMP (GNU Image Manipulation Program) is used to enable strict warning mode. In this mode, GIMP treats warnings as errors and will not continue the execution if a warning occurs. This flag can be useful for developers who want to ensure that their scripts or plugins run without any non-critical issues. However, it may also cause the script or plugin to stop unexpectedly if there are harmless warnings.'
        gegl-cache-size: '[AI] The `--gegl-cache-size` flag in GIMP (GNU Image Manipulation Program) is used to set the size of the GEGL (GIMP Graphics Library) cache. This cache is used by GIMP for storing intermediate data during image processing operations. A larger cache size allows more data to be kept in memory, potentially speeding up image editing tasks that require extensive use of complex filters or effects. However, increasing the cache size also consumes more system resources and may slow down other applications if the system is low on memory. The default cache size can usually meet most user needs, but adjusting it using this flag might improve performance for specific workflows.'
        gegl-disable-opencl: '[AI] The command `gimp --gegl-disable-opencl` is used to start the GIMP image editing software with OpenCL (Open Computing Language) acceleration disabled in the GEGL (GIMP Graphics Library). OpenCL is a parallel computing platform and API, which can be used to speed up certain computational tasks within GIMP. Disabling it might be necessary for users who have compatibility issues or prefer not to use it for performance or other reasons. The flag `--gegl-disable-opencl` instructs GIMP to launch without utilizing OpenCL acceleration.'
        gegl-quality: '[AI] The `--gegl-quality` option in GIMP (GNU Image Manipulation Program) is used to set the quality level for GeGL (Gnu Engine for Graphics Library), which is the internal image processing engine of GIMP. This option accepts a value between 0 and 100, with higher values indicating better quality at the cost of increased computation time and memory usage. For example, `gimp --gegl-quality=100` would set the highest possible quality level for GeGL.'
        gegl-swap: |-
            [AI] The `gimp --гегл-swap` command is not a standard GIMP (GNU Image Manipulation Program) command. Instead, it's a custom command used for swapping channels in the GEGL (GNU Execution Graph Library), which is an advanced image manipulation library used by GIMP and other applications.

            When you use `gimp --gegl-swap <image> <channel1> <channel2>`, it loads an image into GIMP, applies the channel swap operation using GEGL, and saves the result back to the original image file. This command is useful when working with complex images or advanced image manipulations that require intricate adjustments to individual color channels.

            In simpler terms, `gimp --gegl-swap` is a command for swapping two color channels in an image using the GEGL library's capabilities.
        gegl-swap-compression: |-
            [AI] The `--gegl-swap-compression` flag in GIMP (GNU Image Manipulation Program) is an option used during image file save or export. It swaps the compression order of lossless and lossy algorithms in the Generic Graphics Format (GGF) files saved by GEGL (GIMP's advanced open-source graphics library).

            In other words, with `--gegl-swap-compression`, lossless compression is saved before lossy compression in the same GGF file. This might be useful for specific use cases or compatibility reasons when dealing with certain software applications that expect the compression order to be different from the default in GIMP.
        gegl-threads: '[AI] The `--gegl-threads` option in GIMP (GNU Image Manipulation Program) is used to configure the number of threads used by the GEGL (Graphics Executive Library, GIMP''s advanced image processing backend). This flag allows specifying how many threads should be employed during image editing operations. By increasing the number of threads, you can speed up some complex image manipulations as multiple threads can process different parts of an image simultaneously. The default value for this option is automatic, depending on the system configuration. However, setting it manually to a desired number can provide performance improvements, especially on multi-core systems.'
        gegl-tile-size: '[AI] The `--gegl-tile-size` option in GIMP (GNU Image Manipulation Program) is used to set the tile size for OpenCL and OpenGL memory optimization in the GEGL (GIMP Engine Graphics Library) during image editing. A larger tile size can improve performance on systems with large amounts of graphics memory, but may increase memory usage and require more swapping between memory and disk. The default value is typically 32x32 pixels, but users can adjust this value based on their specific hardware configuration and editing needs.'
        gimprc: '[AI] The `gimp --gimprc` command in GIMP (GNU Image Manipulation Program) is used to load or specify a custom preferences file, also known as a GIMP RC file. This flag allows users to set various customizations such as interface layout, tool options, keyboard shortcuts, and more. The specified RC file replaces the default GIMP preferences. For instance, `gimp --gimprc=/path/to/your/custom.rc` will launch GIMP with the custom preferences defined in the given file.'
        gtk-g-fatal-warnings: '[AI] The `--gtk-g-fatal-warnings` flag is a command-line argument for GIMP (GNU Image Manipulation Program). It instructs GIMP to treat GTK-Glib fatal warnings as errors and terminate the application. Fatal warnings are usually less severe than errors, but indicate that something unexpected happened during program execution. By setting this option, users can choose to receive more robust error handling in GIMP, which may help identify and address issues earlier.'
        gtk-module: '[AI] The `--gtk-module` flag is used with the GIMP (GNU Image Manipulation Program) image editor when running it from the command line. This flag instructs GIMP to load a specific GTK+ (Gnome Toolkit) module as an extension. GTK+ modules are custom extensions that provide additional functionality and interface components for GIMP. By using the `--gtk-module` flag followed by the path to the .py file of the desired GTK+ module, users can easily add new features or tools to their GIMP installation without having to install them as separate packages.'
        help: '[AI] The `--help` option when used with the GIMP (GNU Image Manipulation Program) command in the terminal or command prompt will display detailed help information about the GIMP application and its usage. It provides a list of commands and their corresponding options, as well as brief descriptions for each command. This is useful for understanding how to use GIMP effectively and efficiently.'
        help-all: '[AI] `gimp --help-all` is a command used in GIMP (GNU Image Manipulation Program) to display comprehensive help information for all installed plugins, extensions, and tools. It provides a detailed list of each item with its corresponding usage and options, which can be useful for users who want to explore the full capabilities of GIMP or need a quick reference for specific features.'
        help-gegl: '[AI] The command `gimp --help-gegl` is used in the GIMP (GNU Image Manipulation Program) software environment to display help information specifically related to the GEGL library (GIMP Execution Graph Library). GEGL is an advanced, general graphic manipulation library that provides a high-level, domain-specific language for image manipulation tasks. The help output will provide details on how to use this library within GIMP for advanced image processing and manipulation.'
        help-gtk: '[AI] The command `gimp --help-gtk` is used in the GIMP (GNU Image Manipulation Program) image editor to display help information specifically related to GTK+ (GIMP Toolkit), which is the graphical user interface library that GIMP uses. This command launches the GIMP application with the argument `--help-gtk`, instructing it to output detailed documentation about how to use and interact with GTK+ within the context of GIMP. It provides information on various aspects such as UI elements, functions, and programming interfaces for developers seeking to customize or extend GIMP''s functionality using GTK+.'
        license: '[AI] The `gimp --license` command is used to display the license agreement of the GIMP (GNU Image Manipulation Program) software. It does not have any arguments or options, and its sole purpose is to output the text of the license, which is the GNU General Public License version 2 or later. This command is typically used in a terminal or command prompt to allow users to review the license terms before installing or using GIMP.'
        name: '[AI] The command `gimp --name` is used in the GIMP (GNU Image Manipulation Program) software to specify a custom window name when opening a new image editing instance. By appending `--name="DesiredWindowTitle"` to the command, you can set the title of the GIMP main window. For example: `gimp --name="My Custom Window Title" %f` will open GIMP with a specified window title based on the provided string. This is useful for managing multiple instances or creating automated workflows.'
        new-instance: '[AI] `gimp --new-instance` is a command used in Unix-based systems to launch a new instance of the GIMP (GNU Image Manipulation Program) graphical user interface in a separate window. The `--new-instance` flag ensures that a new instance is started from an empty state, without opening any previously opened files or restoring any saved sessions. This can be useful when you want to start GIMP with a blank slate for each usage.'
        no-cpu-accel: '[AI] The `--no-cpu-accel` flag is a command-line option for the GIMP (GNU Image Manipulation Program) image editor. This option disables the use of OpenCL and CUDA GPU acceleration, which are features that allow GIMP to offload some of its computations to the graphics processing unit instead of relying solely on the CPU. By passing `--no-cpu-accel` when launching GIMP, users ensure that all image manipulation tasks will be executed strictly on the CPU. This might result in slower processing times for resource-intensive tasks but can provide a more consistent experience across different hardware configurations or make GIMP usable on systems with no or limited GPU support.'
        no-data: '[AI] The command `gimp --no-data` is used to start the GIMP image editor without opening any specific image file. The `--no-data` option ensures that no image data is loaded when GIMP is launched. This can be useful for starting GIMP in headless mode or for running scripts or other command-line tasks without the need for an image file.'
        no-fonts: '[AI] The command `gimp --no-fonts` is used to launch the GIMP (GNU Image Manipulation Program) without loading any fonts. This can be useful when running GIMP in a headless or automated environment where you don''t need to display text, as loading fonts can increase startup time and memory usage. The `--no-fonts` flag tells GIMP not to load any fonts during initialization.'
        no-interface: '[AI] The `--no-interface` flag in GIMP (GNU Image Manipulation Program) is used to run the application without opening the graphical user interface (GUI). This means that GIMP will only process image manipulation tasks from the command line, making it suitable for automating repetitive tasks or integrating with other applications through scripts. However, you won''t be able to interactively modify images using the GUI tools while this flag is enabled.'
        no-shm: '[AI] The `--no-shm` flag is an option used in the GIMP (GNU Image Manipulation Program) command line to disable the use of shared memory (shm). Shared memory is a method for inter-process communication where data is stored in a shared region of memory that can be accessed by multiple processes. Disabling this feature can be useful in certain environments, such as when running GIMP in a containerized or virtualized environment, to prevent potential security risks and resource conflicts.'
        no-splash: '[AI] The command `gimp --no-splash` is used to open the GIMP image editing software without displaying the start-up animation or progress bar, also known as the splash screen. This can be helpful for users who prefer a faster start-up time and don''t need the visual feedback of the splash screen. The `--no-splash` option is passed to GIMP when starting it from the command line.'
        pdb-compat-mode: |-
            [AI] The `--pdb-compat-mode` flag in GIMP (GNU Image Manipulation Program) is used to enable compatibility with older Persistent Data Base (PDB) files. PDB is a format used by GIMP for storing session data, including open files, brushes, and other customizations.

            When this flag is set, GIMP will read and write PDB files using the old format, which may be necessary when working with older versions of the software or when sharing files between different GIMP installations that have incompatible PDB formats.

            Using `--pdb-compat-mode` can help ensure compatibility and prevent issues related to incompatible PDB files. However, it's important to note that using this flag may also limit some new features or customizations introduced in newer versions of GIMP.
        screen: '[AI] The `--screen` option in GIMP (GNU Image Manipulation Program) is used to specify the display mode and size for the graphical user interface when launching the application. It can take values like "hsv" for HSV color model, "rgb" for RGB, or "gray" for grayscale. Additionally, it can include width and height pixels to set a custom window size, such as "--screen=1280x720". This option allows users to tailor the GIMP interface to their needs, particularly useful for high-resolution displays or specialized workflows.'
        session: |-
            [AI] The `--session` option in GIMP (GNU Image Manipulation Program) is used to load or save a GIMP session. A session represents the state of the application at a particular point in time, including open files, tool configurations, and window layout.

            When you start GIMP with the `--session` option followed by the name or path of an existing session file, GIMP will load that session and restore all saved information. This can be useful for quickly opening a specific set of images with their previous edits and settings intact.

            Similarly, when saving a session, you can use the `--save-session` option along with the name or path where you want to save the session file. This creates a new file (or overwrites an existing one) that contains the current GIMP state, including open files, tool configurations, and window layout.
        show-playground: '[AI] The `gimp --show-playground` command is used to open the GIMP (GNU Image Manipulation Program) Interactive Python (GIP) Playground in a new window. This playground is an interactive environment for testing and experimenting with Python scripts within GIMP, without having to write or run full scripts. It provides access to various image manipulation functions, making it a useful tool for learning and prototyping new ideas.'
        stack-trace-mode: '[AI] The `--stack-trace-mode` flag in GIMP (GNU Image Manipulation Program) is used to enable or disable the stack trace feature for error reporting. A stack trace is a report of the active function calls at a certain point during the execution of a program, providing crucial information when debugging errors. By using this flag, GIMP can generate more detailed and informative error messages with the full backtrace when an error occurs.'
        sync: '[AI] The `--sync` flag in GIMP (GNU Image Manipulation Program) is used to ensure that all operations are executed synchronously and in a blocking manner. This means that each task or plugin will wait for the completion of the previous one before starting. In other words, it prevents the script from running concurrently, which can be useful when dealing with complex image manipulations where the order of tasks is important. By default, GIMP runs tasks asynchronously, allowing multiple tasks to run at the same time. Using `--sync` flag forces each task to complete before moving on to the next one.'
        system-gimprc: '[AI] The `gimp --system-gimprc` command is used in the GIMP image editing software to open or load the system-wide GIMP Preferences file, located at `~/.config/GIMP/2.0/gimpsettings.ini` by default on Linux systems. The `--system-gimprc` option tells GIMP to look for the preferences file in the system directory instead of the user-specific one. This can be useful when configuring settings that should apply to all users on a machine.'
        verbose: '[AI] The `--verbose` option when used with the GIMP (GNU Image Manipulation Program) command-line interface enables detailed output of information during the execution of GIMP commands or scripts. This option increases the amount and level of detail in the messages that are displayed, allowing users to have a better understanding of what is happening during the image manipulation process. It can be useful for troubleshooting, debugging scripts, and gaining insights into the inner workings of GIMP.'
        version: '[AI] `gimp --version` is a command used in the terminal or command prompt to check the current version of the Graphics Magick Imagemap Program (GIMP), a popular open-source image editor. When executed, it returns output displaying the major and minor version numbers along with any additional build information. For example, "GIMP 2.10.16" indicates version 2.10 with update number 16. This command helps users ensure they have the latest or desired version of GIMP installed on their system.'
