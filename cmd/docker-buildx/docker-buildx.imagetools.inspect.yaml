# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: inspect [OPTIONS] NAME
description: Show details of an image in the registry
flags:
    --format=: Format the output using the given Go template
    --raw: Show original, unformatted JSON manifest
documentation:
    command: '[AI] `docker buildx imagetools inspect` is a command used with Docker Buildx, an extension of Docker Engine for building multi-stage images and managing builds with multiple contexts. This command is used to retrieve detailed information about the specified image or manifest built with Docker Buildx. The output includes details such as build history, context used, Dockerfile sources, and other relevant metadata.'
    flag:
        format: '[AI] `docker buildx` is a Docker extension that enables building Docker images using multiple buildx contexts and builds distributed among multiple nodes. The command `docker-buildx imagetools inspect --format` is used to get detailed information about a specific image built with `docker buildx`. The `--format` flag specifies the output format of the inspection results, which can be customized to extract specific data from the image manifest. The output will include details such as the image''s architectures, build history, and any associated labels or annotations.'
        raw: |-
            [AI] `docker buildx inspect --raw` is a command used with Docker Buildx, an extension of Docker Engine that enables building containers from multiple contexts (repositories) in parallel and managing multiple builds.

            The `inspect` subcommand is used to retrieve low-level information about a Buildx context or build. The `--raw` flag tells Docker to return the inspection result as plain JSON data, which can be further processed by scripts or tools for detailed analysis of Buildx configurations and builds.
