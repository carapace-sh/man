# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: view <id>
aliases:
    - show
description: Display the title, body, and other information about an incident.
flags:
    -P, --per-page=: Number of items to list per page
    -c, --comments: Show incident comments and activities
    -p, --page=: Page number
    -s, --system-logs: Show system activities / logs
    -w, --web: Open incident in a browser. Uses default browser or browser specified in BROWSER variable
documentation:
    command: |-
        [AI] `glab` is a GitLab CLI (Command Line Interface) tool that allows users to interact with GitLab repositories and projects from the terminal. The `incident view` command is used to open an existing Incident in GitLab's Issue Tracking system or in the GitLab UI, directly from the terminal.

        To use this command, you first need to have GitLab CLI installed and authenticated with a valid GitLab personal access token. Once that is set up, run the following command:

        ```bash
        glab incident view <INCIDENT_ID>
        ```

        Replace `<INCIDENT_ID>` with the actual ID of the incident you want to open in your default web browser or GitLab terminal interface. This command will take you to the corresponding incident page where you can review and manage it further.
    flag:
        comments: '[AI] `glab incident view --comments` is a command used in GitLab''s CLI (Command Line Interface) tool, `glab`. This specific command is designed to view comments associated with an Incident in GitLab. An Incident represents an occurrence of an issue or an event that requires further investigation and resolution. By using this command, users can access and read the comments related to the selected incident without having to navigate through the web interface.'
        page: '[AI] The `glab incident view --page` command is a GitLab CLI (Command Line Interface) command used to view the details of an Incident in GitLab''s Incident Management system. The `--page` option specifies which page of results to display if there are multiple pages, such as when viewing incidents with a large number of associated issues or events. This command requires authentication and access to the specific project''s Incident Management feature.'
        per-page: '[AI] `glab` is a GitLab CLI (Command Line Interface) tool for interacting with GitLab repositories and projects. The command `glab incident view --per-page N`, where `N` is an integer, displays the details of an incident (also known as an issue or a problem ticket) in GitLab with the specified number of items per page. By default, GitLab displays 30 items per page, but you can change this to any positive integer value using this command. This helps users to navigate through large numbers of incidents more efficiently.'
        system-logs: '[AI] The `glab` command with the argument `incident view --system-logs` is a GitLab CI/CD tool used to interact with GitLab incidents. This specific command displays the system logs related to an incident, providing detailed information about the events that occurred during its lifecycle. System logs include data from various sources such as GitLab Runner, GitLab Rails logs, and Docker container logs, helping in investigating and resolving issues more effectively.'
        web: |-
            [AI] The `glab` command with the option `--incident view --web` is a GitLab CI/CD tool used to access and inspect incident details in a web interface. Here's what each part does:

            - `glab`: This is the name of the command-line tool provided by GitLab for interacting with GitLab API features.
            - `--incident`: This option tells `glab` to work specifically with GitLab incidents. Incidents are events that require special attention, such as a failed pipeline or an error in your code.
            - `view`: This verb instructs `glab` to display the details of the selected incident.
            - `--web`: This option opens the incident view in your default web browser instead of the terminal. This provides a more user-friendly and feature-rich experience, allowing you to interact with the incident data through an easy-to-use web interface.
