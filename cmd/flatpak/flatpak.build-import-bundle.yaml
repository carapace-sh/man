# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: build-import-bundle [OPTIONâ€¦] LOCATION FILENAME
description: Import a file bundle into a local repository
group: build
flags:
    --gpg-homedir=: GPG Homedir to use when looking for keyrings
    --gpg-sign=: GPG Key ID to sign the commit with
    --no-summary-index: Don't generate a summary index
    --no-update-summary: Don't update the summary
    --oci: Import oci image instead of flatpak bundle
    --ostree-verbose: Show OSTree debug information
    --ref=: Override the ref used for the imported bundle
    --update-appstream: Update the appstream branch
    -h, --help: Show help options
    -v, --verbose: Show debug information, -vv for more detail
documentation:
    command: '[AI] `flatpak build-import-bundle` is a command used in Flatpak, a software deployment and application packaging system. It imports an existing application bundle into the Flatpak building process, allowing you to create a new Flatpak distribution from it. The command takes the path to the source bundle as its argument, extracts its contents, and prepares them for further build steps in the Flatpak environment.'
    flag:
        gpg-homedir: '[AI] `flatpak build-import-bundle` is a command used in Flatpak, a software deployment platform, to import an existing directory as a new Flatpak bundle. The `--gpg-homedir` option specifies the directory containing the OpenPGP keyring files for signing the bundle. This command imports the sources, builds the bundle locally, and exports it to be installed or distributed via Flatpak.'
        gpg-sign: |-
            [AI] `flatpak build-import-bundle` is a command-line utility in Flatpak, a software deployment and packaging system. This command imports an existing bundle (a collection of files packaged for distribution) into the Flatpak building process.

            The `--gpg-sign` option enables GPG signature verification during the import process. In other words, it ensures that the imported bundle has been signed with a trusted key before proceeding with the build. This helps maintain security and integrity of the software being distributed through Flatpak.
        help: |-
            [AI] `flatpak build-import-bundle` is a command-line tool in Flatpak, a software deployment and packaging system for Linux desktops. It's used to import an existing directory into the Flatpak buildsystem, creating a new bundle for building and distributing applications. The `--help` option displays detailed information about how to use this command, including available arguments and their meanings:

            * `--branch=BRANCH`: Import the given Git branch or commit instead of checking out a new working directory.
            * `--bundle BUNDLE-ID`: Set the bundle ID for the imported bundle (required).
            * `--build-system BUILDSYS`: Specify the build system to use (optional, default is 'meson' or 'autotools', depending on the presence of a Meson build file).
            * `--dir DIR`: Set the directory to be imported as the source tree (required).
            * `--force`: Overwrite existing files if they already exist in the bundle.
            * `--no-clean`: Don't clean the source tree before building (optional, default is to clean).
            * `--repo REPO`: Set the remote repository URL for publishing the built bundle (optional).

            Using `flatpak build-import-bundle --help` provides more detailed instructions on how to use this command with these arguments.
        no-summary-index: |-
            [AI] The `flatpak build-import-bundle` command is a utility in Flatpak, a software deployment and packaging system. This specific command imports an existing directory into the Flatpak bundle format for building and distributing applications.

            The `--no-summary-index` flag disables the creation of a summary index file during the import process. A summary index is a metadata file that describes the contents of the imported bundle, such as its dependencies, runtimes, and other information. By disabling it with this flag, you can skip the step of generating this file, which may be useful if you prefer to manage the bundle's metadata yourself or if you encounter issues during summary index creation.
        no-update-summary: '[AI] The `flatpak build-import-bundle` command is a Flatpak utility used to import a bundle into the Flatpak repository for building and distribution. The `--no-update-summary` flag is an option that prevents the generation of an update summary during the import process. An update summary is a human-readable description of changes made in a new bundle version compared to the previous one, which can be useful for understanding what has been updated in a package. However, if you don''t want to generate this summary, using the `--no-update-summary` option will skip it during the import process.'
        oci: '[AI] `flatpak build-import-bundle` is a command-line tool provided by Flatpak, a software deployment platform. The specific usage you mentioned, `--oci`, stands for Open Container Image format. This flag instructs the tool to import a bundle from an OCI registry using its URL. Essentially, it pulls the content of the container image and packages it into a Flatpak format, ready to be installed with Flatpak on supported platforms.'
        ostree-verbose: |-
            [AI] `flatpak build-import-bundle` is a command-line utility provided by Flatpak, a software deployment and application packaging system. This specific command imports an existing directory as a new Flatpak bundle with OSTree as the backend for version control.

            The `--ostree-verbose` option increases the level of output when using OSTree as the backend. It provides detailed information about each step during the import process, such as committing files, creating annexes, and calculating hashes. This can be useful for debugging and understanding the underlying mechanisms of how Flatpak uses OSTree to manage application versions.
        ref: '[AI] The `flatpak build-import-bundle --ref` command is used to import a directory containing an application''s source code into the Flatpak builder system as a new bundle ref (short for reference). It creates a new, unique bundle identifier and begins building the software from the imported source code. When invoked with `--ref`, it also sets the given reference name as the label for this new bundle. Once built, the Flatpak bundle can be installed and run on various platforms supporting the Flatpak application package format.'
        update-appstream: '[AI] `flatpak build-import-bundle` is a command-line utility used in the Flatpak application packaging system to import an existing directory of files into a new Flatpak bundle. The `--update-appstream` option updates the AppStream metadata, which provides application description information, within the current or specified bundle. When this command is executed with a valid bundle path, it imports the contained application and updates its AppStream data to reflect any changes made to the metadata files, ensuring consistency between the application code and its description in the software center and other discovery tools.'
        verbose: '[AI] `flatpak build-import-bundle` is a command-line tool in the Flatpak software development platform used to create and manage bundles, which are self-contained applications or libraries. The `--verbose` option increases the output of this command to include detailed information about each step taken during the import process. Specifically, it shows progress messages for each stage such as resolving dependencies, building, and installing runtimes. This can be helpful for debugging issues or understanding the underlying build processes.'
