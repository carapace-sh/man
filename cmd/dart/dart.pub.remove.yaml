# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: remove
description: Removes a dependency from the current package
flags:
    --no-offline: Do not use cached packages instead of accessing the network.
    --no-precompile: Do not precompile executables in immediate dependencies.
    --offline: Use cached packages instead of accessing the network.
    --precompile: Precompile executables in immediate dependencies.
    -h, --help: Print this usage information.
    -n, --dry-run: Report what dependencies would change but don't change
documentation:
    command: |-
        [AI] The `dart pub remove` command is used in Dart programming language for managing dependencies with `pubspec.yaml` files. This command removes a specified package dependency from the project's `pubspec.yaml` file and the local cache, allowing you to manage your project's dependencies independently. To use it, simply run the command followed by the name of the package you want to remove:

        ```sh
        dart pub remove <package_name>
        ```
    flag:
        dry-run: '[AI] The `dart pub remove --dry-run` command is a Dart script used to simulate the removal of packages specified in the `pubspec.yaml` file without actually modifying the dependencies list. This helps users to preview the impact of the removal before executing the actual operation, ensuring that they do not accidentally remove required packages unintentionally.'
        help: |-
            [AI] The `dart pub remove --help` command is used in Dart programming language's Pub package manager to remove dependencies from the `pubspec.yaml` file and the local package cache. When executed with the `--help` flag, it displays detailed usage information about this specific Pub sub-command, including examples for its correct usage. For instance:

            ```bash
            dart pub remove --help

            Removes a dependency from the current project's pubspec.yaml file and the local package cache.

            Usage: dart pub remove [<package>...]

            Arguments:
              <package>: The name of the dependency to remove. You can also use an absolute or relative path to a package directory, or use '.' for the current project's root package.
            ```
        no-offline: '[AI] The `dart pub remove` command is a utility provided by the Dart package manager (`pub`) for removing packages from the local `pubspec.yaml` file and the corresponding directories in the `package_cache` folder. The `--no-offline` option disables offline mode, which means that the package manager will attempt to contact the remote repositories to check for updates or dependencies before performing the removal operation. In other words, it ensures that the local cache is up-to-date before executing the command and removes the specified packages only from the `pubspec.yaml` file and the cache without any residual files in the project directory.'
        no-precompile: '[AI] `dart pub remove --no-precompile` is a command used in Dart programming language for managing dependencies. It removes specified packages from the `pubspec.yaml` file without recompiling or bundling the code. This can be useful when you want to remove an unwanted package temporarily, or before publishing your code with fewer dependencies. The `--no-precompile` flag disables precompilation of Dart2JS or other frontend tools during removal to save time and resources.'
        offline: '[AI] `dart pub remove --offline` is a command used in Dart programming language''s package management system, called `pub`. This command removes specified packages from the local cache without connecting to the network, making it useful when working offline or having connectivity issues. The package names are provided as arguments. For example: `dart pub remove --offline package_name`.'
        precompile: '[AI] The `dart pub remove --precompile` command is used in Dart programming to uninstall a precompiled package and its dependencies from the local Dart project''s cache. Precompiling packages converts Dart code into machine code for faster execution. When you want to remove such packages, this command can be used to ensure that not only the specified package but also all its precompiled dependencies are removed from the `pubcache` directory under the `.dart_tool` folder.'
