# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: python
description: an interpreted, interactive, object-oriented programming language
flags:
    --check-hash-based-pycs=: control how Python invalidates hash-based .pyc files
    -B: don't write .pyc files on import
    -E: ignore PYTHON* environment variables
    -I: isolate Python from the user's environment
    -O*: remove assert and __debug__-dependent statements
    -S: don't imply 'import site' on initialization
    -V*: print the Python version number and exit
    -W*=: warning control
    -X*=: set implementation-specific option
    -b: issue warnings about str(bytes_instance), str(bytearray_instance) and comparing bytes/bytearray with str
    -c=: program passed in as string
    -d: turn on parser debugging output
    -h: print this help message and exit
    -i: inspect interactively after running script
    -m=: run library module as a script
    -q: don't print version and copyright messages on interactive startup
    -s: don't add user site directory to sys.path
    -u: force the stdout and stderr streams to be unbuffered
    -v*: verbose (trace import statements)
    -x: skip first line of source
documentation:
    command: '[AI] `python` is a popular high-level, interpreted programming language. The `python` command is used to invoke the Python interpreter in your operating system, allowing you to run Python scripts or interactively write and execute Python code through the console.'
    flag:
        B: '[AI] The `-B` option in Python is used to display only the banner of the Python interpreter and exit. It does not enter interactive mode or run any scripts or statements. When executed, it prints out the version, copyright information, and other relevant details about the Python installation before exiting with a zero exit status.'
        E: '[AI] The `-E` flag in Python is used to enable unlimited recursion depth for interpreter scripts or scripts that import the `re` module with a recursive regular expression. By default, Python has a limit on the maximum recursion depth to prevent infinite loops. Enabling this flag removes that limitation. However, be aware that using it can lead to potential stack overflow errors if not used carefully.'
        I: '[AI] The `-I` option in Python is used to specify a file to be included as if it were a part of the source file being run. Instead of being executed separately, the contents of the specified file are inserted at the given location in the main script before it is executed. This is also known as "implicitly imported" or "in-place import". For example, `python -I myfile script.py` would run `script.py` with the contents of `myfile` being included at the beginning.'
        O: '[AI] The `-O` flag in Python is used to enable optimized bytecode compilation during execution. It tells the Python interpreter to compile and execute the source code with optimization flags turned on, which can lead to faster execution of the script. However, it''s important to note that using this option may cause some compatibility issues or unexpected behaviors if the optimizations conflict with specific features in the code. So use it with caution and only when necessary for performance improvements.'
        S: '[AI] The `-S` option in Python is used to run a script in interactive mode but without opening a new Python interpreter process. Instead, it runs the script in the same interpreter where the command was executed. This can be useful for running tests or performing quick tasks, as it avoids the overhead of starting a new process. The script''s output will be displayed in the console.'
        V: '[AI] The command `python -V` is used to display the version information of the installed Python interpreter in your system. When you run this command in your terminal or command prompt, it will print out the Python version number, including the major and minor release, as well as any relevant build information. This can be helpful for checking which version of Python is currently active in your environment and for troubleshooting compatibility issues with different Python libraries or applications.'
        W: '[AI] The `-W` option in Python is used to enable warnings when running the interpreter. By default, Python does not display warnings and only writes them to the standard error stream. With `-W`, warnings are printed to the standard output along with error messages and other output. This can be helpful for detecting potential issues during script development or execution.'
        X: |-
            [AI] The `-X` option is not a valid flag for Python. It seems to be a typo or misunderstanding of other flags that exist in Python's command line interface. Some commonly used flags include:

            - `-m` to specify a module to run as a script.
            - `-c` to execute code directly from the command line.
            - `-h` to display help information about Python and its usage.

            If you meant one of these or another valid flag, please let me know!
        b: '[AI] The `-b` flag is an option used with the Python interpreter to run a script in bare mode. In this mode, Python does not write any output to its standard output stream (stdout), which can be useful for background tasks or when working with other applications that handle output themselves. Instead of printing messages to stdout, errors and exceptions will still be displayed on stderr.'
        c: |-
            [AI] `python -c` is a command-line option for the Python interpreter that allows executing a single line or a small piece of Python code directly from the terminal, without creating a separate .py file. The `-c` flag followed by the code to be executed forms a single argument for the Python command. For example:

            ```bash
            python -c "print('Hello World')"
            ```

            This command will output:

            ```
            Hello World
            ```
        check-hash-based-pycs: '[AI] The `python --check-hash-bytecode` or alternatively `--check-hash-based-pycs` option is a command-line tool in Python that allows checking the integrity of precompiled Python bytecode files (with .pyc extension) or Python modules packed into .pyz archives. It verifies the stored hash values against the expected ones, which are computed during the build process and stored within the metadata embedded in these file formats. If the hashes match, it confirms that the files have not been tampered with and can be safely executed.'
        d: '[AI] The `-d` flag in Python is used for debugging. It enables the interactive interpreter with the ability to step through code line by line, inspect variables at each step, and set breakpoints. When you run Python with this option, it starts the interpreter in debug mode instead of executing a script. This can be helpful when trying to identify issues in complex code or understanding the flow of execution.'
        h: '[AI] The `-h` flag when used with Python is part of its command-line interface for displaying help information. When you run `python -h`, it prints out a brief usage message that describes how to use the Python interpreter, including valid arguments and options. This is useful for quickly remembering or learning about the various ways you can invoke Python from the command line.'
        i: '[AI] The `-i` flag in Python is used with the command-line interpreter (often called the REPL, or "Read-Eval-Print Loop"). When you run a script with this flag, such as `python -i myscript.py`, it opens an interactive interpreter session after running your script, allowing you to modify and experiment with the code in the same environment. This is useful for iterative development, debugging, or quick tests without having to write and save a new file each time.'
        m: '[AI] The `-m` option in a Python command line invocation is used to specify the name of a built-in module or a script located in a package, which should be imported and executed as the main program. For instance, running `python -m http.server` starts the simple HTTP server that comes with Python, and `python -m spacy init myproject` initializes a new Spacy project called "myproject".'
        q: '[AI] The `-q` option in Python is used to suppress the standard output of the `print()` statements that may be present in a script during its execution, making the command line interface quieter. This flag is often used when running automated tests or scripts where you don''t need to see the output produced by `print()` statements for better focus on error messages or test results.'
        s: |-
            [AI] The `-s` option in the `python` command is used to specify a string as the program to be executed. Instead of providing a file, this option allows you to pass a Python expression or statement directly on the command line, which will be executed when the interpreter is launched. For example:

            ```bash
            python -s "print('Hello, World!')"
            ```

            This command will execute the given Python print statement and output 'Hello, World!' to the standard output.
        u: '[AI] The `-u` flag in Python is used to change the behavior of the `import` statement when running a script. Specifically, it tells Python not to wait for user input before executing an interactive script that prompts for input. This can be useful when writing scripts that need to read input from files or other sources and should not be interrupted by interactive prompts.'
        v: '[AI] The `-v` flag when used with Python is part of the `verbosity` option. It increases the amount and detail of output that is displayed during the execution of a Python script or command. This can be useful for debugging purposes as it provides more information about the progress of the interpreter, including messages about importing modules, compiling extensions, and other events in the runtime environment.'
        x: '[AI] The `-x` option in Python is used to disable all warnings when running a script. It does this by setting the sys.warnoptions variable to an empty list, effectively turning off all warning messages that would normally be displayed during the execution of the script.'
