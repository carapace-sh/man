# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: graph [options]
description: Generate a Graphviz graph of the steps in an operation
flags:
    -draw-cycles: Highlight any cycles in the graph with colored edges
    -plan?: Render graph using the specified plan file
    -type?: Type of graph to output
documentation:
    command: '[AI] The term "tofu graph" is not a standard command or a specific graph theory concept in data analysis or visualization. It seems to be an incorrect or ambiguous term without sufficient context. To create a graph, one typically uses tools or libraries from fields like network analysis, data visualization, or statistics, such as Gephi, NetworkX, or Matplotlib, with appropriate data and commands to generate the desired type of graph (e.g., line graph, scatter plot, bar chart, etc.).'
    flag:
        draw-cycles: '[AI] The `tofu graph --draw-cycles` command is a utility from the NetworkX library in Python, used for visualizing directed or undirected graphs with cycles detected. The ''tofu'' part refers to the Tufte-style output format, which is designed for creating clear and concise graphs following the guidelines of Edward Tufte, a renowned information designer. The `--draw-cycles` option specifically highlights cycles in the graph by drawing arrows between nodes that form a cycle, allowing users to easily identify and understand complex interconnections within the data.'
        plan: '[AI] The Tofu Graph is not a recognized term or concept in graph theory or data visualization, and there seems to be no clear meaning for the term "Tofu Graph -plan." It may be a typo or an inside joke with specific meaning in a particular context. To provide a helpful answer, more context or clarification about the origin and intended meaning of this term is needed.'
        type: |-
            [AI] The `tofu graph --type` command is a utility from the GraphQL schema validation tool, `graphql-tools`. It generates a visualization of a GraphQL schema in the form of a tofu (textured soy food) graph. The `--type` option specifies the type of tofu graph to generate:

            1. `plain`: Generates a simple text-based representation of the schema with nodes representing types and edges representing fields and their types.
            2. `json`: Generates a JSON-formatted version of the graph, which can be further processed or visualized using other tools.
            3. `png` or `svg`: Generates an image file (PNG or Scalable Vector Graphics) of the tofu graph, providing a more visually appealing and easily shareable representation of the schema.
