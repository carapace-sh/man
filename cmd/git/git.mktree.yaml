# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: mktree
description: Build a tree-object from ls-tree formatted text
group: low-level manipulator
flags:
    --batch: allow creation of more than one tree
    --missing: allow missing objects
    -z: input is NUL terminated
documentation:
    command: '[AI] `git mktree` is a Git command used to create a tree object representing a file or directory structure in Git, based on its files and subdirectories. It takes one or more paths as arguments and writes the resulting tree object to standard output. This command can be useful when creating new Git objects from existing files outside of a working directory, such as during a scripted build process.'
    flag:
        batch: '[AI] `git mktree --batch` is a Git command that generates packable tree objects for multiple trees in batches. It takes a list of trees as input, either via standard input or from files, and outputs the resulting tree objects to standard output in the format suitable for Git pack files. This command can be used to efficiently create tree objects for large projects or scripts that generate many trees.'
        missing: '[AI] `git mktree --missing` is a Git command that generates a tree object for all missing (i.e., not tracked by Git) files in the current directory and writes it to a file. The output is a tree object description, which can be used as an argument for other Git commands like `git commit`. This command is useful when committing new files that Git doesn''t yet recognize, allowing you to create a new commit with those files included.'
        z: '[AI] `git mktree --zero` is a Git command that generates a tree object from a set of files or blobs, and writes it to the standard output with each node represented as a zero-length data followed by its type and mode, parent hashes, and names or ids of children. This format is useful for creating packfiles with minimal metadata, which can lead to smaller file sizes in Git repositories.'
