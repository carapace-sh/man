# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: useradd
description: create a new user or update default new user information
flags:
    --badnames: do not check for bad names
    --btrfs-subvolume-home: use BTRFS subvolume for home directory
    -D, --defaults: print or change default useradd configuration
    -G, --groups=: list of supplementary groups of the new
    -K, --key=: override /etc/login.defs defaults
    -M, --no-create-home: do not create the user's home directory
    -N, --no-user-group: do not create a group with the same name as
    -P, --prefix=: prefix directory where are located the /etc/* files
    -R, --root=: directory to chroot into
    -U, --user-group: create a group with the same name as the user
    -b, --base-dir=: base directory for the home directory of the
    -c, --comment=: GECOS field of the new account
    -d, --home-dir=: home directory of the new account
    -e, --expiredate=: expiration date of the new account
    -f, --inactive=: password inactivity period of the new account
    -g, --gid=: name or ID of the primary group of the new
    -h, --help: display this help message and exit
    -k, --skel=: use this alternative skeleton directory
    -l, --no-log-init: do not add the user to the lastlog and
    -m, --create-home: create the user's home directory
    -o, --non-unique: allow to create users with duplicate
    -p, --password=: encrypted password of the new account
    -r, --system: create a system account
    -s, --shell=: login shell of the new account
    -u, --uid=: user ID of the new account
documentation:
    command: '[AI] `useradd` is a Linux utility command used to create new user accounts with their associated home directories and entry records in various system files. It sets the user''s password, UID (unique identifier), GID (group identifier), and other attributes such as shell, home directory, etc. The basic syntax of the command is `useradd [options] <username>`. Optional features include setting a password with the `-p` or `--password` option, specifying a user ID or group ID with the `-u` or `-g` options, and adding the new user to specific groups with the `-a` or `--append` option.'
    flag:
        badnames: '[AI] The `useradd` command is a utility in Unix-like operating systems used to create new user accounts. The option `--badnames` is used to prevent creating a user account with a username that is considered invalid or exists in the system''s list of reserved names. When using this option, the `useradd` command checks if the specified username already exists or matches any reserved names and refuses to create the account if it does. This helps maintain a consistent and secure naming scheme for user accounts on the system.'
        base-dir: '[AI] The `useradd` command with the option `--base-dir` is used to specify a custom base directory for the new user''s home directory instead of the default location (usually `/home`) during user account creation. This can be helpful in certain system administration scenarios where multiple users might have their home directories stored in different locations. By using `--base-dir`, the system administrator has more control over where user data is physically stored, allowing for better organization and management of user accounts.'
        btrfs-subvolume-home: '[AI] `useradd` is a command in Linux used to create new user accounts. The option `--btrfs-subvolume-home` creates a home directory for the new user as a subvolume within a Btrfs file system. This allows for more efficient and flexible management of the user''s data, as Btrfs supports snapshots and copy-on-write properties.'
        comment: '[AI] The `useradd` command with the `--comment` option is used to set or change the comment field of a Linux user account. The comment field is usually a brief description or explanation of the account''s purpose, which can be helpful for system administrators in managing user accounts. The syntax is `useradd [options] <username> --comment="<comment>"` where `<username>` is the name of the new user account and `<comment>` is the text to set as the comment. For example, `useradd -m john --comment="Account for John Doe"` creates a new user account named "john" with a home directory and sets its comment to "Account for John Doe".'
        create-home: '[AI] The `useradd` command with the `--create-home` option is used to create a new user account in Linux and automatically generates a home directory for that user. The home directory is created under the `/home` directory with the username as its subdirectory name. This saves the effort of manually creating the home directory during user creation.'
        defaults: '[AI] The command `useradd --defaults` is used to create a new user with system default settings. The `--defaults` option tells the `useradd` utility to use the values defined in the system''s `/etc/default/useradd` file for various user-related options such as home directory, shell, group membership, and other attributes. This results in creating a new user with minimal configuration, which can be useful when creating multiple users with similar settings.'
        expiredate: '[AI] The `useradd` command with the `--expiredate` option is used to create a new user account with a specified expiration date for that account. This date is typically represented in the format of `YYYY-MM-DD`. Once the expiration date is reached, the account will be disabled by default, meaning users won''t be able to log into it unless manually modified. The command does not disable or delete the account upon reaching the expiration date; it just sets the account to a disabled state.'
        gid: '[AI] The `useradd` command with the option `--gid` is used to create a new user in Linux and set the primary group ID (GID) for that user. The `--gid` option takes an argument which specifies the GID value for the newly created user. This can be useful when creating multiple users who belong to the same group, as setting the same GID ensures they share common permissions on files and directories.'
        groups: '[AI] The `useradd` command with the `--groups` option is used to add one or more groups to a new user account being created. This option ensures that the newly created user is added as a member of the specified groups at the time of account creation, allowing for easier management of group memberships and permissions. The basic syntax is: `sudo useradd [username] --groups [group1, group2, ...]`'
        help: '[AI] `useradd --help` is a command used in Unix-based systems to add new users with various optional settings. The `--help` option displays detailed information about the usage of the `useradd` command, including a list of available options and their descriptions. Some common options include `--create-home`, which automatically creates a home directory for the new user, or `--shell`, which sets the default shell for the user. The output of `useradd --help` is designed to help users understand how to effectively use this command to manage system users.'
        home-dir: '[AI] `useradd` is a command in Linux and Unix systems used to create new user accounts. The option `--home-dir` specifies the directory where the home folder for the new user will be created. If not provided, a default location based on the user''s username would be used. In summary, `useradd --home-dir /path/to/new/home` creates a new user account with the specified path as its home directory.'
        inactive: '[AI] The `useradd` command with the `--inactive` option is used to set or check the account expiration date of an existing Linux user account. When creating a new user, this option sets the account to be inactive by default and sets a specified inactivity date after which the account will be automatically disabled. Once an account becomes inactive, users will not be able to log into that account until it is re-enabled manually or the expiration date is set to a future date.'
        key: '[AI] The `useradd` command with the option `--key` is not a valid combination in Unix or Linux systems. The `useradd` command is used to create new user accounts, while the `--key` option is not recognized by it. If you meant to use another option with `useradd`, please provide the correct one for an accurate explanation.'
        no-create-home: '[AI] The `useradd` command with the option `--no-create-home` is used to add a new user in Linux without creating a home directory for that user during account creation. This means that, if a home directory already exists for the user in the file system, it will be used; otherwise, no new directory will be created automatically. This can be useful when adding users that already have their own home directories or when following specific system configuration guidelines.'
        no-log-init: '[AI] `useradd` is a Linux command used to create new user accounts. The option `--no-log-init` instructs the command not to run the shell specified in /etc/passwd or /etc/profile for the newly created user at the time of account creation, which can help prevent unnecessary logging and potential security risks during the initial setup process.'
        no-user-group: '[AI] The `useradd` command with the option `--no-user-group` creates a new user account without creating or updating a corresponding user group. By default, when you create a new user with `useradd`, a new group with the same name as the user is also created or updated. However, using the `--no-user-group` option disables this behavior and keeps the existing user group for the new user account instead.'
        non-unique: '[AI] `useradd` is a Linux utility command used to create new user accounts. The `--non-unique` option is used when creating a new user with a username that already exists in the system. By default, `useradd` requires a unique username. With `--non-unique`, it allows the creation of a new user account even if the username already exists, but with a different UID (User ID). This can be useful in certain situations where multiple users may have the same username, each with their own distinct home directories and settings.'
        password: '[AI] The `useradd` command with the option `--password` is used to create a new user account in Linux or Unix-based systems, and sets a password for that user during creation. This is typically done using the `passwd` utility after creating the user account. However, using `useradd --password` allows for setting the password at the same time as account creation. The password is provided on the command line in an encrypted format, usually using the `/dev/random` or `</etc/random>` file to generate a random password. This option improves security by avoiding storing the password in clear text during account creation.'
        prefix: '[AI] The `useradd` command is used to create a new user account in Linux or Unix-based systems. The option `--prefix=PREFIX` sets the prefix for the home directory and other user-specific files of the new user. For example, if you set `--prefix=/newdir`, the home directory for the new user will be `/newdir/username` instead of the default `/home/username`. This option can be useful when managing multiple instances of a software or users in isolated environments.'
        root: '[AI] The `useradd` command with the option `--root` is used to create a new user account while specifying a custom root directory for that user''s home directory, instead of using the default one in `/home`. The syntax is: `useradd --root <new_directory> <username>`. For example, `useradd --root /custom_path/newuser newuser` will create a new user named ''newuser'' with their home directory located at ''/custom\_path/newuser''.'
        shell: '[AI] The `useradd` command in Linux is used to create new user accounts. The `--shell` option specifies the default shell for the new user. A shell is a program that interprets and executes commands. Commonly used shells include Bash (bash), Bourne Shell (sh), and C Shell (csh). By setting the desired shell with `--shell`, you can ensure that when the user logs in, their session will start using the specified shell. For example, `useradd --username myuser --shell /bin/bash` would create a new user named "myuser" with the default shell set to Bash.'
        skel: '[AI] The `useradd` command with the `--skel` option is used in Linux and Unix-based systems to create a new user account based on an existing user''s settings, also known as a skeleton directory. This means that when you use `useradd --skel <existing_user> <new_user>`, the newly created user `<new_user>` will have the same home directory structure and file permissions as the existing user `<existing_user>`. In other words, it''s a convenient way to set up new users with a predefined set of files and directories.'
        system: '[AI] The `useradd` command with the `--system` option is used to create a new system user in Linux or Unix-based operating systems. System users are accounts that do not have a login shell, but rather run services and background processes. This option ensures that no home directory or personal files will be created for the new user during the creation process. Instead, the new user will only have a system entry in `/etc/passwd` and `/etc/group`, allowing it to access specific system resources as needed.'
        uid: '[AI] The `useradd` command with the option `--uid <UID>` is used to create a new user account in Linux or Unix-based systems with a specific User ID (UID) value. The UID uniquely identifies the user within the system and must be unique among all other users. By specifying a particular UID when creating a user, you ensure that it does not conflict with any existing user accounts.'
        user-group: '[AI] The `useradd` command with the option `--user-group` is used to create a new user in Linux and set the primary group for that user to be the same as the username by default. For example, if you run `useradd --user-group username`, a new user named "username" will be created along with a new group named "username". Both the user and group will belong to this group. This can simplify file permissions management since all files owned by the user will also belong to their namesake group by default.'
