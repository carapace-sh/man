# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: attest --output [FORMAT] <IMAGE>
description: Generate an SBOM as an attestation for the given [SOURCE] container image
flags:
    --catalogers*=: enable one or more package catalogers
    --exclude*=: exclude paths from being scanned using a glob expression
    --file=: file to write the default report output to (default is STDOUT)
    --name=: set the name of the target being analyzed
    --platform=: an optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux')
    -k, --key=: the key to use for the attestation
    -o, --output*=: report output format, options=[syft-json cyclonedx-xml cyclonedx-json github-json spdx-tag-value spdx-json syft-table syft-text template]
    -s, --scope=: selection of layers to catalog, options=[Squashed AllLayers]
    -t, --template=: specify the path to a Go template file
documentation:
    command: '[AI] `syft attest` is a command used in Syft, an open-source tool for collecting, analyzing, and sharing container images'' software bill of materials (SBOMs). This specific command is used to generate an SBOM report from a local container image or a remote registry. It scans the image for dependencies and vulnerabilities, then outputs the results in various formats such as JSON, XML, or SPDX. The obtained data can be further analyzed or shared with other tools or stakeholders for security assessment and compliance checks.'
    flag:
        catalogers: '[AI] The `syft attest --catalogers` command is used in Syft, an open-source tool for managing Kubernetes secrets. This specific command is responsible for generating and updating catalogs of attested resources, which are lists of cryptographically signed and verified Kubernetes objects. By running this command, you can ensure that your team has an up-to-date and trustworthy record of the configuration of your Kubernetes resources. The output of the command is a YAML file containing the cataloged resources with their respective attestations.'
        exclude: '[AI] `syft attest --exclude` is a command used in Syft, an open-source tool for managing and attesting Kubernetes manifests. The `--exclude` option allows users to exclude specific Kubernetes resources or files from the attestation process. This can be useful when there are sensitive or non-essential components in the manifests that do not need to be included in the attestation report. By excluding these resources, the report becomes more focused on the critical infrastructure and security configurations.'
        file: '[AI] The `syft attest --file` command is a part of Syft, an open-source tool for managing and distributing Kubernetes secrets. The `--file` option is used to specify a file that contains Syft configuration or certificates required for attestation. Attestation is the process of proving the ownership or authenticity of a digital artifact, such as a Kubernetes secret. By providing a file with the necessary information, Syft can perform the attestation process and output the verified result.'
        key: '[AI] `syft attest --key` is a command used in the Syft data security and secrecy tool. This command is used to create or manage keys for data protection. The key is an encryption key that Syft uses to secure and encrypt data before it is transferred between systems. By using `--key`, users can generate, import, or manage the encryption keys locally, ensuring data confidentiality during transmission.'
        name: '[AI] `syft attest --name` is a command used in Syft, an open-source tool for managing and verifying Kubernetes configuration files and containers. This specific command is used to create or update a Syft attestation for a given Kubernetes object or container image, identified by its name. The attestation is a signature that proves the authenticity and integrity of the object or image, helping ensure secure deployment in a Kubernetes cluster.'
        output: |-
            [AI] `syft attest --output` is a command used in Syft, an open-source tool for securing and managing container images. This specific command performs image attestation, which is the process of verifying the authenticity and integrity of container images.

            The `--output` flag specifies where to save the output of the attestation process. The output can be saved as a JSON file, a YAML file, or printed to the console. This allows users to easily store and analyze the results of the image attestation process.
        platform: '[AI] The `syft attest --platform` command is used in Syft, an open-source tool for managing container images, to generate attestation reports for specific platforms or runtime environments. The `--platform` flag specifies the target platform or environment for the attestation report, which can be a Kubernetes cluster, Amazon ECS, Docker Swarm, or other supported platforms. This command helps ensure the security and compliance of containers by generating cryptographic proofs that contain information about the container image, its runtime environment, and any additional metadata specified by the user. The generated attestation report can then be used to verify the image''s integrity and conformance to specific policies or regulations.'
        scope: '[AI] The `syft attest --scope` command in Syft, an open-source tool for managing and securing Kubernetes secrets, is used to generate a report of the current state of the Kubernetes objects that are within the specified scope. This includes the namespaces, labels, or selectors that are used to filter the resources. The output of this command provides information on the types, names, and ownership of the resources, helping to ensure the security posture of your Kubernetes cluster by allowing you to easily identify and remediate any misconfigured or unmanaged objects.'
        template: '[AI] `syft attest --template` is a command in Syft, an open-source tool for managing and verifying Kubernetes configuration files. This specific command generates a YAML template from existing Kubernetes resources. The flag `--template` tells Syft to output the result in a format that can be used as a template for creating new resources with similar configurations. The resulting template file contains placeholders for values that need to be filled in before use, making it easier to manage and deploy consistent configurations across clusters.'
