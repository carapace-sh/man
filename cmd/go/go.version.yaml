# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: version
description: print Go version
flags:
    -m: print each executable's embedded module version information
    -v: report unrecognized files
documentation:
    command: '[AI] The `go version` command is used to display the Go compiler (gofmt, golint, gobuild, or go) and its associated version number in your terminal or command prompt when running it within a Go project directory. It helps developers to confirm that they are using the desired Go version for their projects, ensuring compatibility with the project''s dependencies and requirements.'
    flag:
        m: '[AI] `go version -m` is a command-line tool provided by Go language. It prints out the effective Go version, including major.minor.patch and additional build information like operating system, compiler version, and the host architecture. The `-m` flag adds more detailed output with the build timestamp and other environment variables used during the build process.'
        v: '[AI] The `go version -v` command is used in the Go programming language to print out the version information of the Go compiler and tools installed on your system. This includes the Go version number, operating system, and other relevant details. It helps developers ensure they are using the correct version of Go for their project and provides important information for troubleshooting and compatibility checks.'
