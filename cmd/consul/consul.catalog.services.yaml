# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: services
description: Lists all registered services in a datacenter
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --namespace=: Specifies the namespace to query.
    --node-meta=: Metadata to filter nodes with the given `key=value` pairs.
    --node=: Node `id or name` for which to list services.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tags: Display each service's tags as a comma-separated list beside each service entry.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul catalog services` command is used in Consul, a modern service discovery and configuration management tool, to list all registered services and their associated metadata. When executed, it returns JSON output containing the name, ID, tags, address, and other relevant details of each service that has been registered with the Consul server. This information can be useful for understanding which services are currently available in the cluster, and for managing and configuring applications accordingly.'
    flag:
        ca-file: |-
            [AI] `consul catalog services --ca-file` is a command used in Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command retrieves the catalog of services that are registered with a Consul server, but it also accepts an optional argument `--ca-file`.

            The `--ca-file` flag expects a file path to a PEM-encoded CA certificate, which is used to authenticate and encrypt communications between the client (running the command) and the Consul server. The purpose of this flag is to provide additional security by specifying a trusted CA certificate for verification during the TLS handshake. It ensures that only communication with genuinely authentic Consul servers is permitted, thus protecting against potential man-in-the-middle attacks.
        ca-path: '[AI] `consul catalog services --ca-path` is a command used in Hashicorp Consul, an service discovery, configuration, and orchestration tool. This command interacts with the Consul Catalog API to list services and their associated certificates. The `--ca-path` option specifies the path to a directory containing trusted Certificate Authority (CA) certificates for verifying the authenticity of the certificates returned by the API.'
        client-cert: |-
            [AI] The `flag "consul catalog services --client-cert"` is used in Consul, a service discovery and configuration management tool, when interacting with its CLI (Command Line Interinterface) to access the catalog services.

            This flag specifies the path to a client TLS certificate file for authentication when making requests to Consul's HTTP API. By including this certificate, clients ensure secure communication between their application and Consul while querying service registration information or reading configuration data from the Consul server.
        client-key: '[AI] The `consul catalog services --client-key` command is used in Consul, a Connect and service discovery tool, to list the cataloged services along with their associated metadata. The `--client-key` flag provides an API key for authentication, ensuring only authorized requests can access the service catalog information.'
        datacenter: '[AI] The `consul catalog services --datacenter` command is used in Consul, a distributed, open source platform for service discovery, configuration, and orchestration. This command retrieves a list of all registered services along with their attributes from the specified datacenter within Consul. It provides metadata about the services, such as their name, ID, address, and tags, which can be used by applications to discover and connect to them. The output also includes information about the nodes running these services, including their ID, address, and status in the cluster. This command helps ensure that applications are connected to the correct instances of a service within the datacenter.'
        http-addr: '[AI] `consul catalog services --http-addr` is a command used with the Consul Discovery Service and HTTP API. The `catalog services` subcommand lists all registered services in the Consul cluster, while `--http-addr <IP:PORT>` sets the HTTP address of the Consul agent or server to listen on. In this context, it means that the command will display information about registered services, but it will be served from the specified Consul instance reachable via the given IP and port.'
        namespace: |-
            [AI] The `consul catalog services --namespace` command is used with Consul, a popular service discovery and configuration management tool. This command lists the services registered under a specific Kubernetes namespace in the Consul catalog.

            Consul's agent automatically registers and deregisters services running within your infrastructure, and the catalog provides an interface to view this information. By specifying a namespace with `--namespace`, you can filter the output to only show services from that particular Kubernetes namespace. This is helpful when managing large and complex environments where you might have multiple namespaces hosting different applications or microservices.
        node: '[AI] The `consul catalog services --node` command is used with Consul, a modern service discovery, configuration, and orchestration tool. This specific command is for querying the Consul Catalog service to list all registered services and their associated nodes. In other words, it provides information about which instances of a service are currently available in the Consul cluster.'
        node-meta: '[AI] The `consul catalog services --node-meta` command is used with Hashicorp''s Consul service discovery and configuration management tool. This command retrieves the metadata associated with services registered in a Consul cluster. "Metadata" refers to key-value pairs that can be attached to services, allowing for flexible tagging and labeling of resources. The output provides detailed information about each service, including its name, ID, tags, address, port, and the attached node meta data.'
        stale: |-
            [AI] The `consul catalog services --stale` command is used with Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command retrieves information about currently registered services in the Consul catalog, including those that may have been previously registered but are no longer alive or reachable (i.e., "stale" services).

            By running this command, you'll get a list of all services that were once registered with Consul but might no longer be available. This can help in understanding and managing the state of your service registry and potentially identifying issues within your infrastructure.
        tags: '[AI] `consul catalog services --tags` is a command used in Hashicorp Consul, a service discovery and configuration management tool. This command lists the cataloged services and their associated tags. Services in Consul are tagged to facilitate filtering and selecting specific sets of services for various use cases. The output of this command shows each service with its name, ID, address, and tags.'
        tls-server-name: |-
            [AI] The `consul catalog services --tls-server-name` command is used in Consul, a service discovery and configuration management tool. This command interacts with the Consul Catalog API to list the services that are registered with the Consul server, along with their associated metadata.

            The `--tls-server-name` flag specifies the TLS server name to use when connecting to the Consul HTTP API over a secure connection. It ensures that the client can validate the server's identity and establish an encrypted communication channel before retrieving the service catalog information.
        token: '[AI] The `flag "consul catalog services --token"` is used in Consul, a service discovery and configuration management tool, to query the Catalog API with an access token. This command retrieves information about registered services and their associated tags, checksums, and other metadata. The `--token` flag specifies the access token required for authentication.'
        token-file: '[AI] `consul catalog services --token-file` is a command used in Hashicorp Consul, an open-source distributed, highly-available, and data center-aware solution to connect and secure services. The `catalog services` subcommand lists the services that are registered with the Consul server, while `--token-file` specifies the path to a file containing a Consul client token. This token is required for authentication when interacting with the Consul API. By using this command with a token file, you can securely access the catalog information provided by Consul.'
