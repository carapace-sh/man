# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: plan
description: Check which versions are available to upgrade to and validate whether your current cluster is upgradeable. To skip the internet check, pass in the optional [version] parameter
flags:
    --allow-experimental-upgrades: Show unstable versions of Kubernetes as an upgrade alternative and allow upgrading to an alpha/beta/release candidate versions of Kubernetes.
    --allow-release-candidate-upgrades: Show release candidate versions of Kubernetes as an upgrade alternative and allow upgrading to a release candidate versions of Kubernetes.
    --config=: Path to a kubeadm configuration file.
    --feature-gates=: A set of key=value pairs that describe feature gates for various features.
    --ignore-preflight-errors*=: 'A list of checks whose errors will be shown as warnings. Example: ''IsPrivilegedUser,Swap''. Value ''all'' ignores errors from all checks.'
    --kubeconfig=: The kubeconfig file to use when talking to the cluster. If the flag is not set, a set of standard locations can be searched for an existing kubeconfig file.
    --print-config: Specifies whether the configuration file that will be used in the upgrade should be printed or not.
documentation:
    command: '[AI] `kubeadm upgrade plan` is a command used to check for available Kubernetes upgrades with `kubeadm`, a tool for setting up and managing a Kubernetes cluster. This command provides details about the next available version for upgrading both the control-plane nodes and worker nodes, including any required pre-upgrade or post-upgrade actions, as well as the version compatibility of the current cluster components and the new release. It''s important to note that running an upgrade plan doesn''t actually apply the upgrade; it only shows the information necessary to prepare for the upgrade process.'
    flag:
        allow-experimental-upgrades: '[AI] `kubeadm upgrade plan --allow-experimental-upgrades` is a command used in Kubernetes to outline the steps for upgrading a cluster using Kubeadm, which is a tool for initializing clusters and joining nodes. This specific flag enables experimental upgrades during the process, meaning that it may apply new features or changes that are not yet stable or fully tested. It''s important to note that using this flag could potentially introduce new issues or instability into your cluster. Therefore, it should only be used with caution and a thorough understanding of the potential risks. The experimental upgrades are managed by Kubeadm''s built-in version control mechanism, which tracks the latest stable release and also the development branch. It allows you to upgrade from one stable release to another or even skip some releases, but keep in mind that this may result in unexpected behaviors or compatibility issues with certain tools or addons.'
        allow-release-candidate-upgrades: '[AI] `kubeadm upgrade plan --allow-release-candidate-upgrades` is a command used to create an upgrade plan for Kubernetes clusters managed by kubeadm. This flag enables the use of release candidate (RC) versions during upgrades, allowing for access to new features and bug fixes before they are officially released. By default, kubeadm only allows upgrading to stable versions, so using this flag opens up the possibility of earlier adoption of changes in Kubernetes. However, it also increases the risk of encountering compatibility issues or instability, as RC versions may still contain bugs and may not be fully tested. It is recommended to thoroughly evaluate any changes before applying them to production clusters.'
        config: |-
            [AI] `kubeadm upgrade plan --config` is a command used to generate an upgrade plan for a Kubernetes cluster managed by Kubeadm. The `--config` option specifies the path to the existing Kubernetes cluster configuration file.

            The command analyzes the current state of the cluster and generates a proposed plan for upgrading the various Kubernetes components, such as the control-plane nodes, etcd, kubelet, and container runtime, to the next available version. The output includes a detailed list of the recommended actions, along with any potential disruptions or downtime that may be required during the upgrade process.

            It's important to note that this command only generates an upgrade plan and does not actually perform the upgrade itself. To apply the proposed plan and upgrade the cluster, you would use additional Kubeadm commands such as `apply updates on hold` or `kube-upgrade`.
        feature-gates: '[AI] `kubeadm upgrade plan --feature-gates` is a command used to propose and plan Kubernetes upgrades with specific feature gates enabled. Feature gates are experimental features that can be enabled or disabled in the cluster configuration. By specifying which feature gates to enable during an upgrade, you can preview the changes that would be made before actually performing the upgrade. This can help ensure compatibility and minimize potential disruptions to your cluster. The output of this command will display the proposed Kubernetes versions with the specified feature gates enabled, allowing for careful review before implementation.'
        ignore-preflight-errors: '[AI] The `kubeadm upgrade plan --ignore-preflight-errors` is a command used during the Kubernetes cluster upgrades with Kubeadm to bypass certain pre-flight checks that might prevent the upgrade from proceeding. This flag is used when encountering errors that are not critical for the upgrade process, and the admin believes they can safely ignore them. It''s important to note that using this flag comes with potential risks as it may result in an unstable or non-functional cluster. It should be used with caution and only after careful consideration of the potential implications.'
        kubeconfig: '[AI] The `kubeadm upgrade plan --kubeconfig` command is used to generate an upgrade plan for a Kubernetes cluster managed by Kubeadm, which is a tool for deploying and managing a Kubernetes cluster. This command produces a YAML file containing the recommended sequence of upgrading various Kubernetes components, such as the etcd server, control-plane nodes, and worker nodes. The `--kubeconfig` flag specifies the location of the existing Kubernetes configuration file, which is used to determine the current state of the cluster. This command provides a safe way to upgrade the cluster by ensuring that all components are upgraded in the correct order to minimize potential disruptions.'
        print-config: '[AI] `kubeadm upgrade plan --print-config` is a command used to generate an output in YAML format, displaying the recommended configuration for upgrading a Kubernetes cluster managed by kubeadm. This includes the new version of Kubernetes control plane components and the etcd database. The generated config can then be applied using `kubectl` or other tools for rolling out the upgrade to your cluster. It is important to review and validate the changes before applying, as upgrading your cluster involves potential risks such as downtime and data loss.'
