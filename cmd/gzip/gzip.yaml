# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: gzip
description: Compress or uncompress files
flags:
    --rsyncable: make rsync-friendly archive
    -1, --fast: compress faster
    -9, --best: compress better
    -L, --license: display software license
    -N, --name: save or restore the original name and timestamp
    -S, --suffix=: use suffix SUF on compressed files
    -V, --version: display version number
    -c, --stdout: write on standard output, keep original files unchanged
    -d, --decompress: decompress
    -f, --force: force overwrite of output file and compress links
    -h, --help: give this help
    -k, --keep: keep (don't delete) input files
    -l, --list: list compressed file contents
    -n, --no-name: do not save or restore the original name and timestamp
    -q, --quiet: suppress all warnings
    -r, --recursive: operate recursively on directories
    -t, --test: test compressed file integrity
    -v, --verbose: verbose mode
documentation:
    command: '[AI] `gzip` is a command-line utility for compressing and decompressing files using the gzip (GNU Zip) algorithm, which is a lossless data compression method. The .gz file extension is typically associated with gzip-compressed files. To compress a file, use `gzip filename`, and to decompress a gzip-compressed file, use `gunzip filename.gz` or `gzip -d filename.gz`. The resulting compressed file will be smaller than the original file, reducing storage requirements or facilitating faster data transfer.'
    flag:
        best: '[AI] The `gzip` command is a popular data compression tool in Unix-based systems. The option `--best` is used to set the compression level to the highest possible value when compressing files with `gzip`. This means that `gzip` will use all available resources and optimization techniques to achieve the maximum compression ratio, resulting in smaller output files. However, higher compression levels may take longer to process and require more computational resources.'
        decompress: '[AI] `gzip` is a file compression utility that uses the gzip algorithm. The command `gzip --decompress` or `gunzip` is used to decompress or expand (i.e., reverse compress) gzipped files. When you use this command followed by the name of a gzipped file, it extracts the original content from that file and saves it in its original format in the same name but with the ''.gz'' suffix removed. For example: `gzip --decompress myfile.gz` would result in an uncompressed ''myfile''.'
        fast: '[AI] `gzip --fast` is a command used in Unix-based systems to compress files using the gzip algorithm with maximum compression speed as its primary goal. The `--fast` option tells gzip to prioritize speed over optimal compression ratio, making it suitable for large or numerous files that need to be compressed quickly. This flag is useful when dealing with time-sensitive tasks, such as transferring files over the network where bandwidth is a limiting factor.'
        force: '[AI] The `gzip` command with the `--force` option is used to update existing gzipped files with new data if they exist, without asking for confirmation. When you compress a file using `gzip`, it adds a `.gz` extension by default and creates a new file. With `--force`, if a file with the same name and `.gz` extension already exists, it will be replaced without any prompt. This can be useful when automating compression tasks or dealing with large numbers of files, as it avoids the need to confirm overwriting existing gzipped files each time.'
        help: '[AI] `gzip` is a command-line utility for compressing and decompressing files using the gzip format. The option `--help` displays detailed help information about `gzip`, including supported options, usage examples, and other relevant details. Using `gzip --help` in the terminal will provide you with comprehensive guidance on how to use this tool effectively.'
        keep: '[AI] The `gzip` command is a data compression tool that can be used to compress or decompress files. When using `gzip` to compress files, the `--keep` option is used to preserve the original file after compression, resulting in two files with the same name but different extensions: the compressed file will have a `.gz` extension and the original file will retain its original name. This can be useful for backup or version control purposes.'
        license: '[AI] The `gzip` command is a popular data compression tool used in Unix-like operating systems. Its associated license is the GNU General Public License (GPL). This means that gzip is free software: you can use, modify, and distribute it under the terms of the GPL. The license also requires that any derived works or modifications be made available under the same terms. In summary, `gzip --license` will display the text of the GNU General Public License for the gzip software.'
        list: '[AI] The `gzip` `--list` command is used to display a list of files in a directory that have been compressed with gzip, without extracting them. It simply prints out the file names along with their original sizes and compressed sizes. This can be useful for checking which files are compressed with gzip in a directory and getting information about their compression stats.'
        name: |-
            [AI] The `gzip --name` command is a feature of the `gzip` compression tool. This option is used to filter files based on their names when applying gzip compression. Instead of compressing all files in the current directory, you can specify a pattern for file names using wildcards (e.g., `*.txt`) or regular expressions (if your `gzip` supports it).

            The syntax for this command is:
            ```bash
            gzip --name 'PATTERN:*' [FILE...]
            ```
            Replace `PATTERN` with the desired pattern, and provide a list of files as arguments if you want to compress only specific ones. For example, `gzip --name '*.log' myfile.log` would only compress `myfile.log` if it matches the given pattern (in this case, any file ending in `.log`).
        no-name: '[AI] The `gzip` command with the `--no-name` option is used to compress a file using gzip algorithm, but without changing the filename or extension in the output. In other words, it keeps the same name for both input and output files, making it suitable when dealing with scripts or automated processes that rely on preserving filenames.'
        quiet: |-
            [AI] The `gzip` command with the `--quiet` option is used for compressing files with gzip algorithm in quiet mode, meaning it will not display progress messages or other output during compression except for error messages if any. This is useful when automating tasks where you don't need to see the console output. For example:

            ```bash
            gzip --quiet filename.txt
            ```

            This command will compress `filename.txt` into a gzipped file (with extension `.gz`) without any visible output in the terminal.
        recursive: '[AI] The `gzip` command with the option `--recursive` is used to compress or decompress files and their contained subdirectories recursively in Unix-like operating systems. In other words, this command applies the compression or decompression process not only to the specified file but also to all files in the indicated directory tree. The `gzip` utility itself compresses data using the GZIP format (GZ), while maintaining the original file name and format. This is commonly used for transferring and saving files across networks or for archiving purposes.'
        rsyncable: '[AI] The `gzip` flag `--rsyncable` is used when compressing files for use with rsync, a popular data synchronization tool. This option creates gzipped files that keep their original modification times and file permissions, making them ideal for use in rsync transfers where preserving file metadata is important. The resulting gzipped files can be synchronized between systems efficiently while maintaining the desired file attributes.'
        stdout: '[AI] The `gzip` command with the `--stdout` option is used to compress data and write the output directly to standard output stream (STDOUT), instead of creating a new file. This can be useful when you want to pipe the compressed data into another command or tool for further processing without saving it as a separate file first. The compression algorithm used by `gzip` is called gzip compression, which is a lossless data compression method that is widely used for compressing various types of files, particularly text files on Unix-like operating systems.'
        suffix: '[AI] The `--suffix` option in the `gzip` command is used to specify a suffix to be added to the compressed filenames. By default, gzip appends the ".gz" suffix to the original file name when compressing. However, with `--suffix`, you can change this behavior and append any desired suffix instead. For example, `gzip --suffix=.xz filename` would result in a compressed file named `filename.xz`.'
        test: '[AI] `gzip --test` is a command used in Unix-like operating systems to check if a file has been compressed using the gzip algorithm without actually decompressing it. The command takes the name of the file as an argument and prints out its compressed size and percentage of compression achieved, if the file is a gzipped file. If the file is not compressed or is compressed with a different method, `gzip` will return an error message.'
        verbose: |-
            [AI] The `gzip` command with the `--verbose` option is used to compress or decompress files using the gzip compression algorithm, while providing detailed information about the compression process.

            When you run `gzip --verbose` followed by a file name, it will display various statistics such as the original size of the file, the compressed size, the compression ratio, and the time taken to compress or decompress the file. This can be useful for debugging purposes or for understanding the impact of gzip compression on specific files.
        version: '[AI] `gzip --version` is a command used in Unix or Unix-like operating systems to display version information about the gzip utility, which is a data compression tool. When executed with this argument, it will print out the gzip implementation''s name, version number, and other relevant details such as compilation flags and licensing information.'
