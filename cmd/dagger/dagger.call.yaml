# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: call [flags] [FUNCTION]...
description: Call a module function
group: module
persistentflags:
    --focus: Only show output for focused commands
    --json: Present result as JSON
    -m, --mod=: Path to dagger.json config file for the module or a directory containing that file. Either local path (e.g. "/path/to/some/dir") or a github repo (e.g. "github.com/dagger/dagger/path/to/some/subdir")
    -o, --output=: Path in the host to save the result to
documentation:
    command: |-
        [AI] The `dagger call` command is not a standard Unix or Linux command, but rather a command specific to Dagger, an open-source build tool for Java and Android projects. This command is used to invoke tasks defined in a Dagger build file, which can include building and running tests, generating JAR files, or creating production artifacts.

        In other words, `dagger call` allows you to trigger specific actions defined in your Dagger configuration, which can be helpful for automating various aspects of the build and development process. For example, you might use it to run a test suite, compile your code into a JAR file, or create a production-ready package.

        The usage of this command typically takes the form `dagger call <task-name>`, where `<task-name>` is the name of the task as defined in your Dagger configuration. For more information, you should consult the official Dagger documentation and your project's specific build file.
