# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fish
description: the friendly interactive shell
flags:
    --print-debug-categories: Print all debug categories, and then exit
    --print-rusage-self: When fish exits, output stats from getrusage
    --profile-startup=: Will write timing for fish startup to specified file
    -C, --init-command=: Evaluate specified commands after reading the configuration
    -N, --no-config: Do not read configuration files
    -P, --private: Enables private mode
    -c, --command=: Evaluate  the  specified  commands  instead  of  reading  from the commandline
    -d, --debug=: Enables debug output and specify a pattern for matching debug categories
    -f, --features=: Enables one or more comma-separated feature flags
    -i, --interactive: The shell is interactive
    -l, --login: Act as if invoked as a login shell
    -n, --no-execute: Do not execute any commands, only perform syntax checking
    -o, --debug-output=: Specifies a file path to receive the debug output
    -p, --profile=: when fish exits, output timing information on all executed commands to the specified file
    -v, --version: Print version and exit
documentation:
    command: '[AI] The `fish` command is a popular choice for users looking for an alternative to the Bash or Zsh shells. It''s known as the Friendly Interactive Shell. Fish provides intelligent tab completion, autosuggestions, and error reporting, making it easier to use and less prone to typos. The fish shell configuration file is `~/.config/fish/config.fish`. To install fish, follow your operating system''s specific installation instructions. Once installed, simply type `fish` in the terminal to start using it as your default shell.'
    flag:
        command: |-
            [AI] The `--command` flag in the `fish` shell is used to specify a command or script to be executed when an alias or function is invoked. Instead of defining what the alias or function does, you write the entire command that should be run directly after this flag. This allows for more complex and customized usage. For example:

            ```bash
            alias mycommand --command 'echo "Hello World"; ls -lh'
            ```

            This defines an alias named `mycommand`, which, when invoked, runs both the command to print "Hello World" and the command to list files in long format.
        debug: '[AI] The `--debug` flag for the `fish` shell is used to enable debug mode. In this mode, Fish Shell prints detailed information about its internal operations and executions, making it easier to diagnose and understand issues with scripts or configurations. This can be useful for developers and system administrators who need to troubleshoot complex problems. However, keep in mind that enabling the debug mode may increase the verbosity of output and impact performance.'
        debug-output: |-
            [AI] The `--debug-output` flag for the `fish` shell is used to enable and customize debug output during shell execution. This flag can be passed as an argument when starting a new Fish shell session or in the configuration file (~/.config/fish/config.fish).

            When enabled, Fish will display detailed information about events and functions occurring during shell usage. This can include information about files being sourced, signals being handled, and functions being executed. The output level can be configured to display various degrees of detail using different verbosity levels.

            Using `--debug-output` can help in troubleshooting issues within the Fish shell, as it provides a wealth of information that can aid in understanding the flow of execution and pinpointing potential problems.
        features: '[AI] The `--features` option in Fish shell is used to enable or disable specific features when initializing a new configuration or session. It takes one or more feature names as arguments, and can be passed to various Fish commands like `config init`, `new-session`, or `restore-session`. Enabling a feature adds the corresponding configuration files to the Fish setup, while disabling a feature removes them. This allows customizing the shell behavior according to user preferences.'
        init-command: '[AI] The `--init-command` flag in Docker Compose is used to specify a custom command that will be run when an container is started based on an image defined in the YAML file. This can be useful for running scripts or commands during container startup or initialization. The format is as follows: `image: image_name, init: docker-image_init:` where `image_name` is the name of the Docker image to be used, and `docker-image_init` is the name of the Docker image containing the command to run at startup. For example, `image: nginx, init: docker:alpine-sh -c "echo Hello World > index.html && exit 0"` will start an Nginx container and also run a command to create a file named "index.html" with the content "Hello World" before starting the Nginx service.'
        interactive: '[AI] The `--interactive` flag for the `fish` shell is used to start a new interactive session. It enables features such as autocompletion, interactive tab-completion, and line editing of commands in real-time. This flag is typically used when starting a new terminal session or login, allowing users to have a more efficient and productive command-line experience with the Fish Shell.'
        login: '[AI] The `fish --login` command is related to the Fish Shell, a modern and user-friendly alternative to Bash or Zsh. The `--login` option specifically configures Fish to operate in login mode, which is executed when a user logs into their system using SSH or a terminal emulator. In this mode, Fish sources default configurations files located at `/etc/fish/config.d/` and `~/.config/fish/`, sets the environment variables, runs startup scripts (specified in `~/.config/fish/startup.fish`), and initializes other system-wide settings. This ensures a consistent user experience and customizable environment for each individual user upon login.'
        no-config: '[AI] The `fish` command with the option `--no-config` is used to run the Fish Shell (a Unix shell) without loading any configuration files. This means that no customizations or settings from the user''s configuration files will be applied, ensuring a consistent and default environment for the shell session.'
        no-execute: '[AI] The `fish` command with the `--no-execute` flag is a configuration option for the Fish Shell. It disables the execution of the last entered command when pressing the Enter key. Instead, it only performs syntax checking and autocompletion. This can be useful for preventing accidentally running commands that were meant to be edited further before execution.'
        print-debug-categories: |-
            [AI] The `--print-debug-categories` flag is a command-line option for the `fish` shell, which is a modern and user-friendly alternative to the Bash shell. This option instructs Fish to print out a list of all available debug categories, which are specific areas or components of the Fish system that can be enabled for more detailed debugging output.

            When you run `fish --print-debug-categories` in your terminal, Fish will display a comma-separated list of debug categories that are currently available, along with brief descriptions of what each category logs or displays. This information can be useful for developers and power users who want to diagnose and troubleshoot issues within the Fish shell, as it provides more detailed output about various aspects of the system's behavior.
        print-rusage-self: '[AI] The `--print-rusage-self` option when used with the `fish` shell''s `fish_test command fish --run` or `fish shell --test` commands displays resource usage statistics for the current Fish process itself, including CPU usage, memory usage, and other system resources. This can be helpful in understanding the performance characteristics of your Fish configuration or scripts.'
        private: '[AI] The `--private` flag in the `fish` command-line shell refers to a mode where Fish Shell runs with minimal interaction with other Fish processes. This means that each instance of Fish runs independently, without sharing variables or functions between them. It is useful for situations where you want to ensure that each Fish session has its own isolated environment, such as when using multiple terminal windows or when developing software that uses Fish for automation.'
        profile: |-
            [AI] The `fish` command with the `--profile` option is used to load or switch to a specific Fish Shell configuration profile. A Fish Shell profile is a script file that contains settings and customizations for the shell, such as aliases, functions, and key bindings. By default, Fish Shell uses the system-wide profile located at `/etc/fish/config.fish`. However, users can create their own personal profiles, which are usually stored in the home directory under `~/.config/fish/config.fish`.

            The `--profile` option followed by a path to a specific profile file allows you to load that profile instead of the default one. For example, `fish --profile ~/.config/fish/mycustomprofile.fish` will start the Fish Shell with the customizations defined in `mycustomprofile.fish`. This is useful when you have multiple configuration setups and want to easily switch between them.
        profile-startup: '[AI] The `fish` command with the `--profile-startup` option is used to configure the type of file that `fish`, a Unix-like command-line shell, will use as its startup file when it initializes a new interactive session. By default, `fish` uses the `~/.config/fish/config.fish` file as its startup file, but you can change this behavior by specifying a different file using the `--profile-startup` option followed by the absolute path to the desired file. For example, `fish --profile-startum /path/to/custom/startup_file` will make `fish` use `/path/to/custom/startup_file` as its startup file instead of the default one.'
        version: '[AI] The `fish --version` command is used in the Fish Shell, a popular and modern command-line shell for Linux and other Unix systems, to display the current version number of the Fish Shell installed on your system. When you run this command in your terminal or command prompt, it will print out the major and minor version number, as well as any additional build information if available. This can help users ensure they have the latest stable release or troubleshoot issues related to specific versions.'
