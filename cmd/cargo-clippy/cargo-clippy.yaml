# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: cargo-clippy
description: Checks a package to catch common mistakes and improve your Rust code
flags:
    --fix: Automatically apply lint suggestions. This flag implies `--no-deps`
    --no-deps: Run Clippy only on the given crate, without linting the dependencies
    -V, --version: Print version info and exit
    -h, --help: Print this message
documentation:
    command: '[AI] `cargo-clippy` is a command used in Rust programming language for running the Clippy static analyzer. Clippy is a lint tool that helps find potential issues and improvements in Rust code beyond what is caught by the compiler. The `cargo-clippy` command is typically run as part of the Cargo build system, using a command like `cargo clippy`. It checks the source code for common mistakes, style issues, and potential performance improvements, providing suggestions for fixes.'
    flag:
        fix: '[AI] `cargo-clippy --fix` is a command used in Rust programming language''s package manager, Cargo. The `clippy` part refers to a linting tool that checks source code for potential errors, warnings, and inefficiencies. The `--fix` flag enables an automated correction feature where possible issues are automatically fixed upon detection. In summary, this command runs the Clippy linter with the autofix enabled to improve Rust code quality.'
        help: |-
            [AI] `cargo-clippy` is a Cargo subcommand for running Clippy, a static analyzer for Rust code. The `--help` flag displays detailed usage information about this command:

            * It shows the command's name: `cargo-clippy`.
            * Describes its purpose: "Run clippy on your crate and subprojects."
            * Lists supported subcommands, like `run`, `bench`, `test`, and `check`.
            * Provides information about available options:
              + `--lib` or `--bin <path>`: Run Clippy for the library or binary target in the current directory.
              + `--no-progress`: Suppress progress messages.
              + `--verbose`: Show more detailed output.
              + `--manifest-path`: Use an alternative Cargo manifest path.
              + `--all-features`: Enable all features for the library target(s).
              + `--filter <regex>`: Apply a filter to only check specific code snippets that match the regex pattern.
            * Concludes by suggesting users run `cargo clippy` or `cargo clippy run` to get started.
        no-deps: '[AI] `cargo-clippy --no-deps` is a command used in Rust programming language for running Clippy, a static code analysis tool, without downloading or managing its dependencies. The `--no-deps` flag disables the automatic download and installation of Clippy''s dependencies, allowing users to rely on the dependencies they have installed locally. This command is useful when working in environments with restricted network access or specific dependency versions.'
        version: '[AI] `cargo-clippy --version` is a command used in Rust programming language''s build system, Cargo. The `--version` flag is used to display the version information of the `cargo-clippy` tool. It provides details about the specific version number and any associated metadata such as commit hash or release date. This command helps in ensuring that you are using a compatible version of `cargo-clippy` while running code checks or linting in your project.'
