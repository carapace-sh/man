# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: whereis
description: Locate the binary, source, and manual-page files for a command
flags:
    -B: define binaries lookup path
    -M: define man and info lookup path
    -S: define sources lookup path
    -V, --version: display version
    -b: search only for binaries
    -f: terminate <dirs> argument list
    -h, --help: display this help
    -l: output effective lookup paths
    -m: search only for manuals and infos
    -s: search only for sources
    -u: search for unusual entries
documentation:
    command: '[AI] The `whereis` command is a Linux utility used to locate the files or directories associated with given commands in the system''s $PATH environment variable. It searches for executables, manual pages, and other related files based on the provided command name. This helps users quickly find out where a particular command is installed or located. The output displays the file path(s) if found, otherwise it will indicate that the given command is not installed.'
    flag:
        B: '[AI] The `-B` option in the `whereis` command is used to display only the absolute paths of the files and directories that match the given argument, instead of the default behavior which is to show both the file path and the description of the file. This can be useful when you want to quickly locate the exact location of a file or binary in your system without having to navigate through multiple directories or decipher the description output.'
        M: '[AI] `whereis -M` is a command in Unix-like operating systems, specifically used with the `findutil` package''s `whereis` tool. The `-M` option (or `--machine`) makes the command search all systems in a multi-system setup like NFS or SMB, returning the full path for each installed binary, library, or manual page, instead of just the local system.'
        S: '[AI] The `whereis` command with the `-S` option is used in Unix and Unix-like operating systems to search for files or directories associated with a given program, displaying the full path instead of just the file name. The `-S` (or --source) flag specifically shows only the source code files related to that command. For instance, if you run `whereis -S grep`, it will display the locations of C language source files for the ''grep'' utility.'
        b: '[AI] The `whereis` command with the `-b` option is used in Unix or Linux systems to locate binary files associated with a given package or command in the file system. It searches for files with the given name in the directories specified in the system''s `$PATH` environment variable, as well as in the standard library paths. The output lists the file paths for each matching file.'
        f: |-
            [AI] `whereis -f` is a command used in Unix-like operating systems, including GNU/Linux distributions. The `whereis` command is designed to locate files associated with a given program or command in the file system. The `-f` option is an optional argument that modifies the behavior of the `whereis` command.

            When used with `-f`, the `whereis` command will only output the full pathnames of the files it finds, rather than also displaying any additional information such as the symbolic links or manual pages associated with those files. In other words, it provides a more succinct output by showing just the file paths.
        help: '[AI] `whereis --help` is a command used in Unix-based systems to display information about how to use the "whereis" utility. When you type this command in your terminal, it will show you a brief explanation of what "whereis" does, which is to locate binary files, source files, and man pages for the given command or file name. It also provides examples and options that can be used with the command, such as searching multiple databases or displaying only the path to the binary file.'
        l: |-
            [AI] The `whereis` command with the `-l` option is used in Unix-based systems to search for files or directories associated with a given program or command, displaying only the absolute path of the location(s) found. It searches through various locations such as `/usr/bin`, `/usr/lib`, and `/usr/local` by default. For example:

            ```bash
            $ whereis -l grep
            grep: /usr/bin/grep /usr/share/man/man1/grep.1.gz
            ```

            This command shows that the `grep` command is located in the `/usr/bin/` directory, and its manual page (`man1/grep.1.gz`) can be found under `/usr/share/man`.
        m: '[AI] `whereis` is a command-line utility in Unix-based systems for locating files and directories associated with given software installed on the system. The option `-m` or `--machine` is used to search only on the local machine, instead of querying remote systems via network, making the search faster and more focused on the local file system.'
        s: '[AI] The `whereis` command with the `-s` option in Unix or Linux systems is used to locate the source file or the installation directory of a given binary or executable, instead of just displaying the location of the executable in the system''s PATH. This can be particularly useful when trying to determine which version of a software is being used, or if you want to find the location of the configuration files associated with an installed package.'
        u: '[AI] The `whereis` command is a utility in Unix-like operating systems for locating files in the file system based on their name. The option `-u` (or `--user`) is used with `whereis` to search only for user executables, located in the `$HOME/.local/bin`, `$HOME/bin`, and `/usr/local/bin` directories. This can help find custom or locally installed executable files that may not be part of the system-wide installation.'
        version: '[AI] `whereis --version` is a command used in Unix-based systems to check the installed version of the "whereis" utility itself. The option `--version` displays only the version information and exits afterward, providing details such as the name, version number, and sometimes other relevant information like the operating system it was built for or the installation path.'
