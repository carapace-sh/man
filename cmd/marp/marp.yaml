# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: marp
description: A CLI interface for Marp and Marpit based converters
flags:
    --allow-local-files: Allow to access local files from Markdown
    --author=: Define author of the slide deck
    --bespoke.osc: Use on-screen controller
    --bespoke.progress: Use progress bar
    --bespoke.transition: Use transitions
    --config-file=: Specify path to a configuration file
    --description=: Define description of the slide deck
    --engine=: Select Marpit based engine by module name or path
    --html: Enable or disable HTML tags
    --image-scale=: The scale factor for rendered images
    --image=: Convert the first slide page into an image file
    --images=: Convert slide deck into multiple image files
    --jpeg-quality=: Set JPEG image quality
    --keywords=: Define comma-separated keywords for the slide deck
    --no-config: Prevent looking up for a configuration file
    --no-config-file: Prevent looking up for a configuration file
    --notes: Convert slide deck notes into a text file
    --og-image=: Define Open Graph image URL
    --pdf: Convert slide deck into PDF
    --pdf-notes: Add presenter notes to PDF as annotations
    --pdf-outlines: Add outlines (bookmarks) to PDF
    --pdf-outlines.headings: Make outlines from Markdown headings
    --pdf-outlines.pages: Make outlines from slide pages
    --pptx: Convert slide deck into PowerPoint document
    --template=: Choose template
    --theme-set=: Path to additional theme CSS files
    --theme=: Override theme by name or CSS file
    --title=: Define title of the slide deck
    --url=: Define canonical URL
    -I, --input-dir=: The base directory to find markdown and theme CSS
    -c, --config=: Specify path to a configuration file
    -h, --help: Show help
    -o, --output=: Output file path
    -p, --preview: Open preview window
    -s, --server: Enable server mode
    -v, --version: Show versions
    -w, --watch: Watch input markdowns for changes
documentation:
    command: '[AI] "Marp" is a progressive Markdown processor for creating presentations. It extends standard Markdown syntax with features specifically designed for slides, such as sections, sub-sections, and speaker notes. Marp converts markdown files into HTML or PDF formats that can be used to create dynamic and interactive presentations. It also supports JavaScript plugins to add additional functionality like quizzes or animations.'
    flag:
        allow-local-files: '[AI] `--allow-local-files` is a command-line option for Marp, a markdown presentation writer. It grants permission to Marp to read and display local files (i.e., files stored outside of the project directory) during slides'' content rendering. This flag ensures proper functioning when using external files, like images or data files, within your Markdown presentations.'
        author: '[AI] `--author` is an option used in Marp, a markdown presentation writer. It specifies the author name for the generated slide presentations. This information can be displayed during the presentation or included in the output slides'' metadata.'
        bespoke.osc: '[AI] The `--bespoke.osc` flag is used with the Marp presentation tool. It stands for "Bespoke Outline Slides Charter" and is an option to customize the outline slides generated by Marp. When this flag is set, Marp will generate an additional slide that displays the headings of the main sections in the presentation as an outline, allowing the audience to quickly navigate through the content.'
        bespoke.progress: '[AI] The `--bespoke.progress` flag for the Marp presentation tool modifies the output of Marp''s progress bar during compilation. It allows customization of the appearance and style of the progress bar in the terminal output, enabling users to tailor it to their preferences or branding.'
        bespoke.transition: '[AI] The `--bespoke.transition` flag in Marp (Markdown Presentation Framework) is used to customize the transition effect between slides during a presentation. By default, Marp uses simple slide fades for transitions. However, with this flag, you can define your own CSS transitions or use pre-built ones from popular libraries like SlickGrid, Isotope.js, or Flip.js for more complex and visually appealing slide transitions between presentations.'
        config: '[AI] `marp --config` is a command used with Marp, a Markdown presentation writer. It allows you to specify a configuration file, which can contain customizations such as theme, output format, and other settings for your Marp presentations. This command helps users to apply consistent styles or customize their presentations beyond the default settings.'
        config-file: '[AI] The `--config-file` option in Marp (a Markdown presentation writer) is used to specify a custom configuration file instead of using the default one. This can be helpful when working with complex projects or when you want to override certain Marp settings. The configuration file should be written in JavaScript and saved with a `.marp.js` extension. For example, `marp present --config-file myConfigFile.marp.js`.'
        description: '[AI] `--description` is an option in Marp, a markdown presentation writer, used to provide a brief explanation or summary of the content of a slide or presentation. It accepts a string argument and adds the description to the output, typically displayed below the title on the slide. For instance, when creating a presentation with multiple slides, `--description` can be helpful in providing context to the audience about what each slide covers.'
        engine: '[AI] `marp --engine` is a command-line option for Marp, a Markdown presentation writer and compiler. The `--engine` flag is used to specify which rendering engine Marp should use when generating slides. Commonly used engines include WebGL (for browsers), PDF, PNG images, or even custom engines for specific purposes. Using this flag allows users to choose the output format based on their presentation needs and target environment.'
        help: '[AI] `marp --help` is a command used in Marp, a markdown presentation writer. This command displays the help information for Marp. It provides an overview of Marp''s usage, options, and arguments. Users can run this command to familiarize themselves with Marp or as a quick reference when using specific features.'
        html: '[AI] `marp --html` is a command-line option for the Markdown Presentation Format (Marp) tool. It specifies that the output of Marp''s conversion process should be in HTML format instead of other available formats like PDF, SVG, or MJS. In this mode, Marp generates an HTML file that can be opened in web browsers to view the presentation. The generated HTML file includes the presentation slides, formatting, and interactivity, making it ready for online sharing or embedding on websites.'
        image: '[AI] The `--image` option in Marp (Markdown Presentation Framework) is used to specify the Docker image that should be used to build and run a presentation. This image can include all the necessary dependencies for running Marp slides, such as Node.js, npm, and other required libraries or tools. The `--image` flag allows you to use a pre-built Docker image instead of installing these dependencies locally, making it easier to create and deliver presentations in various environments.'
        image-scale: '[AI] The `--image-scale` flag in Marp (Markdown Presentation Framework) is used to set image scaling properties during export to various formats like PDF, SVG or HTML. It accepts a width and/or height value in pixels, percentage, or other valid CSS units (such as ''auto'' or ''cover''). For example, `--image-scale 50%` scales down images by 50%, while preserving their aspect ratio, to fit within the presentation area. By default, images keep their original size when exported.'
        images: '[AI] `--images` is an option used with Marp, a markdown presentation writer and Previewer. This flag enables the use of local or remote images in slides during the presentation. When you provide this flag followed by image paths or URLs, Marp will fetch and embed the media content into the generated HTML output for seamless rendering during the live presentation.'
        input-dir: '[AI] `--input-dir` is a command-line option for Marp, a Markdown presentation writer. It specifies the input directory where Marp should look for Markdown files to be converted into presentations. Multiple directories or individual files can be provided as arguments. When using this option, Marp will recursively search for valid Markdown files in the specified directories and process them into a single output presentation.'
        jpeg-quality: '[AI] The `--jpeg-quality` flag in Marp (Markdown Presentation format) is used to specify the JPEG quality level when exporting slides that contain images as JPEGs. A higher value results in better image quality but larger file size, while a lower value produces smaller files with less image quality. For instance, `--jpeg-quality 100` sets the highest quality and largest files, while `--jpeg-quality 50` sets a lower quality and smaller files.'
        keywords: '[AI] The `--keywords` option in Marp (Markdown Presentation Framework) is used to specify a list of keywords or search terms. These keywords will be highlighted in presentations created from Markdown files using the Marp processor. When you include `--keywords <term1, term2, term3>` in your Marp command, it will automatically highlight these specific terms during rendering, making them easier to identify and follow along with in the presentation.'
        no-config: '[AI] `marp --no-config` is a command-line option for the Markdown Presentation mode (Marp) tool, which disables loading any configuration files. With this option, Marp will use only the default settings and apply them to the given presentation file without considering any external configuration files.'
        no-config-file: '[AI] `marp --no-config-file` is a command-line option for the Markdown Presentation Engine (Marp) to prevent it from loading a configuration file during execution. This means that any Marp presentation settings or customizations must be specified directly on the command line, rather than in a separate config file. It''s useful when you want to create a self-contained presentation without any external configuration dependencies.'
        notes: '[AI] `--notes` is a command-line option for Marp, a presentation writer and compiler. It enables the generation of notes slides along with the main slides in the output. These notes slides are visible only when presenting with an appropriate tool like Vim, Capacitor, or Marp Deck. The notes serve as speaker''s guidance during presentations to elaborate on points made in the corresponding main slides.'
        og-image: '[AI] `--og-image` is an option used with Marp, a markdown presentation writer. It specifies the open graph image to be displayed when sharing a slides presentation on social media platforms. The image is fetched from the provided URL. This helps in creating visually appealing previews of presentations when they are shared online.'
        output: '[AI] `--output` is an option used in Marp, a Markdown presentation writer. It specifies the output format for the generated slides. Supported formats include HTML, PDF, and SVG. For example, `--output html` generates an HTML file, while `--output pdf` produces a PDF document.'
        pdf: '[AI] `marp --pdf` is a command in Markdown Preprocessor (Marp) for generating PDF output from Markdown files. Marp is an extension of standard Markdown language that adds presentation capabilities with markdown cells and supports interactive elements like math, charts, and widgets. The `--pdf` flag instructs Marp to compile the Markdown content into a standalone PDF document instead of HTML or other formats.'
        pdf-notes: '[AI] `--pdf-notes` is a flag used in Marp, a Markdown presentation writer and compiler. This option enables the inclusion of presenter notes in the generated PDF output. These notes are visible when using PDF viewers that support this feature, such as Adobe Acrobat Reader DC, allowing presenters to see additional information while giving a presentation, which is not visible to the audience.'
        pdf-outlines: '[AI] The `--pdf-outlines` flag in Marp is used to generate outline view for a PDF output of a Markdown presentation. When this option is enabled, an additional outline page will be included in the generated PDF document. Each slide title and its corresponding level (header) in the Markdown source file will be listed on the outline page. This feature enables users to navigate through the slides easily in the PDF viewer by using the outline.'
        pdf-outlines.headings: '[AI] The `--pdf-outlines.headings` flag in Marp (a Markdown presentation writer) generates a table of contents as outlines in the PDF output. This means that when you export your Markdown slides to PDF, each heading in your presentation will be represented in the document''s table of contents with a clickable link. When you open the PDF, you can use this table of contents to navigate through your presentation easily.'
        pdf-outlines.pages: '[AI] The `--pdf-outlines.pages` flag in Marp (a markdown presentation writer) generates a PDF output with page outlines. This means that each page of the PDF document will have an outline or table of contents, which can be used to quickly navigate through the document using the Adobe Reader''s Navigation Panel or other PDF readers supporting this feature.'
        pptx: '[AI] `marp` is a Markdown presentation compiler, and `--pptx` is an option that specifies the output format as a PowerPoint Presentation (PPTX) file instead of the default HTML slide deck format. When using `marp` with this option, the Markdown content is converted into slides with speakers notes and other multimedia support typically found in PowerPoint presentations.'
        preview: '[AI] The `--preview` flag in Marp is used to generate a live preview of your Markdown presentation during editing. It starts a local web server and opens the generated slides in a new browser tab or window, allowing you to see the changes in real-time as you edit your markdown file. This can be helpful for debugging and ensuring that the formatting and transitions look good before exporting the final slides.'
        server: '[AI] `marp --server` is a command-line option for the Marp presentation tool. It starts Marp in server mode, which listens on a local port (default is 3000) and serves Markdown with live code rendering over HTTP. This allows real-time updates when developing presentations, as changes are automatically reloaded and synced to the browser without needing to manually refresh the page.'
        template: '[AI] `--template` is a flag used in Marp, a Markdown presentation writer. This flag allows users to specify a custom template file for their presentation. The template file contains handlebars expressions that can be used to inject dynamic content into the slides. For example, you might use `--template` to include your company logo on each slide or to set a custom slide design.'
        theme: '[AI] `marp --theme` is a command-line option used with Marp, a markdown presentation writer. The option sets the theme for the output slides. Marp supports several predefined themes or you can use custom themes by providing a valid theme file. This helps in customizing the look and feel of your presentations.'
        theme-set: '[AI] `--theme-set` is a command-line option for Marp, a Markdown presentation writer. This option sets a specific theme for the output slides. With this flag, you can customize the visual appearance of your Marp presentations by choosing from available themes without having to write any additional CSS code. The exact themes that are available may depend on which Marp version or community-created themes you''re using.'
        title: '[AI] `--title` is an option in Marp, a markdown presentation writer, used to set the title of the slide show. This option takes a string argument and sets it as the title of the presentation displayed in the browser tab or slide overview. For example, `marp deck --title="My Presentation"` sets the title of the presentation to "My Presentation".'
        url: '[AI] The `--url` flag in Marp (Markdown Presentation Framework) is used to specify the URL of the Markdown file or HTTP endpoint for fetching a live presentation. When you provide a URL with this flag, Marp will make an HTTP request to that location and render the presentation directly from it, instead of reading a local file. This is useful when you want to share your presentation on a website or in real-time collaboration sessions without having to export the slides as images or PDFs.'
        version: '[AI] `marp --version` is a command used in the Marp framework for Markdown presentations to check and display the currently installed version of the Marp CLI (Command Line Interface) tool. The output will typically include the major and minor version numbers, along with any relevant build metadata. It helps users ensure they have the latest or desired version of Marp installed in their system for effective presentation creation and delivery.'
        watch: '[AI] `marp --watch` is a command used in Markdown Presentation (Marp) software. It starts Marp in live preview mode, automatically rebuilding and updating the output as marked down files change in real-time. The `--watch` flag enables this feature, making it ideal for developing and testing presentations continuously.'
