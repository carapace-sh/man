# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - ls
description: List codespaces
flags:
    --json*=: Output JSON with the specified `fields`
    -L, --limit=: Maximum number of codespaces to list
    -R, --repo=: 'Repository name with owner: user/repo'
    -o, --org=: The `login` handle of the organization to list codespaces for (admin-only)
    -q, --jq=: Filter JSON output using a jq `expression`
    -r, --repo-deprecated&=: (Deprecated) Shorthand for --repo
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
    -u, --user=: The `username` to list codespaces for (used with --org)
    -w, --web: List codespaces in the web browser, cannot be used with --user or --org
documentation:
    command: '[AI] `gh codespace list` is a GitHub CLI (git-hub) command used to list all active codespaces for the current user in a GitHub organization or repository. A codespace is an ephemeral development environment provided by GitHub that allows users to write, build, and test code directly in the cloud with preconfigured tools and runtimes. This command displays essential information about each codespace such as its name, status (running or stopped), creation time, and the repository associated with it.'
    flag:
        jq: '[AI] `gh codespace list --jq` is a command used with the GitHub CLI (gh) to list all active codespaces, which are lightweight development environments provided by GitHub for building and testing code in the cloud. The `--jq` flag instructs gh to output the JSON response directly to the terminal instead of formatting it as a table. The command `gh codespace list` retrieves the list of active codespaces, and when combined with `--jq`, allows for further processing and filtering of the JSON data using JQ query language.'
        json: '[AI] `gh codespace list --json` is a command from the GitHub CLI (gh) tool used to list all active codespaces for a given repository or organization. The `--json` flag indicates that the output should be in JSON format, making it easier to parse and process programmatically. Each JSON object in the output represents an individual codespace, providing details such as its name, creation time, status, and associated GitHub repository or organization.'
        limit: '[AI] `gh codespace list --limit` is a command used in the GitHub CLI (Command Line Interface) tool, specifically within the context of managing GitHub Codespaces. This command lists the available GitHub Codespaces for the current repository or organization, with an optional limit to display a specific number of results. By default, it displays up to 25 items. Using `--limit` followed by a number allows you to specify how many codespaces you want to see in the output. For example, `gh codespace list --limit 10` will only show the first 10 codespaces that match the filtering criteria.'
        org: '[AI] `gh codespace list --org` is a command used in GitHub''s CLI (Command Line Interface) tool, gh. This specific command lists all codespaces for an organization. A codespace is a lightweight, ephemeral development environment for building and testing code that''s integrated with GitHub. Using the `--org` flag filters the output to show only the codespaces belonging to the specified organization.'
        repo: '[AI] `gh codespace list --repo` is a command provided by GitHub''s CLI tool (gh) that lists all the codespaces created for the specified repository. The "--repo" argument specifies the name of the repository whose codespaces should be displayed.'
        repo-deprecated: '[AI] The `gh codespace list --repo-deprecated` command is used with GitHub''s CLI (Command Line Interface) tool, gh, to list all the deprecated code spaces associated with a repository. Code spaces are environments for hosting and running continuous integration, continuous delivery, and continuous deployment workflows on GitHub. When a new feature or service replaces an old one, the older version may be marked as deprecated. This command helps users identify any such deprecated code spaces in their repositories to facilitate transitioning to the newer versions if necessary.'
        template: '[AI] `gh codespace list --template` is a command used in GitHub''s Git Hub CLI (Command Line Interface) tool, gh, to list current and previous GitHub Codespaces. The `--template` option allows specifying custom output format using Go templates. This command displays the list with desired columns or data, which can be customized based on the provided template.'
        user: '[AI] `gh codespace list --user` is a command used with the GitHub CLI (gh) tool to list all codespaces created by a specific GitHub user. The `codespace list` sub-command lists all available codespaces, and adding the `--user` flag filters the output to only show codespaces owned by the specified user.'
        web: '[AI] `gh codespace list --web` is a command from GitHub''s CLI tool (gh) that lists currently available web-based code environments, also known as Codespaces, for a specific repository or organization in GitHub. It allows you to view and manage these ephemeral development environments directly from the terminal. Each listing provides essential information like environment type, status, and URL for accessing the corresponding codespace.'
