# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: login
description: Log in to a cluster and retrieve the session certificate.
flags:
    --browser=: Set to 'none' to suppress browser opening on login
    --kube-cluster=: Name of the Kubernetes cluster to login to
    --no-overwrite&: Whether to overwrite the existing identity file.
    --no-request-nowait&: Finish without waiting for request resolution
    --no-verbose&: Show extra status information
    --out=: Identity output
    --overwrite: Whether to overwrite the existing identity file.
    --request-id=: Login with the roles requested in the given request
    --request-nowait: Finish without waiting for request resolution
    --request-reason=: Reason for requesting additional roles
    --request-reviewers=: Suggested reviewers for role request
    --request-roles=: Request one or more extra roles
    -f, --format=: 'Identity format: file, openssh (for OpenSSH compatibility) or kubernetes (for kubeconfig)'
    -v, --verbose: Show extra status information
documentation:
    command: '[AI] The `tsh login` command is not a standard Linux or Unix command. It seems to be specific to Tenable Security Center''s Tenable Security Hub (TSH), which is a continuous monitoring and security analytics platform. This command is likely used to initiate a login session into the TSH environment for managing and monitoring security data. For more detailed information, please refer to Tenable''s documentation.'
    flag:
        browser: '[AI] The `tsh` (Telnet Secure Hub) command `tsh login --browser` is used to initiate a secure SSH session in a graphical browser window instead of a terminal. This can be useful for accessing remote systems from environments where a terminal emulator isn''t readily available, such as a web browser on a desktop or mobile device. The command starts the TSH client which then opens an HTML5 based secure shell terminal within the specified web browser.'
        format: '[AI] The `--format` option in the `tssh` (Tab Sync Secure Shell) command `login` is used to customize the output format of the SSH connection information displayed by the `tssh list-sessions` or `tssh attach` commands. It accepts a template string with placeholders for various session attributes, such as hostname, user, port number, etc. The output format can be tailored to fit specific requirements for easier identification and management of multiple sessions. For instance, `--format="%h:%p %u@%r (%C)"` would display the format: "Host:Port User@Host".'
        kube-cluster: |-
            [AI] The `tsh login --kube-cluster` command is used with the Tanzu CLI (Tanzu Service Mesh by VMware), which is a tool for managing service mesh functionality, such as traffic management and observability, in Kubernetes environments.

            This command specifically initiates a new `kubectl` session context-targeted to a specific Kubernetes cluster managed by Tanzu Kubernetes Grid. The `--kube-cluster` flag is used to specify the name or alias of the desired cluster. This allows users to easily switch between different clusters in their environment, with the Tanzu CLI handling the necessary context changes, including updating the current `kubectl` configuration.
        no-overwrite: '[AI] The `--no-overwrite` flag used with the `tssh` (TeraTerm SSH) login command prevents the automatic overwriting of existing sessions in the TeraTerm session list. If a session with the same name already exists, instead of replacing it, a new session will be created without disturbing the existing one. This flag is useful when you want to maintain multiple sessions with the same name for different connections.'
        no-request-nowait: |-
            [AI] The `tsh` command with the `login` subcommand and the options `--no-request` and `--nowait` is used to SSH into a remote server without waiting for a prompt or requesting a new session if one is already running.

            Here's a brief explanation of each option:

            * `--no-request`: This option tells `tsh` not to ask for confirmation before connecting to the server, assuming that you want to connect even if a session is already open.
            * `--nowait`: This option tells `tsh` not to wait for a prompt from the server before returning control back to your local terminal. Instead, it will immediately return once the connection has been established, allowing you to continue working in your local terminal without being tied to the remote session's prompt.

            Together, these options allow you to quickly and efficiently establish multiple sessions with a remote server without having to wait for prompts or confirmations, making them useful for automation scripts or managing multiple sessions at once.
        no-verbose: '[AI] `tsh` is the abbreviation for "Telnet Secure Hub," which is a tool used to manage secure shell (SSH) connections. The command `tsh login --no-verbose` instructs `tsh` to establish an SSH connection to a remote server without displaying verbose output during the login process. In other words, it logs in quietly.'
        out: '[AI] The `--out` option in the `tsh login` command for Tenable Security Center is used to specify a file path to save the generated SSH key or config file. The output file will contain the necessary authentication details, such as private key or passphrase, which can be used to connect to remote systems managed by SecurityCenter via Tenable''s Technology Addiction Program (TAP) or other supported methods. This option helps simplify the process of managing and storing SSH keys for multiple users or sessions.'
        overwrite: '[AI] The `--overwrite` flag in the `tsh login` command for TinySSH is used to force replace an existing SSH key in a remote server''s authorized_keys file with the new one being uploaded. This can be useful when you want to update your SSH keys on a remote system without removing the old ones first, or when dealing with situations where there might be conflicting keys with the same name. Note that using this flag should be done with caution as it could potentially allow unintended access if used on an incorrect key.'
        request-id: '[AI] The `tsh login` command is a part of the Terraform Secrets Manager (TSH), which is used to interact with encrypted secrets stored in the Hashicorp''s Terraform Cloud. The `--request-id` option is provided with this command for specifying the unique identifier of a previously created login request. This identifier is generated when you initiate a new login request using the `tsh login --init` command, and it allows you to complete the authentication process by providing the generated code or token in another interface (for example, Terraform Cloud UI) before finally running the `tsh login --request-id <REQUEST_ID>` command to finish the login.'
        request-nowait: '[AI] The `--request-nowait` option in the `tsh` (Telnet and SSH) command `login` is used to submit a login request to a remote host without waiting for a response or connection establishment. In other words, it allows you to submit the login request asynchronously and continue with other commands in your current terminal session while the login process runs in the background. If the connection is established successfully, a message will be displayed indicating the new terminal window or tab where the connection was established. However, if the login fails or the remote host does not respond, an error message will be displayed in the terminal.'
        request-reason: '[AI] The `--request-reason` option is used with the `ssh` command in the `tsh` (Tiny Secure Shell) suite for SSH client connections. It allows specifying a reason or description for the connection request, which is sent to the remote server''s authentication log when the connection is initiated. This can be helpful for keeping track of the purpose of each SSH session and enhancing security logging.'
        request-reviewers: '[AI] The `git tsch login --request-reviewers` command is used to request specific users to review your changes before merging them into a Git repository using the Git Service Hook called "Git Tunnel for TeamSearch (tsch)". This command sends a request email to the specified reviewers, inviting them to review and comment on your changes. It helps ensure that code quality is maintained, and potential issues are identified and addressed before merging.'
        request-roles: '[AI] `ssh`''s `--request-roles` option is used when connecting to an OpenSSH server that supports the Role-Based Access Control (RBAC) mechanism. The option allows the client to request specific roles during the authentication process. These roles define a set of permissions and access control for the user session. The server then decides whether to grant the requested roles based on its configuration. This feature helps in managing more granular access control for SSH sessions, beyond the standard user/password or key-based authentication.'
        verbose: |-
            [AI] `tsh` is short for TeraTerm SSH Client, a popular terminal emulator used to securely access remote servers via SSH (Secure Shell) protocol. The command `tsh login --verbose` is used to execute an SSH login session with increased output detail.

            When executed, this command will display extensive information about the authentication and connection process in real-time. This includes details such as the SSH version being used, the server's response messages during the handshake process, and any keys or certificates that are exchanged. In essence, it is a helpful diagnostic tool for troubleshooting potential issues with SSH connections or for gaining insight into the underlying protocol interactions.
