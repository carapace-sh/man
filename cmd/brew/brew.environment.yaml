# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: environment
description: Summarise Homebrew's build environment as a plain list
flags:
    --debug: Display any debugging information.
    --help: Show this message.
    --plain: Generate plain output even when piped.
    --quiet: Make some output more quiet.
    --shell: Generate a list of environment variables for the specified shell, or `--shell=auto` to detect the current shell.
    --verbose: Make some output more verbose.
documentation:
    command: '[AI] The `brew environment` command is not a valid command in Homebrew, which is a popular package manager for macOS. There is no such command in Homebrew''s standard functionality. If you meant to ask about managing or listing the environments (like virtual environments or shell environments) created with Homebrew, you should use other commands like `brew list --env` or `brew shell-env`.'
    flag:
        debug: '[AI] The `brew env --debug` command is used with Homebrew, a popular package manager for macOS. It prints out detailed debug information about the current Homebrew environment, including the paths to various Homebrew directories and variables that affect its behavior. This can be helpful for troubleshooting Homebrew-related issues or for understanding how Homebrew is configured on your system.'
        help: '[AI] The `brew env help` command is used with Homebrew, a popular package manager for macOS and Linux. This command displays detailed help information about the `brew env` sub-command. `brew env` allows you to create, list, and switch between Homebrew environments, which are isolated sets of installed packages and their dependencies. The help text explains how to use `brew env` to manage these environments effectively.'
        plain: '[AI] `brew env --plain` is a command used with Homebrew, a popular package manager for macOS. This command outputs the current Homebrew installation''s paths as plain text, without any extra formatting or comments. It provides the locations of essential directories like the Homebrew Cellar, the Homebrew prefix, and the shims directory. These paths can be useful when configuring other tools or scripts that require access to Homebrew''s installation.'
        quiet: '[AI] `brew env --quiet` is a command used in Homebrew, a popular package manager for macOS. This command generates and prints a shell script snippet that sets up the Homebrew environment variables and adds the Homebrew tap to your system''s package repository. The `--quiet` option silences any informational messages or progress indicators during the command execution. This can be useful when incorporating the command output into scripts or automated workflows without needing extra console clutter.'
        shell: |-
            [AI] The `brew env` command is a function provided by Homebrew, a popular package manager for macOS. This command sets up the environment variables required to use Homebrew effectively in the terminal or shell of your choice.

            When you use `brew env --shell`, it returns the lines that should be added to your shell configuration file (such as .bashrc or .zshrc) to source and configure Homebrew automatically whenever you open a new terminal session. This way, you can ensure consistent access to Homebrew and its installed packages across different sessions.
        verbose: '[AI] `brew env --verbose` is a command used in Homebrew, a popular package manager for macOS. This command displays detailed information about the current Homebrew installation environment, including the locations of key directories such as the Homebrew Cellar, the tap list (a list of authorized Homebrew repositories), and the shims directory. It also shows the paths to the Homebrew executables and the version of Homebrew itself. This command can be helpful for debugging Homebrew-related issues or for understanding the configuration of a specific Homebrew installation.'
