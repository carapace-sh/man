# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: local
description: Generate the static Pod manifest file for a local, single-node local etcd instance
flags:
    --cert-dir=: The path where to save and store the certificates.
    --config=: Path to a kubeadm configuration file.
    --image-repository=: Choose a container registry to pull control plane images from
    --patches=: Path to a directory that contains files named "target[suffix][+patchtype].extension".
documentation:
    command: '[AI] The command `kubeadm init phase etcd local` is used to initialize and set up the Etcd key-value store as part of Kubernetes cluster management using Kubeadm. This command triggers the "etcd" phase during the initialization process which configures and sets up a local single-node Etcd cluster. Etcd is a distributed immutable key-value data store that stores the cluster''s configuration and state information. By running `kubeadm init phase etcd local`, you are starting an Etcd server on the same node where Kubeadm is being run, making it a single-node cluster.'
    flag:
        cert-dir: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster. The option `phase etcd local --cert-dir` specifies that this command should perform the initial setup for the etcd cluster component in a "local single-node" configuration, using the provided certificates directory for storing SSL certificates and keys. In other words, it sets up an Etcd server as part of the Kubernetes control plane on the local machine.'
        config: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster. The `phase etcd local` argument specifies that you want to use the Etcd local configuration, which means running an Etcd server locally on the machine where `kubeadm init` is being run. This is one way to initialize a single-node Kubernetes cluster. The `--config` flag indicates that `kubeadm` should output the necessary configuration files for the next steps in setting up the cluster, which include joining worker nodes and configuring kubelet and kube-apiserver. These files are saved to the current directory as `kubeadm-init-manifests.yaml`.'
        image-repository: |-
            [AI] `kubeadm init` is a command-line tool for setting up a Kubernetes cluster using kubeadm, a open-source project used to deploy and manage Kubernetes clusters.

            The `phase etcd local` argument specifies that an Etcd server will be installed locally on the machine running this command. Etcd is the distributed key-value store used by Kubernetes for storing the cluster's configuration data and maintaining its cluster state.

            The `--image-repository` flag indicates the container registry where kubeadm should pull the Etcd images from, typically set to a Docker registry like "docker.for.docker.com" or "gcr.io". This tells kubeadm which container image to use when creating the local Etcd server during initialization.
        patches: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster with a single master node. The `phase etcd local` argument specifies that `kubeadm` should perform the Etcd initialization phase using an local Etcd server. The `--patches` option allows applying one or more Etcd configuration patches to modify the default Etcd cluster settings. These patches are usually provided in the form of Kubernetes manifests or raw YAML data, and they can be used to change various aspects of the Etcd cluster such as network settings, security policies, or data persistence. By using `--patches`, you can customize the default Etcd configuration during the `kubeadm init` process to better suit your specific use case or environment.'
