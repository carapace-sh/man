# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: publish
description: Publish the current package to pub.dartlang.org
flags:
    -C, --directory=: Run this in the directory<dir>.
    -f, --force: Publish without confirmation if there are no errors.
    -h, --help: Print this usage information.
    -n, --dry-run: Validate but do not publish the package.
documentation:
    command: '[AI] `flutter pub publish` is a command used in Flutter development to publish a package to the public repository hosted by Google''s Cloud Platform. This command builds and archives your library or application, then authenticates and uploads it to the Maven and GitHub registries for others to access via `pubspec.yaml` dependencies.'
    flag:
        directory: '[AI] The `flutter pub publish --directory` command is used to publish a Flutter project as a package to the Flutter Package repository (pub.dev). The `--directory` option specifies the path to the root directory of the package that contains the `pubspec.yaml` file, which describes the package and its dependencies. This command authenticates with pub.dev using your configured Dart account, builds the package based on the `flutter build` command, and then uploads the built artifacts to the repository. After publishing, other developers can easily discover and use your package in their Flutter projects by adding it as a dependency in their `pubspec.yaml` file.'
        dry-run: '[AI] `flutter pub publish --dry-run` is a command used in Flutter development for previewing a publication to the package index before actually publishing it. It simulates the publication process and shows what would be uploaded without making any changes to the repository or the package index. This can help prevent accidental publishing of incorrect or outdated packages.'
        force: '[AI] `flutter pub publish --force` is a command used in the Flutter framework to publish an updated version of a package to the public repository (called pub.dev). The `--force` option is used when the publisher wants to override existing versions, possibly overriding changes made by other developers inadvertently or maliciously. This command pushes the new version to the repository and updates the corresponding entry on pubspec.yaml file. Using this command should be done with caution, as it can potentially disrupt ongoing development for other projects using the published package.'
        help: |-
            [AI] `flutter pub publish` is a command-line tool used in Flutter development for publishing packages to the `pub.dev` registry. The `--help` option provides information about how to use this command effectively:

            * It shows a brief description of the command, explaining that it is used to publish your packaged library or application to the Maven Central repository.
            * It lists the possible arguments and options, including `-d`, which allows you to specify a version tag for the published package, and `--source` to specify a custom repository URL.
            * It provides usage examples, such as `flutter pub publish --dart --main=lib/myapp.dart` for publishing a Flutter application or `flutter pub publish --dart-define=MY_DEFINE=value` for defining dart definitions during the build process.
            * It mentions that you need to have your package dependencies listed in `pubspec.yaml`, and that you should sign your package with a GPG key before publishing it to ensure its authenticity.
            * Lastly, it informs that once published, new versions of the package will be available on `pub.dev` for others to use.
