# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: input
description: Prompt for some input
flags:
    --char-limit=: Maximum value length (0 for no limit)
    --cursor.align=: Text Alignment
    --cursor.background=: Background Color
    --cursor.bold: Bold text
    --cursor.border-background=: Border Background Color
    --cursor.border-foreground=: Border Foreground Color
    --cursor.border=: Border Style
    --cursor.faint: Faint text
    --cursor.foreground=: Foreground Color
    --cursor.height=: Text height
    --cursor.italic: Italicize text
    --cursor.margin=: Text margin
    --cursor.mode=: Cursor mode
    --cursor.padding=: Text padding
    --cursor.strikethrough: Strikethrough text
    --cursor.underline: Underline text
    --cursor.width=: Text width
    --header.align=: Text Alignment
    --header.background=: Background Color
    --header.bold: Bold text
    --header.border-background=: Border Background Color
    --header.border-foreground=: Border Foreground Color
    --header.border=: Border Style
    --header.faint: Faint text
    --header.foreground=: Foreground Color
    --header.height=: Text height
    --header.italic: Italicize text
    --header.margin=: Text margin
    --header.padding=: Text padding
    --header.strikethrough: Strikethrough text
    --header.underline: Underline text
    --header.width=: Text width
    --header=: Header value
    --password: Mask input characters
    --placeholder=: Placeholder value
    --prompt.align=: Text Alignment
    --prompt.background=: Background Color
    --prompt.bold: Bold text
    --prompt.border-background=: Border Background Color
    --prompt.border-foreground=: Border Foreground Color
    --prompt.border=: Border Style
    --prompt.faint: Faint text
    --prompt.foreground=: Foreground Color
    --prompt.height=: Text height
    --prompt.italic: Italicize text
    --prompt.margin=: Text margin
    --prompt.padding=: Text padding
    --prompt.strikethrough: Strikethrough text
    --prompt.underline: Underline text
    --prompt.width=: Text width
    --prompt=: Prompt to display
    --timeout=: Timeout until input aborts
    --value=: Initial value (can also be passed via stdin)
    --width=: Input width (0 for terminal width)
documentation:
    command: '[AI] The `gum input` command is not a standard Linux or Unix command. It appears to be specific to the GUM (Graphical Utility Messages) library used in some graphical applications for GTK+ toolkit on Linux systems. This command is likely used internally by developers within an application to interactively test and receive user input during development. However, without more context or information about a specific application using this command, it''s not possible to provide a precise explanation.'
    flag:
        char-limit: '[AI] `gum input` is a command-line tool for collecting user input, often used in scripts or automated workflows. The `--char-limit` option sets a maximum number of characters for each line of user input. For example, `gum input --char-limit 50` would limit each line to 50 characters. This can be useful for ensuring consistent or concise responses and preventing long input that could cause formatting issues in subsequent processes.'
        cursor.align: '[AI] The `--cursor.align` flag in Git''s `git config` or `git config --global` command, when used with `gum input`, aligns the cursor to the end of the line during multiline edits made with interactive rebase or other Git commands that use the `gum` library for text editing. This can make the editing process more efficient by allowing users to type directly on the last character of each line without needing to press right arrow keys before entering new content.'
        cursor.background: '[AI] The command `gum input --cursor.background` is used with the Gum library in Node.js for creating interactive text-based user interfaces. This specific command sets the background color of the cursor to be displayed when using this library. It does not take any value, as the default is usually set to none or an invisible color. If you want to change the background color to a specific value, such as red (#FF0000), you can provide it as an argument like so: `--cursor.background=#FF0000`.'
        cursor.bold: '[AI] The `--cursor.bold` flag is a command-line option for PowerShell or Bash scripts using the `gum` package for interactive text input. This flag sets the cursor color to bold when the user is interacting with the input prompt. It''s useful for making the cursor stand out, improving visibility and user experience in terminal applications.'
        cursor.border: '[AI] `gum` is a popular Node.js package for interactive command-line interfaces. The option `--cursor.border` is a configuration setting used with this library. When passed as an argument to the `gum input` command, it enables the display of a border around the cursor while using the interactive text editor provided by `gum`. This can make the editing experience more visually clear and distinct.'
        cursor.border-background: '[AI] The `--cursor.border-background` flag in the `gum` library for Node.js is used to configure the background color of the cursor border when using certain input interactors, such as `textInput` or `passwordInput`. By default, this flag is set to `''#000000''`, which means black. You can pass a hexadecimal color code or a named color (e.g., `''red''`) as an argument to change the cursor border background color when initializing or updating the input interactors. For example, `--cursor.border-background="#FFFFFF"` sets it to white.'
        cursor.border-foreground: '[AI] The `--cursor.border-foreground` flag is an option used with PowerShell''s `Select-String` cmdlet, which is part of the Git for Windows (Git Bash) utility called `gum`. This flag sets the color of the border around the cursor when a search match is found during a text search operation in Git Bash. By default, this flag is set to an automatic color based on the terminal''s color scheme. However, users can change it manually by setting it to any valid ANSI color code or color name supported by their terminal emulator. For example, `--cursor.border-foreground red` will display the border around the search match cursor in red color.'
        cursor.faint: '[AI] The `--cursor.faint` option in the `gum` input library for Node.js is used to make the cursor blend with the background during text input. This can be helpful when working in a terminal application or command-line interface where having a visible cursor can distract from the text being entered. By setting this option, the cursor will appear less noticeable, allowing users to focus more on their input.'
        cursor.foreground: '[AI] The command `gum input --cursor.foreground` is used with the Gum terminal productivity application to set the color of the cursor''s foreground. The option `--cursor.foreground` specifies which color to use for the cursor, and the `input` subcommand is used to configure various input-related options in Gum. This command sets only the foreground color of the cursor.'
        cursor.height: '[AI] The command `gum input --cursor.height` is related to the GUM (Graphical User Interface Machine) library in Node.js, specifically its `input` module. This command sets the height of the cursor when using a text input widget created with this library. A higher value increases the size of the cursor, while a lower value makes it smaller.'
        cursor.italic: '[AI] The command `gum input --cursor.italic` is for the Gum interactive CLI tool and it is used to set the italic attribute for the cursor text style. When you run this command, the cursor''s text will be displayed in an italic font style. This can be useful for highlighting important or emphasized text as users interact with your application.'
        cursor.margin: '[AI] The command `gum input --cursor.margin` is used in zsh (Z Shell) to configure the cursor margin for the interaction with the Gum package, which is a fuzzy finder for the command-line interface. The option `--cursor.margin` sets the number of columns from the edge of the terminal where the cursor can appear when using Gum''s fuzzy finding features. A larger value will make the cursor move further away from the edge, improving readability in wider terminals. For example, `gum input --cursor.margin 5` sets the cursor margin to 5 columns.'
        cursor.mode: |-
            [AI] The command `gum input --cursor.mode` is used with the Gum.js library for creating interactive prompts in Node.js. This specific command sets the cursor mode of the input field.

            The cursor mode can be one of several options such as "inline" (the cursor appears as a vertical bar), "hidden" (the cursor is not visible), or "block" (the cursor appears as a block instead of a vertical bar). The exact behavior may depend on the terminal or console being used.
        cursor.padding: '[AI] The `--cursor.padding` flag in PowerShell''s `Select-Object` cmdlet (aliased as `select` or `gum`) modifies the appearance of the output by adjusting the padding space around the cursor position when the command is run in an interactive console. It doesn''t affect the data being selected; it only changes how the selection is displayed on the screen. For instance, setting it to a larger value can make the selected items more visually distinct, making it easier to identify which items have been selected. The default value for this flag is 0.'
        cursor.strikethrough: '[AI] The `--cursor.strikethrough` flag in `gum`, a popular command-line tool for creating interactive prompts, enables strikethrough text cursor style when using the tool''s input mode. This flag makes the text under the cursor appear struck through when typing or editing text within a given prompt, providing visual feedback to users that their input is being modified or deleted.'
        cursor.underline: '[AI] The `--cursor.underline` option in the `gum` command is used to enable or disable the underline display for the active input cursor in the terminal interface of the tool. When used with the `input` subcommand, it configures the appearance of the text input area. For instance, `gum input --cursor.underline true` turns on the underline display for the active cursor, while `false` disables it. The goal is to provide visual feedback to the user regarding the current focus of the input field.'
        cursor.width: '[AI] `gum input` is a command-line tool for handling input in Node.js applications. The option `--cursor.width` sets the width of the text cursor when using the `gum-cli-prompt` package for interactive input. By default, it''s set to 1; specifying a number greater than one will display a wider cursor.'
        header: |-
            [AI] The command `gum input --header` is used in the GUM (GitHub Updater for Mac) tool to prompt the user for input when creating or updating a GitHub repository. The `--header` option allows the user to specify a header or title for the input. For example, if you want to create a new file with the name "README.md" and set its content as the input, you can use the command:

            ```bash
            gum input --header="README.md" --title="New README File"
            ```

            This command will open an interactive terminal interface where you can enter the content for the new file under the title "New README File". The header "README.md" will be added as the first line of the file when it's created or updated in your GitHub repository.
        header.align: |-
            [AI] `gum input` is a command-line tool from the GUM (Git Utility Menu) package for handling Git inputs in terminal workflows. The option `--header.align` is used to specify how headers in Git diff and log output should be aligned when displaying the results on the terminal.

            For instance, `--header.align left` aligns the header columns to the left of their respective values, while `--header.align right` aligns them to the right. This can make the output more visually organized and easier to read when dealing with long commit messages or file paths in Git history.
        header.background: '[AI] The command `gum input --header.background` is used with the Gum.js library for creating interactive prompts in Node.js. This specific command sets the background color of a header section in a prompt. The flag `--header.background` defines the property for specifying the background color, while `input` refers to the type of prompt being created (in this case, an input prompt). No value is provided directly in the command for the background color, meaning that the current or default color will be used. If a hexadecimal color code, RGB value, or named color were added after the flag (e.g., `--header.background=#F44336`), it would change the background color accordingly.'
        header.bold: '[AI] The command `gum input --header.bold` is used with the Gum library in Node.js for creating interactive prompts. This specific command sets the header text to be displayed in bold format when asking for user input. When a prompt is rendered, this flag ensures that any text specified as the header will appear bolded for better visibility and emphasis.'
        header.border: '[AI] The `gum` command with the input option `--header.border` is used to add a border around the header of a table or other text output in Node.js using the `cli-table3` library. This flag modifies how the output looks by rendering a border around the header row when displaying tabular data. It doesn''t change the functionality of the command but rather affects its visual representation.'
        header.border-background: '[AI] The `gum input` command is a part of the Gum package for Node.js, which provides an interactive CLI experience for collecting user inputs. The option `--header.border-background` sets the border background color for the header text in the interactive prompt created by this command. It does not directly manipulate a file or data input, but rather affects the visual presentation of the command''s output.'
        header.border-foreground: '[AI] The command `gum input --header.border-foreground` is used in Gum, a versatile CLI library for Node.js. This specific command is for setting the border foreground color of headers displayed when using Gum''s interactive prompts. In simpler terms, it allows you to customize the color of the text that outlines the header labels in your terminal interface.'
        header.faint: '[AI] The `gum input` command with the option `--header.faint` is used in GitUp (Git-based local branch management for Git) to set the header lines of commit messages to be displayed in a faint or subdued color during a visual comparison of branches using GitUp''s merge tool. This helps in distinguishing the header text from the main body of the commit message, making it easier to understand the differences between the two branches.'
        header.foreground: '[AI] The `--header.foreground` option under `gum input` is used to set the color of text in the header of a terminal interface. This option allows users to customize the appearance of headers in the interactive prompts or messages displayed by certain applications or scripts, enhancing their visual experience. By default, this color is typically set to white on most terminals. However, using `--header.foreground` enables users to change it to any other valid color code or named color supported by their terminal emulator.'
        header.height: '[AI] The command `gum input` is a part of Gum, a CLI toolkit for Node.js. The `--header.height` option sets the number of lines for the header in the interactive text-based UI. For example, `gum input --header.height 3` would create a prompt with a three-line header.'
        header.italic: '[AI] The `--header.italic` flag is a command-line option used with Gum, a popular in-terminal interactive UI library for Node.js. This option sets the header text to be displayed in italic font when creating a new prompt or question. It does not affect the regular text display and helps to visually distinguish headers from other text within the terminal interface.'
        header.margin: '[AI] The command `gum input --header.margin` is used with the Gum package in Node.js to create an interactive terminal input where users can enter text. The `--header.margin` option sets the number of spaces before and after the header text that appears above the input prompt. For example, `--header.margin 5` would add a padding of 5 spaces around the header text. This can be useful for improving the visual presentation of the input prompt in the terminal.'
        header.padding: '[AI] The `--header.padding` flag in `gum`, a popular CLI (Command-Line Interface) library for Node.js, is used to customize the padding or spacing around header text displayed in the output of various commands. By passing a valid value to this flag, you can adjust the appearance of headers in the terminal interface to better fit your use case and visual preferences.'
        header.strikethrough: '[AI] `gum input` is a command from the GUM (GitHub Utility Module) library used to get user input in Node.js. The `--header.strikethrough` option configures the header of the interactive prompt to be displayed with a strikethrough style, indicating that the input provided will overwrite an existing value. This can be useful for confirming destructive actions or updating values in a configuration file, for example.'
        header.underline: '[AI] The command `gum input --header.underline` is used in the Gum CLI (Command Line Interface) tool for collecting user input. The `--header.underline` option adds an underline character (_) below the header text when displaying the interactive prompt to the user. This helps visually separate the header from the input field, making it clearer and more organized for the user.'
        header.width: |-
            [AI] The command `gum input --header.width` is a part of the Gum.js library, which is used for creating interactive CLI (Command Line Interface) applications in Node.js.

            This specific command is used to set the width of the header or title displayed when using certain Gum.js input prompts. The `--header` flag enables the display of a header, and `.width` specifies the desired width for that header in characters.
        password: '[AI] The command `gum input --password` is used with the GUM (Graphical Utility for Managers) CLI tool to request user input, specifically a password. The `--password` flag indicates that the input should be hidden as it''s typed for security reasons.'
        placeholder: '[AI] The command `gum input --placeholder` is used with the Gum library in Node.js for creating interactive prompts. The `--placeholder` option sets a default value or hint for the user input. When the command is run, it will display a prompt with the given placeholder text. Once the user types their input and presses enter, the input value replaces the placeholder text.'
        prompt: '[AI] `gum input` is a command-line utility from the Gum package in Node.js. The `--prompt` option is used to specify a custom prompt message for user input. When this command is run, it will display the specified prompt message and wait for user input which can then be processed by your script or application. For example: `gum input --prompt="Please enter your name:"`.'
        prompt.align: '[AI] The `--prompt.align` flag in GUM (Git Útiles de Miendo), a Git configuration management tool, is used to align prompts in the terminal when using interactive Git commands such as `git pull`, `git push`, or `git commit`. By default, Git may display prompts that are not aligned with each other. This flag ensures that all prompts are displayed in a neat and aligned manner for better readability. It is especially useful when dealing with long branch names or remote URLs.'
        prompt.background: '[AI] The `--prompt.background` option in PowerShell''s `gum` input function is used to customize the background color of the PowerShell prompt. When this option is set, any string value provided will modify the background color of the command prompt. For instance, setting it to `"Red"` would change the background color to red. This can be useful for enhancing the visual appearance or providing better distinction between different parts of the terminal output.'
        prompt.bold: '[AI] `gum` is a popular Node.js library used for creating interactive command-line interfaces. The `--prompt.bold` flag is an option that can be passed to the library''s `createPrompt` function when setting up a new prompt. This flag makes the text of the user input prompt appear in bold when displayed on the terminal, improving readability and making it stand out from the surrounding text.'
        prompt.border: '[AI] The `--prompt.border` flag for PowerShell''s `gum input` command is used to configure the border style of the text box that appears when using this command for user input. It accepts values such as "None", "Single", "Double", or a custom Unicode character sequence for a more complex border design. This flag allows users to customize the visual appearance of the input prompt, making it easier to differentiate between prompts and regular text in a terminal window.'
        prompt.border-background: '[AI] The `--prompt.border-background` flag in PowerShell''s `gum` input library refers to a configuration setting for customizing the appearance of PowerShell prompts. Specifically, it sets the background color for the border of the PowerShell prompt, which can be useful for enhancing the visual experience or making certain text stand out more clearly.'
        prompt.border-foreground: '[AI] The `--prompt.border-foreground` flag in PowerShell''s `gum` input library is used to configure the color of the border around the command prompt. This flag sets the foreground color for the prompt border, which can help make the prompt stand out and improve readability within a terminal or console window.'
        prompt.faint: '[AI] The `--prompt.faint` flag in PowerShell (using the GumPS Prompt module) sets the color scheme of the PowerShell prompt to be dimmed or subdued, making it less noticeable compared to the regular foreground color. This can be useful when working in low-light environments or wanting a minimalist look for your command line interface.'
        prompt.foreground: '[AI] The `--prompt.foreground` option in PowerShell''s `gum` input function sets the color of text for the command prompt. This is used to customize the appearance of the PowerShell prompt, making it easier to distinguish between different command execution states or environments.'
        prompt.height: '[AI] The `--prompt.height` flag in GUM (Graphical User Interface for Node.js) is used to set the height of the interactive console''s prompt message area. It takes an integer value indicating the number of lines in the terminal dedicated to displaying the prompt, including the command line and any status or secondary information. By default, it is usually set to one line. Adjusting this flag can help customize the look and feel of your Node.js interactive console.'
        prompt.italic: '[AI] The `--prompt.italic` flag is a command-line option for PowerShell''s `gum` package, which is used to interactively manage Git repositories. This flag modifies the appearance of the PowerShell prompt in Git bash terminals or similar environments, making the primary prompt text italic. This visual cue indicates that the terminal session is currently connected to a Git repository and can help developers quickly identify their active working directory.'
        prompt.margin: '[AI] The `--prompt.margin` flag in PowerShell''s `gum` input commander is used to configure the width of the blank space before the command prompt appears. This flag sets the margin size as a number, allowing you to adjust the distance between the last printed output and the new command prompt for better readability.'
        prompt.padding: '[AI] The `--prompt.padding` flag in GUM (Git Updater Manager) is used to customize the padding or spacing around the prompt message when interacting with Git command line interfaces. By default, Git displays a prompt message with some padding for readability. With this flag, users can adjust the amount of padding to their preference. A larger value increases the space between the prompt and other output, while a smaller value decreases it. This flag allows for fine-tuning of the Git terminal interface to enhance user experience.'
        prompt.strikethrough: '[AI] The `--prompt.strikethrough` flag is a command-line option for PowerShell''s `gum` input library. This flag modifies the appearance of the prompt text by adding a strikethrough attribute, making text appear crossed out. It''s primarily used to indicate that the previous command entered in the console did not execute successfully or had errors.'
        prompt.underline: '[AI] The `--prompt.underline` option in `gum` is a command-line argument used to enable an underlined cursor for interactive prompts displayed by the library. This can improve the visual experience and make it easier for users to follow the input prompt while using `gum` for collecting user input in Node.js applications.'
        prompt.width: '[AI] The `--prompt.width` flag in GUM (Git Usage Minifier) is used to set the width of the command prompt when running Git commands. By default, GUM sets the prompt width to 80 characters. However, you can use this flag to specify a different width if needed, for instance `gum input --prompt.width 120`. This can be helpful in environments where longer prompts are preferred or necessary, such as wide terminal windows.'
        timeout: '[AI] The `--timeout` option in the `gum` input library for Node.js sets a time limit for user input. If the user does not provide an input within the specified time, an error is thrown and the script can proceed with an alternative action or wait for user input again using other means. It helps ensure that scripts do not unintentionally wait indefinitely for user input and allows for more robust and efficient handling of user interactions.'
        value: |-
            [AI] The command `gum input --value` is a part of the Gum CLI (Command Line Interface) tool, which is used for creating interactive text-based applications or bots with custom prompts and validations. In this specific command:

            1. `gum` refers to the name of the CLI tool.
            2. `input` signifies that we are using a command related to user input.
            3. `--value` is an option provided to retrieve the previously entered value by the user for the given prompt, instead of re-prompting them. This can be useful when you want to store and use the previous input in your script or application without asking the user again.
        width: '[AI] The command `gum input --width` is a part of the Gum CLI (Command Line Interface) tool, which is used to create interactive prompts and collect user input in Node.js applications. The specific command sets the width of the terminal window for the input field. A larger width allows users to enter longer inputs more comfortably. For instance, `--width 100` would set the input field width to 100 characters.'
