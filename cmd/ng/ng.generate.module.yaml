# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: module
description: Creates a new, generic NgModule definition in the given or default project
flags:
    --flat: Create the new files at the top level of the current project root.
    --project=: The name of the project.
    --route=: The route path for a lazy-loaded module.
    --routing: Create a routing module.
    --routing-scope=: The scope for the new routing module.
    -m, --module=: The declaring NgModule.
documentation:
    command: '[AI] `ng generate module` is a command used in Angular CLI to create a new Angular module. It generates essential files for the module such as a component, a service, and a spec file (if applicable) with their respective TypeScript and HTML templates, along with the corresponding metadata in the module''s index.ts file. This command helps streamline the process of creating a new module in an Angular project.'
    flag:
        flat: '[AI] `ng generate module --flat` is a command used in Angular to create a new Angular module without generating associated files like component, service, or routing files. The `--flat` option indicates that only the necessary files for the module itself should be generated, keeping the creation process more minimal. This command is useful when you want to create a custom Angular module that will be used as a dependency in other parts of your application.'
        module: '[AI] The `ng generate module --module` command is used in Angular to create a new Angular module and specify that it should export and declare another existing Angular module as its main imported module. This can be useful for creating higher-order modules or feature modules where you want to import and reuse existing functionality from other modules. For example, `ng generate module my-feature --module my-shared-module` will create a new module named "my-feature" that imports and declares "my-shared-module" as its main imported module.'
        project: '[AI] `ng generate module` is a command used in Angular projects with the Angular CLI (Command Line Interface). This command generates a new Angular module using the Angular template, including a new folder with an index.ts file, and necessary files like components, services, and other related files based on the options provided. The `--project` option specifies which Angular project directory to generate the new module in. For instance, `ng generate module my-module --project=/path/to/my-project`.'
        route: '[AI] The `ng generate module --route` command is used in Angular to create a new Angular module with a corresponding route. In other words, it generates a new Angular module and sets up the necessary configuration for that module to be accessed through a specific route in an existing Angular application. This helps simplify the development process by automating the creation of components, services, and routing configurations for the new module.'
        routing: |-
            [AI] `ng generate module --routing` is a command used in Angular to create a new Angular module with routing configuration. This command uses the Angular CLI (Command Line Interface) and generates a new Angular module, including:

            1. A new TypeScript file for the module with the desired name.
            2. An appropriate folder structure (i.e., components, services, etc.).
            3. Routing configuration in a separate routing module file.
            4. AppRoutingModule updates to include the newly created module and its routing configuration.

            This command simplifies the process of creating an Angular module with associated routing configurations, which would typically involve more manual steps.
        routing-scope: '[AI] The `ng generate module --routing-scope` command is used in Angular to create a new Angular module with routing functionality. The `--routing-scope` option generates routing files within the current module''s folder instead of creating a new separate module for the routing. This can be useful when you want to keep the routing files closely related to the component files they control.'
