# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: web-worker
description: Creates a new, generic web worker definition in the given or default project
flags:
    --project=: The name of the project.
    --snippet: Add a worker creation snippet in a sibling file of the same name.
documentation:
    command: '[AI] The `ng generate web-worker` command is used in Angular to create a new web worker project. A web worker is a background script that can run separate from a web page''s main thread, allowing for better performance and responsiveness for complex tasks such as real-time data processing or large computations. This command generates the necessary files and structure for an Angular web worker application using TypeScript.'
    flag:
        project: |-
            [AI] The `ng generate web-worker --project` command is used in Angular to create a new web worker using the Angular CLI (Command Line Interface). A web worker is a JavaScript file that can run in the background, separate from a web page's main thread, allowing for improved performance and responsiveness.

            The `--project` flag specifies which Angular project to add the new web worker to. Without it, the CLI would create a new Angular application instead.

            Once created, you can write your web worker code inside the newly generated file located under `projects/{your-project}/src/workers/`. The worker will communicate with the main thread using messages passed through the `postMessage()` and `onMessageEvent` methods.
        snippet: '[AI] The `ng generate web-worker --snippet` command is used with Angular CLI to create a new web worker using the given snippet. A web worker is a JavaScript file that can run in the background, separate from the main browser thread, allowing for improved performance and responsiveness for tasks like handling heavy computations or real-time data processing. The `--snippet` option allows you to specify an Angular schematic (a collection of blueprints and generators) to create a web worker using predefined templates. This command generates the necessary files, sets up the communication between the main thread and the worker, and provides basic functionality for sending and receiving messages.'
