# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: login
description: Save an api token from the registry locally. If token is not specified, it will be read from stdin.
flags:
    --generate-keypair: Generate a public/secret keypair (unstable)
    --key-subject=: Set the key subject for this registry (unstable)
    --registry=: Registry to use
    --secret-key: Prompt for secret key (unstable)
    -h, --help: Print help
    -q, --quiet: Do not print cargo log messages
documentation:
    command: '[AI] `cargo login` is a Rust package manager command used to authenticate your Cargo account with the Crates.io registry. After running this command, you will be prompted to enter your username and password for the account, allowing you to publish and manage crates using that account in the Cargo build system. The `login` command ensures secure communication between your local environment and the Crates.io registry by generating a new SSH key pair and adding the public key to your account on the registry.'
    flag:
        generate-keypair: '[AI] `cargo login --generate-keypair` is a command used in Cargo, Rust''s package manager, to generate a new SSH key pair for use with Crates.io, the Rust package registry. This command creates a private-public key pair, which can then be added to your account on Crates.io for secure publication and management of crates (Rust packages) or dependencies. The generated keys are saved in your home directory''s `.ssh/` subdirectory by default.'
        help: |-
            [AI] `cargo login` is a command-line utility provided by Rust's package manager, Cargo, for managing authentication with crates.io, the central repository for Rust packages. The `--help` flag is used to display detailed help information about this command. Here's a brief summary of what you can expect:

            ```
            USAGE: cargo login [OPTIONS] -- [REGISTRY_TOKEN]

            Logs you in to crates.io using the given registry token.

            FLAGS:
            --help                 Prints help information and exits.
            --quiet                Suppress progress messages.
            --verbose              Prints extra verbose output.

            ARGUMENTS:
            REGISTRY_TOKEN        The token to use for authentication.
            ```

            This command logs you in to the crates.io registry using the provided token. It is typically used after obtaining a token through other means, such as generating it with `cargo generate-key`, or by getting it from a secure environment variable like an API key.
        key-subject: '[AI] The `cargo` command with the sub-command `login` is used to authenticate with a Crate Registry, such as crates.io, to publish or manage Rust packages. The `--key-subject` option specifies the subject identifier for the SSH key to be added to the registry for authentication. This helps ensure that the correct key is associated with your account and can be used to sign and publish Rust package artifacts. In summary, this command logs into a Crate Registry using an SSH key with a specific subject identifier.'
        quiet: '[AI] The `cargo` command with the subcommand `login` and the flag `--quiet` is used to log in or authenticate a Cargo account with the Crates.io registry. The `--quiet` flag means that Cargo will run in quiet mode, which suppresses progress messages and other output during the login process, making it suitable for use in scripts or automated workflows where silent execution is desired.'
        registry: '[AI] `cargo login --registry` is a command used in Rust programming language''s package manager, Cargo. It establishes a secure connection between your local Cargo configuration and a specific registry server, allowing you to download and publish crates (Rust packages) from or to that registry. This command authenticates with the registry using your GitHub or other supported authentication provider if configured, enabling seamless access to the registry''s contents.'
        secret-key: '[AI] The `cargo` command-line tool''s `login` subcommand is used to authenticate with the Crate Registry, which is where packages are stored and shared in the Rust programming language ecosystem. The `--secret-key` option is used to provide a personal access token (PAT) as an argument, which is then saved for future use when interacting with the registry through Cargo. This allows you to easily authenticate and publish crates without having to enter your PAT every time.'
