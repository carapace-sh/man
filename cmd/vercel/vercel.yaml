# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: vercel
description: Develop. Preview. Ship.
flags:
    --prod: Create a production deployment
    --regions=: Set default regions to enable the deployment on
    --with-cache: Retain build cache when using "--force"
    -A, --local-config=: Path to the local `vercel.json` file
    -C, --no-clipboard: Do not attempt to copy URL to clipboard
    -Q, --global-config=: Path to the global `.vercel` directory
    -S, --scope=: Set a custom scope
    -V, --platform-version: Set the platform version to deploy to
    -b, --build-env*=: Similar to `--env` but for build time only.
    -c, --confirm: Confirm default options and skip questions
    -d, --debug: Debug mode
    -e, --env*=: 'Include an env var during run time (e.g.: `-e KEY=value`). Can appear many times.'
    -f, --force: Force a new deployment even if nothing has changed
    -m, --meta*=: 'Add metadata for the deployment (e.g.: `-m KEY=value`). Can appear many times.'
    -p, --public: Deployment is public (`/_src` is exposed)
    -t, --token=: Login token
    -v, --version: Output the version number
persistentflags:
    -h, --help: Output usage information
documentation:
    command: '[AI] Vercel is a cloud platform for static sites and serverless functions, built on top of Next.js and Now.js. It simplifies deploying, hosting, and scaling web projects with features like automatic SSL, global CDN, real-time collaboration, custom domains, and more. With its user-friendly interface and focus on developer experience, Vercel enables fast and efficient workflows for modern web development.'
    flag:
        build-env: '[AI] `vercel --build-env` is a command used in Vercel, a cloud platform for static sites and serverless functions, to set environment variables during the build process. The flag passes custom environment variables as key-value pairs that are made available to the built application. This allows developers to configure their applications with dynamic values without hardcoding them.'
        confirm: '[AI] `vercel --confirm` is a command used in Vercel, a cloud platform for static sites and serverless functions. This command is used to deploy changes to your project without asking for confirmation at each step of the deployment process. By adding `--confirm` flag, you give an affirmative answer to all prompts that would otherwise ask for approval before continuing with the deployment. It streamlines the deployment process by eliminating the need for manual confirmation at each stage.'
        debug: '[AI] `vercel --debug` is a command-line flag used with Vercel, a cloud platform for static sites and serverless functions. This flag enables detailed output and error logs during deployment or build processes. It provides more information about what''s happening behind the scenes, making it useful for debugging and troubleshooting issues.'
        env: '[AI] `vercel --env` is a command used in Vercel, a cloud platform for static sites and serverless functions, to set environment variables during deployment. The `--env` option followed by key-value pairs allows defining custom environment variables that can be accessed in your application code. These variables are available at build time and runtime. This way, you can manage sensitive information or configuration values securely while keeping them separate from the source code.'
        force: '[AI] `vercel --force` is a command-line argument used with Vercel, a JavaScript hosting and deployment platform. This argument allows users to bypass certain safety checks and deploy changes to their projects even if there are potential issues or conflicts. It''s important to note that using this option should be done with caution, as it may result in unintended consequences such as data loss or broken functionality. In general, `--force` is recommended for advanced users who understand the risks involved and need a quick way to force-deploy changes without waiting for Vercel''s automated checks to complete.'
        global-config: '[AI] `vercel --global-config` is a command used with Vercel, a cloud platform for static sites and serverless functions. This command sets or updates global configuration options for your Vercel account. For instance, you can use it to set the default project directory when you log in to Vercel from the command line or configure continuous deployment for specific repositories. These settings apply across all projects within the account.'
        local-config: '[AI] `vercel --local-config` is a command used with Vercel, a cloud platform for static sites and serverless functions. This command allows you to set local configuration overrides for your project before deploying it. The flag takes a JSON file as an argument, which contains the key-value pairs of the configurations you want to override. These overrides persist across builds and deployments until they are changed or removed. It''s useful when you need to customize settings that aren''t supported in the Vercel dashboard or when working offline.'
        meta: '[AI] The `--meta` flag in Vercel is used to set custom metadata for a Next.js or Now.sh project during deployment. This data is not exposed publicly and can be useful for internal tracking, environment variables, or other purposes. For example, you might use it to pass a build number, deploy environment, or specific configuration values to your application at runtime. The metadata is set as key-value pairs and can be accessed using the Vercel API or CLI.'
        no-clipboard: '[AI] The `--no-clipboard` flag is a command-line option for Vercel, a cloud platform for static sites and serverless functions. This flag disables the automatic copying of project URLs or other output to the system clipboard after deployments or builds. It''s useful when you don''t want this functionality for security reasons or if you prefer managing clipboard data manually.'
        platform-version: '[AI] `vercel --platform-version` is a command used with Vercel, a cloud platform for static sites and serverless functions. This command is used to specify the desired Node.js runtime version for your project while deploying. For instance, if you want to use Node.js v14.x for your deployment, you can run `vercel --platform-version node@14`. This helps ensure your application runs on a compatible runtime environment during deployment.'
        prod: '[AI] The `vercel --prod` command is used in Vercel, a cloud platform for static sites and serverless functions, to deploy an application in production mode. When you run this command, Vercel builds your project using the production configuration (if it exists), optimizes it for performance, and makes it publicly accessible via a unique URL. It also sets up continuous deployment so that future pushes to your Git repository will automatically trigger a new production build and deploy.'
        public: '[AI] The `vercel --public` command is used with Vercel, a cloud platform for static sites and serverless functions, to make a project publicly accessible. When you run `vercel --public`, it builds and deploys your project for the world to access via a unique URL provided by Vercel. This command is typically used when you want to share your website or application with a larger audience beyond just yourself or a select group of collaborators.'
        regions: '[AI] `vercel --regions` is a command used in the Vercel platform for managing deployment regions. The command allows you to list, add, or remove regions where your Next.js applications can be deployed and served from. Each region represents a physically distinct location with its own infrastructure for hosting and delivering content, enabling faster delivery times and improved performance for users based on their geographical proximity. By using `vercel --regions`, you can optimize the deployment of your Vercel projects to better serve your global user base.'
        scope: '[AI] The `--scope` flag in Vercel is used to specify the directory or project scope during deployment. It tells Vercel to build and deploy only the specified directory or project instead of the entire repository. This can help reduce build time and resources for larger projects by allowing selective deployment of smaller parts.'
        token: '[AI] `vercel --token` is a command-line argument used with Vercel, a cloud platform for static sites and serverless functions. The `--token` argument is followed by an access token, which grants authentication and authorization to deploy and manage projects in the Vercel platform using the CLI. This token should be kept private and secure to maintain the security of your Vercel account.'
        version: '[AI] `vercel --version` is a command used in the Vercel CLI (Command Line Interface) to check and display the currently installed version of Vercel. It helps developers ensure they are using the latest or desired version of Vercel for their project deployments.'
        with-cache: '[AI] The `--with-cache` flag is a command-line option for Vercel, a cloud platform for static sites and serverless functions. It enables the cache feature in the build process. With this flag, Vercel will store the compiled output of your project in a global cache to speed up subsequent builds by serving the cached version instead of rebuilding from scratch. This can significantly reduce build times for larger projects or those with complex dependencies.'
