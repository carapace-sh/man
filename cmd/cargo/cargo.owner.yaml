# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: owner
description: Manage the owners of a crate on the registry
flags:
    --index=: Registry index to modify owners for
    --registry=: Registry to use
    --token=: API token to use when authenticating
    -a, --add*=: Name of a user or team to invite as an owner
    -h, --help: Print help
    -l, --list: List owners of a crate
    -q, --quiet: Do not print cargo log messages
    -r, --remove*=: Name of a user or team to remove as an owner
documentation:
    command: '[AI] The `cargo owner` command is not a valid Cargo command. Cargo is a Rust package manager, and it does not have an `owner` subcommand. If you meant to ask about the ownership of a package or project in Cargo, you can use various other commands like `edition`, `manifest-toml`, or `publish` to manage different aspects of the ownership and publishing information in your Cargo.toml file.'
    flag:
        add: '[AI] `cargo owner --add` is a command used in Cargo, Rust''s package manager. This command is used to add a new dependency to your project''s `Cargo.toml` file. It takes the name of the library or crate as an argument and automatically downloads its source code and adds it to the list of dependencies. The added dependency will be included in the next build of your project.'
        help: '[AI] The `--help` option when used with the Docker CLI command `docker cargo owner` displays detailed help information about this subcommand. It provides an overview of what the `cargo owner` command does, which is managing a registry of organizations and their associated Docker images, and lists the possible commands and their corresponding usage. It also provides examples for each command and details on how to authenticate with a registry.'
        index: '[AI] The `--index` flag is used with the `cargo-owner` command in Rust programming. It specifies the path to the local Cargo index, which is a metadata file containing information about the dependencies and their versions for a Rust project. When building or checking the dependencies of a Rust project using `cargo`, this index file is automatically used. By explicitly providing the index path with `--index`, you can override the default location or work with multiple projects that have different dependency requirements.'
        list: '[AI] The `cargo owner --list` command is used in Cargo, Rust''s package manager, to list all the crates (libraries or binary packages) with their respective owners and version numbers that are currently being used as dependencies in your Cargo project. This can help you identify the origin of each dependency and keep track of any potential updates or security vulnerabilities.'
        quiet: '[AI] The `--quiet` flag, when used with the `cargo owner` command in Rust programming language''s build system (Cargo), instructs it to run with minimal output or verification messages during the check for crate dependencies ownership. Essentially, it suppresses most of the informational and diagnostic messages, making the output less noisy and focused on errors only.'
        registry: '[AI] The `--registry` option in the Docker command `docker pull` or `docker run` with the `cargo-compile` or `cargo-build` flags is used to specify the Docker registry from which to fetch the container image for a given Dockerfile''s base image. For instance, when building or running a Rust application using Docker and Cargo, you may use this flag to point to your preferred registry, such as `docker run --registry=myregistry:5000 myimage:latest`. This ensures that the correct base image is pulled from the specified registry during the build process.'
        remove: '[AI] The `--remove` flag is a command used in Docker and other package managers for removing an image or container from the local system entirely. When you use the `docker pull` or `docker build` commands to download or create an image, it gets stored locally in your Docker registry. The `--remove` flag when used with `docker rm` (remove) command, instructs Docker to remove not only the specified image but also any intermediate containers and networks that were created while running that image. This helps in managing disk space by removing unused images and associated data.'
        token: '[AI] The `--token` flag is used with the Docker CLI command `cargo-compile push`. It specifies a personal access token (PAT) for authentication when pushing an image to a Docker registry, such as Docker Hub or Amazon Elastic Container Registry. By including this flag, you can securely transmit your token and authenticate the image push without having to expose your token in plaintext or in an environment variable.'
