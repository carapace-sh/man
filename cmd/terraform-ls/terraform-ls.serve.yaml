# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: serve
description: Starts the Language Server
flags:
    -cpuprofile=: file into which to write CPU profile
    -log-file=: path to a file to log into with support for variables
    -memprofile=: file into which to write memory profile
    -port=: port number to listen on
    -req-concurrency=: number of RPC requests to process concurrently
documentation:
    command: '[AI] `terraform-ls serve` is not a valid Terraform command. "terraform-ls" is a command provided by the Terraform Language Server (TLS), which is an extension for popular IDEs and code editors, enabling features like syntax highlighting, autocompletion, and validation for Terraform configuration files. The `serve` command is typically used in the context of starting a web server or similar background service. If you meant to ask about `terraform-ls init`, it initializes a new workspace by downloading the necessary provider plugins and creating the necessary directories and files for a new Terraform project.'
    flag:
        cpuprofile: '[AI] `terraform-ls serve -cpuprofile` is a command used with the Terraform Lifecycle (TLS) server, which is a separate component from Hashicorp''s Terraform IAC tool. This command starts the TLS server and generates a CPU profile in a specified file. The generated profile is useful for analyzing the performance of the TLS server and identifying bottlenecks. The `-cpuprofile` option specifies the output file name for the CPU profile.'
        log-file: '[AI] The `terraform init --serve --log-file` command in Terraform is used to start a background process called the Terraform Cloud Workspace Manager, which enables continuous integration and delivery using Terraform Cloud. The `--log-file` flag specifies a file where all logs generated by this command will be written for debugging and auditing purposes. When you run `terraform init`, it sets up your workspace, initializes the configuration files, installs or updates any required provider plugins, and caches data to reduce the time it takes for subsequent runs. By running `--serve` in addition, Terraform creates a long-running process that listens for changes in your repository and applies those changes as configured in Terraform Cloud.'
        memprofile: '[AI] `terraform-ls serve -memprofile` is a command used in Hashicorp''s Terraform Language Server (TLS). The `serve` part of the command starts the language server, while `-memprofile` generates and saves a memory profile file during its execution. This memory profile can be later analyzed using tools like CPU Profiler or Go''s pprof to help identify memory usage patterns and optimize the Terraform configuration.'
        port: |-
            [AI] The `terraform init` command is used to initialize a new Terraform working directory, or update existing dependencies in an existing one. When using Terraform Workspaces, it's recommended to use `terraform init` instead of `terraform get`.

            The `terraform-ls serve -port` command is actually not a standard Terraform command but rather an extension for the `terraform-ls` tool. `terraform-ls` is a separate command-line utility that lists the Terraform modules, their versions, and their dependencies. It's useful for understanding your infrastructure configuration dependencies in detail.

            The `terraform-ls serve -port` command starts an HTTP server using `terraform-ls`, allowing other tools to query it for dependency information. The `-port` option specifies the port number the server should listen on. This can be useful in Continuous Integration (CI) environments where other tools, such as GitHub Actions or Terraform Cloud, may need to access the dependency information during a build or deployment process.
        req-concurrency: |-
            [AI] `terraform-ls serve -req-concurrency` is a command used with the Terraform Language Server (TLS), which is an extension of the Terraform configuration language that provides features like autocompletion, syntax checking, and documentation lookup in popular IDEs and text editors.

            The `serve` subcommand starts the TLS server, while `-req-concurrency` is a flag specifying that concurrency should be requested when serving multiple clients. This flag improves performance by allowing the TLS to serve multiple clients at once, making it more efficient for users working on large Terraform projects with complex configurations in collaborative environments.
