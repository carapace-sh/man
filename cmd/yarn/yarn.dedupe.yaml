# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dedupe
description: Deduplicate dependencies with overlapping ranges
group: general
flags:
    --json: Format the output as an NDJSON stream
    --mode=: Change what artifacts installs generate
    -c, --check: Exit with exit code 1 when duplicates are found, without persisting the dependency tree
    -s, --strategy=: The strategy to use when deduping dependencies
documentation:
    command: '[AI] `yarn dedupe` is a command provided by Yarn, a popular JavaScript package manager. It is used to remove duplicate and unnecessary packages from your project''s `node_modules` directory, which can help reduce the size of your project and improve build times. By running `yarn dedupe`, Yarn analyzes your `package.json` file and its dependencies, then removes any packages that have multiple instances with identical versions or lower-version dependencies that are already being used by another package. This command can be helpful in managing the size and efficiency of larger projects.'
    flag:
        check: '[AI] `yarn dedupe --check` is a command used in Yarn, a popular JavaScript package manager. This command performs a deduplication check across all installed packages in your project''s Yarn lockfile (also known as yarn.lock). The goal is to ensure that there are no duplicate dependencies with identical versions, helping maintain an efficient and clean package installation. It does not make any changes to your lockfile by default; it only reports potential duplicates if found. If you want to automatically remove the duplicate packages, use `yarn dedupe` without the `--check` option.'
        json: '[AI] `yarn dedupe --json` is a command used with Yarn, a popular JavaScript package manager. This command is used to find and eliminate duplicate packages in your project''s `node_modules` directory. The `--json` flag indicates that the output of the command should be returned as a JSON object instead of the default format. This can be useful for integrating the result with other automated tools or scripts.'
        mode: |-
            [AI] `yarn dedupe --mode` is a command used in Yarn package manager to remove duplicate and unnecessary packages from the project's `node_modules` directory. The `--mode` option specifies how Yarn should handle deduplication:

            - `hard` (default): Removes all duplicate packages except the one with the exact version specified in the `package.json` file.
            - `soft`: Keeps all duplicate packages and modifies their version numbers to make them distinct, allowing for easier rollbacks or side-by-side comparisons.

            This command helps manage dependencies efficiently and ensure that only required versions of each package are installed in your project.
        strategy: |-
            [AI] `yarn dedupe --strategy` is a command used in Yarn package manager to perform deduplication of installed packages. With the `--strategy` option, you can specify different deduplication strategies:

            1. `file` (default): Deduplicates packages based on the exact file hash and version.
            2. `tree-shaking`: Deduplicates packages based on tree shaking analysis, which removes unused code during the bundling process.
            3. `link`: Deduplicates packages by symlinking them if they have identical dependency trees.
            4. `nested`: Performs deduplication within workspaces with a nested dependencies structure.

            This command helps to avoid redundant installations and optimize the disk space usage in your Yarn projects.
