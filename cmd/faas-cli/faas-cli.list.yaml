# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: List OpenFaaS functions
flags:
    --envsubst: Substitute environment variables in stack.yml file
    --sort=: Sort the functions by "name" or "invocations"
    --tls-no-verify: Disable TLS validation
    -g, --gateway=: Gateway URL starting with http(s)://
    -k, --token=: Pass a JWT token to use instead of basic auth
    -n, --namespace=: Namespace of the function
    -q, --quiet: Quiet mode - print out only the function's ID
    -v, --verbose: Verbose output for the function list
documentation:
    command: '[AI] `faas-cli list` is a command used in the FaaS (Function-as-a-Service) toolchain provided by OpenFaaS. This command is utilized to list all the defined functions within the local Faaas configuration file or in the cluster. It displays essential information such as function name, builder image, and the memory and timeout limits for each function. By executing this command, you can easily view an overview of your deployed functions without accessing the container runtime directly.'
    flag:
        envsubst: '[AI] `faas-cli list --envsubst` is a command used in the FaaS (Function-as-a-Service) toolchain, specifically with the FaaS CLI (Command Line Interface) tool. This command lists all the functions defined in the local `functions` directory, and replaces placeholders in the environment variables with their actual values before displaying the output. This helps to see the real-time configuration of each function, making it easier for developers to manage and understand their applications'' runtime settings.'
        gateway: '[AI] The `faas-cli list --gateway` command is used with the FaaS (Function-as-a-Service) CLI tool to list all available gateways in your Faasnet account. A gateway acts as an entry point for external traffic to reach your FaaS functions. The output of this command provides you with essential information such as Gateway name, URL, and the status (enabled or disabled). This command helps in managing multiple gateways associated with your Faasnet account.'
        namespace: '[AI] `faas-cli list --namespace` is a command used with the FaaS (Function-as-a-Service) CLI tool to list functions deployed under a specific Kubernetes namespace. The `--namespace` argument specifies the name of the namespace where the functions are located. This command helps in managing and keeping track of functions deployed across different namespaces within a Kubernetes cluster.'
        quiet: '[AI] `faas-cli list --quiet` is a command used with the FaaS (Function-as-a-Service) CLI tool to retrieve a list of functions deployed in a FaaS system, with minimal output. The `--quiet` flag reduces the output to just the function names or IDs, with no additional details like deployment status or creation time.'
        sort: '[AI] `faas-cli list --sort` is a command used with the FaaS (Function-as-a-Service) CLI tool to list and filter deployed functions. The `--sort` option sorts the output based on a specified key, such as function name or creation time, in ascending or descending order. For example, `faas list --sort name` would display the list of functions with their names in alphabetical order.'
        tls-no-verify: '[AI] The `faas-cli list --tls-no-verify` command is used with the FaaS (Function-as-a-Service) CLI tool to list functions deployed on a specific FaaS provider, such as OpenFaas or Cloud Events. The `--tls-no-verify` flag disables TLS certificate verification during communication between your local machine and the Faas provider. This means that the CLI will not check if the provider''s TLS certificate matches the expected one, potentially exposing your communications to interception and man-in-the-middle attacks. Use this option with caution, only when connecting to trusted providers or when no other secure communication methods are available.'
        token: '[AI] The `faas-cli list --token` command is used with the FaaS (Function-as-a-Service) CLI tool to retrieve a list of functions deployed using FaaS, along with their associated API tokens. The `--token` option ensures that only the tokens are displayed in the output. This can be useful for managing and rotating the security credentials for your deployed serverless functions.'
        verbose: '[AI] `faas-cli list --verbose` is a command used in Faas (Function as a Service) technology to list all the functions deployed in a FaaS cluster or registry. The `--verbose` flag increases the amount and detail of output provided by the command, displaying additional information such as function version, creator, and creation time.'
