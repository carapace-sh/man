# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dig
description: DNS lookup utility
flags:
    "-4": This option indicates that only IPv4 should be used.
    "-6": This option indicates that only IPv6 should be used.
    -b=: This option sets the source IP address of the query.
    -c=: This  option  sets the query class.
    -f=: This option sets batch mode.
    -k=: This option tells named to sign queries using TSIG using a key read  from  the  given file.
    -m: This option enables memory usage debugging.
    -p=: This option sends the query to a non-standard port on the server.
    -q=: This option specifies the domain name to query.
    -r: This  option  indicates  that options from ${HOME}/.digrc should not be read.
    -t=: This option indicates the resource record type to query.
    -u: This option indicates that print query times should be provided in  microseconds  instead of milliseconds.
    -v: This option prints the version number and exits.
    -x=: This option sets simplified reverse lookups, for mapping addresses to names.
    -y=: This option signs queries using TSIG with the given authentication key.
documentation:
    command: '[AI] `dig` (Domain Information Groper) is a versatile command-line tool used for querying and extracting DNS (Domain Name System) information. It allows users to perform various queries on DNS records such as A, MX, NS, TXT, CNAME, and more. Queries can be made against different record types, and also against specific servers or zones. The results are usually presented in a human-readable format. `dig` is often used for troubleshooting DNS issues, checking mail server configurations, and obtaining IP addresses from domain names.'
    flag:
        "4": '[AI] `dig` is a command-line tool for querying DNS (Domain Name System) data. The option `-4` tells `dig` to perform only IPv4 queries, ignoring any IPv6 responses from the DNS server. This can be useful when you want to explicitly request IPv4 addresses for a given domain name.'
        "6": '[AI] The `dig` command is a powerful DNS lookup tool in Unix-like operating systems. The option `-6` specifies that the query should be performed using IPv6 protocol instead of the default IPv4. This can be useful when performing queries for IPv6 addresses or testing DNS servers'' support for IPv6.'
        b: '[AI] The `dig` command is a versatile tool used for querying DNS (Domain Name System) records. The option `-b`, short for "binding", specifies that the following argument should be interpreted as the IP address or hostname of a DNS server to use for performing the query instead of using the default servers. For example, `dig -b 8.8.8.8 example.com` would perform the query for the record of `example.com` using Google''s public DNS server at 8.8.8.8.'
        c: |-
            [AI] The `dig` command is a powerful DNS lookup tool. The `-c` option is used to specify a configuration file for `dig`. This can be useful when running complex queries or automating tasks, as it allows you to define custom search lists, source ports, query types, and other options in a file instead of on the command line. For example:

            ```bash
            $ dig @nameserver -c /path/to/configfile.conf example.com
            ```

            This command performs a DNS lookup for `example.com`, using the nameserver specified, and using the configuration settings defined in the file located at `/path/to/configfile.conf`.
        f: '[AI] The `dig` command is a versatile tool for querying DNS (Domain Name System) records. The `-f` option is used to specify a query file instead of entering queries interactively on the command line. This allows users to input multiple queries in a structured format, which can be helpful for automation and bulk queries. The file should contain one query per line in a standard format (e.g., "example.com IN A").'
        k: '[AI] The `dig` command is a versatile tool used for querying DNS (Domain Name System) records. The option `-k` or `--keyfile` is used to specify a keyfile for DNSSEC (DNS Security Extensions) validation. When this flag is provided, `dig` will use the specified keyfile to authenticate DNS responses and verify their authenticity and integrity.'
        m: '[AI] The `-m` option in the `dig` command is used to specify the DNS query message type. This can include queries for A records (address), MX records (mail exchange), NS records (name server), TXT records (text), and others. For example, `dig example.com -t A -m edvoc` sets the message type to EDVOC (Experimental DNS Query Option Code), while a query for an A record without the `-m` option would default to that message type.'
        p: '[AI] The `dig` command is a powerful tool for querying DNS (Domain Name System) records. The `-p` option is used to specify a particular query type and port number. For example, `dig -p 80 example.com` would perform an HTTP over TCP query on the named server for the record of "example.com". Without this option, dig defaults to performing a standard recursive DNS query.'
        q: '[AI] The `dig` command is a popular DNS (Domain Name System) lookup tool. The `-q` flag is an option used with `dig` to specify a particular query. When used, it tells `dig` that only the response to the query should be displayed and not any additional information or diagnostic output. In other words, the `-q` flag is used to quiet the output of `dig`.'
        r: '[AI] `dig` is a command-line tool for querying DNS (Domain Name System) data. The `-r` flag is used to specify that `dig` should function as a recursive resolver, meaning it will recursively query other DNS servers until it finds the answer to the query or reaches the end of its search path. This can be useful for troubleshooting DNS issues or for performing more advanced DNS lookups.'
        t: |-
            [AI] The `dig` command is a versatile tool for querying DNS (Domain Name System) records. The `-t` option specifies the type of query to perform. Here are some common types:

            * `A`: Queries for IPv4 addresses associated with a domain name.
            * `AAAA`: Queries for IPv6 addresses associated with a domain name.
            * `MX`: Queries for mail exchange records, which specify the servers responsible for delivering email for a domain.
            * `NS`: Queries for name server records, which specify the authoritative name servers for a domain.
            * `TXT`: Queries for text records associated with a domain, which can contain arbitrary data.

            For example, `dig example.com A` queries for the IPv4 address of `example.com`, while `dig example.com TXT` queries for any text records associated with that domain.
        u: '[AI] The `dig` command is a popular DNS lookup tool in Unix-like operating systems. The `-u` option is used to specify an alternate query name or type. When using this option, you can perform various queries such as reverse lookup (MX, NS, PTR), query specific records types like A, TXT, or CNAME, among others. For instance, `dig -u example.com MX` will return the Mail Exchange (MX) records for the domain "example.com".'
        v: '[AI] The `dig` command with the `-v` flag is a verbose mode option in DNS (Domain Name System) lookup utilities like GNU `dig`. When used, it provides detailed information about each query and response stage, including timestamps, query IDs, response codes, and additional diagnostic data. This can be helpful for troubleshooting and understanding the underlying DNS resolution process.'
        x: '[AI] The `dig` command is a versatile tool for querying DNS (Domain Name System) records. The `-x` flag is used to perform an inverse query, where you specify a IP address and the command returns the associated domain name or record type. For example, `dig -x 8.8.8.8` will return the domain name associated with Google''s public DNS server (8.8.8.8).'
        "y": '[AI] The `dig` command with the `-y` flag is a lookup type used in DNS (Domain Name System) queries. It specifically requests only the answer section of the DNS response, which contains the record data requested in the query. This flag can be useful when you want to obtain quick answers to specific DNS records without having to parse the entire DNS response.'
