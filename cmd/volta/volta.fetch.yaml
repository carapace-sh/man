# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fetch
description: Fetches a tool to the local machine
flags:
    --quiet: Prevents unnecessary output
    --verbose: Enables verbose diagnostics
    -h, --help: Prints help information
documentation:
    command: '[AI] `volta fetch` is a command used in Volta, a tool for managing and deploying applications built with the Rust programming language. The primary function of this command is to download and update dependencies defined in the `volta.toml` file in your project. When you run `volta fetch`, it retrieves the latest versions of specified dependencies and their transitive dependencies, ensuring your project stays up-to-date with the required packages.'
    flag:
        help: '[AI] The command `volta fetch --help` is used with Volta, a tool for managing and installing DevTools like Visual Studio Code extensions and Node.js packages locally. The `fetch` subcommand updates Volta''s local cache with the latest versions of installed tools and their dependencies. The `--help` option displays detailed information about how to use this command, including available options and arguments.'
        quiet: '[AI] `volta fetch --quiet` is a command used in Volta, a modern toolchain manager for JavaScript projects. This command fetches and downloads the latest version of a specified tool or dependency from its source, without displaying any output or progress messages. It''s useful when performing automated tasks or scripts where you don''t need to see the console output.'
        verbose: '[AI] The `volta fetch --verbose` command is used in Volta, a package manager for JavaScript and TypeScript projects, to download and install specific tool versions from npm or other sources with enhanced output. When run, it will display detailed information about each step of the download and installation process, including progress bars, version numbers, and any error messages that may occur during the operation. This level of detail can be helpful for troubleshooting and understanding the status of package installations in your project.'
