# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: logs [OPTIONS] SERVICE|TASK
description: Fetch the logs of a service or task
flags:
    --details: Show extra details provided to logs
    --no-resolve: Do not map IDs to Names in output
    --no-task-ids: Do not include task IDs in output
    --no-trunc: Do not truncate output
    --raw: Do not neatly format logs
    --since=: Show logs since timestamp (e.g. "2013-01-02T13:23:37Z") or relative (e.g. "42m" for 42 minutes)
    -f, --follow: Follow log output
    -n, --tail=: Number of lines to show from the end of the logs
    -t, --timestamps: Show timestamps
documentation:
    command: '[AI] `docker service logs` is a command used in Docker Swarm mode to view the real-time output of the containers in a specified service. When you run this command, it displays the logs from all containers associated with the specified service. The option `--follow` can be used to continuously stream new logs as they are produced.'
    flag:
        details: '[AI] `docker service logs --details` is a command used in Docker to view detailed logs of a specific service running in a Swarm mode cluster. This command displays all the containers associated with the service and streams their logs in real-time, adding timestamps and container labels for easier identification. It provides more contextual information compared to the regular `docker service logs` command, making it useful when debugging issues or monitoring services in a Swarm environment.'
        follow: '[AI] `docker service logs --follow` is a command used in Docker to follow real-time logs of a specified service. The `--follow` flag enables live following of log output, meaning new logs are displayed as they are written without having to manually refresh the terminal or run the command again. This command provides useful insight into the running status and behavior of your Docker services.'
        no-resolve: '[AI] The `docker service logs` command is used to view the logs of a Docker service. The `--no-resolve` option is an argument that prevents Docker from resolving service names to their tasks or containers behind the scenes. This means that you will see the raw logs of the service replicas instead of logs mixed with Docker''s metadata, making it useful for debugging and troubleshooting purposes when you want a more direct view into the service''s output.'
        no-task-ids: '[AI] `docker service logs --no-task-ids` is a command used in Docker Swarm to view the logs of all tasks associated with a specific service, without displaying the unique IDs of each individual task. The `--no-task-ids` flag ensures that only the logs are displayed and not the IDs of the tasks running the service. This can make it easier to follow the log output in the terminal without being distracted by the task IDs.'
        no-trunc: '[AI] `docker service logs` is a command used to view the logs of a Docker service. The `--no-trunc` option that can be passed with this command prevents the output from being truncated, meaning you will see the entire log and not just the last few lines. This can be useful when debugging issues or reviewing long-running processes.'
        raw: '[AI] `docker service logs --raw` is a command used in Docker Swarm to retrieve the raw output of the containers'' standard output (stdout) and standard error (stderr) streams for a specified service. The `--raw` flag ensures that the output is returned as is, without any formatting or decoding. This can be useful when dealing with large logs, binary data, or custom log formats, where the default formatting may not be sufficient.'
        since: '[AI] `docker service logs` is a command used to view the logs of Docker services in Swarm mode. The option `--since <timestamp>` filters the output to only show logs that were generated after the specified timestamp. For example, `docker service logs --since 1h` would display logs generated within the last hour. This can help troubleshoot and monitor container issues with more precision.'
        tail: '[AI] `docker service logs --tail` is a command used in Docker Swarm to view the most recent log entries of a specific service. The `--tail` option specifies the number of log lines to display, by default it''s set to 10 but can be adjusted to show more or fewer lines as needed. This command helps in troubleshooting and monitoring the service''s health in real-time.'
        timestamps: '[AI] `docker service logs` is a command used to retrieve the output of the containers in a Docker Swarm service. The `--timestamps` option adds a timestamp before each log line, allowing for easier analysis and sorting based on the time each log message was generated.'
