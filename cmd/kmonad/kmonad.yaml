# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: kmonad
description: an onion of buttons
flags:
    -d, --dry-run: only try parsing the config file
    -h, --help: Show this help text
    -l, --log-level=: How much info to print out
documentation:
    command: '[AI] `kmonad` is a Kubernetes utility for managing and configuring the Kubernetes OperatorMAD (Operator Model for Kubernetes). It allows users to create, deploy, and manage Custom Resource Definitions (CRDs) as well as observe and troubleshoot the state of Operators in a Kubernetes cluster. In simpler terms, it''s a tool for managing custom extensions to Kubernetes using the Operator framework.'
    flag:
        dry-run: '[AI] `kmonad --dry-run` is a command used in Kubernetes for testing and previewing changes before applying them. The `--dry-run` flag instructs `kmonad`, a Kubernetes configuration management tool, to output the changes it would make if applied, without actually modifying the cluster. This helps ensure that intended modifications are correct before executing them in production environment.'
        help: '[AI] `kmonad --help` is a command used in Kubernetes environments to display help information about the `kmonad` tool. `kmonad` is a monitoring and alerting tool for Kubernetes, designed to work with Prometheus and Alertmanager. The `--help` flag shows detailed usage information about the `kmonad` command-line interface, including options for configuration files, monitoring intervals, and more.'
        log-level: |-
            [AI] `kmonad` is a Kubernetes monitoring tool developed by Google. The `--log-level` flag is used to configure the logging level for `kmonad`. By default, it sets the log level to `info`. However, you can use this flag to increase or decrease the log output level.

            For instance, to set the log level to `debug`, you would use:

            ```bash
            kmonad --log-level debug
            ```

            By doing so, `kmonad` will print more detailed logs that can help in troubleshooting issues. Similarly, you can also specify other levels like `warning`, `error`, or `fatal`. Lower log levels than `debug` (like `trace`) are not commonly used and depend on your specific use case.
