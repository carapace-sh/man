# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ssh-copy-id
description: use locally available keys to authorise logins on a remote machine
flags:
    -?: Print Usage summary
    -f: Forced mode
    -h: Print Usage summary
    -i=: Use only the key(s) contained in identity_file
    -n: do a dry-run
    -o=: ssh option
    -p=: ssh port
    -s: SFTP mode
documentation:
    command: '[AI] `ssh-copy-id` is a command used in OpenSSH to automate adding your SSH public key to an authorized_keys file on a remote server. This simplifies the process of securely logging into the server using SSH keys instead of passwords. The command generates and displays the content of your public key, then copies it to the clipboard or directly appends it to the authorized_keys file when you provide the server''s IP address or username.'
    flag:
        '?': '[AI] `ssh-keygen` is a utility used to generate, manage, and convert SSH keys for securely accessing remote servers using the SSH protocol. The command `ssh-copy-id` is a sub-command of `ssh-keygen`. It automatically appends the public key to the authorized_keys file of an existing user account on a remote server, provided that you have the private key and the ssh-agent or passphrase set up on your local machine. The flag `-?` is used for displaying help information related to the usage of `ssh-copy-id`.'
        f: |-
            [AI] `ssh-copy-id` is a utility provided by the OpenSSH suite for automatically adding the public key of an SSH keyfile to the `~/.ssh/authorized_keys` file on a remote server, simplifying the process of setting up secure key-based authentication.

            The `-f` flag is an option used with this command. It forces `ssh-copy-id` to continue running even if it encounters an error or a warning message. By using `-f`, any output from the command will be suppressed, and only error messages will be shown. This can be useful when automating the process of adding SSH keys, as it allows scripts to continue executing without being interrupted by informational messages.
        h: |-
            [AI] `ssh-copy-id` is a utility provided by OpenSSH to automate the process of adding SSH keys from the local machine to the remote server's authorized_keys file. The `-h` (or --help) option is used to display help information about the command, including:

            1. A brief description of what the command does.
            2. Detailed usage instructions with examples.
            3. Information on various options and arguments that can be used with the command.
            4. Explanation of any environment variables or special files that the command interacts with.

            Using `ssh-copy-id -h` will display this help information in your terminal, allowing you to quickly understand how to use the command for adding, managing, and configuring SSH keys.
        i: '[AI] `ssh-copy-id` is a command used in OpenSSH for adding the public key to the authorized keys file of an SSH remote server, usually saved in `~/.ssh/authorized_keys`. The option `-i <keyfile>` specifies which private key file to use when generating and copying the corresponding public key. When run, it will read the specified private key file, add its content (public key) to the remote server''s authorized keys file, and securely transfer the new keys using SSH. This makes it more convenient for users to log in to their remote servers without having to manually copy and paste the public key each time.'
        "n": '[AI] `ssh-copy-id` is a utility used to automatically add the public key of an SSH key pair to the authorized keys file of a remote server or local machine, for easier and passwordless SSH access. The `-n` option specifies that only the new key should be added, without replacing any existing keys in the file. This is useful when you have multiple keys for a single user and want to add a new one without losing the others.'
        o: '[AI] `ssh-copy-id -o` is a command used in OpenSSH, a secure connection tool for remotely accessing servers. The `-o` option stands for "options." When used with `ssh-copy-id`, it allows specifying additional options to customize the behavior of the command. For instance, you can use it to set the file permission bits on the generated key file or specify the output format. Overall, `ssh-keygen -o` provides flexibility in managing your SSH keys while adhering to security best practices.'
        p: '[AI] `ssh-copy-id` is a utility provided by OpenSSH that automates the process of adding an SSH key to the remote server''s authorized_keys file. The `-p` option, which stands for "port number," specifies an alternate SSH port number to use instead of the default 22. For instance, if you run `ssh-copy-id -p 443 user@example.com`, it will copy the public key to the server at the specified port (in this case, 443), and add the corresponding private key entry in your local `~/.ssh/known_hosts` file.'
        s: |-
            [AI] `ssh-copy-id` is a command-line utility provided by OpenSSH for managing SSH keys. The option `-s` (or `--stdin`) is used to read the private key from standard input instead of a file.

            When you use `ssh-copy-id -s <your_key> user@host`, it reads the private key from `<your_key>` and adds the corresponding public key to the authentication keys of the specified user account on the remote host. This command is useful when dealing with large or passphrase-protected keys, as it avoids having to write the key file to disk for manual copying.
