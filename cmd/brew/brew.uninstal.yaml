# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: uninstal
description: Uninstall a <formula> or <cask>
flags:
    --cask: Treat all named arguments as casks.
    --debug: Display any debugging information.
    --force: Delete all installed versions of <formula>. Uninstall even if <cask> is not installed, overwrite existing files and ignore errors when removing files.
    --formula: Treat all named arguments as formulae.
    --help: Show this message.
    --ignore-dependencies: Don't fail uninstall, even if <formula> is a dependency of any installed formulae.
    --quiet: Make some output more quiet.
    --verbose: Make some output more verbose.
    --zap: Remove all files associated with a <cask>. *May remove files which are shared between applications.*
documentation:
    command: '[AI] `brew uninstall` is a command used in Homebrew, a popular package manager for macOS. It is utilized to remove (uninstall) packages or dependencies that have previously been installed using Homebrew. When you run this command followed by the name of the package, Homebrew will remove associated files and configurations, leaving your system clean of the specified software.'
    flag:
        cask: '[AI] `brew uninstall --cask` is a command used in Homebrew, a popular package manager for macOS. The `--cask` option specifies that you want to uninstall applications installed as casks, which are essentially bundles of software and their dependencies. This command will remove the specified application along with any associated files and symlinks, leaving no trace other than a log entry in Homebrew''s history file.'
        debug: '[AI] `brew uninstall --debug` is a command used in Homebrew, a popular package manager for macOS. The `--debug` flag enables detailed debugging output when running the `uninstall` command. This means that Homebrew will provide more extensive information about the process of uninstalling a specific package or formula, which can be useful for troubleshooting and gaining a better understanding of how Homebrew manages dependencies and removes installed packages from your system.'
        force: '[AI] `brew uninstall --force` is a command used in Homebrew, a popular package manager for macOS. This command forcibly uninstalls the specified software from your system, ignoring any dependencies and keeping none of the installed files. It completely removes the software and its associated data from your system.'
        formula: '[AI] `brew uninstall --formula` is a command used in Homebrew, a popular package manager for macOS. This command is used to remove software that was installed using Homebrew, specifically by specifying the formula name of the software. For instance, if "myapp" was installed via the formula "myapp/myapp", running `brew uninstall --formula=myapp/myapp` will remove that software from your system along with any associated files and dependencies.'
        help: |-
            [AI] `brew uninstall` is a command used in Homebrew, a popular package manager for macOS. This command is used to uninstall (remove) previously installed packages or formulae from your system. The `--help` option displays detailed usage and available options for this command. Here's a brief explanation:

            - `brew uninstall`: Base command to uninstall packages/formulae.
            - `--help`: Option to display help information about the command and its usage.
            - Usage: `brew uninstall [FORMULA_NAME] ...`
              - `[FORMULA_NAME]`: The name of the formula (package) you want to remove. Multiple formulas can be specified in one command by separating them with a space.
            - Available options include:
              - `--force` or `-f`: Force uninstall, even if it leaves residual files or conflicts with other packages.
              - `--ignore-conflicts` or `-I`: Ignore dependencies and leave them installed.
              - `--prefix`: Specify the prefix directory where Homebrew is installed (not usually needed).
        ignore-dependencies: '[AI] `brew uninstall` is a command used in Homebrew, a package manager for macOS. The `--ignore-dependencies` flag modifies the behavior of this command. When used, it allows Homebrew to uninstall a package and its dependencies even if those dependencies have other packages that still depend on them. Essentially, it forces the uninstallation of the specified package along with its dependencies, regardless of their dependency relationships in Homebrew''s ecosystem.'
        quiet: '[AI] The `brew uninstall` command is used to uninstall homebrew packages installed on macOS using Homebrew package manager. The `--quiet` option is used to suppress informational messages during the uninstallation process, making the output less verbose. So, running `brew uninstall --quiet <package-name>` will silently uninstall the specified package without displaying any additional information.'
        verbose: '[AI] The command `brew uninstall --verbose` is used in Homebrew, a popular package manager for macOS, to uninstall a previously installed software. The `--verbose` option increases the amount of output from the command, providing more details about the uninstallation process. This can include information such as the files and directories being deleted, dependencies being removed, and any errors or warnings that may occur during the process.'
        zap: '[AI] `brew uninstall --zap` is a command used in Homebrew, a popular package manager for macOS. The `uninstall` sub-command is used to remove previously installed packages or applications, while the `--zap` option goes a step further and not only removes the software but also deletes any associated files, symlinks, and configuration directories. This means that the software will be completely uninstalled from the system and no trace of it remains.'
