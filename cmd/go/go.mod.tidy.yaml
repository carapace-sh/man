# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: tidy
description: add missing and remove unused modules
flags:
    -compat=: preserve additional checksums needed for given version
    -e: attempt to proceed despite errors
    -go=: update the 'go' directive to given version
    -v: print information about removed modules
documentation:
    command: '[AI] `go mod tidy` is a Go programming language command used to ensure a consistent and complete `go.mod` file in a project by downloading and importing all required modules listed in the `go.sum` file but not yet in `go.mod`. It also removes any unused or unnecessary imports from `go.mod`. This command simplifies the management of module dependencies, keeping the project''s dependency tree up-to-date and clean.'
    flag:
        compat: '[AI] `go mod tidy -compat` is a command used in Go programming language for managing dependencies. The `go mod` tool is used to modify, view, and manage Go modules. The `tidy` sub-command is used to ensure that the Go.mod file, which lists all the direct and indirect dependencies of your project, is in a consistent state. The `-compat` flag specifies that the command should be run in a way that''s compatible with older versions of Go modules, which may have slightly different behavior or syntax. Essentially, it ensures that the dependencies are up to date while maintaining backward compatibility.'
        e: '[AI] `go mod tidy -e` is a command used in Go programming language to ensure consistent and reproducible dependencies across modules. It runs the `tidy` sub-command of `go mod`, which automatically sorts and standardizes the import paths in `go.mod` file based on the current module''s dependency tree, without changing the actual imports in source code files. By adding the `-e` flag, this command executes the operation interactively, allowing you to review and confirm any changes before applying them.'
        go: '[AI] `go mod tidy -go` is a command used in Go programming language for managing dependencies. The `tidy` sub-command of the `go mod` tool ensures that the import paths in the `go.mod` file are up-to-date and match those in the source code files within the current module. The `-go` flag specifies that the changes should be applied to the source code automatically, which can include downloading new dependencies or updating existing ones. This command helps maintain a consistent and correctly-imported dependency structure in your Go project.'
        v: |-
            [AI] `go mod tidy -v` is a command used in Go programming language for managing dependencies. The `go mod` tool is used to manage Go modules, which are used since Go version 1.11 to replace the older `vendor` directory approach for dependency management.

            The `tidy` subcommand of `go mod` is used to remove unused or unnecessary modules from a Go module and ensure that the import paths in the `go.mod` file are up-to-date with the actual imports used in the codebase. The `-v` flag is optional but provides verbose output, displaying each action taken by the command.

            In summary, the command `go mod tidy -v` performs a clean-up of unnecessary dependencies and imports while providing detailed information about the actions it takes.
