# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create
description: Create a new secret
flags:
    --from-file=: Path and filename containing value for the secret
    --from-literal=: Literal value for the secret
    --tls-no-verify: Disable TLS validation
    --trim: Trim whitespace from the start and end of the secret value
    -g, --gateway=: Gateway URL starting with http(s)://
    -k, --token=: Pass a JWT token to use instead of basic auth
    -n, --namespace=: Namespace of the function
documentation:
    command: '[AI] `faas-cli secret create` is a command used with the FaaS (Function-as-a-Service) CLI tool to create and manage secrets. This command creates a new secret, encrypts it, and stores it in an etcd key-value store, which is a distributed data store used for this purpose by some FaaS platforms like OpenFaaS. The created secret can then be referenced by functions as environment variables without exposing the raw value.'
    flag:
        from-file: '[AI] `faas-cli secret create --from-file` is a command used with the FaaS-CLI (Function as a Service Command Line Interface) to create and store secrets in the Faasnet registry. The `--from-file` flag indicates that the secret data will be read from a local file instead of being provided directly on the command line. This is useful when dealing with sensitive information, such as encryption keys or API tokens, where storing them directly in the command line may pose a security risk. By using a file and this flag, you can easily manage your secrets in a more secure way.'
        from-literal: '[AI] `faas-cli secret create --from-literal` is a command used in FaaS (Function-as-a-Service) development with the Faas-cli tool. This command creates a new secret in the Faas-cli configuration, storing the secret value directly as a literal string. The flag `--from-literal` indicates that the secret value is provided directly in the command line, making it convenient to create and manage local or development secrets without using external files or environment variables.'
        gateway: |-
            [AI] The `faas-cli secret create --gateway` command is used with the FaaS-CLI (Function-as-a-Service Command Line Interface) tool to create and manage secrets in the context of a FaaS (Function-as-a-Service) gateway.

            This command creates a new secret, which is an encrypted configuration data that can be used by functions deployed on the gateway. The secret is identified by a unique name, which is specified as an argument to this command. No actual flag `--gateway` is mentioned in the given command in the FaaS-CLI documentation, but it's mentioned here for context since the command is typically used within the FaaS gateway environment.

            To summarize, `faas-cli secret create <secret_name>` creates a new encrypted configuration secret named `<secret_name>` in your FaaS gateway environment.
        namespace: '[AI] The `faas-cli` is a command-line interface tool for managing functions as a service (FaaS) deployments with FaaS platforms like OpenFaas and openFaaS. The specific command, `faas-cli secret create --namespace`, creates a new secret in the specified Kubernetes namespace. A secret stores sensitive information such as passwords or API keys, which can be referenced by functions or other resources within that namespace.'
        tls-no-verify: '[AI] The `faas-cli secret create --tls-no-verify` command is used in the FaaS (Function-as-a-Service) CLI tool to create a new secret. This specific command disables TLS certificate verification during the creation of the secret. This means that the client will trust any SSL certificate presented by the server without checking its validity, which can be risky and is generally not recommended for secure communications. It''s important to note that this flag should only be used in controlled environments where the security risks are understood and mitigated.'
        token: '[AI] `faas-cli secret create --token` is a command used with the FaaS-CLI (Function-as-a-Service Command Line Interface) tool. This command creates a new secret in the Faas-cli configuration file, specifically a secret of type "token". The token is typically an authentication or API key that will be automatically injected as environment variables when building and deploying serverless functions. This helps to keep sensitive information out of code repositories and provides a centralized way to manage secrets for multiple functions.'
        trim: '[AI] The `faas-cli secret create --trim` command is used in Faas-NET (FaaS Network) to create a new secret by encrypting and storing sensitive data. The `--trim` flag instructs the tool to remove empty lines and trailing whitespaces from the input before encryption, ensuring that no unnecessary data is stored in the secret.'
