# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: outdated
description: Analyze your dependencies to find which ones can be upgraded
flags:
    --color: Color the output.
    --dependency-overrides: Show resolutions with `dependency_overrides`.
    --dev-dependencies: Take dev dependencies into account.
    --json: Output the results using a json format.
    --mode=: Highlight versions with PROPERTY.
    --no-color: Do not color the output.
    --no-dependency-overrides: Do not show resolutions with `dependency_overrides`.
    --no-dev-dependencies: Do not take dev dependencies into account.
    --no-prereleases: Do not include prereleases in latest version.
    --no-show-all: Do not include dependencies that are already fullfilling --mode.
    --no-transitive: Do not show transitive dependencies.
    --prereleases: Include prereleases in latest version.
    --show-all: Include dependencies that are already fullfilling --mode.
    --transitive: Show transitive dependencies.
    -C, --directory=: Run this in the directory <dir>.
    -h, --help: Print this usage information.
documentation:
    command: '[AI] The `dart pub outdated` command is a tool provided by Dart''s package manager, `pub`, to list the packages in your current project or globally, along with their currently installed versions and the latest available versions if there is an update. This command helps developers keep their projects up-to-date by identifying packages that have new releases available.'
    flag:
        color: '[AI] The `dart pub outdated --color` command is a Dart package management tool (Pub) command used to check for packages with updated versions in your `pubspec.yaml` file. The `--color` option enables colored output, making it easier to identify packages that need updating based on the color-coded results. The command returns a list of packages and their current and latest version numbers.'
        dependency-overrides: '[AI] `dart pub outdated --dependency-overrides` is a command used in Dart programming language for managing dependencies within a project using the `pub` package manager. This command checks for any updated packages in the project''s `pubspec.yaml` file and displays a list of dependencies with newer versions available. The `--dependency-overrides` flag allows you to specify explicit version numbers overriding the latest published versions mentioned in your `pubspec.yaml`. This can be useful if you''d like to lock specific package versions for stability or testing purposes.'
        dev-dependencies: '[AI] The `dart pub outdated --dev-dependencies` command is used in Dart programming language projects to check for outdated dev dependencies (libraries or packages marked as development dependencies in the `pubspec.yaml` file). This command interacts with the Dart package manager, `pub`, and retrieves information from the specified dependencies'' repositories. If an outdated dependency is detected, it will display the name of the package, the latest available version, and the current version used in the project. It helps maintain a project with up-to-date dependencies for potential bug fixes or new features.'
        directory: '[AI] The `dart pub outdated` command is a Dart package management tool that helps you keep your project''s dependencies up-to-date. When used with the `--directory` option, it searches for packages specified in a given directory (usually the `pubspec.yaml` file located at the root of your project) and lists out any packages with available updates. This command does not install or download the updates automatically; instead, it provides you with the necessary information to manually update your packages using `dart get`.'
        help: '[AI] `dart pub outdated --help` is a command used in Dart programming language for checking which packages in your `pubspec.yaml` file have newer versions available in the Dart package repository (pub.dev). The `--help` flag displays detailed usage information about this specific command, including any optional arguments and their descriptions. By running `dart pub outdated --help`, you can learn how to use this command effectively for managing dependencies and ensuring your project is up-to-date.'
        json: '[AI] `dart pub outdated --json` is a command used in Dart programming language for managing dependencies. This command, when run in the terminal or command prompt, generates a JSON output that lists all the packages in the current project and their respective desired and latest versions. The "outdated" sub-command checks for any package version differences and highlights any packages with updates available. Thus, this command helps developers keep track of their dependencies and maintain an up-to-date project.'
        mode: '[AI] The `dart pub outdated --mode=production` command is used in Dart programming language to check for outdated dependencies in a `pubspec.yaml` file, which specifies the project''s dependencies and other metadata. The `--mode=production` argument filters the output to only show dependencies with production-only dependencies or version constraints that are not suitable for development builds. It helps ensure that the application uses stable, production-ready packages when building for release.'
        no-color: '[AI] The `dart pub outdated --no-color` command is used in Dart programming to check for packages with updated versions in the local `pubspec.yaml` file or in the global cache, but without displaying colors in the output. `pub` is Dart''s package manager and `outdated` checks for packages that have newer versions than what''s currently installed. The `--no-color` option disables colored output.'
        no-dependency-overrides: '[AI] The `dart pub outdated` command is a tool provided by the Dart package manager, `pub`, to check for available updates of dependencies in your Dart project. When run with the `--no-dependency-overrides` flag, it will list only the packages that have newer versions available than what''s currently specified in the `pubspec.yaml` file, but without applying any dependency overrides. This means you will see the updates without automatically applying them to your project, allowing you to manually decide which ones to update.'
        no-dev-dependencies: |-
            [AI] The `dart pub outdated --no-dev-dependencies` command is used in Dart programming language projects to check for outdated packages in the `pubspec.yaml` file without checking dev dependencies.

            When you run this command in your terminal or command prompt, it scans your project's `pubspec.yaml` file and compares the listed package versions with the latest available versions on the Dart Package Manager (Pub.dev). The output will display a list of packages that have newer versions available and need to be updated.

            The `--no-dev-dependencies` flag is optional, but if used, it excludes the dev dependencies from the comparison. Dev dependencies are tools or libraries used during development, like test frameworks or code formatters, which may not be required in production environments. By excluding them, the command focuses only on the packages needed for running your application.
        no-prereleases: '[AI] `dart pub outdated --no-prereleases` is a command used in Dart programming language for managing dependencies in a project using the `pub` package manager. This command checks which packages in your `pubspec.yaml` file have newer versions available in the repository, but excludes prerelease versions in the comparison. By using the `--no-prereleases` option, you ensure that only stable releases are considered when checking for updates. It provides information about outdated packages and can help you keep your project up-to-date with the latest stable releases.'
        no-show-all: '[AI] The `dart pub outdated` command is a tool in Dart programming language used to check for packages with available updates in the local `pubspec.yaml` file or the global cache. The `--no-show-all` flag is an option that can be passed with this command to hide detailed information about all the packages and only display the name of the packages with outdated versions. This can help users quickly identify which packages need attention for updating without being overwhelmed by excessive output.'
        no-transitive: '[AI] The `dart pub outdated --no-transitive` command is used in Dart programming to check for outdated dependencies in a local `pubspec.yaml` file, but without checking the transitive dependencies. Transitive dependencies are libraries that other libraries in your project depend on. By using the `--no-transitive` option, you will only get information about direct dependencies listed in your `pubspec.yaml` file that have newer versions available. This command helps you keep your project''s direct dependencies up to date without affecting or checking the transitive dependencies.'
        prereleases: '[AI] The `dart pub outdated --prereleases` command is used with the Dart package manager, `pub`. It checks for packages listed in the `pubspec.yaml` file with versions that have newer releases, including prereleases, available on `pub.dev`. If any outdated packages are found, it prints their names and the version numbers of the available updates. This command helps developers keep their projects up-to-date with the latest package features and improvements.'
        show-all: '[AI] `dart pub outdated --show-all` is a command used in Dart programming language for managing dependencies with the help of the `pub` package manager. The command `outdated` checks for updates available for the currently installed packages, and the option `--show-all` displays information about both outdated local and remote packages. This means it will list all packages that have newer versions available for installation to keep your Dart projects up-to-date.'
        transitive: '[AI] The `dart pub outdated --transitive` command is used in Dart programming language to check for outdated dependencies in the `pubspec.yaml` file and its transitive dependencies (dependencies of dependencies). It reports packages that have newer versions available than what''s currently specified, helping developers keep their projects up-to-date with the latest dependencies and their potential bug fixes and improvements.'
