# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: autoconf
description: Generate a configuration script from a TEMPLATE-FILE
flags:
    -B, --prepend-include=: prepend directory DIR to search path
    -I, --include=: append directory DIR to search path
    -V, --version: print version number, then exit
    -W, --warnings=: report the warnings falling in CATEGORY
    -d, --debug: don't remove temporary files
    -f, --force: consider all files obsolete
    -h, --help: print this help, then exit
    -i, --initialization: also trace Autoconf's initialization process
    -o, --output=: save output in FILE (stdout is the default)
    -t, --trace=: report the list of calls to MACRO
    -v, --verbose: verbosely report processing
documentation:
    command: '[AI] `autoconf` is a software development tool that helps in generating configure scripts for Unix-based systems. It allows projects to detect and configure system requirements automatically, enabling consistent build processes across different environments. By using Autoconf macros, developers can specify build requirements and options, which are then used to generate the configure script. This script interacts with users to check for required packages and system features, and generates Makefiles optimized for various build systems.'
    flag:
        debug: '[AI] `autoconf --debug` is a command used during the build process of software projects that use the Autoconf system for configuration. The `--debug` option enables detailed debug output, providing more information about the Autoconf execution and helping to diagnose any issues that might occur during the configuration process. This can be particularly useful when dealing with complex builds or encountering errors.'
        force: '[AI] `autoconf --force` is a command used in software development to re-run the Autoconf script with enhanced force, overriding any user configuration in the build system. This can be useful when making changes to the Autoconf file (usually named `configure.ac`) and wanting to regenerate the generated `configure` script without manually deleting or modifying existing build configurations. It ensures that the new changes take effect and propagate throughout the build process.'
        help: '[AI] `autoconf --help` is a command used in Unix-based systems to display help information about the Autoconf software development tool. Autoconf automatically generates Makefiles and other build scripts for software projects, allowing them to adapt to various build systems and configurations. By invoking this command with the `--help` option, users can quickly access detailed explanations of how to use Autoconf effectively. This includes information on how to write Autoconf scripts, run Autoconf, and handle common configuration issues.'
        include: '[AI] `autoconf --include` is a command used in the Autoconf build system for generating configure scripts for C and C++ projects. The `--include` option tells Autoconf to include the contents of an existing Autoconf file, allowing you to reuse common configurations across multiple projects or subprojects. This can help reduce redundancy and maintain consistency in your build system configuration.'
        initialization: '[AI] The `autoconf --initalization` command is used to create or update the `configure.ac` file in an Autotools project, which contains the high-level instructions for configuring and building the software. This command sets up the basic Autotools macros and structure for a new project or updates existing ones when using newer versions of Autoconf. It does not build or configure anything; it only generates or modifies the `configure.ac` file, which is then used with `autoreconf` to generate the necessary files for building the software.'
        output: '[AI] `autoconf --output` is a command used in software development with the Autoconf system. It generates and updates the `configure` script based on the project''s source files and configure.in template. The `--output` option specifies the file name (without the extension) for the generated configure script, which can be useful when producing multiple configure scripts from a single autoconf input file or when building different configurations. For example, using `autoconf --output=myconfig.sh` generates the configure script named myconfig.sh.'
        prepend-include: '[AI] `autoconf --prepend-include` is a command used in Autoconf, a build system for generating Unix makefiles and other build scripts. This command is used to add extra files or headers at the beginning of the generated configure script''s output. The option `--prepend-include` takes a file or directory as its argument, and the included content will be added before any other files during the configure script generation process. This can be useful for adding common options or macros to all configure scripts in a project, or for supporting projects that require specific header files during configuration.'
        trace: '[AI] `autoconf --trace` is a command used in the Autoconf build system to generate a trace file of the macros and functions called during the configuration process of an Autoconf project. This trace file can be used for debugging and understanding the specific configuration choices made by Autoconf. It provides detailed information about the features tested, the tests results, and the corresponding configured flags. The output is usually in a human-readable format and can be post-processed using tools like `autoreconf` or `m4` for further analysis.'
        verbose: '[AI] `autoconf --verbose` is a command used in software development with the Autoconf system. It runs Autoconf with increased output, providing detailed information about each step of the autoconf process, including which files are being read and processed, any warnings or errors encountered, and other relevant information to help diagnose issues during configuration.'
        version: '[AI] `autoconf --version` is a command used in Unix-based systems to check the version of the Autoconf software installed. Autoconf is a build system generator, which means it creates Makefiles for various projects based on the specific system and compiler configurations. By running this command, you''ll see output displaying the version number of the installed Autoconf software, ensuring that your project setup matches the desired one.'
        warnings: '[AI] The `autoconf --warnings` command is used in Autoconf, a build system for Unix-like operating systems. This command generates or updates the Automake files in a source tree with warnings for potential issues. It does not actually fix any problems; it only points out possible warnings that should be addressed by the developer to ensure a successful build and maintainability of their project. The warnings cover various aspects like deprecated functions, missing or incorrect macros usage, and other Autoconf-related issues.'
