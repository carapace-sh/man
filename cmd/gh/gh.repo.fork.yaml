# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fork [<repository>] [-- <gitflags>...]
description: Create a fork of a repository
group: Targeted commands
flags:
    --clone: Clone the fork
    --default-branch-only: Only include the default branch in the fork
    --fork-name=: Rename the forked repository
    --org=: Create the fork in an organization
    --remote: Add a git remote for the fork
    --remote-name=: Specify the name for the new remote
documentation:
    command: '[AI] `gh repo fork` is a GitHub CLI (Command Line Interface) command used to create a new repository under your own account as a copy or mirror of an existing repository that you don''t have write access to. This allows you to make changes and submit pull requests for potential merging into the original repository. The command requires specifying the URL of the original repository as its argument. For example: `gh repo fork <original_repo_URL>`.'
    flag:
        clone: |-
            [AI] The `git hub repo fork --clone` command is used to clone a forked repository from GitHub. Here's a breakdown of the components:

            1. `git`: It is a free and open-source distributed version control system that helps developers manage and track changes to source code.
            2. `hub`: It is an optional Git extension that simplifies interaction with GitHub, providing convenient commands for creating, cloning, and managing forks. The command `repo` is specifically used for GitHub repository management.
            3. `fork`: This command is used to create a new Git remote named 'upstream-fork' that points to the original forked repository on GitHub. It does not clone any content at this point but sets up the remote relationship.
            4. `--clone`: This option is used with the git command to clone a repository, which includes downloading the entire repository's contents and creating local branches if required. When used with 'repo fork', it clones both the local forked repository and the original repository as remotes.
        default-branch-only: '[AI] `git hub repo fork --default-branch-only` is a Git command used to create a new repository as a fork of an existing one on GitHub. The `--default-branch-only` option ensures that the initial commit in the forked repository will be set to match the default branch (usually `main` or `master`) of the original repository, allowing you to easily start with the latest changes from upstream.'
        fork-name: '[AI] `git hub repo fork --fork-name` is a Git command used to create a new repository as a copy or fork of an existing one, on GitHub. The `--fork-name` option specifies the desired name for the new repository. After executing this command in your terminal, you will be prompted to authenticate and authorize the new repository with your GitHub account. Once done, a new repository is created under your account, containing all the branches and commits of the original repository. This can be useful when you want to make changes or improvements to an open-source project without affecting the original repository.'
        org: '[AI] `gh repo fork --org` is a command used in GitHub''s CLI (Command-Line Interface) tool, gh. This command is used to create a new repository under an organization as a copy or "fork" of an existing one. The "--org" flag specifies that the action should be performed on an organization level, instead of a personal account. When you run this command, it creates a new repository under your chosen organization with the same content and commit history as the original repository.'
        remote: '[AI] `gh repo fork --remote` is a command used in the GitHub CLI (gh) to create a new repository as a fork of an existing one. The `--remote` option specifies that the upstream repository should be added as a remote named "origin" in the newly created forked repository, allowing easy tracking and updating of changes made to the original project.'
        remote-name: '[AI] The `gh repo fork` command is a GitHub CLI (gh) utility used to create a copy of an existing repository under your own account, making it a fork. The `--remote-name` option sets the name for the upstream remote of the new forked repository, typically the original repository''s owner username. For example, if you use `--remote-name=origin user/repository`, your local forked repo will have an upstream remote named "origin" pointing to `user/repository`.'
