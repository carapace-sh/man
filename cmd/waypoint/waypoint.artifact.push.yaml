# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: push
description: Push a build's artifact to a registry
flags:
    --label=: Labels to set for this operation.
    --plain: Plain output
    --remote: True to use a remote runner to execute.
    --remote-source=: Override configurations for how remote runners source data.
    --var-file=: HCL or JSON file containing variable values to set for this operation.
    --var=: Variable value to set for this operation.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint artifact push` command is used in Waypoint, an open-source application delivery platform from Google, to publish built Docker images or other artifacts to a container registry such as Google Container Registry (GCR) or Docker Hub. It takes the name of the application and the image tag as arguments, and pushes the corresponding artifact to the specified registry. For instance, `waypoint artifact push my-app v1.0.0` will publish the image with tag `v1.0.0` for the `my-app` application.'
    flag:
        app: '[AI] The `flag "waypoint artifact push --app"` is a command used in Waypoint, an open-source application delivery platform. This specific flag instructs Waypoint to push an artifact (a packaged application) to the target App Platform, such as Kubernetes or Docker Swarm. By using this flag along with the `--app` option, you specify the name of the target application to which the artifact should be deployed. In summary, it pushes a prepared app package to its designated destination for deployment.'
        label: '[AI] `flag "waypoint artifact push --label"` is used with Kubernetes'' `kubectl` command for pushing an artifact to a Waypoint registry with a specific label. This label helps in organizing and managing the artifacts later based on user-defined criteria. The flag takes a key-value pair format, where the key represents the label name and the value is the desired label value. For example: `--label app=myapp,version=v1.0`.'
        plain: |-
            [AI] The `waypoint` command with the argument `artifact push --plain` is used in Kubernetes to push an artifact, which is a file or configuration stored as an object in a Waypoint registry, to a remote Git repository or another external storage location.

            The `--plain` flag indicates that the artifact should be pushed without any additional metadata or annotations, just the raw content of the file. This can be useful when you want to keep the version history of the artifact in the external Git repository and don't need Waypoint to manage it further.
        project: '[AI] The `flag "waypoint artifact push --project"` is used in Waypoint, an open-source GitOps platform for Kubernetes, to push an artifact (such as a Docker image or a configuration file) to a specific project in a target Kubernetes cluster. This command pushes the artifact to the specified project using Waypoint''s GitOps workflow, ensuring that the artifact is deployed and managed consistently across your cluster based on your version control system.'
        remote: '[AI] The `flag "waypoint artifact push --remote"` is used in Kubernetes to push an artifact (a file or collection of files) from a local directory to a remote Waypoint server. Waypoint is an open-source GitOps toolkit for managing Kubernetes applications and infrastructure. By using this flag with the `waypoint` command, users can synchronize their local changes with the remote repository or environment, ensuring that both are in sync. This is particularly useful when working on multi-person teams or complex deployments where multiple configurations need to be managed.'
        remote-source: '[AI] The `waypoint` command with the argument `artifact push --remote-source` is used to push an artifact from a local Kubernetes cluster to a remote repository, such as Google Cloud Storage or a GitHub repository. The `--remote-source` flag specifies the URL of the remote source where the artifact will be stored once it is pushed. It allows users to easily manage and distribute their Kubernetes configurations, custom resources, and other artifacts across different environments.'
        var: '[AI] The `flag "waypoint artifact push --var"` in Kubernetes refers to an command used with Waypoint, a multi-cloud application delivery platform. This flag pushes an artifact (built image or container) to a specified registry and sets one or more variables as part of the push process. The variables can be environment variables, labels, or other metadata associated with the image. This allows for customization and versioning of images based on specific configurations or values.'
        var-file: '[AI] `flag "waypoint artifact push --var-file"` is a command used in Kubernetes tooling, specifically with Waypoint, an open-source GitOps platform for multicloud applications. This flag is responsible for pushing an artifact (a container image or other resource) to a registry while also providing one or more variable files. These files contain key-value pairs, which will be applied as environment variables or configuration values during the deployment process. The combination of both actions - pushing an artifact and applying variables from files - facilitates efficient and automated management of Kubernetes applications.'
        workspace: |-
            [AI] The `waypoint` command `artifact push --workspace` is used to push an artifact from a local workspace to a remote registry in Google Cloud Platform. Waypoint is an open-source tool for managing Kubernetes applications.

            With the `--workspace` flag, you are specifying the name of the workspace containing the artifact to be pushed. This flag tells Waypoint to use the configured context and credentials associated with that workspace when performing the push operation.
