# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: generate
description: generate Go files by processing source
flags:
    -n: print commands that would be executed
    -run=: specifies a regular expression to select matching directives
    -v: print the names of packages and files as they are processed
    -x: print commands as they are executed
documentation:
    command: '[AI] `go generate` is a Go build command used to run scripts that produce source code output. These scripts are typically located in the `go.mod` or `go.sum` files under the `generate` sub-directories, and they contain custom logic to create new files based on given inputs. When you execute `go generate`, Go locates these scripts and runs them, generating any necessary source code for your project. The result is a cleaner development environment with up-to-date files that save time in setting up complex projects or handling repetitive tasks.'
    flag:
        "n": '[AI] The `go generate` command is a part of Go programming language''s build system, `govbuild`. It is used to automatically generate Go source files based on templates and other input files. The `-n` flag is an optional flag that stands for "dry run" or "no action". When this flag is provided, the command only prints out what it would do if it were to execute without actually generating any files. This can be useful for understanding the impact of running the `go generate` command without making any changes permanent.'
        run: '[AI] `go generate -run` is a Go programming language command used to run go scripts that are marked with `//go:generate` directives in source files. The `go generate` command finds and runs these scripts to generate code or perform other tasks, such as generating documentation or formatting the codebase. The `-run` flag is optional but allows executing the generated code directly after generation.'
        v: '[AI] `go generate -v` is a command used in Go programming language to run or re-run the `go generate` script(s) in the current module or directory. This command generates any non-compile time artifacts such as data files, configuration files, or templates. The `-v` flag increases the verbosity of output during execution, displaying detailed information about which `Go.mod` file and corresponding `go.mod` entry are being processed.'
        x: '[AI] `go generate -x` is a Go command used to update the go.mod file based on current source code. It calculates and records the exact dependencies needed to build the project, overriding any previous modifications to the file. This ensures that the project uses the correct versions of its dependencies for reproducible builds.'
