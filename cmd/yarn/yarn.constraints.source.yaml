# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: source
description: Print the source code for the constraints
flags:
    -v, --verbose: Also print the fact database automatically compiled from the workspace manifests
documentation:
    command: '[AI] The `yarn constraints add source` command is used in Yarn, a popular JavaScript package manager, to define or update a constraint for a specific package version in the project''s `yarn.lock` file. A constraint specifies the maximum allowed version of a package that can be installed without causing potential compatibility issues within your project. By providing the ''source'' argument, you are typically referring to an external source like a Git URL or a npm registry from where Yarn will fetch the specified package version to apply the constraint to. The general format is `yarn constraints add <package-name> <version> source <URL>`.'
    flag:
        verbose: '[AI] The `yarn constraints source --verbose` command is used in Yarn, a popular package manager for JavaScript projects, to display detailed information about the constraint sources applied to a given project. Constraint sources define the rules for resolving version conflicts among dependencies. By running this command with the `--verbose` flag, Yarn will output comprehensive information about each source and the constraints it imposes on the dependencies, helping developers diagnose and troubleshoot dependency conflict issues.'
