# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: migrate
description: Migrate *.templ files
flags:
    -f=: Optionally migrate a single file
    -help: Print help and exit
    -path=: Migrates code for all files in path
documentation:
    command: '[AI] The `templ migrate` command is used in the Templ CMS platform for managing database schema changes. It applies the latest database migration, which is defined in the `migrations` directory of a Templ project. This command ensures that the database schema stays up-to-date with the latest application code changes.'
    flag:
        f: '[AI] The `templ migrate -f` command is a part of Ansible''s Templates module. It stands for "apply template with force". When used, this command will overwrite any existing files in the destination location without prompting for confirmation. This can be useful when you want to ensure that specific templates are applied exactly as desired during infrastructure deployment or configuration management tasks. However, it should be used with caution as it may overwrite unintended files if not carefully employed.'
        help: |-
            [AI] `templ migrate` is a command-line tool provided by Helm, a popular Kubernetes package manager. The `-help` flag is used to display detailed information about how to use this specific command. Here's a brief explanation:

            `templ migrate` helps you upgrade or downgrade your Helm releases by applying a new Helm Chart version while retaining configurations and custom values. The `-help` flag displays the usage instructions including required and optional flags, examples, and more detailed descriptions about each option. You can use it to learn how to effectively utilize the `templ migrate` command for managing your Helm deployments.
        path: '[AI] `templ migrate -path` is a command in the Terraform infrastructure as code tool. The `-path` argument specifies the directory path containing Terraform configuration templates, which will be used to generate new configurations based on those templates when running the `templ migrate` command. This allows for managing changes to configuration files in a version control system and applying them to the actual infrastructure using the generated configs.'
