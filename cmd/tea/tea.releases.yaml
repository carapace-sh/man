# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: releases
aliases:
    - release
    - r
description: Manage releases
group: ENTITIES
flags:
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: '[AI] The `tea releases` command is used in the TeaDB database management system to list available versions or releases of installed TeaDB databases. It does not involve creating, updating, or installing new releases, but simply displays a list of existing ones for potential selection or use.'
    flag:
        login: '[AI] The `--login` flag is used with the `tea releases` command in the Tea UI CLI (User Interface Command Line) tool for Terraform. When this flag is passed, it instructs Tea to log into a specified Terraform registry (such as Terraform Cloud or Atlas) before executing the release command. This allows for automating the deployment of Infrastructure-as-Code using versioned Terraform configurations stored in those registries.'
        output: '[AI] The `--output` flag in the `tea releases` command is used to specify an output file for the command''s output. This can be useful when you want to save the output of the command to a file instead of printing it to the console. For example, `tea releases list --output releases.json` would generate a JSON-formatted output and save it to a file named "releases.json".'
        remote: '[AI] The `--remote` option used with the `tea releases` command in TeaVM, a popular Go mod tool, instructs it to push or fetch release artifacts from a remote repository instead of the local one. In other words, it facilitates synchronization between your local and remote repositories for managing release artifacts.'
        repo: |-
            [AI] The `--repo` option in the `tea releases` command is used to specify a particular Git repository when working with the Tea CLI (Command Line Interface) tool for managing Helm charts.

            When you run `tea releases`, it lists all the releases associated with your local Helm repositories. However, if you want to work with releases from a specific repository only, you can use the `--repo` option followed by the URL or the name of the repository. For instance:

            - To list the releases in the 'myregistry/charts' repository, run `tea releases --repo myregistry/charts`.
            - To list the releases in a Git repository cloned locally at `~/myproject`, run `tea releases --repo file:///home/user/myproject`.
