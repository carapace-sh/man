# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: set-cluster NAME [--server=server] [--certificate-authority=path/to/certificate/authority] [--insecure-skip-tls-verify=true] [--tls-server-name=example.com]
description: Set a cluster entry in kubeconfig
flags:
    --certificate-authority=: Path to certificate-authority file for the cluster entry in kubeconfig
    --embed-certs?: embed-certs for the cluster entry in kubeconfig
    --insecure-skip-tls-verify?: insecure-skip-tls-verify for the cluster entry in kubeconfig
    --proxy-url=: proxy-url for the cluster entry in kubeconfig
    --server=: server for the cluster entry in kubeconfig
    --tls-server-name=: tls-server-name for the cluster entry in kubeconfig
documentation:
    command: '[AI] `kubectl config set-cluster` is a command used in Kubernetes to configure cluster information in your local `kubeconfig` file. This includes setting the name, server address, and certificate authority data for a specific cluster. For example: `kubectl config set-cluster my-cluster --server=https://192.168.0.1:6443 --certificate-authority=/path/to/ca.crt`. This command helps manage multiple clusters in a single `kubeconfig` file, allowing you to easily switch contexts between them using `kubectl config use-context`.'
    flag:
        certificate-authority: |-
            [AI] `kubectl config set-cluster` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command is responsible for managing configuration settings related to Kubernetes clusters.

            More specifically, the `set-cluster` subcommand is used to update the configuration of a named cluster in your `kubectl` configuration file. When you use this command with the `--certificate-authority` flag, you're providing it with a file path or a base64-encoded certificate that will be set as the new certificate authority (CA) for the specified Kubernetes cluster.

            The CA certificate is a crucial element in securing communication between your client and the cluster. It acts as an intermediary issuer of certificates, trusted by both parties involved, ensuring secure data transfer during communication. By updating this setting with `kubectl config set-cluster`, you ensure that your tool uses the correct CA certificate for communicating with the target cluster.
        embed-certs: |-
            [AI] `kubectl config set-cluster` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This specific command is responsible for managing cluster configurations in the `kubeconfig` file, which is the main configuration file for `kubectl`.

            The `--embed-certs` flag that can be passed to this command signifies that the client-side certificate and key data should be embedded directly into the `kubeconfig` file instead of being referred to by an external file. This option is useful when dealing with self-signed certificates or when transferring the configuration file to another machine where the certificates may not be available.

            By using `--embed-certs`, you can ensure that your cluster configuration is complete and self-contained, allowing easy use of the given configuration across different machines without the need for additional certificate files.
        insecure-skip-tls-verify: '[AI] The `kubectl config set-cluster` command is used to configure a new Kubernetes cluster in the `kubeconfig` file. The `--insecure-skip-TLS-verify` flag is an option that disables the certificate verification when communicating with the Kubernetes API server. This means that SSL/TLS certificates will not be verified, which can pose a security risk if used with an untrusted cluster. It''s recommended to only use this flag in secure environments where the connection to the cluster is trusted.'
        proxy-url: '[AI] The `kubectl config set-cluster` command is used to configure a new Kubernetes cluster in your `kubeconfig` file with a custom proxy URL. When you use this command, you provide the name of the cluster and the URL of the proxy server that forwards requests to your Kubernetes API server. The flag sets the `cluster.server` field along with the `cluster.certificate-authority-data` or `cluster.client-certificate` and `cluster.client-key`, if necessary, in the `kubeconfig` file under the given cluster name. This allows you to connect to your remote Kubernetes cluster through a proxy server.'
        server: '[AI] `kubectl config set-cluster` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command is utilized to configure a new Kubernetes cluster in your local `kubectl` configuration file. The `--server` flag specifies the URL or IP address of the Kubernetes API server for the given cluster. In summary, `kubectl config set-cluster --server <cluster-api-address>` allows you to define a new cluster in your `kubectl` configuration with the provided API address.'
        tls-server-name: '[AI] The `kubectl config set-cluster` command is used to configure a new Kubernetes cluster in the `kubeconfig` file, specifically setting the TLS server name for secure communication with the Kubernetes API server using SSL/TLS certificates. This command helps establish trust and ensure secure communications between your local `kubectl` client and the remote Kubernetes cluster, enhancing security and compliance.'
