# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: build
description: Build packages from AUR
flags:
    --builddir=: build directory
    --no-clone: do not clone build files from AUR, only use local files
    --no-confirm: bypass any and all confirmation messages
    --no-keep: do not keep built packages in cache after installation
    -d, --dry-run: only print what would be done
    -k, --keep: keep built packages in cache after installation
documentation:
    command: '[AI] `pamac build` is a command provided by Parabola GNU/Linux-libre''s Package Manager and Build System (PAMAC). It triggers the building of a specific package from source within the PAMAC environment, respecting Parabola''s GNU/Libre distro policies. The output will include progress updates and any error messages. Once built successfully, the package files are prepared for installation using `pamac install`.'
    flag:
        builddir: '[AI] `pamac build` is a command provided by Pacman Arch Linux''s Package Manager Addons Collection (PAMAC). The `--builddir` option specifies a custom directory where PAMAC will perform the source code compilation and build process instead of using the default one. This allows users to keep their build artifacts separated for different projects or to build packages in a specific location for easier management.'
        dry-run: '[AI] `pamac build --dry-run` is a command used in Pacman Accounts Manager (PAMAC), which is a Paknex extension for managing multiple Pacman repositories and user profiles. The `--dry-run` flag is an option that runs the specified command without actually making any changes to the system. In this context, `pamac build --dry-run` will simulate building the packages in your local repository, showing you what packages would be installed or updated based on the current configuration, but it won''t make any actual modifications to your system.'
        keep: '[AI] `pamac build --keep` is a command used in Pacman Automated Build System (PAMAC). It triggers a build of a specific package and keeps the resulting files instead of removing them after the build process is completed. This allows for keeping the built files, such as libraries or binaries, which can be useful for testing or debugging purposes.'
        no-clone: '[AI] `pamac build --no-clone` is a command used in Pacman Automated Build System (PAMAC). It instructs PAMAC to build an existing package from source without cloning the repository first, assuming the source code is already available locally or in a cache. This can save time when building multiple packages from the same source code.'
        no-confirm: '[AI] `pamac build --no-confirm` is a command used in Pacman Accounts Manager (PAMAC), a package manager for Arch Linux. This command initiates the building process of outdated or broken packages without confirming each individual step with user interaction, making it suitable for automated or unattended builds. The `--no-confirm` flag ensures the build progress runs in non-interactive mode.'
        no-keep: '[AI] The `pamac build --no-keep` command is used in the Pacman Package Manager for Arch Linux to build a specific package from source code without keeping the built files after the process completes. This can be useful when you want to test changes to the source code or troubleshoot issues, as it keeps your system free of unnecessary built files and helps maintain a clean build environment.'
