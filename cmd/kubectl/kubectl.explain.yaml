# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: explain RESOURCE
description: Get documentation for a resource
group: basic intermediate
flags:
    --api-version=: Use given api-version (group/version) of the resource.
    --output=: 'Format in which to render the schema. Valid values are: (plaintext, plaintext-openapiv2).'
    --recursive: When true, print the name of all the fields recursively. Otherwise, print the available fields with their description.
documentation:
    command: '[AI] `kubectle explain` is a Kubernetes CLI command used to generate human-readable explanations for various Kubernetes API objects and their corresponding fields. It provides detailed descriptions, including definitions, examples, and usage information directly from the OpenAPI Introspection files of your Kubernetes cluster or configurations. This command helps users understand the purpose and possible values for specific fields in Kubernetes resources, which can be useful when designing custom YAML manifests or troubleshooting issues within a cluster.'
    flag:
        api-version: '[AI] `kubectl explain` is a command-line tool in Kubernetes used to generate openAPI (Swagger) documentation for specific APIs based on their definitions. The `--api-version` flag specifies the API version for which you want to generate the documentation. For example, `kubectl explain --api-versions=v1 core v2/Pod` will explain the Pod resource versions v1 and v2. This can be helpful for understanding the schema and usage of Kubernetes APIs.'
        output: '[AI] `kubectl explain` is a command used with the Kubernetes command-line interface (CLI) tool to generate human-readable explanations for specific resources or API objects in a Kubernetes cluster. The `--output` flag is used to specify the output format for the explanation, which can be set to one of the following values: json, yaml, or go-template. For example, `kubectl explain pods --output=yaml` will generate an explanation of the Pod resource in YAML format. This command provides detailed information about the fields, descriptions, and examples for each field within a Kubernetes object, making it useful for understanding the schema and usage of various resources in the cluster.'
        recursive: '[AI] `kubectl explain` is a command-line tool provided by Kubernetes to interact with the schema of Kubernetes API objects. The `--recursive` flag causes `explain` to provide schema information not just for the specified resource, but also for all referenced child resources in a recursive manner. This can help users understand the relationships and dependencies between different Kubernetes resources.'
