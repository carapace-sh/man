# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: mirror [options] <target-dir>
description: Save local copies of all required provider plugin
flags:
    -platform?: Choose which target platform to build a mirror for
documentation:
    command: |-
        [AI] The `terraform providers mirror` command is not a built-in Terraform command, but rather an action taken using external tools like `git`. This operation is used to synchronize your local directory with a remote provider repository, creating a mirror or backup of the provider's source code. By keeping a mirrored copy locally, you can continue working on your Terraform project even if the original provider repository becomes unavailable or experiences issues. To perform this action using `git`, navigate to your Terraform modules directory containing the `.terraform` folder and run the command:

        ```sh
        git clone <provider-repository-url> <local-directory> --recursive
        ```

        Replace `<provider-repository-url>` with the URL of the provider's repository, and `<local-directory>` with the local directory where you want to store the mirrored copy.
    flag:
        platform: '[AI] The `terraform providers mirror -platform` command is used to create a local mirror of Terraform providers'' binary releases for specific platforms. Terraform providers are third-party plugins that expand the infrastructure as code capabilities of Hashicorp''s Terraform tool. By mirroring the provider binaries, you can ensure availability and reduce reliance on external sources during your deployment process. The `-platform` argument specifies the target platform(s) for the mirror. For example, `terraform providers mirror -platform linux_amd64` will create a local mirror for Linux x86_64 binaries.'
