# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: apply
description: Upgrade your Kubernetes cluster to the specified version
flags:
    --allow-experimental-upgrades: Show unstable versions of Kubernetes as an upgrade alternative and allow upgrading to an alpha/beta/release candidate versions of Kubernetes.
    --allow-release-candidate-upgrades: Show release candidate versions of Kubernetes as an upgrade alternative and allow upgrading to a release candidate versions of Kubernetes.
    --certificate-renewal: Perform the renewal of certificates used by component changed during upgrades.
    --config=: Path to a kubeadm configuration file.
    --dry-run: Do not change any state, just output what actions would be performed.
    --etcd-upgrade: Perform the upgrade of etcd.
    --feature-gates=: A set of key=value pairs that describe feature gates for various features.
    --ignore-preflight-errors*=: 'A list of checks whose errors will be shown as warnings. Example: ''IsPrivilegedUser,Swap''. Value ''all'' ignores errors from all checks.'
    --kubeconfig=: The kubeconfig file to use when talking to the cluster. If the flag is not set, a set of standard locations can be searched for an existing kubeconfig file.
    --patches=: Path to a directory that contains files named "target[suffix][+patchtype].extension".
    --print-config: Specifies whether the configuration file that will be used in the upgrade should be printed or not.
    -f, --force: Force upgrading although some requirements might not be met. This also implies non-interactive mode.
    -y, --yes: Perform the upgrade and do not prompt for confirmation (non-interactive mode).
documentation:
    command: '[AI] The `kubeadm upgrade apply` command is used to apply a Kubernetes cluster upgrade defined in a Kubernetes Kustomize configuration file or YAML manifest. It''s part of Kubeadm, an open-source project used for setting up and managing Kubernetes clusters. This command reads the specified configuration files, validates them, and then applies the necessary changes to upgrade the cluster components (e.g., control plane nodes) to the desired version. The upgrade process can include updating the Kubernetes control plane components, etcd, and other related components, as well as updating the kubelet and container runtime on worker nodes. It''s important to ensure that prerequisites, such as having a stable network connection and sufficient resources, are met before running this command.'
    flag:
        allow-experimental-upgrades: |-
            [AI] `kubeadm upgrade apply --allow-experimental-upgrades` is a command used to apply Kubernetes upgrades with experimental features enabled. This command is part of the `kubeadm` tool, which is used for setting up and managing Kubernetes clusters.

            When using this command, Kubernetes may enable new features that are not yet considered stable or fully supported. By running `--allow-experimental-upgrades`, you're giving your consent to use these experimental features during the upgrade process. This can be useful if you want to access new functionality as soon as possible, but keep in mind that there could be potential risks involved and the experimental features might not be fully tested or stable.

            Using this command will update both the control plane nodes and worker nodes in your Kubernetes cluster, applying the latest upgrades with the experimental features enabled. Always make sure to have a good backup of your cluster before performing an upgrade, as there's a risk of encountering unforeseen issues.
        allow-release-candidate-upgrades: '[AI] `kubeadm upgrade apply --allow-release-candidate-upgrades` is a command used in Kubernetes to apply an upgrade of the Kubeadm component, which is part of the Kubernetes control plane, to a new release candidate version. By including the `--allow-release-candidate-upgrades` flag, the user gives permission to Kubeadm to install the next available release candidate (RC) version instead of the stable one. This command is typically used when wanting to test and evaluate new features before they are officially released and stable. It''s important to note that using release candidates comes with a higher risk as compared to using stable versions, as there could be known issues or incompatibilities.'
        certificate-renewal: |-
            [AI] `kubeadm upgrade apply --certificate-renewal` is a command used in Kubernetes to renew the certificates for the various components of a Kubernetes cluster managed by `kubeadm`. These certificates include those for the API server, etcd, and the Kubernetes control plane.

            By running this command, `kubeadm` will regenerate new certificate signing requests (CSRs) for these components, then issue new certificates based on those CSRs from a local CA or an external one if specified. The new certificates are then applied to the corresponding components in the cluster.

            This operation is important when existing certificates are about to expire, or if there's a need to rotate them for security reasons. By renewing the certificates, you maintain a secure and up-to-date Kubernetes environment.
        config: '[AI] `kubeadm upgrade apply --config` is a command used to apply an upgrade configuration file generated by `kubeadm`. This command is typically run after downloading and configuring a new Kubernetes version using the `kubeadm init` command. The `--config` flag specifies the path to the upgrade configuration file, which contains details of the new Kubernetes version and the rollout strategy (e.g., canary or rolling update). When executed, this command updates the control-plane nodes in a Kubernetes cluster with the latest Kubernetes components while ensuring minimal downtime by utilizing a progressive deployment approach.'
        dry-run: '[AI] `kubeadm upgrade apply --dry-run` is a command used to perform a simulation of upgrading a Kubernetes cluster managed by kubeadm, without making any actual changes. This is useful for checking the impact of an upgrade before executing it in production environments. The `--dry-run` flag indicates that only a simulation should be performed and no changes will be made to the cluster.'
        etcd-upgrade: '[AI] `kubeadm upgrade apply --etcd-upgrade` is a command used in Kubernetes to perform an in-place upgrade of the Etcd cluster, which is the key-value data store for storing the cluster configuration and metadata. This command is typically run as part of upgrading a Kubernetes cluster using `kubeadm`, which manages the installation and configuration of a standalone Kubernetes control-plane cluster. The command performs various tasks such as backup of existing data, downloading and installing the latest version of Etcd, and joining the new etcd server to the existing cluster. Finally, it applies the Kubernetes configuration changes to use the new etcd servers.'
        feature-gates: '[AI] `kubeadm upgrade apply --feature-gates` is a command used in Kubernetes to apply cluster upgrades with specific feature gates enabled. Feature gates are experimental or beta features that can be enabled or disabled in the Kubernetes control plane. By passing `--feature-gates` flag, you can enable certain feature gates during an upgrade, allowing for the deployment of new functionality before it becomes generally available. This command does not automatically apply all available upgrades; it only enables specified feature gates. It is important to note that enabling experimental features may come with added risks and should be done with caution.'
        force: '[AI] `kubeadm upgrade apply --force` is a command used to apply a Kubernetes cluster upgrade using kubeadm, with the `--force` flag to bypass any potential user confirmation prompts. This command checks for available upgrades, downloads the necessary images, and applies the upgrade configuration to the cluster components. It''s typically run as part of an automated or scripted process when performing a rolling Kubernetes cluster update.'
        ignore-preflight-errors: |-
            [AI] The `kubeadm upgrade apply --ignore-preflight-errors` command is used to perform an upgrade of a Kubernetes cluster managed by Kubeadm, even if pre-flight checks fail. These checks are designed to verify the prerequisites for a successful upgrade, such as checking if the version of Kubernetes running is compatible with the new version being installed.

            By using `--ignore-preflight-errors`, you are instructing Kubeadm to continue with the upgrade process despite these checks reporting errors. This can be risky and may result in issues within your cluster, but it can also be necessary in certain situations where you need to apply an upgrade quickly or have made changes to your environment that require this flag.

            It's important to note that ignoring pre-flight errors should only be done with caution and a thorough understanding of the potential risks involved. In most cases, it's recommended to address any reported issues before upgrading your cluster.
        kubeconfig: '[AI] `kubeadm upgrade apply --kubeconfig` is a command used in Kubernetes to apply an upgrade to a Kubernetes cluster managed by Kubeadm. The `--kubeconfig` flag specifies the path to the kubeconfig file, which defines the connection settings for communicating with the cluster. When this command is executed, Kubadelp will download and apply the latest available version of Kubernetes components (such as the control-plane and etcd), as well as update the kubelet and container runtime, ensuring the cluster stays current and secure.'
        patches: |-
            [AI] `kubeadm upgrade apply --patches` is a command used in Kubernetes to apply patch files to an existing cluster managed by kubeadm. These patch files typically contain updates or fixes for known issues in the Kubernetes components, such as the Kubernetes control plane or etcd. Applying these patches helps keep the cluster up-to-date and secure.

            The `--patches` flag takes one or more patch files as arguments. Each patch file must be a valid YAML manifest describing the desired update to the relevant component. Once applied, kubeadm will make the necessary changes to your cluster configuration and restart affected components to apply the updates.

            In summary, `kubeadm upgrade apply --patches` is a powerful tool for applying targeted updates to an existing Kubernetes cluster without having to perform a full cluster upgrade.
        print-config: '[AI] `kubeadm upgrade apply --print-config` is a command used to print out the raw Kubernetes configuration files that would be applied during an upgrade of a Kubeadm control-plane node. This command does not actually perform the upgrade but rather provides the necessary configuration files for manual or automated application of the upgrade. It is often used when performing upgrades in complex environments where manual intervention or customization is required.'
        "yes": '[AI] `kubeadm upgrade apply --yes` is a command used to apply an upgrade to a Kubernetes cluster managed by kubeadm, which is a tool for initializing and managing Kubernetes clusters. The `--yes` flag is used with this command to automatically confirm all prompts, effectively forcing the upgrade process to proceed without any interaction or user intervention. This can be useful in automated deployment scenarios where unattended upgrades are desired. The command updates all components of the Kubernetes control plane and applies the necessary configuration changes.'
