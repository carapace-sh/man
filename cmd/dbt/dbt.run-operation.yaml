# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: run-operation
description: Run the named macro with any supplied arguments
flags:
    --args=: Supply arguments to the macro
    --profile=: Which profile to load. Overrides setting in dbt_project.yml
    --project-dir=: Which directory to look in for the dbt_project.yml file
    --vars=: Supply variables to the project
    -t, --target=: Which target to load for the given profile
documentation:
    command: '[AI] `dbt run-operation` is a command used in dbt (Data Build Tool), an open-source data transformation and testing tool. This command executes a specific data operation defined in a dbt project''s SQL files or models. It runs the operation in the order defined in the dependency graph, applying all necessary transformations upstream before executing the selected one. This command is particularly useful for running individual data pipelines or tests without having to execute the entire model graph.'
    flag:
        args: '[AI] `dbt run-operation` is a command in dbt (data build tool) used to execute an operation defined in dbt scripts. The `--args` option allows passing arguments to the operation, which can be referenced in the script using the `{{args.ARGNAME}}` syntax. These arguments can be used to customize the behavior of the operation at runtime. For example, you might pass a date as an argument to filter data for that day. The full command would look like: `dbt run-operation operation_name --args ARG1=value ARG2=value`.'
        profile: '[AI] `dbt run-operation` is a command used in dbt (data build tool), an open-source data transformation and orchestration tool. The `--profile` option is used to specify which dbt profile to use when running an operation. A profile defines various settings, such as database connection details or output directories, that can be customized for different environments like development, testing, or production. So, using `dbt run-operation --profile <profile_name>` will execute the defined data operation with the specified profile''s settings.'
        project-dir: '[AI] `dbt run-operation` is a command in dbt (Data Build Tool), used to execute specific database operations defined as `{{ config(materialized=''operation'') }}` in dbt models or scripts. The `--project-dir` flag specifies the local directory containing the dbt project files, including the `profiles.yml`, `models`, and `scripts` directories. This is necessary to allow dbt to locate the necessary configuration files and project settings.'
        target: '[AI] `dbt run-operation` is a command in dbt (Data Build Tool), an open-source data transformation and testing toolkit. The `--target` option specifies which operation or model to execute. An operation is a collection of SQL statements, often representing a business logic unit, while a model is a database artifact created by running an operation. Therefore, `dbt run-operation --target <operation_or_model_name>` runs the specified operation or model and produces the corresponding output.'
        vars: '[AI] `dbt run-operation` is a command in dbt (Data Build Tool), an open-source data transformation and orchestration tool. The `--vars` option allows users to pass key-value pairs as variables when running an operation, such as a SQL query or a data transformation. These variables can be referenced in the code of the operation using the `{{ ref(''variable_name'') }}` syntax. This can be useful for providing dynamic values to operations, such as database connection strings or user input parameters.'
