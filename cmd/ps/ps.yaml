# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ps
description: report a snapshot of the current processes
flags:
    --cols=: Set screen width.
    --columns=: Set screen width.
    --context: Display security context format (for SELinux).
    --cumulative: Include some dead child process data (as a sum with the parent).
    --deselect: Select all processes except those that fulfill the specified conditions
    --forest: ASCII art process tree.
    --headers: Repeat header lines, one per page of output.
    --help=: Print a help message
    --info: Print debugging info.
    --lines=: Set screen height.
    --no-headers: Print no header line at all
    --ppid=: Select by parent process ID
    --rows=: Set screen height.
    --sid=: Select by session ID
    --sort=: Specify sorting order
    --version: Print the procps-ng version.
    --width=: Set screen width.
    -A: Select all processes
    -F: Extra full format
    -G, --Group=: Select by real group ID  or name
    -H: Show process hierarchy (forest).
    -L: Show threads, possibly with LWP and NLWP columns.
    -M: Add a column of security data.
    -N: Select all processes except those that fulfill the specified conditions
    -O=: Like -o, but preloaded with some default columns
    -T: Show threads, possibly with SPID column.
    -U, --User=: Select by real user ID (RUID) or name
    -V: Print the procps-ng version.
    -a: Select all processes except both session leaders and processes not associated with a terminal
    -c: Show different scheduler information for the -l option.
    -d: Select all processes except session leaders
    -e: Select all processes
    -f: Do full-format listing
    -g, --group=: Select by session OR by effective group name
    -j: Jobs format.
    -l: Long format.  The -y option is often useful with this.
    -m: Show threads after processes.
    -o, --format=: user-defined format
    -p, --pid=: Select by PID
    -q, --quick-pid=: Select by process ID (quick mode)
    -s=: Select by session ID
    -t, --tty=: Select by tty
    -u, --user=: Select by effective user ID (EUID) or name
    -w: Wide output
    -y: Do not show flags
documentation:
    command: '[AI] The `ps` command is a utility in Unix and Unix-like operating systems used to report on the currently running processes. It displays information such as process ID, process state, user, priority, and more. Users can specify various options to filter or sort the output of this command. For instance, `ps aux` shows detailed information for all processes while `ps -eF` displays all processes in a tree format.'
    flag:
        A: '[AI] The `ps` command with the `-A` option is used in Unix and Unix-like operating systems to display information about all currently running processes. The `-A` flag stands for "all" processes, which includes both foreground and background processes. This command provides a comprehensive list of all active processes along with their respective process IDs (PIDs), memory usage, CPU usage, and other relevant details.'
        F: '[AI] The `ps` command with the `-F` option is used to display a more detailed list of currently running processes in Unix or Linux systems. It shows various process attributes such as Process ID (PID), Parent ID, User, %CPU usage, %MEM memory usage, State, and the command that started the process. The output can be customized further using other options with `ps`.'
        Group: '[AI] The `ps` command with the `--group` option in Unix-based systems is used to display processes grouped by their common ancestor process ID (PID) or session ID (SID). This means that all processes sharing the same parent or session will be listed together under a single heading, making it easier to identify related processes and their hierarchy within the system.'
        H: '[AI] The `ps` command with the option `-H` (or `--no-heading`) is used to display a list of currently running processes without printing the header line. This means that only the process data will be displayed, without column headers. It''s often used in shell scripts for programmatically processing the output of `ps`.'
        L: '[AI] The `ps` command with the `-L` option is used in Unix or Linux systems to display a comprehensive list of currently running processes, including their process identification numbers (PIDs), parent PIDs, process state, and other relevant information like the user who started the process, the priority level, and the amount of memory and CPU usage. The `-L` flag stands for "long format", which means that more details are shown in the output compared to using other flags such as `ps -a` or `ps -u`.'
        M: '[AI] The `ps` command with the `-M` option is used to display the entirety of the process status information, including all headers and columns, in the output. It is typically used when you want to see every detail about a process or when you''re dealing with large numbers of processes and need to ensure that all relevant data is being displayed.'
        "N": '[AI] The `ps` command with the `-N` option is used to display the process status information for a specific process or processes identified by their process ID (PID) or name. It does not show other system-wide process information by default, unlike other variations of the `ps` command such as `ps -aux`. The output will only include the requested process and its associated details like PID, TTY, State, %CPU, %MEM, etc.'
        O: '[AI] The `ps` command with the option `-O` is used to customize the output format of the process status information in Unix or Linux systems. The `-O` option allows you to specify which columns you want to display. You can provide a comma-separated list of column names, or use special codes to represent specific columns. For example, `ps -O pid,cmd` will show only the Process ID and Command columns. This can be useful when you want to filter or process the output based on specific data.'
        T: '[AI] The `ps` command with the `-T` option is used in Unix and Linux systems to display a fairly barebones list of currently running processes, including their process ID (PID), process name, and the user who started it. It does not show additional information such as memory usage or priority level by default. If you need more detailed information, other options can be added in combination with `-T`, such as `-o` to customize the output format.'
        User: '[AI] The `ps` command with the `--user` option in Unix-based systems is used to display a list of currently running processes, along with their corresponding user IDs (UIDs). This can help identify which users are responsible for running specific processes, making it useful for system administration and troubleshooting tasks. The output typically includes columns such as PID (process ID), TTY (terminal), STAT (process status), and USER (user owner), among others.'
        V: '[AI] The `ps` command with the `-V` option is used in Unix or Linux systems to display a verbose output of currently running processes, including their process ID (PID), parent PID, priority level, and other relevant information. This can help users and administrators troubleshoot and manage processes more effectively.'
        a: |-
            [AI] The `ps` command with the `-a` option is used to display information about currently running processes in Unix-like operating systems. The `-a` flag stands for "all" and indicates that the output should include information about both foreground and background processes.

            The output typically includes process ID (PID), user, %CPU usage, %MEM memory usage, process name, and other relevant details. The exact format of the output can be influenced by other options used with `ps`. For instance, `ps aux` will provide even more detailed information including process priority and nice value among others.
        c: '[AI] The `ps` command with the `-c` option is used to display a compact listing of current processes running in Unix or Linux systems. It shows essential process information like Process ID (PID), TTY, Stat (state), Time, and Command used to start the process. This is often used for quick checks on the status of running processes within a terminal.'
        cols: '[AI] The `ps` command with the `--cols` option is used in Unix-based systems to display a listing of currently running processes, specifying which columns to be displayed. It modifies the default output format by selecting only the desired columns. For example, `ps --cols=pid,cmd` will show the Process ID (PID) and command (cmd) for each process.'
        columns: '[AI] The `ps --columns` command in Unix-based systems is used to display a custom list of columns while listing the running processes. By default, `ps` command displays several columns like PID, TTY, STAT, TIME, etc. However, you can specify specific columns using the `--columns` option followed by a comma-separated list of column names. For instance, `ps --columns=PID,CMD` would display only the process IDs and commands. This command helps in filtering and analyzing processes based on required information.'
        context: |-
            [AI] The `ps` command with the `--context` option is used in Unix-like operating systems to display processes based on their execution context or controlling terminal. This can be useful for understanding which processes are associated with specific terminal windows or sessions.

            When you run `ps --context`, it displays a list of currently running processes along with their TTY (teletype) number or the name of the controlling terminal, providing insight into the relationship between processes and their associated terminals.
        cumulative: '[AI] The `ps` command with the `--cumulative` option displays a report of running processes, including their cumulative CPU usage. This means that instead of showing individual CPU usage for each process at a single point in time, it shows the total amount of CPU time used by a process since it started running. This can be useful for understanding which processes have consumed the most system resources over time.'
        d: '[AI] The `ps` command with the `-d` option is used to display a dense listing of current processes running in Unix or Linux systems. It shows essential process information such as PID (Process ID), TID (Thread ID), PPID (Parent Process ID), and other details like state, priority, and memory usage. It''s useful for quickly identifying the processes based on specific criteria.'
        deselect: |-
            [AI] The `ps --deselect` command is a variation of the `ps` (process status) utility in Unix-like operating systems. Instead of displaying all or specific processes with their details, `--deselect` option is used to exclude a particular process from the output.

            When you provide an argument to this option, it filters out the process identified by that argument from the overall list of processes displayed by the `ps` command. For instance, if you want to view all processes excluding one with PID 1234, you would issue:

            ```bash
            $ ps --deselect pid=1234
            ```

            This will present a list of all processes except for the process having PID 1234.
        e: '[AI] `ps` is a command-line utility in Unix and Linux operating systems used to monitor various processes running on the system. The `-e` option is an argument passed with the `ps` command, which stands for "everything." It is used to display information about all currently running processes, including their process IDs (PIDs), parent PIDs, CPU usage, memory usage, and other relevant details. This can be useful for system administrators and developers who need an overview of the current system process landscape.'
        f: '[AI] The `ps` command with the `-f` option is used in Unix and Unix-like operating systems to display a more detailed listing of currently running processes. The `-f` flag stands for "full" and it shows additional information such as the complete command line used to start each process, the process ID (PID), the parent process ID (PPID), and other details. This can be useful for troubleshooting or understanding complex process relationships.'
        forest: '[AI] `ps --forest` is a command in Unix-like operating systems, specifically for the `ps` utility, which is used to display information about running processes. The `--forest` option produces an ASCII tree diagram of the process hierarchy, showing the parent-child relationships between processes. Each node in the tree represents a process and includes its process identification number (PID), process name, and some other relevant information. This can be useful for understanding how different processes are related and identifying potential issues with process interaction or dependency.'
        format: '[AI] The `ps` command in Unix and Unix-like operating systems is used to display information about running processes. The `--format` option allows customizing the output format of the `ps` command by specifying a string that defines which process information should be displayed. For example, `ps --format=%CPU %MEM %COMMAND` displays the CPU usage, memory usage, and command name for each process in the output. The format string can include various directives like `%h` for process ID, `%u` for user, or `%c` for the command name, among others.'
        group: '[AI] The `ps` command with the `--group` option in Unix-based systems is used to display the processes along with their belonging process groups. Each process runs in its own process group by default, but they can be made to join other groups using various methods, like the `setpgid()` system call. This flag helps identify which processes share a common process group ID and thus, might be related in terms of their execution context or parent-child relationship.'
        headers: '[AI] The `ps --headers` command is used in Unix-based systems to display a list of the columns that will be displayed when using the `ps` command to view the running processes. It does not show any actual process information but instead prints out the headers or labels for each column that will appear in the output of other `ps` commands, such as `ps aux` or `ps -ef`. This can be helpful for understanding what each column represents and what information can be gleaned from the output.'
        help: '[AI] `ps` is a command-line utility in Unix and Unix-like operating systems for displaying information about running processes. The option `--help` is used to display detailed help information about the `ps` command, including available options, their meanings, and usage examples. For instance, you can run `ps --help` in a terminal window to see the extensive help documentation for the `ps` command.'
        info: '[AI] The `ps --info` command in Unix-based systems is used to display detailed information about currently running processes, including their process identification numbers (PIDs), parent process IDs, priority levels, start time, and more. The `--info` option provides a comprehensive output format for the `ps` utility.'
        j: '[AI] The `ps` command with the `-j` option is used to display a compact, single-column output of the `ps` utility in Unix or Linux systems. It lists the essential process information such as PID (Process ID), TTY (Teletype), State, and Time for each running process. This format is commonly used when dealing with scripts or automation tasks where a simple and clear display of process information is required.'
        l: '[AI] `ps` is a command-line utility in Unix and Unix-like operating systems used to examine the currently running processes. The option `-l` (lowercase L) provides a more detailed output, including process identification numbers (PID), usernames, priority levels, Nice values, and other information about the state and size of each process.'
        lines: '[AI] The `ps` command with the option `--lines` (or just `-o all`) is used in Unix and Unix-like operating systems to display detailed information about currently running processes. The `--lines` option indicates that all available information should be displayed, resulting in a long and comprehensive output for each process. This includes process identification numbers (PIDs), usernames, priority levels, start times, and more. It provides a complete picture of the system''s current process status.'
        m: '[AI] The `ps` command in Unix-based systems is used to examine the currently running processes. The option `-m` is used with `ps` to provide a more detailed output, including all process members and their full command lines, as well as the size of each process in memory and CPU usage.'
        no-headers: '[AI] The `ps` command with the `--no-headers` option is used in Unix-based systems to display information about running processes without printing a header line. This means that only the process data will be displayed, without any column titles or labels. This can be useful when processing the output of `ps` programmatically, as there is no need for the header row that adds unnecessary complexity and potential formatting issues.'
        pid: '[AI] The `ps` command with the option `--pid` is used in Unix-based systems to display information about a specific process identified by its Process ID (PID). When you run `ps --pid <PID>`, it will show details about that particular process such as its status, CPU usage, memory usage, and other relevant information. This command helps system administrators and developers troubleshoot processes and monitor their resource consumption.'
        ppid: '[AI] `ps` is a command-line utility in Unix and Unix-like operating systems used to examine the running processes. The option `--ppid` (also written as `-p`) followed by a process ID (PID) displays detailed information about the specified process and its parent process ID (PPID). In other words, it shows the hierarchical relationship between the parent and child processes.'
        quick-pid: '[AI] The `ps` command with the option `--quick-pid` is used to display the Process ID (PID) of the running processes in a compact format, one PID per line. This can be helpful for quickly identifying and managing processes based on their unique IDs.'
        rows: '[AI] The `ps` command with the `--rows` option is used in Unix-based operating systems to display the process status, but specifically to show one process per line (i.e., one row). This can make it easier to read and work with the output when dealing with a large number of processes.'
        s: '[AI] The `ps` command with the `-s` option is used in Unix-like operating systems to display a list of currently running processes, along with their process ID (PID), parent process ID (PPID), and other relevant information such as memory usage and priority level. The output can be sorted based on various parameters, including process ID or memory usage. It does not show detailed information about the processes by default, but you can use additional options to display more detailed information if needed.'
        sid: '[AI] The `ps` command with the option `--sid` is used to display the Process ID (PID) and its Session ID (SID) in Unix-like operating systems. The Session ID is a unique identifier for a process group, which is a set of related processes that share the same control terminal. This can be useful when managing and identifying processes that belong to a specific session or terminal.'
        sort: '[AI] `ps --sort` is a command in Unix-like operating systems used to list the currently running processes. The `--sort` option specifies the column by which the output should be sorted. For instance, `ps --sort=pid` will display the processes ordered by their Process IDs in ascending order by default, while `ps --sort=-%cpu` sorts the processes according to their CPU usage percentage in descending order.'
        tty: '[AI] The `ps` command with the option `--tty` is used to display the process status along with their associated terminal or controlling TTY (Teletype) devices in Unix-like operating systems. This can be helpful in identifying which processes are using specific terminals and for troubleshooting issues related to terminal allocation and resource usage.'
        user: '[AI] The `ps` command with the `--user` option is used in Unix-based operating systems to display a list of currently running processes, showing the user or owner of each process. This option helps identify which processes belong to which users for system administration and troubleshooting purposes.'
        version: '[AI] The `ps --version` command is used to check the version of the `ps` utility, which is a Unix/Linux command-line tool for managing and monitoring processes. When executed, it displays the version number or release information of the installed ps implementation.'
        w: '[AI] The `ps` command with the `-w` option is used in Unix and Unix-like operating systems to display a wide format listing of currently running processes, including all columns such as PID (Process ID), TTY (Teletype), Time, Cmd (Command). It provides more information than the default format. This flag helps in getting a comprehensive view of the system processes.'
        width: '[AI] The `ps` command with the option `--width` sets the width of the output columns in the terminal or text file. It takes an argument specifying the desired column width, allowing for better formatting and readability of the process list. For instance, `ps --width 100 aux` sets a width of 100 characters for all columns when displaying detailed information about processes using the `aux` option.'
        "y": '[AI] The `ps` command with the `-y` option is used to display the processing status of processes in a vertical format by columns, meaning that each column corresponds to a specific piece of information about the process such as PID, TTY, State, %CPU, etc. This format is useful for quickly analyzing the system''s running processes and their resource usage.'
