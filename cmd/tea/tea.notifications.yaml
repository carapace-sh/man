# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: notifications
aliases:
    - notification
    - "n"
description: Show notifications
group: HELPERS
flags:
    --limit=: specify limit of items per page
    -R, --remote=: Discover Gitea login from remote. Optional
    -f, --fields=: 'Comma-separated list of fields to print. Available values:'
    -l, --login=: Use a different Gitea Login. Optional
    -m, --mine: Show notifications across all your repositories instead of the current repository only
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -p, --page=: specify page, default is 1
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
    -s, --states=: 'Comma-separated list of notification states to filter by. Available values:'
    -t, --types=: 'Comma-separated list of subject types to filter by. Available values:'
documentation:
    command: '[AI] The command "tea notifications" is not a standard command for any known software or operating system. It may be a typo, a custom command specific to a certain application or configuration, or it could be a placeholder for a future command. Without more context, it is impossible to provide an accurate explanation.'
    flag:
        fields: '[AI] The `--fields` option in the `tea notify` command is used to specify which fields or columns you want to see in the notification message. It takes one or more field names as arguments, separating them with commas if there are multiple fields. For example, `--fields username,status` would display only the `username` and `status` fields in each notification. This can be helpful for focusing on specific information when dealing with large amounts of data.'
        limit: '[AI] The `--limit` option in Tea''s `notifications` command sets a limit to the number of notifications displayed. By default, Tea shows all notifications. With `--limit`, you can specify an integer value, and only that number of most recent notifications will be shown.'
        login: '[AI] The `--login` flag for the `tea notifications` command is used to authenticate and log in to a Tea (a popular CLI tool for managing GitHub notifications) account when sending or receiving notifications. It takes no argument, but it must be passed as an option to the command following the `tea` executable, like this: `tea notifications --login`. After logging in successfully, further commands related to notifications can be executed using the same Tea session.'
        mine: '[AI] The `tea notifications --mine` command is a part of the TeaDB CLI (Command Line Interface) tool for interacting with the Tezos blockchain. This specific command filters and displays only the notifications related to accounts controlled by the user running the command. Notifications in Tezos represent events such as transfers, smart contract calls, or baking rewards. By using `--mine`, users can easily focus on their own account activities without being distracted by unrelated notifications.'
        output: |-
            [AI] The `--output` flag in the `tea notifications` command is used to specify the output format for the notification messages displayed by Tea, a CLI tool for managing Subscription-based messaging services like Webhooks or Email Notifications.

            By default, Tea sends notifications to the terminal console. However, you can use the `--output json` option to receive notifications in JSON format which can be easily parsed and processed by scripts or other applications.

            For example, if you want to save notifications as separate files, you might use the `--output file` flag followed by a filename, such as:

            ```bash
            tea notifications --output file=notifications.txt
            ```

            This would store each notification message in a text file named 'notifications.txt'. Remember to always ensure that the specified output location has proper write permissions for your user.
        page: '[AI] The `--page` option in the `tea notify` command of the Tea interface tool is used to specify which page or application tab in a multi-tabbed terminal session you want to receive notifications for. This allows you to customize which notifications you see based on the specific terminal window where your Tea sessions are running. For example, if you have multiple Tea windows open with different projects, you can configure each one to display notifications only for that project''s tab.'
        remote: '[AI] The `--remote` option in the `tea notifications` command is used to specify that the notifications should be managed remotely using a Tea Server, rather than through the local client application. This allows for managing notifications across multiple devices or networks from a central location.'
        repo: '[AI] The `tea notifications --repo` command is a part of TEA (Temporal Event Administration), an open-source event sourcing and CQRS framework. This specific command is used to manage notifications for a particular Git repository within the TEA system. It may be used to subscribe or unsubscribe to events in the repo, list current subscriptions, or check subscription health status.'
        states: '[AI] The `tea notifications --states` command is a part of the TEA (Temporal Eventuality Analyzer) library in Apache Atlas, which is used for managing and querying metadata about Hadoop data. This specific command displays the current state of ongoing notifications related to events in the Atlas metadata store. It lists the type, status, and last updated timestamp of each notification.'
        types: '[AI] The `tea notifications --types` command is used in the TeaDB database management tool to display a list of available notification types. Notifications in TeaDB are messages that can be sent when specific events occur, such as table creation or query results. By running this command, users can see the different types of notifications they can set up and configure for their databases.'
