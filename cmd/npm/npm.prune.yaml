# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: prune
description: Remove extraneous packages
flags:
    --dry-run: only report changes
    --json: output as json
    --omit*=: omit package type
    --workspaces: Enable running a command in the context fo all workspaces
    -w, --workspace*=: Enable running a command in the context of the given workspace
documentation:
    command: '[AI] `npm prune` is a command used in Node.js projects to remove unused and outdated packages from the node_modules folder and the package-lock.json or package.json files. It helps keep your project lean by only retaining the required dependencies, which can improve build times and reduce disk space usage.'
    flag:
        dry-run: '[AI] `npm prune --dry-run` is a command used in Node.js projects to perform a dry run of npm''s package-pruning feature. In simple terms, it checks and shows which packages will be removed based on their dependency tree without actually deleting them from the node_modules directory. This helps prevent unintended deletions and allows for careful review before executing the pruning process in a production environment.'
        json: '[AI] `npm prune --json` is a command used in Node.js package management with npm (Node Package Manager). This command is used to remove unused or unnecessary packages from your project''s `node_modules` folder and update the `package-lock.json` file or `yarn.lock` file (if using Yarn) with the updated dependencies. The `--json` option generates output in JSON format, which can be useful for scripting or further automation purposes.'
        omit: '[AI] `npm prune --omit` is a command used in Node.js package management with npm (Node Package Manager). This command is used to remove unused or unnecessary packages from your project''s node_modules folder and lockfile (package-lock.json or yarn.lock). The `--omit <pkg>` option allows you to exclude specific packages from being removed during the pruning process. For example, `npm prune --omit myPackage` would remove all unused packages except for "myPackage". This can help keep your project lean while ensuring that essential packages are not accidentally removed.'
        workspace: '[AI] `npm prune --workspace` is a command used in Node.js projects managed with npm (Node Package Manager). This command is run within the root directory of a multi-package project (defined in `package.json` as a "workspace"), and it removes unused or unneeded packages and their dependencies from the node_modules folder and locked files (`yarn.lock` or `package-lock.json`) across all packages in the workspace, helping to keep the project lean and efficient.'
        workspaces: '[AI] `npm prune --workspaces` is a command used in npm (Node Package Manager) for managing dependencies in multi-package projects, also known as workspaces. It removes unused or unneeded packages from the project''s node_modules folder and lockfiles, optimizing the dependency tree and reducing disk space usage. This command considers the entire workspace instead of individual packages, ensuring consistent dependencies across all packages within the workspace.'
