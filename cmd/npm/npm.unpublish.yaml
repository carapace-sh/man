# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: unpublish
description: Remove a package from the registry
flags:
    --dry-run: only report changes
    --workspaces: Enable running a command in the context fo all workspaces
    -f, --force: remove various protections against unfortunate side effects
    -w, --workspace*=: Enable running a command in the context of the given workspace
documentation:
    command: '[AI] `npm unpublish` is a command used in Node.js package management with npm (Node Package Manager). It allows you to remove a published package from the npm registry. When run, it requires authentication and confirmation before the specified package version(s) or the entire package is permanently deleted from the registry. This should be used with caution, as unpublishing removes public access to the package and any dependent projects using it may be affected.'
    flag:
        dry-run: '[AI] The `npm unpublish --dry-run` command is a feature in npm (Node Package Manager) that allows you to simulate the effect of unpublishing a package from the npm registry before actually doing it. When you run this command with your package name as an argument, npm will perform a dry run, which means it will show you what would happen if you were to actually unpublish the package at that moment in time. This includes displaying the packages that would be affected, and any potential error messages or warnings. It''s a useful tool for testing the impact of unpublishing before making the change permanent.'
        force: '[AI] The `npm unpublish --force` command is a function of npm (Node Package Manager), which is used to remove a published package from the npm registry. The `--force` flag is optional but significant: it overrides any access controls, ignoring checks for ownership or permissions. This means that if you use `--force`, you can unpublish someone else''s package by mistake, leading to potential security issues and broken dependencies. Therefore, use this command with caution and only when you are absolutely sure that you have the correct permissions and are unpublishing your own package.'
        workspace: '[AI] `npm unpublish --workspace` is a command used in Node.js package management with npm (Node Package Manager). This command is utilized for removing one or multiple packages from the npm registry under a single `workspace` or `scope`. The `--workspace` option specifies that the given command should be applied to all packages within the current `workspace`, as defined in an `npm-workspace.json` file, rather than just the currently active directory. It''s important to note that unpublishing a package revokes its publication and makes it unavailable for other developers, and should only be done when necessary (for instance, if a package needs to be updated or if it contains errors).'
        workspaces: '[AI] `npm unpublish --workspaces` is a command used in npm (Node Package Manager) for managing scoped packages in a monorepo (multi-package project). It allows you to unpublish all the packages under one or multiple scopes within a workspace. This command ensures that the packages are properly deleted from the npm registry and any dependent projects no longer use outdated versions. By using `--workspaces`, you can perform this action across all packages in a workspace, making it an efficient way to manage updates when working on a large-scale Node.js project.'
