# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dc
description: an arbitrary precision calculator
flags:
    -V, --version: output version information and exit
    -e, --expression=: evaluate expression
    -f, --file=: evaluate contents of file
    -h, --help: display this help and exit
documentation:
    command: '[AI] The `dc` (short for "dedicated calculator") command is a versatile, minimalist calculator utility available in Unix-like operating systems. It reads numbers and performs arithmetic operations from standard input, with each number pair representing an operation: the first number is the operand, and the second number is the operation code (addition `+`, subtraction `-`, multiplication `*`, division `/`, etc.). For example, to perform the addition of 5 and 3 using dc, type `5 3 +p`. This command reads numbers 5 and 3, performs the ''+'' operation, and outputs the result, which is displayed on the screen.'
    flag:
        expression: |-
            [AI] `dc` is a reversible calculator command-line tool for performing arbitrary arithmetic operations and manipulating data using stacks. The `--expression` option is used to specify an expression that `dc` should evaluate as a single command, rather than interactively entering individual commands in the REPL (Read-Evaluate-Print Loop) mode. This can be useful for automating tasks by passing complex expressions as arguments to scripts or other programs. For example:

            ```sh
            dc --expression='[10] 3 pf [20] 2 pd + w' < input.txt > output.txt
            ```

            This command evaluates the given expression `[10] 3 pf [20] 2 pd + w`, which performs the following operations:

            1. Load number 10 onto stack A.
            2. Push number 3 onto stack B (using the `pf` command).
            3. Multiply top of stack B by top of stack A, and place the result on top of stack B (using the `*` or `mf` operation, implied in this case due to using `pf`).
            4. Load number 20 onto stack A.
            5. Push number 2 onto stack B.
            6. Multiply top of stack B by top of stack A, and place the result on top of stack B.
            7. Subtract the top of stack B from the top of stack A (using the `pd` command).
            8. Output the result using the default `w` command.
            9. Terminate the `dc` program execution.
        file: '[AI] The `dc` (Desk Calculator) command with the `--file` option is used to read and execute a series of calculations or data manipulation commands stored in a file instead of entering them interactively at the console. The flag tells the dc command to take input from the specified file instead of the standard input, allowing for automated or scripted use of dc.'
        help: '[AI] `dc` is a reverse Polish calculator (RPN) available in Unix-like operating systems. The `--help` option when used with `dc` command displays detailed usage information about the calculator, including valid commands and their syntax. It provides a quick reference guide on how to use the calculator effectively for various arithmetic operations and manipulations of stacks.'
        version: '[AI] The `dc` command with the `--version` option is used to display the version information of the DC calculator utility installed in your system. When you run this command in a terminal or command prompt, it will output the name of the calculator (dc), its version number, and sometimes additional details like compilation date and operating system. This information helps users to check which version of dc they have installed and if there are any updates available.'
