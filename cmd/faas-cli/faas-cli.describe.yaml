# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: describe
description: Describe an OpenFaaS function
flags:
    --envsubst: Substitute environment variables in stack.yml file
    --name=: Name of the function
    --tls-no-verify: Disable TLS validation
    -g, --gateway=: Gateway URL starting with http(s)://
    -k, --token=: Pass a JWT token to use instead of basic auth
    -n, --namespace=: Namespace of the function
documentation:
    command: '[AI] `faas-cli describe` is a command from the FaaS (Function-as-a-Service) CLI toolkit, which allows managing and deploying serverless functions. This command retrieves detailed information about a specific function or application that is currently deployed. It displays various metadata such as function name, version, code size, memory usage, environment variables, and other relevant details to help users understand the configuration and status of their deployed functions.'
    flag:
        envsubst: '[AI] `faas-cli describe` is a command from FaaS-CLI (Function as a Service Command Line Interface) toolkit, used to retrieve information about a specific function deployed with the FaaS system. The `--envsubst` flag is an optional argument that enables environment variable substitution in the output. When this flag is provided, the command replaces the `$VAR_NAME` syntax in the description output with the corresponding environment variable value. This feature helps in understanding the actual values of variables at runtime, which can be useful for debugging or configuration management purposes.'
        gateway: '[AI] `faas-cli describe --gateway` is a command used with the FaaS (Function-as-a-Service) CLI tool to retrieve detailed information about a specific Faas Gateway. The flag `--gateway` specifies the name or URL of the target gateway. The output includes details such as the gateway''s version, hosting provider, status, and associated functions with their respective endpoints and versions. It helps in understanding and managing the deployed FaaS applications and their associated gateways.'
        name: '[AI] `faas-cli describe` is a command provided by FaaS (Function-as-a-Service) CLI tool. The `--name` option is used to specify the name of the function you want to describe. When you run `faas-cli describe --name <function_name>`, it fetches and displays detailed information about the specified function such as its code hash, function version, programming language, memory limit, and execution environment among other metadata. This command helps in understanding the configuration and status of a particular function deployed using FaaS.'
        namespace: '[AI] `faas-cli describe` is a command-line interface (CLI) tool provided by FaaS (Function as a Service) platforms like OpenFaas or OpenWhisk. The `--namespace` flag is an argument for this command, which helps to filter and retrieve specific information about the resources in a given Kubernetes namespace. When used, it returns detailed information about functions, topics, routes, and other related resources within the specified namespace.'
        tls-no-verify: '[AI] The `faas-cli describe` command with the `--tls-no-verify` flag is used to retrieve detailed information about a specific function deployed using FaaS (Function-as-a-Service) technology, such as OpenFaaS or AWS Lambda. This flag disables SSL certificate verification during the communication between your local CLI and the backend server. This means that the CLI will not check the authenticity of the SSL certificate presented by the server, which can be risky if used in an insecure environment, but may be necessary for working with self-signed or otherwise untrusted certificates. It''s important to use this flag only when necessary and to ensure that you trust the server you are communicating with.'
        token: '[AI] `faas-cli describe` is a command-line interface (CLI) tool provided by FaaS (Function-as-a-Service) platforms like OpenFaaS, to retrieve detailed information about a specific function. The `--token` option is used to authenticate the request with a valid Function Service Token (FST). This token is essential for accessing and managing functions deployed on the FaaS platform. When you run `faas-cli describe --token <your_token>`, it returns the metadata, configuration, and other details of the function identified by the context or the provided function name.'
