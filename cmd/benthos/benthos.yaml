# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: benthos
description: A stream processor for mundane tasks
flags:
    --chilled: continue to execute a config containing linter errors
    --log.level=: 'override the configured log level, options are: off, error, warn, info, debug, trace'
    -c, --config=: a path to a configuration file
    -e, --env-file=: import environment variables from a dotenv file
    -h, --help: show help
    -r, --resources=: pull in extra resources from a file, which can be referenced the same as resources defined in the main config, supports glob patterns (requires quotes)
    -s, --set=: set a field (identified by a dot path) in the main configuration file, e.g. `"metrics.type=prometheus"`
    -t, --templates=: 'EXPERIMENTAL: import Benthos templates, supports glob patterns (requires quotes)'
    -v, --version: display version info, then exit
    -w, --watcher: 'EXPERIMENTAL: watch config files for changes and automatically apply them'
documentation:
    command: '[AI] "Benthos" is a term used in oceanography to describe the community of organisms living on or near the bottom of bodies of water, including both the seafloor and the sediment surface. These organisms play crucial roles in various marine ecosystems and help maintain biodiversity and biogeochemical processes.'
    flag:
        chilled: '[AI] The `benthos --chilled` flag is a command-line argument used in Benthos, an open-source data processing system. This specific flag instructs Benthos to process data in a chilled mode, which means it will prioritize data throughput over real-time processing. In other words, the system will process data as it comes in but may introduce some delay or batching to ensure efficient use of resources and maintain stable performance, making it suitable for handling large volumes of data.'
        config: '[AI] The `benthos --config` command is used with Benthos, an open-source data processing system. This command is used to apply a configuration file to Benthos, specifying how it should process data streams. The configuration file can define various aspects of the data processing pipeline, such as input sources, processing stages, and output sinks. By passing the `--config` flag followed by the path to the configuration file, users can easily customize the behavior of Benthos for their specific use cases.'
        env-file: '[AI] The `benthos --env-file` flag is used with Benthos, an open-source data pipeline processor. It specifies a file containing key-value pairs for environment variables that will be set when running the Benthos command. This allows configuration settings to be externalized and managed separately from the command itself, making it easier to manage and update configurations.'
        help: '[AI] The `benthos help` command is used with the Benthos open-source data processing workflow system. It displays detailed information about available commands, their usage, and options. Users can call this command followed by the name of a specific command for more focused help or simply call it without an argument to see an overview of all available commands.'
        log.level: |-
            [AI] `benthos` is an open-source data pipeline processor. The `--log.level` flag is used to configure the logging level for `benthos`. It determines the amount and detail of log output produced by the application. Available levels, in order of increasing verbosity, are:

            1. `error`: Log only critical errors.
            2. `warn`: Log warnings as well as errors.
            3. `info`: Log informational messages in addition to warnings and errors.
            4. `debug`: Log detailed debug information along with informational messages.
            5. `trace`: Log the most detailed information, including low-level tracing, which can be used for debugging complex issues.
        resources: |-
            [AI] The `benthos --resources` command is used with Benthos, an open-source data pipeline processor. This command is utilized to specify the input and output resources for a Benthos pipeline. Resources can be files, directories, databases, or other types of data sources. The `--resources` option takes an JSON array where each element represents a resource with its type, configuration, and other relevant details. For instance:

            ```bash
            benthos --resources='[{"Type":"file","Config":{"Path":"input/*.csv"}},{"Type":"sink","Config":{...}}]'
            ```

            In this example, the pipeline processes CSV files from the input directory (`--resources[0].Config.Path`) and writes the output to a sink (`--resources[1].Config`).
        set: '[AI] `benthos` is an open-source data processing platform designed for streaming and batch data. The `--set` flag is a command-line option used with Benthos pipelines. It is used to override or set specific values of configuration properties without modifying the pipeline YAML file itself. This can be useful for testing different configurations or running pipelines with dynamic values. For example, `benthos run my_pipeline.yml --set MY_CONFIG=value` would start the pipeline `my_pipeline.yml` with the configuration property `MY_CONFIG` set to the value `"value"`.'
        templates: '[AI] The `benthos --templates` command is used with Benthos, an open-source data pipeline processor. This command is specifically for executing templates within Benthos. Templates allow users to define dynamic processing configurations using various templating languages like GoText or Mustache. By passing the `--templates` flag, Benthos will evaluate and apply these templates during its configuration phase, enabling flexible and customizable data processing workflows.'
        version: '[AI] `benthos --version` is a command used with the Benthos data processing system. When run, it prints out the current version number of Benthos installed on your system. It helps users ensure they are running the latest or desired version and provides valuable information for troubleshooting and compatibility checks.'
        watcher: '[AI] The `benthos --watcher` flag is used with Benthos, an open-source data pipeline processor. With this flag, Benthos runs in watch mode, continuously monitoring data streams and processing new data as it arrives. This allows for real-time data processing and makes it ideal for use cases that require handling streaming data in near real-time.'
