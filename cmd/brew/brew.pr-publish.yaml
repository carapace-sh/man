# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: pr-publish
description: Publish bottles for a pull request with GitHub Actions
group: developer
flags:
    --autosquash: If supported on the target tap, automatically reformat and reword commits to our preferred format.
    --branch: 'Branch to use the workflow from (default: `master`).'
    --debug: Display any debugging information.
    --help: Show this message.
    --large-runner: Run the upload job on a large runner.
    --message: Message to include when autosquashing revision bumps, deletions, and rebuilds.
    --quiet: Make some output more quiet.
    --tap: 'Target tap repository (default: `homebrew/core`).'
    --verbose: Make some output more verbose.
    --workflow: 'Target workflow filename (default: `publish-commit-bottles.yml`).'
documentation:
    command: '[AI] `brew pr-publish` is a Homebrew command used to create and submit a pull request for changes made in your local Homebrew installation, specifically changes to the formulae or other parts of the Homebrew repository. It collects your local modifications, formats them into a suitable pull request format, and opens a new pull request on GitHub for review by the Homebrew maintainers. This command is typically used when you''ve made improvements to Homebrew that you believe should be incorporated into the main project, or when maintaining a private tap and wish to share your changes with others.'
    flag:
        autosquash: |-
            [AI] The command `brew pr-publish --autosquash` is used in Homebrew, a popular package manager for macOS, to create and publish a Pull Request (PR) with automated squashing of commits.

            When you make changes to Homebrew's formulae or other components and want to contribute them back, you can use Homebrew's git repository. `brew pr-publish` is a command that helps in creating and publishing a PR from your local changes. However, it doesn't squash your commits automatically before creating the PR by default.

            The `--autosquash` option automates the process of squashing your commits (i.e., combining multiple commits into one) before publishing the PR. This makes the PR easier to review as there will be fewer individual changes to consider.

            In summary, `brew pr-publish --autosquash` creates and publishes a pull request with automatically squashed commits in Homebrew.
        branch: '[AI] `brew pr-publish --branch` is a command used with Homebrew, a popular package manager for macOS. This command creates and opens a pull request (PR) on GitHub using the branch that contains your local Homebrew changes. Once opened, you can review and merge the PR to update the Homebrew repository with the new changes. It simplifies the process of contributing to Homebrew by handling the creation and submission of the PR in one step.'
        debug: '[AI] `brew pr-publish --debug` is a command used in Homebrew, a popular package manager for macOS. This command publishes a pull request to be merged into Homebrew''s main repository, enabling the new changes to become part of the next release. The `--debug` flag increases the verbosity of the output, providing detailed information about the publish process, which can be helpful in diagnosing issues or understanding the workflow better.'
        help: |-
            [AI] The command `brew pr-publish --help` is used in Homebrew, a popular package manager for macOS, to display help information about the `pr-publish` sub-command.

            `pr-publish` is a command that creates pull requests based on Homebrew's formula updates and bottle releases. It checks for new changes in Homebrew's repository and generates pull requests against the main branch or a specified branch. The `--help` flag displays detailed information about how to use this command, including any available options and their usage.
        large-runner: |-
            [AI] `brew pr-publish --large-runner` is a command used with Homebrew, a popular package manager for macOS. The `pr-publish` subcommand is responsible for publishing a pull request, merging its changes into the Homebrew core repository, and building bottles (precompiled binaries) for the updated formulae.

            The `--large-runner` flag enables the use of a larger-sized GitHub runner for the build process, which can handle large projects or complex builds that exceed the capacity of the standard runners. This ensures a successful publication of the pull request even when dealing with significant changes or large files.
        message: '[AI] The command `brew pr-publish --message` is used in Homebrew, a popular package manager for macOS, to create and submit a pull request with the given message to a Homebrew repository on GitHub. This allows users to propose changes or new formulae for packages before they are merged into the main repository. The command combines creating a new branch based on the current HEAD, staging and committing the changes, and setting up the remote repository to push the branch as a pull request. The `--message` option sets the commit message for this action.'
        quiet: '[AI] `brew pr-publish --quiet` is a command used in Homebrew, a popular package manager for macOS. This command publishes a pull request to merge changes from a branch in Homebrew''s GitHub repository into the main repository. The `--quiet` option suppresses informational messages during the process, allowing for a quiet execution of the command. In essence, this command is used to publish a Homebrew pull request without displaying additional output.'
        tap: '[AI] `brew pr-publish --tap` is a command used in Homebrew, a popular package manager for macOS. This command publishes a Homebrew Tap (short for "repository tap"), which is a GitHub repository containing Homebrew formulae for installing software packages. By using `brew pr-publish`, the changes made to the formulae in the local tap repository are pushed to the remote GitHub repository, making them publicly available for other Homebrew users to install via Homebrew''s built-in package manager.'
        verbose: '[AI] `brew pr-publish --verbose` is a command used in Homebrew, a popular package manager for macOS. The `pr-publish` subcommand publishes a pull request created with Homebrew''s `brew bottle` feature. This command pushes the bottled formula to Homebrew''s taps (public or private) and merges the associated pull request. The `--verbose` flag increases the output of the command, providing detailed information about each step in the process.'
        workflow: |-
            [AI] `brew pr-publish --workflow` is a command used in Homebrew, a popular package manager for macOS and Linux. This command is specifically designed for managing pull requests in Homebrew's GitHub repository.

            The `--workflow` flag indicates that the command should use Homebrew's Continuous Integration (CI) workflow when publishing the pull request. The CI workflow checks the code changes in the pull request against various criteria, such as building packages and running tests, to ensure they meet Homebrew's quality standards before merging them into the main repository.

            In summary, `brew pr-publish --workflow` is a command for publishing a pull request in Homebrew with the added benefit of using the CI workflow to check the changes before merging. This helps maintain the high quality and consistency of Homebrew's software packages.
