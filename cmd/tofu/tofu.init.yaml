# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: init [options]
description: Prepare your working directory for other commands
group: main
flags:
    -backend: Configure the backend for this configuration
    -backend-config*?: Backend configuration
    -force-copy: Suppress prompts about copying state data
    -from-module?: Copy the contents of the given module into the target directory before initialization
    -get: Download any modules for this configuration
    -ignore-remote-version: A rare option used for the remote backend only
    -input: Ask for input if necessary
    -lock: Don't hold a state lock during backend migration
    -lockfile?: Set a dependency lockfile mode
    -migrate-state: Reconfigure the backend, and attempt to migrate any existing state
    -no-color: If specified, output won't contain any color
    -plugin-dir: Directory containing plugin binaries
    -reconfigure: Reconfigure the backend, ignoring any saved configuration
    -upgrade: ignore previously-downloaded objects and install the latest version allowed
documentation:
    command: '[AI] The `tofu init` command is used to initialize a new Tofu project in Node.js. Tofu is a library for building and deploying serverless functions using Next.js. This command sets up the project structure, creates necessary files, and installs dependencies as defined in the `package.json`. After running this command, you can start developing your serverless functions using Tofu.'
    flag:
        backend: '[AI] `tofu init -backend` is a command used in Tofu, an open-source blockchain development framework. This command initializes a new Tofu project and sets the backend to the specified option. The available backends include Ethereum, Solana, or Cosmos. For instance, if you want to create a new project with Cosmos as the backend, use `tofu init -backend cosmos`. It creates the necessary project structure and sets up the environment for building dApps on the chosen blockchain platform.'
        backend-config: '[AI] The `tofu init --backend-config` command is used in Tofu, a data versioning and secret management tool. This command initializes a new Tofu project and creates a `backend.yml` file for configuring the backend storage, such as S3 or GCS. The `--backend-config` flag specifies the path to an existing `backend.yml` file, allowing you to use an existing configuration instead of creating a new one during initialization.'
        force-copy: '[AI] The `tofu init -force-copy` command is used to initialize a new Git repository with Tofu, a tool for managing encrypted and compressed files in version control systems. The `-force-copy` flag forces the replacement of existing files in the destination directory with those in the current directory, even if they have different modification times or other attributes. This is useful when moving an existing repository to a new location or converting an unencrypted repository to an encrypted one.'
        from-module: '[AI] The `tofu init --from-module` command is a subcommand of Tofu, a Rust library for cryptography. It generates a new key pair directly from a specific Rust FFI (Foreign Function Interface) module instead of from an existing key file or source. This is useful when working with libraries that provide their own encryption and decryption functions but do not come with pre-generated keys, allowing you to generate and use keys securely within your Rust project.'
        get: |-
            [AI] The command `tofu init --get` is used in Tofu, a Gitops tool for Kubernetes, to initialize a new repository and fetch the desired Kubernetes configuration from remote sources like Git or S3 buckets.

            When you run this command in your terminal, it sets up a new local Tofu workspace with an empty Git repository, applies any necessary Helm charts or Kustomize patches, and fetches the desired configuration files from the specified remote sources. This allows you to manage and deploy your Kubernetes applications using version control systems like Git.
        ignore-remote-version: '[AI] The `tofu init --ignore-remote-version` command is used when initializing a Git repository with Tofu, a tool designed to enhance Git''s security by verifying the authenticity of remote repositories using GPG keys. This specific command instructs Tofu to ignore any version checks against the remote repository during initialization, effectively skipping any remote key verification. This might be useful in certain scenarios where you trust the remote and want to bypass the verification step for convenience or when dealing with specific edge cases. However, it is generally recommended to use this command with caution as it disables a crucial security feature of Tofu.'
        input: '[AI] The command `tofu init -input` is used to initialize a new Tofu project in your current directory with an input file specified by the `-input` flag. Tofu is a tool for building and deploying Rust microservices, and this command sets up the project structure and configuration based on the provided input file which typically contains YAML definitions of the service''s routes and endpoints.'
        lock: '[AI] The command "tofu init --lock" is used to initialize a new Tofu Git worktree with a locked configuration. Tofu is a Git extension that allows users to manage multiple Git repositories as a single project, with the ability to lock specific branches or files to prevent conflicts when collaborating with others. The "--lock" option ensures that only one user can make changes to the locked branches or files at a time.'
        lockfile: '[AI] The `tofu init --lockfile` command is used to initialize a new Git project using Tofu, a Git repository protection tool. It creates a new Git repository and sets up a lockfile to prevent unauthorized pushes or commits to the repository. This command helps ensure that only trusted contributors can make changes to the codebase.'
        migrate-state: '[AI] `tofu init --migrate-state` is a command used in Tofu, an open-source Kubernetes configuration management tool. This command initializes a new Tofu project and sets the migration state to "on." With this setting, Tofu will manage the migration of your existing Kubernetes manifests into its declarative format during the initialization process. In other words, it helps you transition your existing Kubernetes configuration into the idempotent and versioned Tofu YAML files.'
        no-color: '[AI] `tofu init --no-color` is a command used in Tofu, a Git workflow management tool. The `init` subcommand initializes a new Git repository and sets it up to be managed by Tofu. The `--no-color` option disables colored output from Git commands run within the repository. This can be useful for running scripts or working in environments where colored output is not desired or supported.'
        plugin-dir: '[AI] The `tofu init --plugin-dir` command is used to initialize a new project using Tofu, a Haskell build tool. The `--plugin-dir` option specifies the directory where custom plugins for Tofu are located. This allows users to extend Tofu''s functionality by adding their own plugins, which can be used to define custom build rules or perform additional tasks during the build process.'
        reconfigure: '[AI] The command `tofu init --reconfigure` is used in Tofu, a Kubernetes admission controller for securing your clusters. This command initializes a new Tofu installation or re-configures an existing one. It sets up the necessary Kubernetes resources and applies the latest Tofu policies for enforcing security rules. The `--reconfigure` flag is optional, and it''s used when you want to update the configuration without losing any existing data or changes.'
        upgrade: '[AI] The `tofu init --upgrade` command is used to upgrade the Tofu init system, which is a simple init system for Linux systems. This command checks for available upgrades and applies them if found, ensuring that the system has the latest version of Tofu and its associated services are running on the most recent stable release.'
