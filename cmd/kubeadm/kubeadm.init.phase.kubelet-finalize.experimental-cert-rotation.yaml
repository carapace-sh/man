# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: experimental-cert-rotation
description: Enable kubelet client certificate rotation
flags:
    --cert-dir=: The path where to save and store the certificates.
    --config=: Path to a kubeadm configuration file.
documentation:
    command: |-
        [AI] `kubeadm init` is a command used to bootstrap a Kubernetes cluster. The `phase kubelet-finalize experimental-cert-rotation` is one of the stages in this process.

        This specific phase performs the finalization of the Kubelet component, which is responsible for running containers and managing nodes in the cluster. Additionally, it enables the experimental Certificate Rotation feature. This feature automatically rotates the certificates used by the Kubernetes API server and etcd, enhancing security by reducing the risk of long-lived certificates being compromised.
    flag:
        cert-dir: '[AI] The command `kubeadm init` is used to bootstrap a Kubernetes cluster. The specific flag `--phase kubelet-finalize experimental-cert-rotation --cert-dir` instructs the process to enter the final phase of initializing the Kubernetes cluster, which is managing the kubelets and their certificates. The `experimental-cert-rotation` argument enables a feature for rotating TLS certificates for improved security. The `--cert-dir` flag specifies the directory where these certificates should be stored.'
        config: |-
            [AI] `kubeadm init` is a command-line tool for initializing a Kubernetes cluster. The given flag, `phase kubelet-finalize experimental-cert-rotation --config`, instructs `kubeadm` to perform certain actions during the initialization process:

            1. **kubelet-finalize:** This flag signifies that the `kubeadm` should finalize the configuration of the Kubernetes node's `kubelet`. The `kubelet` is a system daemon that runs containers and manages the cluster nodes. Finalizing its configuration ensures it can join the cluster and function correctly.

            2. **experimental-cert-rotation:** This flag enables a feature for rotating certificates during certificate rotation. Certificate rotation is an important security practice to maintain, as it helps keep your cluster secure by frequently updating SSL/TLS certificates used for secure communication between components. However, this feature is marked as experimental, meaning it may have some limitations or potential issues that are being addressed in the ongoing development of Kubernetes.

            3. **--config:** This flag specifies the location and name of the output configuration file. The file will be generated with all the necessary information required to join other nodes to the cluster using `kubeadm join`. It's essential to securely store and distribute this file to new nodes if you plan on expanding your cluster in the future.
