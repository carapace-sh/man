# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: stop [OPTIONS] CONTAINER [CONTAINER...]
description: Stop one or more running containers
flags:
    -s, --signal=: Signal to send to the container
    -t, --time=: Seconds to wait before killing the container
documentation:
    command: '[AI] The `docker container stop` command is used to gracefully stop running Docker containers. It sends a SIGTERM signal to the container''s main process, allowing it to perform an ordered shutdown. If the container does not stop within a specified time (default is 10 seconds), the command sends a SIGKILL signal to forcefully terminate the container.'
    flag:
        signal: '[AI] The `docker container stop` command is used to gracefully stop a running Docker container by sending a signal instead of forcefully terminating it with a SIGKILL signal. The `--signal` option allows specifying the type of signal to send, with the default being SIGTERM (15). This signal instructs the container to perform a clean shutdown before termination, giving the application inside the container an opportunity to save data and handle the shutdown process.'
        time: '[AI] The `docker container stop --time` command is used to gracefully stop a running Docker container by sending a SIGTERM signal followed by a SIGKILL signal after a specified time interval if the container does not terminate on its own. The `--time` option allows you to set the number of seconds before sending the SIGKILL signal. By default, it is 3 seconds. This command helps ensure that any running processes inside the container have a chance to gracefully shut down, which can prevent data loss or other issues that may arise when forcefully stopping a container.'
