# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: users
aliases:
    - u
description: Manage registered users
flags:
    --limit=: specify limit of items per page
    -R, --remote=: Discover Gitea login from remote. Optional
    -f, --fields=: 'Comma-separated list of fields to print. Available values:'
    -l, --login=: Use a different Gitea Login. Optional
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -p, --page=: specify page, default is 1
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: '[AI] The `tea admin users` command is used in the TEA (Twilio Application Platform) environment to manage user access and permissions. This command specifically lists all the existing admin users under the given TEA project, granting them full control over the platform. Admin users can create, modify, delete applications, services, and other resources as well as manage other team members'' access.'
    flag:
        fields: |-
            [AI] `tea admin users --fields` is a command used in TeaDB, an open-source database management tool for MySQL and PostgreSQL databases. This command is used to fetch specific fields of data from the 'users' table in the administration section of TeaDB.

            When run, it returns a list of usernames or user identifiers along with their respective values for the specified fields. The `--fields` option allows you to indicate which columns should be displayed in the output. For example, you might use `tea admin users --fields username,role` to display only the 'username' and 'role' columns for each user.
        limit: '[AI] The `tea admin users --limit` command is used in the Teapascii (TEA) security toolkit to list a specified number of administrative users from a given system or configuration file. The `--limit` option sets the maximum number of users to be displayed. For example, `tea admin users --limit 10` will return information about the first 10 administrative users found.'
        login: '[AI] `tea admin users --login` is a command used in TeaDB, an open-source MySQL management tool. This command allows you to log into MySQL databases as an administrative user without providing the password interactively. The flag `--login` indicates that the following argument will be the name or identifier of the administrative user to connect with. For example: `tea admin user1 --login` would connect to the database using the ''admin'' role and the specified ''user1'' account. This command simplifies the login process for MySQL administration tasks in TeaDB.'
        output: '[AI] The `tea` command is a CLI tool for managing Teapot, an open-source SQL database. The specific command `tea admin users --output` is used to list all existing user accounts in the Teapot administration interface. The `--output` flag determines the output format. For instance, using `json` will return the result as a JSON object, while `table` will display it as a tabular format for easier reading.'
        page: '[AI] The `tea admin users --page` command is a part of TEA (The Easy Admin), an open-source PHP based admin interface for Laravel applications. This specific command is used for listing and managing user records in the admin panel. The `--page` option is not a part of the core Tea CLI, but an extension to refine the output. It sets the number of results displayed per page when listing users. For instance, using `tea admin users --page=10` will show 10 records per page.'
        remote: '[AI] The `tea admin users --remote` command is a part of the TeaDB database management tool. This command is used to manage user accounts in a remote MySQL or PostgreSQL database server via the TeaDB CLI (Command-Line Interface). By using the `--remote` option, TeaDB connects to the target database over SSH and performs administrative tasks related to managing users, such as creating, updating, or deleting user accounts. This can be useful when working with multiple databases spread across different servers in a networked environment.'
        repo: '[AI] The `tea admin users --repo` command is used with the Tectonic (TEA) platform, an open-source Kubernetes distribution by CoreOS. This command is utilized for managing RBAC (Role-Based Access Control) in a specific Git repository associated with a Tectonic cluster. It allows an administrator to create, delete, or modify users and their respective roles within the given repository''s context.'
