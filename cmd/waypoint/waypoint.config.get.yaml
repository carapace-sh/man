# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: get
description: Get config variables
flags:
    --json: Output in JSON The default is false.
    --label=: Labels to set for this operation.
    --plain: Plain output
    --raw: Output in key=val The default is false.
    --runner: Show configuration that is set on runners.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint config get` command in Waypoint, an open-source multi-cloud infrastructure automation platform, is used to retrieve the value of a specific configuration variable from a Waypoint module or HCL configuration file. This command helps in querying and accessing the current configuration settings for easier management and troubleshooting.'
    flag:
        app: '[AI] The `waypoint config get --app` command is a part of Waypoint, an open-source application delivery and infrastructure automation tool by Google. This specific command retrieves the configuration data for a particular application defined in Waypoint''s YAML manifests or HCL templates. It takes ''--app'' as an argument to specify which application''s configuration you want to fetch.'
        json: '[AI] The command `waypoint config get --json` is used in Waypoint, an open-source multi-cloud infrastructure automation tool. This command retrieves the current configuration of a specific module in Waypoint in JSON format. In simpler terms, it returns the definition of a resource or set of resources as a JSON object for further processing or inspection.'
        label: '[AI] The `waypoint config get` command is used in Google Cloud''s Waypoint configuration management tool to retrieve the value of a specific label from a configured resource. The `--label` option specifies the name of the desired label. For example, `waypoint config get --label my_label my_resource` would return the value associated with `my_label` for the resource named `my_resource`.'
        plain: '[AI] `waypoint config get --plain` is a command in the Waypoint configuration management tool for Hashicorp. It retrieves the raw, plain text representation of a specific configuration item from Waypoint''s backend. This command does not apply any transformations or formatters and outputs the configuration data as it is stored in the backend.'
        project: '[AI] The `waypoint config get --project` command is a part of Waypoint, an open-source infrastructure automation tool from Hashicorp. This specific command retrieves configuration data for a specified project in Waypoint. By providing the name or ID of the project as an argument, it allows users to access and view the current state of the project''s configuration, such as variables, modules, and other settings defined within that project.'
        raw: '[AI] The `waypoint config get --raw` command is used in Waypoint, an open-source multi-cloud infrastructure automation platform developed by Google. This command retrieves the raw value of a specific configuration item from a Waypoint module''s HCL (Hashicorp Configuration Language) file. By using the `--raw` flag, the output will not be interpreted as a data structure but instead returned as a single string. This can be useful when dealing with complex data structures or when you just need to inspect the raw value of a configuration item.'
        runner: '[AI] The `waypoint config get --runner` command in Waypoint, an open-source multi-cloud infrastructure automation tool, retrieves the configuration data for a specific runner (agent) from Waypoint''s configuration management system. This can be useful to view or inspect the current configuration of a particular runner, such as its assigned tasks, labels, and other properties.'
        workspace: '[AI] The `waypoint config get --workspace` command is a part of Google Cloud''s Waypoint infrastructure configuration tool. It retrieves the configuration data for a specific workspace from Waypoint''s configuration store. This data includes settings related to the infrastructure resources, such as the region, availability zones, and instance types, that are used to deploy and manage applications within that workspace.'
