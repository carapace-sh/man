# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: apply [options] [PLAN]
description: Create or update infrastructure
group: main
flags:
    -auto-approve: Skip interactive approval of plan before applying
    -backup?: Path to backup the existing state file before modifying
    -compact-warnings: Show wanings in a more compact form that includes only the summary messages
    -destroy: Destroy Terraform-managed infrastructure
    -input: Ask for input for variables if not directly set
    -lock: Don't hold a state lock during the operation dangerous if others might concurrently run commands against the same workspace.
    -lock-timeout?: Duration to retry a state lock
    -no-color: If specified, output won't contain any color
    -parallelism?: Limit the number of parallel resource operations
    -state-out?: Path to write state to that is different than "-state"
    -state?: Path to read and save state
documentation:
    command: '[AI] The `tofu apply` command is not a standard command in Unix or Linux systems. It seems to be specific to Tofu, a Git-like data versioning system for machine learning models. With Tofu, you can manage and compare different versions of machine learning models as first-class citizens alongside code. The `apply` command in Tofu is used to apply the differences between two model versions to new data, creating a new model version with the updated predictions.'
    flag:
        auto-approve: '[AI] The `tofu apply -auto-approve` command is used in Kubernetes to apply changes to a configuration file and automatically approve any resulting changes to be deployed, bypassing the normal approval process. This can be useful in certain scenarios where quick deployment is required and the risks associated with manual approval are minimal. However, it''s important to note that using `-auto-approve` should be done with caution as it bypasses the standard review process and may introduce unintended changes or errors into the cluster.'
        backup: '[AI] The command `tofu apply -backup` is used in Tofu, a Git-like data versioning tool, to create a new backup of an existing application configuration or data. It applies the changes specified in the given Tofu snapshot or commit (implied by the "apply" keyword), and creates a new backup with the name managed by Tofu''s internal backup management. This command helps maintain multiple versions of your application''s state, ensuring that you can easily revert to any previous version if needed.'
        compact-warnings: |-
            [AI] The `tofu apply` command is a tool from the Terraform infrastructure management software. The `-compact-warnings` flag is an option that can be passed to this command to change the output format of Terraform's warning messages during plan application.

            With the `-compact-warnings` flag, warnings will be displayed as a single line for each resource or module in alphabetical order, with a brief description of the issue and the affected resource type. This option is useful when dealing with large numbers of warnings and wanting to view them in a more condensed format for easier scanning and identification.
        destroy: '[AI] `tofu apply -destroy` is a command used in Terraform, an open-source infrastructure as code software tool. This command is used to destroy Terraformed resources. Specifically, it applies a configuration change that results in the removal of previously created infrastructure. This change is applied in an automated and consistent manner defined by the Terraform configuration files.'
        input: '[AI] `tofu apply -input` is a command used in Tofu, a data versioning tool for Kubernetes. This command applies a specific change or update represented by a Tofu manifest file to a Kubernetes cluster. The `-input` flag indicates that the manifest file should be provided as an argument to the command.'
        lock: '[AI] The command `tofu apply -lock` is used in Tuftu, a Git-based data versioning system for configuration management. It applies a specific lock file to a Tuftu repository, preventing other users from making conflicting changes to the same files until the lock is released. This ensures consistency and prevents unwanted concurrent modifications.'
        lock-timeout: '[AI] The `tofu apply --lock-timeout` command is used in Tofu, a GitOps tool for Kubernetes, to apply changes with a specific lock timeout. When applying configuration changes, Tofu supports acquiring and releasing locks to ensure that only one change can be applied at a time to avoid conflicts. The `--lock-timeout` flag sets the duration for which Tofu should hold the lock before timing out and releasing it if the apply process takes longer than expected. This helps prevent long-running apply jobs from blocking others.'
        no-color: '[AI] The command `tofu apply -no-color` is a command used in Tofu, a popular Git file manager and patch applicator tool. The `apply` subcommand is used to apply a patch or changeset, while the `-no-color` option instructs Tofu not to use color output when displaying information during the application process. This can be useful for users who prefer plain text output or are working in environments where color output is not supported.'
        parallelism: '[AI] The `tofu apply -parallelism` command is used in Tofu, a data processing framework, to specify parallel execution of tasks. It takes an integer argument representing the degree of parallelism, which is the number of worker processes to use for parallel task execution. This flag enables Tofu to distribute and process data across multiple workers concurrently, improving processing speed and efficiency for large datasets.'
        state: '[AI] The `tofu apply -state` command is used in Terraform, an open-source infrastructure as code software tool. This command applies the changes defined in a Terraform configuration file against the current state of the infrastructure, creating or updating resources as necessary to match the desired configuration. In simpler terms, it applies the desired configuration to the actual infrastructure, bringing the current state closer to the intended state.'
        state-out: '[AI] The `tofu apply -state-out` command is used in Terraform, an open-source infrastructure as code software tool. It applies the changes defined in a Terraform configuration file and saves the resulting state to a file instead of storing it in the default remote backend. The `-state-out` flag specifies the output file name for the saved state. This command is useful when working offline or when you want to keep your state files locally for security reasons.'
