# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update
description: Update a secret
flags:
    --from-file=: Path to the secret file
    --from-literal=: Value of the secret
    --tls-no-verify: Disable TLS validation
    --trim: trim whitespace from the start and end of the secret value
    -g, --gateway=: Gateway URL starting with http(s)://
    -k, --token=: Pass a JWT token to use instead of basic auth
    -n, --namespace=: Namespace of the function
documentation:
    command: |-
        [AI] `faas-cli secret update` is a command used in the FaaS (Function-as-a-Service) toolchain, specifically with the FaaS CLI (Command Line Interface) tool. This command is utilized for managing and updating secrets in a FaaS environment.

        When you run `faas-cli secret update`, you provide it with the name of the existing secret and the new value to be updated. The CLI will then interact with your FaaS platform's API to perform the update, ensuring that the latest secret information is being used by your functions.

        For example: `faas-cli secret update mysecret new_value`

        This command helps maintain secure configurations and credentials for your functions without hardcoding them directly in your code.
    flag:
        from-file: |-
            [AI] The `faas-cli secret update` command is used to manage secrets in a Function-as-a-Service (FaaS) environment with the FaaS CLI tool. The `--from-file` flag is an option for this command, which allows you to update or create a secret by providing its file content as an argument.

            When using this flag, you specify the path to a local file that contains the secret data in plaintext format. The FaaS CLI reads the contents of the file and encodes it into base64 before updating the corresponding secret in the FaaS platform's metadata.

            Here is an example usage:

            ```bash
            faas-cli secret update my_secret --from-file /path/to/my_secret.txt
            ```

            This command will update or create a new secret named "my\_secret" using the contents of the file located at "/path/to/my\_secret.txt". Once updated, you can reference this secret within your FaaS functions by using environment variables with the prefix `FAAS_SECRET_`.
        from-literal: '[AI] `faas-cli secret update` is a command used in Faas (Function as a Service) to manage and update application secrets. The `--from-literal` option indicates that the new secret value is provided directly, as plain text, instead of loading it from an external file or environment variable. In other words, this command updates a Faas application''s secret using a literal value provided on the command line.'
        gateway: |-
            [AI] The `faas-cli secret update --gateway` command is used with the FaaS (Function-as-a-Service) CLI tool to manage secrets in the context of a specific gateway or API server.

            This command allows you to update an existing secret. You provide the secret name and the new value as arguments, and the CLI will take care of updating the secret configuration for that particular gateway. This is useful when you need to change the value of a sensitive variable used by your FaaS functions without having to redeploy or modify the function code directly.
        namespace: '[AI] The `faas-cli secret update` command is used to manage secrets in a FaaS (Function-as-a-Service) system, specifically with the FaaS CLI tool. The `--namespace` flag is optional and specifies the Kubernetes namespace where the secret is located. This means that the command will update or create a secret in the specified namespace within your Kubernetes cluster. Without the namespace flag, the command will default to the current context''s namespace.'
        tls-no-verify: '[AI] The `faas-cli secret update --tls-no-verify` command is used with the FaaS-CLI (Function-as-a-Service Command Line Interface) tool to update a secret in a FaaS (Function-as-a-Service) platform, such as OpenFaas or OpenWhisk. The `--tls-no-verify` option disables TLS certificate verification during the API call to the FaaS platform''s REST endpoint. This can be useful in specific use cases where you trust the certificate issuer and want to bypass certificate validation for easier setup or automation, but it is generally not recommended for production environments due to security concerns. Always use `--tls-no-verify` with caution and only when necessary.'
        token: '[AI] The `faas-cli secret update --token` command is used with the FaaS-CLI (Functions as a Service Command Line Interface) tool to manage and update secrets in a serverless function infrastructure. Specifically, this command updates an existing secret identified by its token with a new value. It takes the secret''s token as its argument and accepts the new secret value as input using `--value` flag or from standard input using `--file` flag. This command helps maintain secure configuration management by ensuring sensitive information, like access keys and passwords, are kept up-to-date without exposing them in code or version control systems.'
        trim: '[AI] `faas-cli` is a command-line interface tool for managing functions as a service (FaaS) deployments using OpenFAAS. The `secret update --trim` command is used to update or modify an existing secret in the Faaas registry. This command trims or removes sensitive data from previously stored secrets, allowing users to keep only the hashed value and redact the original data for security reasons. It''s important to note that using this command will permanently remove the original data and cannot be undone.'
