# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: choose
description: Choose an option from a list of choices
flags:
    --cursor-prefix=: Prefix to show on the cursor item (hidden if limit is 1)
    --cursor.align=: Text Alignment
    --cursor.background=: Background Color
    --cursor.bold: Bold text
    --cursor.border-background=: Border Background Color
    --cursor.border-foreground=: Border Foreground Color
    --cursor.border=: Border Style
    --cursor.faint: Faint text
    --cursor.foreground=: Foreground Color
    --cursor.height=: Text height
    --cursor.italic: Italicize text
    --cursor.margin=: Text margin
    --cursor.padding=: Text padding
    --cursor.strikethrough: Strikethrough text
    --cursor.underline: Underline text
    --cursor.width=: Text width
    --cursor=: Prefix to show on item that corresponds to the cursor position
    --header.align=: Text Alignment
    --header.background=: Background Color
    --header.bold: Bold text
    --header.border-background=: Border Background Color
    --header.border-foreground=: Border Foreground Color
    --header.border=: Border Style
    --header.faint: Faint text
    --header.foreground=: Foreground Color
    --header.height=: Text height
    --header.italic: Italicize text
    --header.margin=: Text margin
    --header.padding=: Text padding
    --header.strikethrough: Strikethrough text
    --header.underline: Underline text
    --header.width=: Text width
    --header=: Header value
    --height=: Height of the list
    --item.align=: Text Alignment
    --item.background=: Background Color
    --item.bold: Bold text
    --item.border-background=: Border Background Color
    --item.border-foreground=: Border Foreground Color
    --item.border=: Border Style
    --item.faint: Faint text
    --item.foreground=: Foreground Color
    --item.height=: Text height
    --item.italic: Italicize text
    --item.margin=: Text margin
    --item.padding=: Text padding
    --item.strikethrough: Strikethrough text
    --item.underline: Underline text
    --item.width=: Text width
    --limit=: Maximum number of options to pick
    --no-limit: Pick unlimited number of options (ignores limit)
    --ordered: Maintain the order of the selected options
    --select-if-one: Select the given option if there is only one
    --selected*=: Options that should start as selected
    --selected-prefix=: Prefix to show on selected items (hidden if limit is 1)
    --selected.align=: Text Alignment
    --selected.background=: Background Color
    --selected.bold: Bold text
    --selected.border-background=: Border Background Color
    --selected.border-foreground=: Border Foreground Color
    --selected.border=: Border Style
    --selected.faint: Faint text
    --selected.foreground=: Foreground Color
    --selected.height=: Text height
    --selected.italic: Italicize text
    --selected.margin=: Text margin
    --selected.padding=: Text padding
    --selected.strikethrough: Strikethrough text
    --selected.underline: Underline text
    --selected.width=: Text width
    --timeout=: Timeout until choose returns selected element
    --unselected-prefix=: Prefix to show on unselected items (hidden if limit is 1)
documentation:
    command: |-
        [AI] The `gum choose` command is a part of the Gum Packages, which is a set of tools for building and managing npm packages. The `choose` command provides an interactive prompt for users to select one option from a list. It's often used in scripts or CLI interfaces to gather user input with a limited set of predefined choices. For example:

        ```bash
        gum choose "Please pick an option" "Option 1" "Option 2" "Option 3"
        ```

        This command will display a message asking the user to pick an option, and then list the available options for them to select from. Once a choice is made, the selected value will be returned as output.
    flag:
        cursor: '[AI] The `--cursor` option in the `gum choose` command is used to specify which cursor or prompt to display when using the Gum interaction library for Node.js. It does not change the functionality of the `choose` function itself, but rather alters the visual appearance of the interactive prompt. For more information on available cursors and their usage, refer to the Gum documentation.'
        cursor-prefix: '[AI] The `--cursor-prefix` option in the `gum` CLI (Command Line Interface) tool is used to customize the prefix displayed before the cursor when using interactive prompts, such as those provided by commands like `gum prompt`. This option allows users to set a specific string or symbol that appears before the blinking cursor to make the prompts look more visually appealing or to better fit their workflow. For instance, setting --cursor-prefix to ''> '' will display a ''>'' symbol before the blinking cursor.'
        cursor.align: '[AI] The `--cursor.align` option in the `git` command `gum choose` is used to align selected hunks or lines horizontally when viewing the conflict resolution diff. This makes it easier for users to compare and resolve conflicts by ensuring that changes made to corresponding lines are aligned. When this option is not specified, Git may not automatically align the changes, which can make the conflict resolution process more difficult.'
        cursor.background: '[AI] The `--cursor.background` option in the `gum choose` command (used in the Zsh shell) sets the background color of the cursor during the interactive selection process. It takes a valid color name or hexadecimal code as an argument to change the appearance of the cursor accordingly. For example, using `--cursor.background red` would set the cursor''s background color to red during the selection process.'
        cursor.bold: '[AI] The command `gum choose --cursor.bold` is used in the Gum package for Node.js to create interactive prompts with a bold cursor. When you run this command, Gum will display a select list or multi-select menu where the selected item is highlighted with a bold character. This can help users easily identify their current selection and navigate through the options.'
        cursor.border: '[AI] The `--cursor.border` option under `gum choose` is used to customize the border style of the cursor in the graphical user interface (GUI) of Gum, a popular data wrangling and transformation tool. By default, the cursor does not have any visible border. However, using `--cursor.border` with appropriate values enables users to set different border styles for better visual identification of the selected item within the UI. For example, one could use `--cursor.border="2px solid blue"` to display a 2-pixel wide blue border around the cursor when interacting with elements in Gum''s choose interface.'
        cursor.border-background: '[AI] The `--cursor.border-background` option in the `gum choose` command of a Git tool like `git-gui` or `Source Tree`, sets the background color of the cursor border when selecting an item in the file explorer or commit list. It''s a configuration setting to customize the appearance, and does not change the functionality of the command itself.'
        cursor.border-foreground: '[AI] The `--cursor.border-foreground` flag in the `gum choose` command (used in the zsh terminal) sets the color of the border around the cursor when using the interactive selection tool provided by gum. This flag accepts a color value, which can be specified as a hexadecimal code or named color, to customize the appearance of the cursor border.'
        cursor.faint: '[AI] The command `gum choose --cursor.faint` is used in Zsh (or other compatible shells) to set the cursor style to be faint when using the interactive prompt tool `gum choose`. This means that the selected option in the prompt will have a less intense color or appearance compared to the other options. This can help make it stand out subtly without being too distracting.'
        cursor.foreground: '[AI] `gum choose` is a command-line interface (CLI) tool from the Gum package in npm, used for interactive prompts and selection of items. The option `--cursor.foreground` sets the color of the foreground cursor when using the tool. For instance, `--cursor.foreground red` would display a red cursor while making selections.'
        cursor.height: '[AI] The command `gum choose --cursor.height` is a part of the Gum.js library in Node.js, which provides a rich set of interface building blocks for creating text-based user interfaces. This specific command sets the height of the cursor used in interactive prompts created with Gum.js. The value following `--cursor.height` specifies the desired height in terms of number of rows or pixels. For example, setting it to `3` would result in a three-line tall cursor.'
        cursor.italic: '[AI] The command `gum choose --cursor.italic` is related to the Gum CLI (Command Line Interface) tool, which is used for creating interactive prompts and user interfaces in the terminal. This specific command sets the cursor style for input selections to be italicized. When users see an italicized cursor, it indicates that they can make a selection by using the arrow keys or other input methods, enhancing the visual experience of the prompt and making it more intuitive for users.'
        cursor.margin: '[AI] `gum choose` is a command-line tool from the Gum package in npm. The `--cursor.margin` option sets the size of the cursor margin when using the interactive text editor provided by this command. It allows users to customize the appearance of the editing interface, such as increasing or decreasing the spacing around the text cursor for better readability or visual comfort.'
        cursor.padding: '[AI] The `--cursor.padding` option in the `gum choose` command is used to adjust the spacing around the cursor in the interactive selection list displayed by `gum choose`. This can be helpful for improving the visual separation and readability of items in the list, especially when dealing with large or complex menus. The padding value can be set in pixels or as a percentage of the terminal width. For example, `--cursor.padding 1` sets a pixel value for the padding, while `--cursor.padding 0.5` sets a padding that is half the terminal width.'
        cursor.strikethrough: '[AI] The `--cursor.strikethrough` flag in Git for the `gum choose` command is used to enable or disable the strikethrough style for the selected items in the text-based UI when making a selection from a list of choices. This can help users visually identify which options have been deselected, making it easier to keep track of their choices during an interactive Git rebase or cherry-pick session.'
        cursor.underline: '[AI] The command `gum choose --cursor.underline` is a part of Gum, a popular CLI package for interactive prompts in Node.js. This specific command sets the underline style for the cursor when using Gum''s `choose()` function. When used, the selected option will be highlighted with an underscore (_) symbol underneath. It enhances the user experience by clearly indicating the currently chosen option.'
        cursor.width: '[AI] The command `git config --global gum.choose.width` sets the width of the terminal window for the GUM (Git Understanding Made Easy) library''s interactive choice helper, such as `git checkout` or `git push`, in Git. By default, it is set to 50 characters, but you can change this value to better fit your terminal window size.'
        header: '[AI] `gum choose` is a command used in the Gum CLI (Command Line Interface) tool for managing user prompts and selections in Node.js projects. The `--header` option sets a custom header or title to be displayed above the prompt when using the `gum.choice()` function. It does not alter the functionality of the command, but rather enhances its presentation.'
        header.align: |-
            [AI] The command `gum choose --header.align` is a part of the Gum package for Node.js, which is used to create interactive prompts and collect user input. This specific command is used to configure the alignment of headers in select lists or tables presented by Gum.

            The option `--header.align` sets the horizontal alignment of the headers within the table or list. Possible values include "left", "center", and "right". By default, this option is set to "left". For example, to align all headers center, use the command as follows:

            ```bash
            gum choose --header.align center <other_options>
            ```
        header.background: '[AI] The `--header.background` option under `gum choose` is used to specify a custom background color for the header section of the interactive command-line interface provided by Gum.js, a popular user interface library for Node.js. This flag takes a valid CSS color value as its argument and applies it to the header, allowing users to customize the look of the CLI to their preferences.'
        header.bold: '[AI] The `--header.bold` flag is used with the `gum` CLI (Command Line Interface) tool, specifically when working with its `choose` function. This flag modifies how the header text of the `choose` prompt will be displayed. By setting it to true, the text will appear in bold format, making it stand out and easier for users to identify.'
        header.border: '[AI] The command `gum choose --header.border` is used in Gum, a CLI framework for Node.js, to create or update a header with a border in an interactive prompt. The `--header.border` option adds a border around the header text to make it stand out and improve the visual appeal of the output. When you run this command, it will present you with a list of choices, each under a separate bordered header.'
        header.border-background: '[AI] The `--header.border-background` option under `gum choose` is used to set the background color of the border surrounding the header in a graphical user interface (GUI). When using `gum choose` to select an image or file, this option allows customization of the appearance of the header section, making it visually distinct and easier to identify.'
        header.border-foreground: '[AI] The `--header.border-foreground` option under the `choose` command in `gum`, a popular CLI testing library for Node.js, sets the color of the border around the header text when displaying test results. When you run tests using `gum choose`, the output includes passing or failing indicators alongside test names. The `--header.border-foreground` flag allows users to customize the border''s color, which can make the output more visually appealing or easier to read depending on your preferences.'
        header.faint: '[AI] `gum choose` is a command from the Gum CLI (Command Line Interface) library, used for interactively prompting users to make a choice from given options. The option `--header.faint` modifies the display of headers in the prompt to have reduced intensity or contrast. It''s useful when you want to have subtle differences between regular text and header text.'
        header.foreground: '[AI] The `--header.foreground` flag in the `gum chose` command is used to specify the color or style of the text that will be displayed for the header or title of the interactive selection prompt presented by `gum choose`. This flag accepts a string value representing a valid ANSI escape code, hexadecimal color code, or a named CSS color. For example: `--header.foreground="red"` or `--header.foreground="\x1b[31m"` can be used to set the header text color to red.'
        header.height: '[AI] `gum choose` is a command from the GUM (Git Utility Menu) package, which provides a user interface for Git operations in the terminal. The `--header.height` option sets the number of lines to display for the commit message text in the interactive rebase or cherry-pick session. For example, `gum choose --header.height 3` would display the last three lines of the commit message when making a rebase or cherry-pick interaction.'
        header.italic: '[AI] The `--header.italic` flag in a command using `gum` (a popular CLI package for beautiful and interactive prompts) is used to make specific header text appear italicized when displaying the prompt or output in the terminal. For example, `gum choose --header "Choose an option" --header.italic "This is an important choice"` would display "This is an important choice" in italics while showing the rest of the header text in regular font.'
        header.margin: |-
            [AI] `gum choose` is a command-line tool, specifically a part of the Gum CLI (Command Line Interface) suite. The `--header.margin` option modifies the display of header labels in the interactive prompt or choice selector created by this command.

            When using `gum choose`, this flag sets the width of the blank space before and after each header label to facilitate better alignment and readability, especially when dealing with longer labels. The exact margin width is configurable based on the user's preference.
        header.padding: '[AI] The `--header.padding` option under `gum choose` is used to specify the number of lines between Custom Prompt headers and input in the terminal. For instance, if you set `--header.padding=3`, there will be three blank lines displayed between a header and the following user selection. This customization can enhance the readability and organization of the output during the selection process.'
        header.strikethrough: '[AI] The `--header.strikethrough` flag in `gum choosable prompts` is used to add strikethrough formatting to header text in interactive command-line prompts created by the GUM library. This can be useful when you want to visually indicate that some text should be considered as no longer valid or applicable, for example, when asking a user to input a previous value that will be overwritten. The flag modifies the appearance of header text by rendering it with a horizontal line above and below, creating a visual effect of being struck through.'
        header.underline: |-
            [AI] The command `gum choose --header.underline` is used with the Gum CLI (Command Line Interface) tool in JavaScript to create a list of choices with an underlined header when prompting users for input.

            The `--header` flag sets the text that appears as the title or label above the list of choices, and the `--underline` flag indicates that the text should be displayed with an underline below it, creating a clear visual separation and making it easier to identify the header.
        header.width: '[AI] `gum choose` is a command-line tool from the GUM (Git Utility Menu) suite, used to interactively select an item from a list. The option `--header.width` sets the maximum width for the header labels in the output list. This can be helpful when dealing with long headers or column names to prevent text wrapping and ensure a clean display of the list.'
        height: '[AI] `gum choose` is a command-line interface (CLI) tool provided by GUM (Git Usage Minimized), a collection of helpful Git tools. The `--height` option is used to configure the height of the output in the terminal when using interactive selection, such as choosing between multiple branch names or commit messages. A smaller value will fit more selections into a shorter vertical space, while a larger value allows for more breathability and easier reading. For example, `gum choose --height 10` sets the height to 10.'
        item.align: '[AI] The `gum choose` command is a part of GUM (Git Understanding Made Easy), a set of Git aliasing and flow control tools for the terminal. The `--item.align` option is used to align the options in the interactive prompt horizontally. This option makes it easier to visually compare and select multiple items that are presented as columns or rows, improving the user experience in the command-line interface.'
        item.background: '[AI] The `gum choose` command is a part of the GUM (Generic Utility Modules) library in Node.js, which provides interactive prompts for collecting user input. The option `--item.background` sets the background color of the items displayed during the selection process. For instance, `--item.background red` would make the background of the items appear red. This can be used to enhance the appearance and user experience of the prompt.'
        item.bold: '[AI] The `--item.bold` flag is used with the `gum choose` command in Node.js, which is a part of the Gum CLI (Command Line Interface) library. This flag modifies the appearance of the items presented during user selection by making the names or labels bold for better visibility. It enhances the user experience by providing clearer distinction between the options.'
        item.border: '[AI] The command `gum choose --item.border` is used in Gum, a CLI tool for interactive prompts, to display a list of items with a border around each item when prompting the user to make a selection. The `--item.border` option enables the rendering of a border around each item in the list to improve visual clarity and guide the user''s attention towards the available choices.'
        item.border-background: |-
            [AI] The `gum choose` command is a part of the GUM (Gulp User Interface) library, which provides a simple and user-friendly interface for handling user input in Gulp tasks.

            The `--item.border-background` option sets the background color of the border around the selected item in the GUI's interactive list view. When an item is clicked or selected using keyboard navigation, its corresponding border will be highlighted with the specified color. This option allows customizing the appearance of the GUI to better fit your project's design or personal preferences.
        item.border-foreground: '[AI] The `--item.border-foreground` option in the `gum choose` command sets the color of the border around items in the interactive selection menu. This allows users to customize the appearance of the menu by specifying a desired foreground color for the borders.'
        item.faint: '[AI] The command `gum choose --item.faint` is a part of the Gum package, which is a CLI (Command Line Interface) tool for building interactive applications. This specific command is used to select an item from a list with the option `--item.faint` being passed to make the unselected items less visually distinct. It enhances the visibility of the selected item by contrasting it against the fainted (less visible) background of other options, making it easier for users to identify their choice.'
        item.foreground: '[AI] `gum choose` is a command-line tool provided by the GUM (Git Utility Menu) library for Node.js, which helps to create interactive prompts for Git operations. The option `--item.foreground` sets the color of the text for an individual item in the prompt. For example, if you want the selected item to stand out with a red color, you can use `--item.foreground=red`.'
        item.height: '[AI] The command `gum choose --item.height` is used in Gum, a popular CLI (Command-Line Interface) tool for Node.js. This specific command invokes the `choose` function from Gum, which presents the user with a list of items and allows them to select one based on a given property, in this case, the height of each item. The format `--item.height` indicates that the height property of each item will be used as a label for displaying the selection options. After the user makes their choice, the selected item''s value is returned.'
        item.italic: '[AI] The command `gum choose --item.italic` is a part of GUM (Generic User Interface Manager), a library for creating interactive CLI applications in Node.js. This specific command is used to present an italicized item as a choice during user interaction, such as in a select or autocomplete list. The `--item.italic` flag sets the styling of the presented item text.'
        item.margin: |-
            [AI] The command `gum choose --item.margin` is a part of the Gum CLI (Command Line Interface) library, used for creating interactive prompts and validations in Node.js applications. In this specific command:

            - `gum` is the name of the library.
            - `choose` is a function provided by the library to present users with a list of items and let them select one.
            - `--item.margin` is an option for the `choose` function, which sets the horizontal margin between each presented item in the list.
        item.padding: '[AI] The `gum choose` command is a part of Gum, a CLI (Command-Line Interface) library for Node.js. The option `--item.padding` sets the amount of space between an interactive list item and its border. It accepts a number value in pixels or as a string with the `px` suffix (e.g., `--item.padding 10` or `--item.padding 15px`). This option customizes the appearance of the interactive lists generated by Gum.'
        item.strikethrough: '[AI] The `--item.strikethrough` flag in the `gum choose` command is used to apply a strikethrough style to the presented items during user selection. This can be helpful when presenting options for cancellation or deletion. Once an item is selected, it will no longer have the strikethrough applied.'
        item.underline: '[AI] `gum choose` is a command from the GUM (Globally Usable Modern) library used in Node.js projects for interactively prompting users to select an item from a list. The option `--item.underline` is used to underline the selected item in the list when it''s displayed, making it visually distinct and easier for the user to identify their selection.'
        item.width: '[AI] The command `gum choose --item.width` is a part of Gum, a CLI tool for interactive prompts in Node.js. This specific command is used to present a list of items and allow the user to select one by providing its index or a part of its label that matches uniquely. The option `--item.width` sets the maximum width for the display of each item''s label.'
        limit: '[AI] The `--limit` option in the `gum choose` command is used to specify a maximum number of choices to present to the user during interaction. For instance, if you''re building a CLI tool that lets users select an item from a list, and you only want to display up to five items at once, you can use the `--limit 5` flag with the `gum choose` function. This will make your tool more user-friendly by reducing the amount of choices presented to the user at any given time.'
        no-limit: '[AI] The `--no-limit` option under `gum choose` in a GitOps workflow is used to bypass the default limit on the number of candidates for selection. When this flag is passed, Gum (a CLI tool for interacting with GitOps workflows) will not enforce any limit on the number of resources or candidates that can be displayed during the selection process. This can be useful in scenarios where a large number of candidates need to be reviewed and manually selected from. However, it''s important to note that using this flag could potentially lead to performance issues or increased operational complexity if dealing with a very large number of candidates.'
        ordered: '[AI] The `--ordered` flag in the `gum choose` command is used to ensure that the order of options presented to the user for selection matches the order in which they were defined or provided. It means that the user will see and make their choice based on the sequence in which the options have been given, rather than having the options randomly ordered. This can be useful when the order of options is significant or important for the correct functioning of a workflow or script.'
        select-if-one: '[AI] The `--select-if-one` flag in Git is used with the `git checkout` command to select a commit or branch with exactly one matching entry in the current index or working directory. If multiple entries match, only the first one will be selected. This can help prevent unintended changes when switching branches or checking out specific commits.'
        selected: |-
            [AI] The command `gum choose --selected` is a part of the Gum CLI (Command Line Interface) package for Node.js, which is used to create interactive prompts and collect user input. This specific command is designed to let users select an option from a list of previously selected items.

            When you run `gum choose --selected`, it displays a list of all the options that have been previously chosen using `gum choose` commands in the current session or across multiple sessions, if configured to do so. The user can then interactively cycle through the options using arrow keys and press enter to select an option. Once selected, the command returns the index or value of the chosen option for further processing.

            This command is useful when you need to offer users a choice from a list of frequently-used items or previously-entered values in your application, streamlining the user experience by reducing the amount of typing and selection required each time they interact with your prompt.
        selected-prefix: '[AI] The `--selected-prefix` option in PowerShell''s `Select-Object` cmdlet, when used with the `grep` alias `gum`, specifies a prefix string to be added before each selected item in the output. For example, using `gum choose --input $PSItem --filter ''Name -match "Error"'' --selected-prefix "Error:"` will display the selected items with the prefix "Error:". This can help to differentiate between the original input and the selected output for easier identification and further processing.'
        selected.align: '[AI] `gum choose` is a command from the Gum CLI (Command Line Interface) package, which is used for interactive prompts and selection in Node.js. The `--selected.align` option specifies how to align the selected option within the display. By default, it''s left-aligned. With `--selected.align right`, the selected option will be right-aligned instead, making it visually stand out more.'
        selected.background: '[AI] The `--selected.background` option in the `gum choose` command relates to customizing the background color of selected options in the interactive CLI tool provided by Gum.js (a popular CLI prompt library). When using this flag, users can pass a valid CSS color value to set the background color of chosen or highlighted selections. For instance, `--selected.background=red` would change the background color of the selected options to red.'
        selected.bold: '[AI] `gum choose` is a command provided by the GUM (Globally Usable Modern) library for Node.js, used to create interactive prompts in the terminal. The option `--selected.bold` is used to make the currently selected option stand out boldly when it''s displayed during the prompt. This can help users easily identify their current selection and make their choice more clearly.'
        selected.border: '[AI] The `--selected.border` option in the `gum choose` command is used to modify the border of the selected item in the interactive file picker interface that `gum choose` provides. When this option is passed with a valid CSS value, the border around the selected item will be styled accordingly. For example, `--selected.border=2px solid blue` would set the border to 2 pixels wide and colored in blue for the selected item.'
        selected.border-background: '[AI] The `--selected.border-background` property in a Gumbo (a template engine for React) CSS flag refers to the background color of the border when an element is selected or focused. For example, if a button has this style applied, its border will change color when clicked or tabbed to.'
        selected.border-foreground: '[AI] The `--selected.border-foreground` is a property in the `gum` command-line tool''s YAML configuration files. It specifies the foreground color used for drawing the border of selected items during file explorations or other operations. The entire flag `gum choose --selected.border-foreground` sets this property when using the `gum choose` command to interactively select items from a list.'
        selected.faint: '[AI] The command `gum choose --selected.faint` is a PowerShell or Git-Bash command used in the Git version control system. This command is designed to highlight (or not) selected items in an interactive session such as a Git pickaxe editor or staging area selection. The `--selected.faint` option is used to make the currently selected items appear less intensely, making it easier for users to distinguish between selected and unselected items. In summary, this command adjusts the appearance of selected items in a Git interface for improved visual clarity.'
        selected.foreground: '[AI] The `--selected.foreground` option in the `gum choose` command sets the foreground color of the selected item in a terminal interface. When using `gum choose` to present a list of options for user selection, specifying this option allows customizing the appearance of the chosen item by changing its foreground color.'
        selected.height: '[AI] `gum choose` is a command from the GUM (Git Ultraflex Modeling) cli tool for Git. The `--selected.height` option refers to the number of commits to be displayed when interactively selecting commits with `gum choose`. This means, when using this command, only the specified number of most recent commits will be shown in the selection interface.'
        selected.italic: '[AI] The command `gum choose --selected.italic` is a command used in Gum, a CLI framework for building interactive applications. This specific command is used to select an item with the italic style applied to it from a list of choices presented by Gum. The `--selected` flag indicates that the selected item will be highlighted or distinguished in some way. The `.italic` modifier is used to apply the italic styling to the label of the selected item.'
        selected.margin: '[AI] The command `gum choose --selected.margin` is a part of the Gum CLI (Command Line Interface) tool in the Gum package for Node.js. This command is used to display the selected item along with its margin or padding value, which was previously set or modified using other `gum choose` commands. The option `--selected.margin` specifies that only the selected item''s margin property should be displayed.'
        selected.padding: '[AI] The command `gum choose --selected.padding` is used in Gum, a CLI tool for interactive prompts and confirmation dialogs in Node.js. This specific command sets the padding around the selected option in the prompt. By default, it''s empty (no padding). To add some space between the selection and the edges of the terminal window, you can provide a padding value as an argument. For example, `--selected.padding=2` would set a padding of 2 characters on each side of the selected option.'
        selected.strikethrough: '[AI] The `--selected.strikethrough` option in the `gum choose` command is used to visually mark selected options with a strikethrough style in the output when presenting multiple choices to the user. The flag modifies how the presentation of the selected option looks, making it clear which choice was previously picked by the user.'
        selected.underline: '[AI] The `--selected.underline` option in the `gum choose` command is used to underline the selected item when displaying a list of choices. When this option is passed, the selected choice will be highlighted by an underscore (_) symbol beneath it, making it easier for users to identify their selection.'
        selected.width: |-
            [AI] The command `gum choose --selected.width` is a part of the Gum CLI (Command Line Interface) tool, which is used for creating interactive prompts and making user selections in Node.js applications.

            The specific command `--selected.width` refers to an option that sets the width of the selected item in the display. This can be useful when dealing with long or large items, as it ensures that only a certain portion of the selection is displayed at once without requiring excessive horizontal scrolling. The value following `--selected.width` specifies the desired width.
        timeout: '[AI] The `--timeout` option under `gum choose` is used to set a time limit for the command to complete. If the command does not finish within the specified time, an error will be thrown. This can be helpful in preventing long-running or unresponsive commands from blocking further execution of a script. The timeout value can be set in milliseconds or in a human-readable format like "2m" for two minutes. For example: `gum choose --timeout 10s`.'
        unselected-prefix: '[AI] The `--unselected-prefix` flag in the `gum choose` command is used to specify a prefix that will be added only to the labels of the unselected options. This can be helpful when presenting a large number of choices to the user, as it allows you to distinguish between selected and unselected options more easily. The prefix is typically a visual indicator such as an asterisk or a checkmark with a trailing space, but it can be any string. For example, `--unselected-prefix="*"` would add an asterisk before the labels of the unselected choices.'
