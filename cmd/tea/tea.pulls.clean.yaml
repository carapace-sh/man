# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: clean
description: Deletes local & remote feature-branches for a closed pull request
flags:
    --ignore-sha: Find the local branch by name instead of commit hash (less precise)
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -o, --output=: Output format. (simple, table, csv, tsv, yaml, json)
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: |-
        [AI] The command "tea pulls clean" is not a standard or widely used command in any specific software or operating system. It appears to be a misspelled variant of the common Git command "git pull --rebase --clean", which combines several Git commands into one:

        1. `git pull`: Fetch and merge the latest changes from the remote repository into your local branch.
        2. `--rebase`: Instead of merging, reapply your local commits on top of the updated remote commits. This can result in a cleaner commit history.
        3. `--clean`: Remove any unmerged files and keep only the files that have been merged or resolved.

        However, since "tea pulls clean" is not a standard command, it does not exist and won't produce any result when entered into a terminal or command prompt.
    flag:
        ignore-sha: |-
            [AI] The `--teapulls-clean --ignore-sha` option is used with Git's `git fetch` or `git pull` commands when working with remote repositories.

            The `--teapulls-clean` flag tells Git to not only download the latest changes from the remote repository but also prune any local branches that have been deleted on the remote, effectively keeping your local repository up-to-date with the remote.

            The `--ignore-sha` flag instructs Git to discard any commit messages and SHA1 hashes when merging or pulling changes from the remote repository into your local branch. This can be useful in situations where you want to keep your local commits separate from those of the remote, but still want to incorporate the latest changes.

            In summary, using `--teapulls-clean --ignore-sha` during a Git pull or fetch operation helps to keep your local repository in sync with the remote while discarding any commit messages and SHA1 hashes from the remote during the merge process.
        login: |-
            [AI] The command "tea pulls clean --login" is related to the TEA (Temporal Extensible Archive) version control system. Here's a brief explanation:

            1. `tea pulls`: This is a command used in TEA to fetch new changes from a remote repository and merge them into your local working directory.
            2. `clean`: This option tells TEA to remove any uncommitted or staged changes before performing the pull operation, ensuring a clean working environment.
            3. `--login`: This flag specifies that you are pulling changes from a remote repository using an authenticated connection, usually through SSH. It's important for securing your data and maintaining access control over your repositories.
        output: '[AI] The `--output` flag in a Teaprocessing command (used in Apache Kafka''s streaming library) specifies the output file or destination for the processed data. The `teapull` command is used to consume messages from a Kafka topic, process them with a provided function, and write the results to an output location specified by `--output`.'
        remote: '[AI] The command `git pull --rebase origin TEADATABRANCH teadatabranch` with the alias `tea` is a Git command used to fetch and merge changes from a remote branch into your local one. The `--remote` option tells Git to perform the operation directly on the local branch, without creating an intermediate local branch. This can be useful when working on a centralized workflow where everyone pulls changes from the same main branch. The "tea pulls clean" flag ensures that before pulling, any local unmerged changes are stashed or discarded, ensuring a clean working directory for the pull operation to run smoothly.'
        repo: |-
            [AI] The command `tea pull clean --repo` is related to the Teaspoon Git toolkit (Teaspoon is a lightweight and opinionated Git wrapper for managing repositories).

            This command performs the following actions:

            1. Fetch the latest changes from the remote repository.
            2. Delete any local branches that don't exist on the remote repository to keep your local branch list clean.
            3. Prune the local repository of any stale or disconnected commits, keeping the Git history streamlined.
            4. Optionally, merge any new changes from the fetched branches into the current branch.
            5. Reset the local repository to match the latest state on the remote repository.
