# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create [OPTIONS] [SOURCE] [SOURCE...]
description: Create a new image based on source images
flags:
    --append: Append to existing manifest
    --dry-run: Show final image instead of pushing
    --progress=: Set type of progress output ("auto", "plain", "tty"). Use plain to show container output
    -f, --file*=: Read source descriptor from file
    -t, --tag*=: Set reference for new image
documentation:
    command: '[AI] `docker buildx imagetools create` is a command used with Docker Buildx, an extension of Docker Engine that enables building multiple images using different buildx contexts and builders. The `create` subcommand creates a new buildx context, which can be thought of as a separate workspace or environment for building images. It sets up the necessary configuration and storage for this context, allowing you to define specific builders, caches, and other settings within it. Once created, you can use this context to build images with specific configurations using `docker buildx build`.'
    flag:
        append: |-
            [AI] `docker buildx imagetools create` is a command used in Docker Buildx, which is an extension of Docker that adds support for building multi-stage and complex images using multiple buildx workers. The `--append` flag is an option for this command, which indicates that the new buildx environment should be appended to any existing buildx environments instead of replacing them.

            In simple terms, `docker-buildx imagetools create --append` command creates a new Docker Buildx environment and adds it to the existing ones without overwriting them. This allows users to have multiple buildx environments for different use cases while keeping their configurations separate.
        dry-run: '[AI] `docker buildx imagetools create --dry-run` is a command used in Docker to create a new buildx builder without actually creating or building any images. The `--dry-run` flag indicates that this is just a simulation, and no physical actions will be taken. The `imagetools` subcommand is part of the `buildx` toolset, which enables building Docker images using multiple buildx builders and executors in parallel. When you run this command without any additional arguments, it will generate a configuration file for a new builder but won''t actually create or configure the builder. To create the builder in reality, you would remove the `--dry-run` flag when invoking the same command.'
        file: '[AI] `docker buildx imagetools create` is a command used in Docker to initialize a new buildx environment named in the argument following `create`. This command does not directly create an image, but rather sets up a new buildx environment which can be used to build images using multiple build contexts or nodes, enabling features like parallel builds and building images from multiple repositories. The `--file` flag is used to specify a configuration file that contains settings for the new buildx environment.'
        progress: '[AI] `docker buildx imagetools create` is a command from Docker Buildx, an extension of Docker that enables building multi-context images using multiple buildx contexts. The `--progress` flag is used to display the progress of the operation in real time. When you run `docker buildx imagetools create --progress`, it creates a new buildx context with a given name and displays the progress as the operation executes, providing feedback on the different stages of the creation process.'
        tag: |-
            [AI] `docker buildx` is a Docker extension that enables building Docker images using multiple buildx drivers, each offering different build features. The command `docker buildx imagetools create --tag <image-name>` creates a new image using the specified `<image-name>` and saves it as a buildx image in the Docker registry.

            The `imagetools` subcommand is used for various image manipulation tasks, including creating new images from existing ones. Here, we use it to create a new image by invoking the `create` action with the `--tag` flag to specify the desired name and tag for the new image.
