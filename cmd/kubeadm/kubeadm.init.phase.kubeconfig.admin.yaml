# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: admin
description: Generate a kubeconfig file for the admin to use and for kubeadm itself
flags:
    --apiserver-advertise-address=: The IP address the API Server will advertise it's listening on. If not set the default network interface will be used.
    --apiserver-bind-port=: Port for the API Server to bind to.
    --cert-dir=: The path where to save and store the certificates.
    --config=: Path to a kubeadm configuration file.
    --control-plane-endpoint=: Specify a stable IP address or DNS name for the control plane.
    --kubeconfig-dir=: The path where to save the kubeconfig file.
    --kubernetes-version=: Choose a specific Kubernetes version for the control plane.
documentation:
    command: '[AI] `kubeadm init phase kubeconfig admin` is a sub-command used with Kubadm, an open-source tool for deploying and managing Kubernetes clusters. This specific command generates the administrative configuration files needed to interact with the Kubernetes cluster using `kubectl`, which is the standard Kubernetes command-line tool. These configuration files include the client certificate and key, and the root CA certificate. Once generated, this command sets up the environment variables on the current machine to use this configuration when running `kubectl` commands.'
    flag:
        apiserver-advertise-address: '[AI] `kubeadm init` is a command-line tool for initializing Kubernetes clusters, and the `phase kubeconfig admin --apiserver-advertise-address` option is used to generate a kubeconfig file with administrative privileges. The `--apiserver-advertise-address` argument specifies the IP address that the Kubernetes API server will use to advertise itself to the cluster and external clients. This information is required in the kubeconfig file for managing the cluster using tools like `kubectl`. In summary, this command generates a kubeconfig file with administrative access rights, including the apiserver-advertise-address, which is necessary for managing the cluster.'
        apiserver-bind-port: |-
            [AI] `kubeadm init` is a command used to bootstrap a Kubernetes cluster. The specific option you provided, `--kubeconfig admin --apiserver-bind-port`, performs the following actions:

            1. `--kubeconfig admin`: Creates a new kubeconfig file named `admin.conf` for an administrative user with no restrictions. This file is saved in the current working directory by default.
            2. `--apiserver-bind-port`: Sets the port number (default is 6443) on which the Kubernetes API server will listen for incoming requests. The flag value, if provided, sets a custom port number. If not set, the default port is used.
        cert-dir: '[AI] `kubeadm init` is a command used to bootstrap a Kubernetes cluster. The option `phase kubeconfig admin --cert-dir <path>` instructs `kubeadm` to output the administration kubeconfig file, which includes the `cluster-admin` role for managing the entire cluster. The `--cert-dir` argument specifies the directory where the required TLS certificates are located.'
        config: '[AI] The `kubeadm init` command is used to bootstrap a Kubernetes cluster. When run with the `phase kubeconfig admin --config` sub-command, it generates the configuration file (kubeconfig) for managing the cluster as an administrator. This file includes the necessary information for connecting to the cluster and performing administrative tasks, such as creating namespaces, deploying applications, or managing nodes. The `--config` flag specifies the output file name for the generated kubeconfig.'
        control-plane-endpoint: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster. The `phase kubeconfig admin --control-plane-endpoint` argument is specifying the phase of the initialization process that involves generating and configuring the administration (admin) user''s kubeconfig file. The `--control-plane-endpoint` option points to the address of the control plane endpoint, which is necessary for the admin user to manage the cluster. In summary, this command generates an admin kubeconfig file with access to the Kubernetes cluster control plane.'
        kubeconfig-dir: '[AI] `kubeadm init` is a command used to bootstrap a Kubernetes cluster using kubeadm. The option `--kubeconfig-dir` specifies the directory where the administration (admin) kubeconfig files will be stored after initialization. The `phase kubeconfig admin` refers to creating and configuring the admin kubeconfig, which allows users to manage the entire cluster, including joining worker nodes. This command generates necessary files for managing the cluster in the specified directory.'
        kubernetes-version: '[AI] `kubeadm init` is a command-line tool used to bootstrap a Kubernetes cluster. The specific option `phase kubeconfig admin --kubernetes-version` instructs it to generate the initial administrative kubeconfig file for managing the cluster, using the specified Kubernetes version. This file is saved as `admin.conf` and can be used to interact with the cluster via the `kubectl` command-line tool from an administrator''s workstation.'
