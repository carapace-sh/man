# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: get
flags:
    --format=: Display format
    --merged=: Whether or not to merge config values
    --show-origin: Display where the config value is defined
    -h, --help: Print help
documentation:
    command: '[AI] `cargo config get` is a Cargo command used to retrieve the value of a specific key in the Cargo configuration file (`.cargotoml`). It returns the value associated with the given key, allowing you to easily access and use configuration settings in your Rust projects.'
    flag:
        format: '[AI] `cargo config get` is a command used in Rust programming language''s build system, Cargo. The `--format` option specifies the output format of the command. With no `--format` option, it will print the value in its native format (a key-value pair). Other common formats include JSON or toml. So, `cargo config get --format json` would return the configuration value as a JSON object.'
        help: '[AI] `cargo config get` is a command used in Rust programming''s build tool, Cargo. This command is utilized to retrieve the value of a specific key from the user''s Cargo configuration file. The `--help` flag is added to display detailed help information about this command. In essence, it provides a brief explanation of what the command does, its usage syntax, and examples of how to use it with different keys.'
        merged: '[AI] `cargo config get --merged` is a command used in Rust''s build tool, Cargo. This command retrieves merged settings from the user''s Cargo configuration file. Merged settings are those that have been set at multiple levels (e.g., global, project, and workspace), with the value from the most specific level taking precedence. So, this command returns the final, merged value for a given setting across all the configured scopes.'
        show-origin: '[AI] `cargo config get` is a command used in Rust''s build system, Cargo. The `--show-origin` option that can be passed to this command displays the source or origin of a specific configuration item instead of just its value. In essence, it provides more detailed output by also indicating where the configuration was originally set (either from the default settings, user''s `Cargo.toml`, or an external file).'
