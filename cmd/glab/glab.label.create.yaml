# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create [flags]
aliases:
    - new
description: Create labels for repository/project
flags:
    -c, --color=: Color of label in plain or HEX code.
    -d, --description=: Label description
    -n, --name!=: Name of label
documentation:
    command: '[AI] `glab label create` is a GitLab CLI command used to create a new custom label for issues or merge requests in GitLab. It allows users to define labels with specific names and colors, facilitating organization and filtering of projects based on the created labels. The basic usage is: `glab label create <label-name> --color <hex-code>`.'
    flag:
        color: |-
            [AI] The `glab` command is a Git interface for Kubernetes, and the `label create` subcommand is used to create a new custom label in a Git repository that represents metadata for resources in a Kubernetes cluster. The `--color` option sets a color for the label in the Git commit message and history, making it easier to identify label-related changes visually. For example:

            ```sh
            glab label create my-label --color=red
            ```

            This creates a new label named "my-label" with the color "red". When you use this label in your Kubernetes manifests, the `glab` command will display commits related to that label as having a red color code when viewed through Git tools.
        description: '[AI] The `glab` command with the label create sub-command, `glab label create`, is used to create a new GitLab label within a GitLab project. The `--description` option sets the description for the label during creation. So, this command creates a new label and assigns it a specific description.'
        name: '[AI] The `glab label create` command is used to create a new custom GitLab label in your GitLab project or repository using the GitOps tool Glab. The `--name` argument specifies the desired name for the new label. When you run this command, Glab will interact with the GitLab API to create the new label and apply it to the current branch if desired. For example: `glab label create --name my-label`.'
