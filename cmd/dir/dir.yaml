# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dir
description: list directory contents
flags:
    --author: with -l, print the author of each file
    --block-size=: with -l, scale sizes by SIZE when printing them;
    --color=: colorize the output; WHEN can be 'always' (default
    --dereference-command-line-symlink-to-dir: ""
    --file-type: likewise, except do not append '*'
    --format=: across -x, commas -m, horizontal -x, long -l,
    --full-time: like -l --time-style=full-iso
    --group-directories-first: ""
    --help: display this help and exit
    --hide=: do not list implied entries matching shell PATTERN
    --hyperlink=: hyperlink file names; WHEN can be 'always'
    --quoting-style=: 'use quoting style WORD for entry names:'
    --show-control-chars: show nongraphic characters as-is (the default,
    --si: likewise, but use powers of 1000 not 1024
    --sort=: 'sort by WORD instead of name: none (-U), size (-S),'
    --time-style=: time/date format with -l; see TIME_STYLE below
    --time=: change the default of using modification times;
    --version: output version information and exit
    "-1": |-
        list one file per line.  Avoid '
        ' with -q or -b
    -A, --almost-all: do not list implied . and ..
    -B, --ignore-backups: do not list implied entries ending with ~
    -C: list entries by columns
    -D, --dired: generate output designed for Emacs' dired mode
    -F, --classify: append indicator (one of */=>@|) to entries
    -G, --no-group: in a long listing, don't print group names
    -H, --dereference-command-line: ""
    -I, --ignore=: do not list implied entries matching shell PATTERN
    -L, --dereference: when showing file information for a symbolic
    -N, --literal: print entry names without quoting
    -Q, --quote-name: enclose entry names in double quotes
    -R, --recursive: list subdirectories recursively
    -S: sort by file size, largest first
    -T, --tabsize=: assume tab stops at each COLS instead of 8
    -U: do not sort; list entries in directory order
    -X: sort alphabetically by entry extension
    -Z, --context: print any security context of each file
    -a, --all: do not ignore entries starting with .
    -b, --escape: print C-style escapes for nongraphic characters
    -c: 'with -lt: sort by, and show, ctime (time of last'
    -d, --directory: list directories themselves, not their contents
    -f: do not sort, enable -aU, disable -ls --color
    -g: like -l, but do not list owner
    -h, --human-readable: with -l and -s, print sizes like 1K 234M 2G etc.
    -i, --inode: print the index number of each file
    -k, --kibibytes: default to 1024-byte blocks for disk usage;
    -l: use a long listing format
    -m: fill width with a comma separated list of entries
    -n, --numeric-uid-gid: like -l, but list numeric user and group IDs
    -o: like -l, but do not list group information
    -p, --indicator-style=: 'append indicator with style WORD to entry names:'
    -q, --hide-control-chars: print ? instead of nongraphic characters
    -r, --reverse: reverse order while sorting
    -s, --size: print the allocated size of each file, in blocks
    -t: sort by time, newest first; see --time
    -u: 'with -lt: sort by, and show, access time;'
    -v: natural sort of (version) numbers within text
    -w, --width=: set output width to COLS.  0 means no limit
    -x: list entries by lines instead of by columns
documentation:
    command: '[AI] The `dir` command is a common DOS and Windows Command Prompt command used to list the files and directories in the current directory. It displays each file or directory with its name, size, and modification date. By default, it shows the files and directories in alphabetical order. You can also use various options with `dir` to change the sorting order, display hidden files, and more. For example, `dir /s` will show all files including those in subdirectories, and `dir /h` will display only hidden files.'
    flag:
        "1": '[AI] The command `dir -1` is specific to the DOS/Windows `DIR` command. It is used to display the contents of a directory in list view, but with only one entry per line. This means that each file or folder name will appear on its own line with no additional columns or information displayed.'
        C: '[AI] The `dir` command with the `-C` option in Unix-based systems is used to list directory contents in a columnar format. Each file or subdirectory is displayed as a separate row, and columns are used to display information like permissions, owner name, group name, size, and modification time. This format can be useful for quickly comparing the contents of multiple directories side by side.'
        S: '[AI] The `dir` command with the `-S` option in Unix-based systems is used to display a directory''s contents in a long listing format, but with an extra feature: it shows the sum of the sizes of all files and subdirectories under each directory entry, indicated by the "total" size at the end. The output includes file permissions, number of links, owner, group, size, and date/time stamps.'
        U: '[AI] The `dir` command with the `-U` option is a Unix utility used for listing directory contents in Unix-like operating systems, specifically for displaying files arranged by extension. The `-U` flag sorts files alphabetically within each extension, making it easier to locate files with specific extensions in large directories.'
        X: '[AI] The `dir` command with the option `-X` is specific to the DOS and Windows operating systems. It is used to display the contents of a directory, but it only shows files that have been changed more recently than a file specified with the `/S` (subdirectories) option and the `/A:-X` (hidden and system files are included) option. In other words, it displays only the non-hidden, non-system files that have been modified more recently than a given file or set of files.'
        all: '[AI] The `dir --all` command in DOS or Windows is used to display all files and directories in a specified directory, including hidden ones. The `--all` option (or just `/A-d` in DOS) makes the `dir` command show all files and directories without filtering by type or attribute. It''s useful when you want to see all files, including system files or hidden files that are typically not displayed.'
        almost-all: |-
            [AI] The `dir --almost-all` command in DOS or Windows is not a valid option. The `dir` command with no options displays the list of files and directories in the current directory. The `--almost-all` option is specific to GNU `find`, not `dir`.

            However, I assume you meant to ask about the `*-a` option in `dir` or `ls` commands which is used to show hidden files and directories along with regular ones. In that case, here's a brief explanation:

            The `*-a` (or `--all`) option when used with `dir` or `ls` commands displays all files, including hidden ones, in a directory. By default, these commands only display visible (non-hidden) files. Hidden files usually begin with a dot (`.`) character in their names.
        author: '[AI] The `dir --author` command is a Unix utility, specifically a version of the `dir` command found in some implementations like OS/2 and MSYS2. It lists the files in a directory with an extra column showing the name of the file''s author as recorded in the files'' metadata (if available).'
        block-size: '[AI] The `--block-size` option in the `dir` command of Unix-like operating systems sets the size for reporting file allocation information. It specifies the size, usually in 512-byte blocks or clusters, at which file allocation information is reported. For example, using `--block-size=4096` will display the number of 4KB blocks used by each file in a directory.'
        c: '[AI] The `dir` command with the `-c` option is a DOS and Windows command used to display the contents of a directory in columnar format. This means that the files are listed side by side, making it easier to compare names or lengths of files in the same column. By default, it displays files with their sizes and attributes (e.g., read-only, hidden, system).'
        classify: '[AI] `dir --classify` is a command used in PowerShell, specifically with the Get-ChildItem cmdlet. This option displays file attributes along with the file names and directory paths. The classify parameter automatically sets the FileAttributes property of each item to a combination of values based on its file attributes, such as "Directory", "File", "Hidden", "Readonly", etc. This can be useful for filtering or selecting files based on their attributes.'
        color: '[AI] The `--color` option in the `dir` command is used with the GNU `findutils` `find` and `ls` commands to enable or disable colored output for better distinction between different types of files and directories. With this option enabled, various file types are represented by distinct colors in the terminal output. This can make it easier to navigate complex directory structures and quickly identify specific files based on their type.'
        context: |-
            [AI] The `--context` option in the `dir` command of Git is used to control the output format for a diff-like representation of the changes in a directory. It allows you to display the context, which are the lines before and after a change, for files with additions, deletions or both.

            For example, if you use `git diff --context=3` or simply `git diff -C 3`, it will show three context lines before and after each changed line for easier comparison of differences. You can adjust the number of context lines by changing the argument to the desired number. This option helps in understanding the scope of changes made to files in a Git repository.
        dereference: '[AI] The `--dereference` flag in the `dir` command is used with the Linux `find` utility. It instructs `find` to follow symbolic links and show the files or directories they point to, instead of the symbolic links themselves, when listing the output. This allows users to see the true contents of a directory hierarchy, including the files and directories that may be represented by symbolic links.'
        dereference-command-line: '[AI] The `--dereference-command-line` option in the `dir` command with Windows PowerShell is used to follow symbolic links when resolving the paths provided on the command line. When this flag is set, the output of `dir` will reflect the contents of the linked files or directories rather than just the symbolic links themselves. This can be useful for listing the contents of a directory tree that includes symbolic links without having to manually traverse them.'
        dereference-command-line-symlink-to-dir: |-
            [AI] The `--dereference-command-line-symlink-to-dir` flag is a option for the `dir` command in Unix-like operating systems, such as Linux. It is used to follow (dereference) symbolic links on the command line that point to directories.

            When you list directories using the `dir` command with this flag, it will show the contents of the symlinked directory instead of the symbolic link itself. This can be useful when working with complex file structures and symbolic links. The flag ensures that you see the actual files and directories contained in the symlinked directory, making the output more intuitive and easier to navigate.
        directory: '[AI] The `dir --directory` command is not a single flag, but rather an option used with the `dir` command in DOS and Windows environments. The `--directory` option specifies that only empty directories or directories with no files should be displayed when using the `dir` command. It helps to filter out directories with files to simplify the output of the `dir` command.'
        dired: '[AI] `dir --dired` is a command in GNU Coreutils, specifically an alias for the `dir` command with the `--dired` option. This option turns `dir` into an interactive file manager within the Emacs editor. When you run `dir --dired`, it opens a new Emacs window displaying the contents of the current directory in a table format. You can navigate, filter, and perform various operations on files directly from Emacs using keyboard shortcuts, making it more efficient for power users working within the Emacs environment.'
        escape: '[AI] The `dir --escape` command is not a valid flag in Unix or Windows file system utilities like `dir` (in DOS or PowerShell) or `ls` (in Unix-based systems). There seems to be confusion with the `--escape` option which is used in some tools, particularly for regular expressions, to escape special characters within the input string. However, no standard file system command accepts a flag named `--escape`. If you meant to ask about another tool or library that supports an `--escape` flag, please provide more context.'
        f: '[AI] The `dir` command with the option `-f` in Unix or Unix-like operating systems is used to list only files that match a specified pattern, without displaying any directory entries. It''s equivalent to using the `--files-with-matches` option with the `find` command. This can be useful when dealing with large directories and focusing on specific types of files.'
        file-type: |-
            [AI] The `dir` command with the `--file-type` option in Unix-based systems is used to list files in a directory with an added symbol before each file name indicating its type.

            For regular files, no symbol is displayed. For directories, a `/` symbol is shown. For devices and FIFO pipes, respectively, `@` and `|` symbols are displayed. Symbols for compressed files (like `.gz`, `.bz2`) are also shown.

            For example, the following output snippet represents different types of files:

            ```
            -rw-r--r-- textfile.txt
            drwxr-xr-x mydirectory/
            lrwxrwxrwx symboliclink.sh -> /path/to/target
            -p textpipe.fifo
            dr-xr-xr-x gzippedfile.gz
            ```
        format: '[AI] `dir --format` is a command in DOS and Windows operating systems used to list directory contents with customized output format. The `--format` option sets the format of the displayed output. It can be used to display specific columns of information, such as file name, size, or timestamp. The format string argument specifies how each column should be displayed. For example, `dir /B /S *.txt --format="~n~x {0:>10} bytes" c:\` will list all text files under the root directory with their names and sizes formatted to have a minimum width of 10 characters for the size column.'
        full-time: '[AI] The `dir --full-time` command is a combination of the `dir` command with an option `--full-time`. In DOS or MS-DOS based environments, `dir` is used to list files and directories in a specified directory. The `--full-time` option displays file times with full date and time information. Instead of just showing the file modification time as "12:34", it will display the full date and time, such as "25 Mar 2023 12:34". This can be helpful for accurately identifying when files were last modified.'
        g: '[AI] The `dir` command with the option `-g` in Unix-based systems is used to display the file permissions and ownership information of files or directories in a more readable format, called the "human-readable" format. This format displays file permissions as a series of letters (rwx for read, w for write, x for execute, s for setuid, s for setgid, and - for no permission), followed by the user and group ownership information and the size and date of the file or directory.'
        group-directories-first: '[AI] The `--group-directories-first` option is a flag used with the `dir` command in Unix-based systems like Linux. This flag changes the default behavior of the `dir` command, which is to list files and directories in the order they appear in the directory. With `--group-directories-first`, directories are listed before files, grouping all subdirectories together before listing individual files. This can be useful when navigating complex directory structures where you want to quickly identify and switch between directories.'
        help: '[AI] `dir --help` is a command in DOS and Windows Command Prompt used to display the usage information or help for the `dir` command itself. It provides details on various options and arguments that can be used with `dir` to list files and directories in a specified folder or path. The output includes a brief description of each option, its corresponding flag or switch, and an example of how it is used.'
        hide: '[AI] The `dir --hide` command is a DOS (Disk Operating System) or MS-DOS command used to display the contents of a directory with hidden files excluded. The `--hide` option is specific to the `DIR` command in Windows Command Prompt. When used, it hides the names of hidden files while listing the contents of a directory.'
        hide-control-chars: '[AI] The `dir --hide-control-chars` command is a modification of the `dir` command in DOS (Disk Operating System) and Windows, which lists the files and directories in a current directory. This specific option hides control characters in the output, making the list appear cleaner by hiding non-printable characters such as ^M or ^A that can sometimes interfere with the readability of file names. As a result, only printable characters will be displayed when using this flag.'
        human-readable: '[AI] The `--human-readable` (or `-h`) flag is a option used with the `dir` command in Unix-like operating systems, such as Linux or MacOS. It is used to display file sizes in a human-friendly format (i.e., in units of kilobytes, megabytes, or gigabytes instead of raw bytes). This makes it easier for users to understand the size of files and directories when viewing a directory listing.'
        hyperlink: '[AI] The `dir` command with the `--hyperlink` option is a feature in some Unix-like operating systems, including Git Bash and MSYS2, for listing directory contents. This option causes the output to include hyperlinks for items that are symbolic links or files with named pipes (symlinks to directories are not shown as hyperlinks). These links can be clicked in a terminal emulator that supports it, or copied and pasted into file managers or other terminals, making navigation between related files easier.'
        ignore: '[AI] The `dir --ignore` command in DOS or Windows is used to display a directory listing while ignoring specified files or directories. The `--ignore` option takes one or more arguments, which are file name patterns to be ignored. For example, `dir /B /S *.txt *~ /I:ignored_files.txt` would show all files in the current and subdirectories with extensions .txt and ~ (hidden files starting with a dot), but exclude any files named ignored_files.txt or those matching the patterns specified in the file ignored_files.txt.'
        ignore-backups: '[AI] The `dir --ignore-backups` command is a feature of the DOS `DIR` command used in Windows and MS-DOS operating systems. This option tells the `DIR` command to exclude files with the backup attributes (e.g., ~ or .bk) in the output when listing files and directories within a specified directory. By using this flag, you can filter out unwanted backup files from the listing, providing a cleaner view of the actual data within the directory.'
        indicator-style: '[AI] The `--indicator-style` option in the `dir` command of Unix-like operating systems is used to customize the indicators displayed for hidden files and directories. It allows users to choose between various styles, such as using a specific character or color, to differentiate these files from non-hidden ones when listing directory contents. For instance, `--indicator-style=:simple` may display a colon (`:`) before hidden files, while `--indicator-style=''@''` may display an at sign (`@`) instead. The exact set of available styles depends on the specific implementation of the `dir` command.'
        inode: '[AI] The `dir --inode` command is not a standalone flag but is an option used with the `find` or `ls` commands in Unix-based systems. When used, it sorts the output based on the inode number instead of alphabetical order. Inode numbers are unique identifiers for files and directories in a Unix file system. By sorting by inode number, you can see how files with identical names but different content or metadata are distinguished.'
        kibibytes: |-
            [AI] The `dir --kilobytes` command is a modification of the standard `dir` command in DOS or MS-DOS operating systems. Instead of displaying file sizes in bytes, it shows file sizes in units of kilobytes (kB), making larger file sizes easier to read and understand.

            The `--kilobytes` option specifies that the output should be displayed with each file's size given in kibibytes (1024 bytes). This allows users to quickly identify larger files without having to mentally convert sizes from bytes to more manageable units like kilobytes, megabytes, or gigabytes.
        l: |-
            [AI] The `dir` command with the option `-l` in Unix or Linux displays the contents of a directory in a long listing format. Each line of output contains detailed information about a file or directory, including:

            1. File permissions (read, write, execute) for the owner, group, and others.
            2. Number of hard links.
            3. Owner and group name.
            4. File size in human-readable format (e.g., bytes, kilobytes, megabytes).
            5. File or directory name.
            6. Last modification time and date.
            7. File type (regular file, directory, symbolic link, etc.).
        literal: '[AI] The `dir --literal` command is a DOS (Disk Operating System) command used in Windows for listing directory contents. The `--literal` option is specifically used to prevent the conversion of special characters during the display of file and folder names. This can be useful when dealing with files containing non-standard characters or Unix-formatted paths. Without this option, certain characters may appear differently in the command prompt window, potentially causing errors or confusion.'
        m: '[AI] The `-m` option used with the `dir` command in Unix-based systems is used to display the file modification time in a customized format. The format can be specified using a numeric code. For example, `-m 1` will display the modification time as the number of days since the epoch (January 1, 1970). Other common formats include `-m 2` for the modification time in the format "Mon DD hh:mm", and `-m 4` for the full date and time in the format "YYYY-MM-DD HH:MM:SS".'
        no-group: '[AI] The `dir --no-group` command in DOS or Windows is used to list the contents of a directory without displaying the group ownership information. The `--no-group` option is passed to the `dir` command to suppress the output of group names along with usernames for each file or folder in the directory. This can be useful when the focus is on quickly viewing file and folder names without distraction from additional ownership details.'
        numeric-uid-gid: '[AI] The `dir --numeric-uid-gid` command is a modification of the default `dir` or `ls -l` command in Unix-based systems. This option displays the output with numeric user and group IDs instead of their respective names. This can be useful for quickly identifying files based on their ownership without having to rely on the often longer and more variable user and group names.'
        o: '[AI] The `-o` option used with the `dir` command in Unix-based systems is used to change the output format of the `dir` command. Specifically, it allows you to customize the display of file information by specifying a particular output format using a valid option letter. For example, `-h` will show file sizes in human-readable format or `-p` will include prefixes for directories in the output. The exact options and their meanings may vary slightly between different implementations of `dir`, but the general purpose remains the same: to provide more control over the output format.'
        quote-name: '[AI] The `--quote-name` option in the `dir` command is used with the `find` utility in Unix-based systems for printing filenames with specified quotes around them. The quotes can be either single or double, and they ensure that filenames containing special characters do not get corrupted during redirection to another command or a file. This option is particularly useful when dealing with filenames that contain spaces or other special characters.'
        quoting-style: |-
            [AI] The `--quoting-style` option in the `dir` command (a DOS command used to list directory contents) specifies how filenames containing spaces or other special characters are enclosed in quotes when displayed in the output. The possible values for this option are:

            1. `C:` - Use quote characters ('') only around the filenames that contain spaces, special characters, or both. This is the default quoting style.
            2. `P:` - Enclose all filenames, including those without special characters, in double quotes ("").
            3. `F:` - Use far quotation, which encloses all filenames in pairs of double quotes, but if a filename contains spaces or special characters, then the entire filename will be enclosed within a single pair of double quotes with spaces inside replaced by three pairs of double quotes ("""").

            For example: `dir /B --quoting-style:C` displays only filenames without quotes, while `dir /B --quoting-style:P` shows all filenames in double quotes.
        recursive: '[AI] The `dir --recursive` command is a combination of the `dir` (directory listing) command with the `--recursive` or `-r` option in DOS or MS-Windows environments. This option instructs the `dir` command to list all files and subdirectories within the specified directory recursively, meaning it will display the contents of the current directory as well as those of any subdirectories under it. This is useful when you want to see a complete listing of all the files in a hierarchical directory structure.'
        reverse: '[AI] The `dir --reverse` command is used in DOS and Windows Command Prompt to list the directory contents in reverse order, meaning that the last file or folder listed is actually the first one alphabetically. By default, the `dir` command lists files and folders in alphabetical order. To use it with the `--reverse` option, simply type `dir /R /B > temp.txt --reverse`. The `/R` option includes subdirectories and the `/B` option displays only the file names without any extra details. The output will be saved to a text file named "temp.txt" in this example.'
        show-control-chars: '[AI] The `dir --show-control-chars` command is a feature in the GNU Core Utilities'' `dir` command, which is used to list the contents of a directory. With this option, the command shows control characters as \ followed by the corresponding character representation in the output. This can be helpful for identifying and troubleshooting issues with text files containing non-printable characters.'
        si: |-
            [AI] The `dir --si` command is a combination of the `dir` command (a DOS or MS-DOS command used to display a list of files and directories) and the `--si` option.

            The `--si` option stands for "short inline" format. With this option, `dir` displays file information in a compact way in the same line as the file name. The output includes file size in bytes, file attributes (read-only, hidden, system, etc.), and date/time of last modification.

            For example, if you run the command `dir --si` in a command prompt window, it will display something like:

            ```
             Volume in drive C is Windows
             Volume Serial Number is 1234-5678

             Directory of C:\Users\UserName

            09/01/2022  09:23    <DIR>      .
            09/01/2022  09:18    <DIR>      ..
            31-07-2021  16:45    <DIR>      folder1
            17-08-2022  10:15    <FILE>     file1.txt         32 bytes
            17-08-2022  10:16    <FILE>     file2.txt          0 bytes
            ```

            In this output, the third column shows the file size in bytes (for files), or `<DIR>` for directories. The fourth and fifth columns display the file attributes and date/time of last modification, respectively.
        size: |-
            [AI] The `dir --size` command is a combination of the `dir` command (which lists files and directories in a specified location) and the `--size` option in Unix or Windows command-line environments.

            The `--size` option displays the file size of each listed item, along with its name and other default attributes. The size is displayed either in blocks, bytes (prefixed with 'B' for binary), or human-readable format (KB, MB, GB). This can be useful for quickly determining the disk usage of various files within a directory.
        sort: |-
            [AI] The `dir --sort` command in DOS or Windows is used to list the contents of a directory with the files sorted based on a specified option. The sorting options include:

            1. `--out-length:` Sort by file name length in descending order (longest first).
            2. `--size:` Sort by file size in ascending or descending order.
            3. `/T` or `--time-t:` Sort by last modified time, where t can be d for day, m for month, w for week, or y for year.

            Example: `dir /s /b > directorylisting.txt --sort:size:-d` will list all files and subdirectories in the current and sub-directories, save the output to a text file, sort the files by size in descending order, and then by date in ascending order.
        t: '[AI] The `dir` command with the option `-t` in Unix or Linux operating systems lists the files in a directory by modification time, with the most recently modified files listed first. The output shows the file name followed by a time stamp indicating when the file was last modified. This is useful for quickly identifying and working with recently created or updated files.'
        tabsize: '[AI] The `--tabsize` option in the `dir` command (a Unix utility for listing directory contents) sets the number of columns in a tabulated output representation. By default, it is usually set to 8 characters per tab, but this can be changed using the `--tabsize` flag followed by the desired number of columns per tab. For instance, `dir --tabsize=4` would display tabs with 4 columns instead of the default 8 columns.'
        time: '[AI] The `dir --time` command in DOS or Windows is used to list the files and directories in a given directory with their modification times displayed. The `--time` option can take various formats like `-m` for modification time, `-a` for access time, or `-c` for creation time. The output shows the file name followed by the modification time, which helps users to identify recently changed files.'
        time-style: '[AI] `dir --time-style` is a command option for the DOS `dir` command or its equivalents in other operating systems, such as UNIX''s `ls`. It allows users to specify the format of the time and date displayed in the output. The default format may not always be clear or convenient for users. By using `--time-style`, users can choose a format that is more familiar or easier to read based on their preferences or requirements. For example, `dir /T:W3` in DOS can display the time and date in a "Western 3-digit" format, while other formats like "Long date and short time," "Short date and long time," etc., are also available depending on the specific implementation of the command.'
        u: '[AI] The `dir -u` command is a combination of the `dir` (directory listing) command and the `-u` option in Unix-based systems. The `-u` option stands for "use file times", which means it displays files based on their last modification time, showing the most recently changed files first. So, when you run `dir -u`, it lists the directory contents in reverse order of their last modification time. This can be useful for finding recently modified files within a directory.'
        v: |-
            [AI] The `dir` command with the `-v` option in Unix-based systems is used to list directory contents in a verbose format. This means that it displays more detailed information about each file, such as its permissions, size, date and time of last modification, and name. For example, the output might look like:

            ```bash
            drwxr-xr-x  2 user group 4096 Nov 15 13:37 folder/
            -rw-rw-r--  1 user group  123 Apr 10 12:15 file.txt
            ```

            This format makes it easier to understand the characteristics of each file at a glance.
        version: |-
            [AI] The `dir --version` command is not a valid command in Unix-like operating systems, including Linux and MacOS. The `dir` command is specific to DOS and Windows operating systems where it displays the contents of a directory.

            However, if you meant `git dir --version`, then this command is used to display the version information of Git's `dir` subcommand. Git's `dir` subcommand is used for managing submodules in a Git repository. When you run `git dir --version`, it will display the version number and some other relevant information about the `git-dir` command that is currently installed on your system.
        width: '[AI] The `dir --width` command is not a standalone flag but is an option used with the `dir` command in DOS and Windows operating systems. It sets the maximum column width for output listing created by the `dir` command. By default, the `dir` command displays files and directories with their names wrapping to the next line if they exceed the current console window width. The `--width:` option sets a specific width within which filenames will be displayed without wrapping. For example, `dir --width=30` will limit the filename display width to 30 characters.'
        x: '[AI] The `dir` command with the option `-x` is specific to MS-DOS and Windows command prompt. It is used to display the contents of a directory in reverse order, with the most recently added files or directories listed first. The `-x` flag stands for "extended," but in this context it is not synonymous with the `ls -l` (or `dir /al`) command in Unix systems that provides detailed file information. In short, `dir -x` lists directory contents in reverse order of addition time.'
