# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - ls
description: List releases in a repository
group: General commands
flags:
    --exclude-drafts: Exclude draft releases
    --exclude-pre-releases: Exclude pre-releases
    --json*=: Output JSON with the specified `fields`
    -L, --limit=: Maximum number of items to fetch
    -O, --order=: 'Order of releases returned: {asc|desc}'
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] `gh release list` is a GitHub command used to display a list of releases for a specific GitHub repository. It shows the release tag, name, and date for each published release. This command is typically run from the terminal or command line interface and requires authentication with GitHub using the `gh` CLI tool.'
    flag:
        exclude-drafts: '[AI] `gh release list --exclude-drafts` is a GitHub command used to list all releases of a specific repository, excluding any draft releases that have not yet been published. The `--exclude-drafts` option filters out incomplete or unpublished releases from the output, providing only the final and officially published release information.'
        exclude-pre-releases: '[AI] `gh release list --exclude-pre-releases` is a command used in GitHub''s `gh` CLI (Command Line Interface) tool. This command lists all the releases of a specific repository, but it excludes pre-releases from the output. Pre-releases are versions that are not yet considered stable and ready for general use, often containing new features or bug fixes. By using `--exclude-pre-releases`, only the stable, final releases are displayed in the output.'
        jq: |-
            [AI] `gh release list --jq` is a command used with the GitHub CLI (gh) to list all releases of a specific repository, and then filter and process the output using the JSON query language (jq).

            The `gh release list` command lists all releases in JSON format. The `--jq` flag passes the output directly to jq for further processing, allowing users to extract, transform, or manipulate the data as needed, such as getting the release tags, titles, or dates.
        json: '[AI] `gh release list --json` is a command used in the GitHub CLI (Command Line Interface) tool, `gh`. This command is used to retrieve a JSON-formatted output of all releases for a specific repository or project under GitHub. The `--json` flag specifies that the output should be returned as JSON data, allowing for easier processing and analysis in scripts or other applications.'
        limit: '[AI] `gh release list --limit` is a command used in GitHub''s gh CLI (Command Line Interface) tool for managing GitHub releases. This command lists all the releases of a specific repository, but it only shows a limited number of releases by default - up to 30 releases with `--limit 30`. The `--limit` option allows you to specify how many releases should be displayed in the output.'
        order: |-
            [AI] The `gh release list --order` command is used in GitHub's gh CLI (Command Line Interface) tool to list all releases of a specific GitHub repository, ordered by date in descending order (latest first).

            Here's a brief explanation of the components:

            1. `gh`: This refers to the name of the command-line interface tool for interacting with GitHub services, such as creating and managing repositories, issues, pull requests, and releases.
            2. `release`: This is a subcommand within gh that manages the creation, editing, and listing of repository releases.
            3. `list`: This specific command within the release subcommand returns information about all releases in the form of a list.
            4. `--order`: This flag modifies the output format to display the releases in order, with the most recent one (i.e., the latest release) first. The `--order=created` option is used to specify this sorting method.
        template: '[AI] `gh release list --template` is a command used in GitHub''s gh CLI (Command Line Interface) tool to generate output based on a custom template. The specific use of this command lists all the releases for a particular repository and formats the output according to the provided template. The template defines how various release data, such as tag name, release date, and description, will be displayed when using the command.'
