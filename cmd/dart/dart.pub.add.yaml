# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: add
description: Add a dependency to pubspec.yaml
flags:
    --git-path=: Path of git package in repository
    --git-ref=: Git branch or commit to be retrieved
    --git-url=: Git URL of the package
    --hosted-url=: URL of package host server
    --no-offline: Do not use cached packages instead of accessing the network.
    --no-precompile: Do not build executables in immediate dependencies.
    --offline: Use cached packages instead of accessing the network.
    --path=: Local path
    --precompile: Build executables in immediate dependencies.
    --sdk=: SDK source for package
    -C, --directory=: Run this in the directory <dir>.
    -d, --dev: Adds package to the development dependencies instead.
    -h, --help: Print this usage information.
    -n, --dry-run: Report what dependencies would change but don't change
documentation:
    command: '[AI] The `dart pub add` command is used in Dart programming language to add new dependencies to a project''s `pubspec.yaml` file and download their packages from the Dart Package Manager (pub.dev). When you run this command followed by the package name, it automatically updates your `pubspec.yaml` file with the required information about the new dependency, including its version number, and then downloads and installs the corresponding package in your local `.dart_tool/cache` directory.'
    flag:
        dev: '[AI] The `dart pub add --dev` command is used in Dart programming language to add a new dev dependency to a project''s `pubspec.yaml` file. A dev dependency is a package that is required for development, testing or building the application but not needed at runtime. The `--dev` flag tells the Dart pub tool to add the dependency under the `dev_dependencies` section of the `pubspec.yaml` file instead of the main dependencies section (`dependencies`). When you run this command, it fetches and installs the specified package along with its dependencies from the Dart Package Cloud (Pub.dev) into your project''s `.dart_tool/cache` directory.'
        directory: '[AI] `dart pub add --directory` is a command used with the Dart package manager, `pub`. This command is used to add dependencies to the `pubspec.yaml` file in a Dart project and install them directly into the specified local directory instead of the current working directory. This can be useful when managing multiple Dart projects with shared dependencies or when working in a collaborative environment where different team members may have different dependencies installed locally. The flag `--directory <path>` specifies the local directory where the dependencies should be installed.'
        dry-run: '[AI] The `dart pub add --dry-run` command is a Dart utility used for adding new dependencies to a `pubspec.yaml` file without actually installing them. This command simulates the effect of running `dart pub add <package_name>` in a dry run mode, allowing users to preview the changes that would be made before committing to the installation. This is particularly useful when planning to add multiple dependencies or when unsure about the impact on the project''s dependency tree.'
        git-path: '[AI] `dart pub add --git-path` is a command used in Dart programming language for adding dependencies to a `pubspec.yaml` file with specific Git repositories as sources instead of using the default Dart Package Cloud registry. The `--git-path` option specifies the Git repository URL or local path to the dependency''s code repository. For example, `dart pub add --git-path <remote_url> <package_name>` or `dart pub add --git-path <local_path> <package_name>`. This command allows using custom and non-published packages directly in your project without having to publish them first.'
        git-ref: '[AI] `dart pub add --git-ref` is a command used in Dart package management with `pub` tool. It adds a dependency from a Git repository, specifying the exact commit or branch to use by providing the Git ref. This allows for pinning packages to specific versions that may not be published yet on `pub.dev`.'
        git-url: '[AI] `dart pub add --git-url` is a command used in Dart programming language for adding dependencies from a Git repository to the `pubspec.yaml` file. The `--git-url` option specifies the URL of the Git repository containing the dependency, allowing users to add the latest developments or custom versions of packages not yet published on the official Dart Package Manager (pub.dev). When executed, this command fetches and adds the specified Git package as a dependency in the project''s `pubspec.yaml` file for future build and run operations using the Dart''s built-in package manager, `pub`.'
        help: |-
            [AI] `dart pub add` is a command-line utility in Dart programming language used to add new dependencies to a `pubspec.yaml` file. The `--help` flag is an option that provides detailed information about how to use this command effectively. When you run `dart pub add --help`, it displays a help message explaining:

            1. The basic usage of the command: `dart pub add <package_name>`.
            2. Additional options, such as:
               - `--mode production` or `--mode development` for configuring dependency modes.
               - `--source <uri>` to specify a package source other than the default Dart Package Cloud.
            3. Examples of common use cases.
        hosted-url: '[AI] `dart pub add --hosted-url` is a command used in Dart programming language for managing dependencies with the `pub` package manager. This specific option sets the URL of the remote repository to use as the hosted repository, where packages will be fetched from if they are not already available locally. It allows developers to specify a custom repository URL if needed, making it easier to manage and keep dependencies up-to-date in their projects.'
        no-offline: '[AI] The `dart pub add --no-offline` command is used in Dart programming language to install a new package from the Dart Package Manager (pub.dev) without using the local cache. This means that the dependency will be downloaded directly from the server instead of being fetched from the local offline cache if it exists. It''s useful when you want to ensure you have the latest version of a package or when your local offline cache is not available or outdated.'
        no-precompile: '[AI] The `dart pub add --no-precompile` command is used when adding dependencies to a Dart project using the `pub` package manager. The `--no-precompile` option prevents the code from being ahead-of-time (AOT) compiled during the installation process. This means that the dependency''s Dart code will remain as Dart source files and will be transpiled to JavaScript, if needed, at runtime instead of during build time. This can be useful when working with development dependencies or when testing is involved.'
        offline: '[AI] The `dart pub add --offline` command is a Dart package management tool (pub) command used to install local or previously downloaded packages without connecting to the internet. This can be useful when working offline or having network connectivity issues. Packages specified in the `pubspec.yaml` file will be installed from the local cache or the specified local directory, instead of being downloaded online.'
        path: '[AI] The `dart pub add` command is used to add new dependencies to a Dart project managed with `pub.dev`. The `--path` option specifies the path where the dependency''s package directory should be installed. By default, new dependencies are added to the global Dart installation, but using `--path` allows for installing them locally within your project directory instead. This can help manage dependencies more effectively and ensure consistency across multiple projects.'
        precompile: '[AI] `dart pub add --precompile` is a command-line option used with the Dart package manager, `pub`. It instructs `pub` to install the specified packages and precompile their Dart code into compiled Dart binary files during installation. This can improve application start-up time and reduce dependency resolution times by avoiding the need for repeated compilation when running or building the project.'
        sdk: '[AI] The `dart pub add --sdk` command is used in Dart programming language to add a new dependency in your `pubspec.yaml` file with its corresponding SDK constraint and URL. The `--sdk` option specifies the SDK name and version to be added as a dependency. This command simplifies the process of adding dependencies that come bundled with their own SDKs, like the Flutter framework or specific packages like `flutter_bloc`. It automatically adds the required `dependencies`, `dev_dependencies`, and `flutter` sections in your `pubspec.yaml` file and sets the correct versions according to the given SDK constraint.'
