# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: lsp
description: Start LSP server
flags:
    -goplsLog=: The file to log gopls output, or leave empty to disable logging.
    -goplsRPCTrace: Set gopls to log input and output messages
    -help: Print help and exit
    -http=: Enable http debug server by setting a listen address
    -log=: The file to log templ LSP output to, or leave empty to disable logging
    -pprof: Enable pprof web server
documentation:
    command: |-
        [AI] The `templ lsp` command is likely a custom command used in programming text editors or integrated development environments (IDEs), specifically within the context of the Temple Language (TPL) and its associated Language Server Protocol (LSP).

        In brief, this command initiates an interaction between the editor or IDE and the TPL LSP. This interaction allows for features such as syntax highlighting, code completion, error checking, and other advanced development assistance. The actual implementation of the command may vary depending on the specific editor or IDE, but its primary function is to establish a connection with the TPL LSP to improve coding efficiency and accuracy.
    flag:
        goplsLog: '[AI] `templ lsp -goplsLog` is a command-line flag used with the Templ Language Server Process (LSP) for Go programming in Visual Studio Code or other editors that support LSP. The flag enables and provides detailed logging output from the Go LSP server, named gopls, during development. This information can be helpful in troubleshooting issues or understanding how gopls interacts with the editor, making it easier to optimize development settings.'
        goplsRPCTrace: '[AI] The `templ lsp -goplsRPCTrace` flag is related to Go Language Server (gopls) in LSP (Language Server Protocol) configuration. It enables the RPC trace logging, which records detailed information about the requests and responses exchanged between the client (IDE or editor) and the server during the language server interaction. This tracing helps in debugging any issues with the communication between the client and the server by providing a more comprehensive insight into the data flow.'
        help: |-
            [AI] The command `templ lsp --help` is for the TEMPL Language Server Protocol (LSP) tool. LSP is a communication protocol for text editors and IDEs to interact with source code analysis tools, like linters, formatters, and intelligent editors.

            The `--help` flag is used to display detailed information about how to use the TEMPL LSP tool. It provides a list of available commands, their descriptions, and usage examples. This information helps users understand how to effectively integrate the TEMPL LSP into their preferred text editor or IDE for better coding experience.
        http: '[AI] The flag `--lsp-http` in TEMPL (Text Editor Productivity Library) is used to enable Language Server Protocol over HTTP for communication between the editor and the language server. This allows the editor to interact with the language server through HTTP requests and responses, improving the editing experience by providing features like autocomplete, syntax highlighting, and error checking.'
        log: '[AI] The `templ lsp --log` command relates to the Templ Language Server Process (LSP) in programming. The `--log` flag enables logging during the execution of the LSP. This means that detailed information about the LSP''s behavior and interactions will be recorded for debugging or analysis purposes.'
        pprof: '[AI] The `templ lsp -pprof` flag is used with the Templ LangServer Process Profiler (lsp). It enables profiling functionality for the Language Server Protocol (LSP) communication between an IDE and a language server. The profiling data can be used to identify performance bottlenecks and improve overall efficiency of the language server.'
