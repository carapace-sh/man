# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: copy
description: Copy the notes for the first object onto the second object
flags:
    --stdin: Also read the object names to remove notes from the standard input
    -f, --force: Overwrite existing notes
documentation:
    command: '[AI] `git notes copy` is a Git command used to copy an existing note from one commit to another. It takes the source and destination commit hashes or references as arguments, followed by the note key. For example, `git notes copy <source-commit> <destination-commit> <note-key>`. This command updates the specified note in the destination commit with the content of the corresponding note from the source commit. If the note already exists on the destination commit, it is replaced with the new content.'
    flag:
        force: '[AI] `git notes copy --force` is a Git command used to forcefully copy an existing note in a Git repository to a new key or file path. The `--force` option overwrites any existing note with the same key or file path, making it essential when attempting to replace an existing note with an updated one. This command allows for managing and updating Git notes, which can be associated with specific commits or branches, providing additional metadata and context information within a repository.'
        stdin: '[AI] `git notes copy --stdin` is a Git command used to copy an existing note to a new one, taking the note content from standard input instead of a file or a note ID. When you run this command with `--stdin`, Git reads the note content from your keyboard until you type EOF (Ctrl+D on Unix-based systems) and then sets the new note with that content. This can be useful when you want to create a new note based on an existing one but don''t have it saved in a file.'
