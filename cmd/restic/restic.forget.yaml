# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: forget
description: Remove snapshots from the repository
flags:
    --host*=: only consider snapshots with the given `host` (can be specified multiple times)
    --hostname*=: only consider snapshots with the given `hostname` (can be specified multiple times)
    --keep-tag*=: keep snapshots with this `taglist` (can be specified multiple times)
    --keep-within-daily=: keep daily snapshots that are newer than `duration` (eg. 1y5m7d2h) relative to the latest snapshot
    --keep-within-hourly=: keep hourly snapshots that are newer than `duration` (eg. 1y5m7d2h) relative to the latest snapshot
    --keep-within-monthly=: keep monthly snapshots that are newer than `duration` (eg. 1y5m7d2h) relative to the latest snapshot
    --keep-within-weekly=: keep weekly snapshots that are newer than `duration` (eg. 1y5m7d2h) relative to the latest snapshot
    --keep-within-yearly=: keep yearly snapshots that are newer than `duration` (eg. 1y5m7d2h) relative to the latest snapshot
    --keep-within=: keep snapshots that are newer than `duration` (eg. 1y5m7d2h) relative to the latest snapshot
    --max-repack-size=: 'maximum `size` to repack (allowed suffixes: k/K, m/M, g/G, t/T)'
    --max-unused=: tolerate given `limit` of unused data (absolute value in bytes with suffixes k/K, m/M, g/G, t/T, a value in % or the word 'unlimited')
    --path*=: only consider snapshots which include this (absolute) `path` (can be specified multiple times)
    --prune: automatically run the 'prune' command if snapshots have been removed
    --repack-cacheable-only: only repack packs which are cacheable
    --tag*=: only consider snapshots which include this `taglist` in the format `tag[,tag,...]` (can be specified multiple times)
    -H, --keep-hourly=: keep the last `n` hourly snapshots
    -c, --compact: use compact output format
    -d, --keep-daily=: keep the last `n` daily snapshots
    -g, --group-by=: string for grouping snapshots by host,paths,tags
    -l, --keep-last=: keep the last `n` snapshots
    -m, --keep-monthly=: keep the last `n` monthly snapshots
    -n, --dry-run: do not delete anything, just print what would be done
    -w, --keep-weekly=: keep the last `n` weekly snapshots
    -y, --keep-yearly=: keep the last `n` yearly snapshots
documentation:
    command: '[AI] The `restic forget` command is used in the data backup and sync tool, restic. It is used to remove references to previously backed up files or directories from the repo, effectively forgetting their existence. When you run `restic forget`, followed by the path of the file or directory, restic will delete the metadata related to that data from the repository but not the actual data. This can be useful when dealing with large backups or accidentally backed up files that you no longer want in your backup. However, it is important to note that once forgotten, the data cannot be easily restored without having a local copy of the file or directory.'
    flag:
        compact: |-
            [AI] The `restic forget` command with the `--compact` option is used to remove forgotten objects from a `restic` backup repository, reducing its size by permanently deleting data that is no longer needed for backups.

            When you use the `forget` command without any options, it only marks the objects as "forgotten", which means they will not be included in future backups but still occupy storage space in the repository. The `--compact` flag, however, instructs `restic` to delete these forgotten objects immediately and compact the repository files, freeing up the storage space.

            In summary, using `restic forget --compact` will permanently remove forgotten objects from a backup repository and compact it to save storage.
        dry-run: '[AI] The `restic forget` command with the `--dry-run` option is used in the data backup and synchronization tool, `restic`. This combination of options simulates the forget operation without actually executing it. In other words, it shows what would be forgotten or removed from the backup history without causing any permanent changes. The forget command is used to remove specific backups or revisions from the backup history.'
        group-by: '[AI] The `--forget` flag in the backup tool `restic` is used to remove references to deleted files or directories from the backup history. When used with the `--group-by` flag, it forgets the metadata of deleted objects at the current snapshot level but keeps the deletion markers at the parent snapshots, allowing for restored versions of deleted objects in later snapshots. This can be useful when keeping a long-term backup history and wanting to reduce storage usage by removing information about permanently deleted files.'
        host: '[AI] The `restic forget` command is used in the data backup and synchronization tool, `restic`. The `--host` option specifies a host or server where backups have been stored. When used with `forget`, it causes restic to remove all references to that host from its internal metadata. Effectively, this command allows you to "forget" about a remote backup host and any associated data backups on that host. This can be useful in situations where you no longer need access to the data or if you want to clean up old or unused hosts from your backup infrastructure.'
        hostname: '[AI] The `restic forget --hostname` command is used with the version control system `restic`. It is used to remove the association between a backup and its hostname from the restic repository. This can be useful if you want to disassociate a backup from the machine it was taken on, for example, if that machine is being retired or has been compromised. The command does not delete the actual data of the backup; it only forgets the association between the backup and its hostname in the restic repository.'
        keep-daily: '[AI] The `restic forget --keep-daily` command in the `restic` backup tool is used to drop backups that are older than the specified daily retention period. With this command, you can configure `restic` to automatically remove backups older than a certain number of days while keeping those within the retention period. For instance, if you run `restic forget --keep-daily 7`, it will delete backups older than 7 days. This helps in managing your backup storage efficiently.'
        keep-hourly: '[AI] The `restic forget --keep-hourly` command is used in the backup tool `restic` to remove data from the backup repository that is older than the specified hourly retention period. By default, restic keeps daily backups, so `--keep-hourly` option enables hourly backups instead. The `forget` command removes data that is not referenced by any other backup in the repository to save storage space and reduce the size of the backup repository over time.'
        keep-last: '[AI] The `restic forget --keep-last` command in the restic backup tool is used to remove all backups of a specific file or path, except for the most recent one. This means that if you have multiple versions of a file stored in your backup repository and you want to delete all but the latest version, you would use this command. Keep in mind that using `forget --keep-last` is irreversible, as the deleted backups cannot be recovered once they are gone.'
        keep-monthly: |-
            [AI] The `--forget` option in the `restic` backup tool, when used with the `forget` command, is used to remove old backups that are no longer kept according to the configured retention policy.

            The `--keep-monthly` option modifies this behavior by keeping only backups from the last N months, where N is a positive integer specified by the user. This means that backups older than N months will be forgotten and removed.

            Therefore, with `restic forget --keep-monthly=N`, you keep backups for the last N months and remove any backups older than that.
        keep-tag: |-
            [AI] The `forget --keep-tag` option in the backup tool `restic` is used to remove references to specific backups while keeping their tags. This means that the data of the backed-up files will still be available under their respective tags, but they will no longer occupy space in the active snapshot history or be easily accessible by their original file paths.

            By default, when using `forget`, restic permanently deletes both the data and the metadata associated with a backup. However, the `--keep-tag` option allows you to only remove the reference to the backup while preserving its tag, which can be useful for managing large repositories where keeping old backups is not necessary but their associated tags are still required for record-keeping or future data recovery purposes.
        keep-weekly: '[AI] The `restic forget --keep-weekly` command is used in the data backup and sync tool, Restic. This command is used to remove forgotten (unreferenced) data from backups while keeping weekly data for a specific time period. The `--keep-weekly` option ensures that at least one week''s worth of weekly backups are retained before forgetting older forgotten data.'
        keep-within: '[AI] The `--forget` flag in the data backup tool `restic` instructs it to remove backed up files or directories that have been deleted locally, from the backup history. The `--keep-within` option modifies this behavior by specifying a retention period: instead of permanently removing the deleted data, restic will keep it for the specified duration (measured in days by default). This allows recovering accidentally deleted data within the given time frame.'
        keep-within-daily: '[AI] The `restic forget --keep-within-daily` command is used in the data backup tool, restic, to permanently remove backup snapshots that are older than the specified daily retention period. The daily retention period is a configurable setting and specifies how long backups should be kept before being forgotten. By using this command, you can ensure that your backup repository does not grow unbounded in size while still keeping a reasonable amount of historical data.'
        keep-within-hourly: |-
            [AI] The `--forget --keep-within-hourly` option in the `restic` data backup and synchronization tool is used to configure forgetting policy for backups that are older than an hour.

            With this setting, `restic` will mark backups older than one hour as forgotten, meaning they will no longer be kept or accessible in the backup repository. This can help manage the storage usage by automatically removing old backups and freeing up space. However, it is important to note that once a backup is marked as forgotten, it cannot be recovered unless specifically requested using additional options such as `--keep-forever` or `--keep-daily`.
        keep-within-monthly: '[AI] The `--forget --keep-within-monthly` flag in restic, a backup program, instructs it to forget backups that are older than one month while keeping those within the monthly period. This means that restic will remove backups that are more than 30 days old, freeing up storage space, while retaining the most recent monthly snapshot and any snapshots taken during that month.'
        keep-within-weekly: '[AI] The `--forget` flag in `restic`, a backup program, tells it to remove backed-up data that is older than the retention policy set by the specific flag being used. In this case, `--keep-within-weekly` means that restic will keep backups for one week and delete any data older than that. So, this option configures restic to forget (delete) data that is more than a week old.'
        keep-within-yearly: '[AI] The `--forget` option in the `restic` backup tool, when used with the `--keep-within-yearly` argument, instructs restic to remove backup data older than one year. This means that only the backups created within the last year will be kept, while all previous data will be permanently deleted. This can help manage disk space usage and keep the backup repository size in check.'
        keep-yearly: '[AI] The `--forget` flag in the data backup tool `restic` is used to remove old snapshots from the backup repository that are no longer needed based on certain retention policies. The `--keep-yearly` option sets the retention policy to keep one snapshot for each year. This means that restic will delete all snapshots older than one year, while keeping at least one snapshot per year.'
        max-repack-size: '[AI] The `--forget` flag in `restic`, a versatile backup program, is used to remove references to specific files or directories from the backup history. The `--max-repack-size` option sets a limit on the size of a pack file that is created when forgetting an object. Once this limit is reached, restic will start creating new pack files instead of expanding the existing ones. This can help manage disk space and keep the backup repository efficient.'
        max-unused: '[AI] The `forget --max-unused` flag in the data backup tool `restic` is used to remove old, unused data from the local cache or repository. It automatically detects and deletes data that has not been requested for backup or restoration for a specified number of days (specified by `--max-unused`). This helps to keep the local storage requirements at a minimum without losing data that is no longer needed.'
        path: '[AI] The `--forget` flag in `restic`, a versatile backup program, is used to remove backups of deleted files or directories from the backup repository. When you run `restic forget <PATH>` command, it will remove any backups corresponding to the given path from the backup history, effectively forgetting that those data ever existed in the previous backups. This action is permanent and cannot be undone.'
        prune: '[AI] The `restic forget --prune` command is used in the data backup and synchronization tool, restic. This command is utilized to remove old forgotten backups from the local or remote repositories while maintaining data integrity. When you run this command, it will permanently delete selected backups based on given criteria such as age or tags, and also prune (remove) any dependent snapshots that are no longer needed. This helps to keep repository sizes manageable over time and simplify the backup management.'
        repack-cacheable-only: |-
            [AI] The `--forget --repack-cacheable-only` flag in the data backup tool, restic, is used to modify how deleted objects are handled during the backup process.

            When this option is set, restic will forget (remove from the backup) all objects that were marked as deleted in the previous backups. Additionally, it only repacks cacheable objects. This means that only objects that can be recreated from their delta deltas and are not dependent on other deleted objects will be included in the new archive.

            In simple terms, this flag makes restic forget about all previously marked deleted objects during the backup process, except for those that can still be reconstructed from the available data and do not depend on any other deleted objects.
        tag: '[AI] The `restic forget --tag` command is used in the data backup and sync tool, `restic`. This command is utilized to permanently remove a specific tag from the backup history. When you run this command, Restic will delete the specified tag and all the data associated with it. Keep in mind that once you use `forget`, the tag and data cannot be recovered. It''s essential to ensure that you really want to remove the tag before executing this command.'
