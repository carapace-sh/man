# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: package
aliases:
    - pkg
    - p
description: Creates a package based on the given the given config file and flags
flags:
    -f, --config=: config file to be used
    -p, --packager=: which packager implementation to use [apk|deb|rpm]
    -t, --target=: where to save the generated package (filename, folder or empty for current folder)
documentation:
    command: '[AI] The `nfpm package` command is used in Node.js projects with the npm fork, NPM-FPM (Flexible Package Manager), to install or manage packages defined in an `nfpm` file instead of a traditional `package.json` file. This command processes the instructions specified in the given `nfpm` file and performs tasks like installing dependencies, linking modules, or generating `package.json` files based on the provided configuration.'
    flag:
        config: '[AI] `nfpm` is a package manager for Nextflow, a bioinformatics workflow management system. The command `nfpm package --config` is used to display or edit the configuration settings of an installed Nextflow package. This includes details such as the package version, dependencies, and other metadata. By default, it displays the current configuration, but you can also modify it interactively or using a JSON file. This command helps in managing and customizing the behavior of specific packages within your Nextflow environment.'
        packager: '[AI] The `nfpm` (NPM Fetch) `package --packager` command is a Node.js utility used for fetching and packaging multiple NPM packages into a single tarball or zipfile, typically for use as dependencies in larger projects. It simplifies the process of managing and distributing dependencies that cannot be installed via npm due to various reasons like access control or package size limitations. By using the `--packager` option, you can bundle multiple packages into a single file, making it easier to import and manage them within your project.'
        target: '[AI] The `nfpm` (NPM Fetch) command''s `package` subcommand with the `--target` option is used to download an NPM (Node Package Manager) package or its specific version directly, without installing it or creating a lockfile. This is particularly useful when you only want to retrieve the package files for offline use or integration into another build process. The target can be either the name of the package or the full URL pointing to the desired package and its version. For example: `nfpm fetch <package-name> --target /path/to/save`.'
