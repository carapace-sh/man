# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: watch
description: execute a program periodically, showing output fullscreen
flags:
    -b, --beep: beep if command has a non-zero exit
    -c, --color: interpret ANSI color and style sequences
    -d, --differences?: highlight changes between updates
    -e, --errexit: exit if command has a non-zero exit
    -g, --chgexit: exit when output from command changes
    -h, --help: display this help and exit
    -n, --interval=: seconds to wait between updates
    -p, --precise: attempt run command in precise intervals
    -t, --no-title: turn off header
    -v, --version: output version information and exit
    -w, --no-wrap: turn off line wrapping
    -x, --exec: pass command to exec instead of "sh -c"
documentation:
    command: '[AI] The `watch` command is a utility in Unix-based systems used to execute a given command or script periodically, typically every few seconds. It continuously monitors a file or directory for changes and runs the specified command whenever a change is detected. This can be useful for real-time monitoring of log files or other files where new data is being appended frequently.'
    flag:
        beep: '[AI] The `watch` command is a utility in Unix-like operating systems used to run a command or script periodically, typically every few seconds. The `--beep` option is an argument specific to some terminal emulators, such as xterm or Konsole, that makes the terminal emit a beep sound when a new output is available from the watched command. Therefore, using `watch --beep` will display the output of the command in the terminal and make a beep sound each time it updates.'
        chgexit: |-
            [AI] `watch` is a command-line utility in Unix-based systems used to run a command or a shell script repeatedly, with automatic re-execution every specified interval. The `--chgexit` option is an argument that modifies the behavior of `watch`.

            When using this flag, `watch` will not only re-execute the command but also exit when the output of the command changes. In other words, it acts as a "live" tail or follow command for processes that produce output. When the output changes, `watch` displays the new output and then exits, allowing you to see the real-time evolution of the process's output. This feature is particularly useful when monitoring logs or processes with dynamic output.
        color: '[AI] The `watch` command is a utility in Unix-like operating systems used to run a given command or script periodically, typically every few seconds. The option `--color` enables colored output for watch''s progress indicators, making it easier to distinguish between different processes. It does not change the output of the commanded script itself.'
        differences: '[AI] `git watch --differences` is a Git command used to monitor and display real-time file changes in a repository. It sets up a background process that continuously compares the working directory with the head of the branch, showing the differences between them as they occur using the three-way merge diff format. This can be helpful for developers who want to keep track of modifications made to specific files in real time.'
        errexit: '[AI] The `--errexit` option is a flag used with the `watch` command in Unix-like operating systems, including GNU `watch`. This flag causes the script or command being monitored by `watch` to exit immediately if it returns a non-zero status. In other words, `--errexit` makes `watch` stop and display an error message when the observed command fails instead of continuing to run it and potentially hiding errors with subsequent output. This is useful for quickly identifying and addressing issues in scripts or commands that are being continuously monitored.'
        exec: '[AI] `watch` is a command-line utility in Unix-like operating systems that allows you to run a command or a script periodically and show its output in real-time, with automatic re-execution every specified interval. The `--exec` option is an argument provided to the `watch` command to specify the command or script that should be executed repeatedly. Together, `watch --exec` is used to run a command or script continually and display its output with automatic updates at regular intervals.'
        help: |-
            [AI] The `watch` command is a utility in Unix-like operating systems used to run a command or script repeatedly, displaying its output in real time. When you type `watch --help`, it displays the help message for the `watch` command. This message describes the basic usage of `watch`, including how to specify the command or script to watch and optional arguments like interval between output updates. For instance:

            ```bash
            Usage: watch [-c] [-n interval] [-t] [-g group] COMMAND [ARG]...
            Runs COMMAND repeatedly. Useful for seeing the effects of a long running
            process or to monitor system activity in real time.

            Options:
              -c, --color     Enable colorized output (auto-detects terminal).
              -n INTERVAL     Run COMMAND every INTERVAL seconds. Default is 2 seconds.
              -t              Show a timestamp before each command output.
              -g GROUP        Run COMMAND in the given group, if SysV init is used.
                             (Default: this process will not be put into a group).
            ```
        interval: '[AI] The `--interval` option in the `watch` command is used to specify the time interval between automatic re-running of a given command or script. It takes an argument representing the duration in seconds, minutes (with `m` suffix), hours (with `h` suffix), or days (with `d` suffix). For example, `--interval=30s` means running the command every 30 seconds, while `--interval=2m` means every 2 minutes. The default interval is 2 seconds.'
        no-title: '[AI] The `watch` command is a utility in Unix-like operating systems used to run a given command or script repeatedly, with automatic re-execution when files under its watch change. The `--no-title` option is an argument that can be passed to the watch command to prevent it from displaying the title of the command being watched, allowing for a cleaner terminal output.'
        no-wrap: '[AI] The `watch` command with the `--no-wrap` option is used to automatically re-run a given command when any file under a specified directory changes. The `--no-wrap` flag prevents `watch` from outputting each command''s result on a new line, instead keeping the output continuous on the current terminal line. This can be useful for observing real-time updates in the console without having to scroll through pages of text.'
        precise: '[AI] The `--precise` option in the `watch` command is used to only show output when there is a change detected, suppressing the initial output that would normally be displayed when the command is first run. This can help reduce clutter and focus on showing only the changes.'
        version: '[AI] `watch` is a utility in Unix-like operating systems for running commands or scripts repeatedly. The `--version` option is used to display the version information of the `watch` command itself. When you type `watch --version`, it will print out the name, version number, and other relevant details of the installed `watch` package.'
