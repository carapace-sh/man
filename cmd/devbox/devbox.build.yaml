# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: build
description: Build an OCI image that can run as a container
flags:
    --engine=: 'Engine used to build the container: ''docker'', ''podman'''
    --name=: name for the container
    --no-cache: Do not use a cache
    --tags*=: tags for the container
    -c, --config=: path to directory containing a devbox.json config file
documentation:
    command: '[AI] `devbox build` is a command used in Devbox, an open-source Docker development environment management tool. This command initiates the process of building and updating Docker images defined in a `Devboxfile`. It fetches the required codebase, applies any specified changes, and then uses Dockerfiles to create or update the Docker images. Once the build is complete, Devbox will tag the images with the specified version number for easy identification and management.'
    flag:
        config: '[AI] `devbox build --config` is a command used in Devbox, an open-source Docker development environment tool. This command builds and creates Docker images based on configurations specified in a YAML file. The `--config` option indicates the path to this configuration file. When executed, it sets up the project environment by installing necessary dependencies, building the application code into Docker images, and storing them for later use. This command simplifies the process of creating and managing development environments using Docker.'
        engine: '[AI] The `devbox build --engine` command is used in DevOps tool Devbox to initiate a container image build using a specific engine such as Docker or Podman. The `build` subcommand triggers the creation of a new container image based on a given configuration file, while the `--engine` option specifies which container engine should be utilized during the build process. The outcome is a new container image that can be later used for running applications in various environments.'
        name: '[AI] The `devbox build` command is used in Devbox, a Docker-based development environment tool, to build a new Docker image with the given name specified by `--name`. This image can contain an application and its dependencies. Once built, it can be easily deployed using other Devbox commands for further development or production usage.'
        no-cache: '[AI] `devbox build --no-cache` is a command used in DevBox, an open-source Docker development environment for Mac and Windows. This command builds Docker images using the provided Dockerfile without using any previously cached layers. As a result, it will rebuild all the stages of the image from scratch, which can be useful when making modifications to the Dockerfile or when working with dependencies that require fresh builds. The `--no-cache` flag ensures that no cache is used during this build process.'
        tags: |-
            [AI] The `devbox build --tags` command is used in Devbox, a tool for managing local development environments, to build Docker images with specific tags. When you run this command, Devbox will execute a Dockerfile in your project directory and create or update the named image(s) with the provided tag(s). For example, if you have a Dockerfile named `Dockerfile` and you want to build an image called `my-image` with tags `v1.0` and `latest`, you would run:

            ```bash
            devbox build my-image --tags v1.0 latest
            ```

            This will create or update the images named `my-image` with tags `v1.0` and `latest`. You can use this command to manage your development images and easily switch between different versions.
