# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: generate-lockfile
description: Generate the lockfile for a package
flags:
    --manifest-path=: Path to Cargo.toml
    -h, --help: Print help
    -q, --quiet: Do not print cargo log messages
documentation:
    command: '[AI] `cargo generate-lockfile` is a Rust package manager Cargo''s subcommand for generating and overwriting the `Cargo.lock` file based on the current project''s `Cargo.toml` file. This command ensures that all dependencies listed in `Cargo.toml` have their correct versions locked down, which helps maintain consistency across development environments and prevents unintended updates when using different packages or working collaboratively on projects.'
    flag:
        help: '[AI] `cargo generate-lockfile` is a subcommand under Cargo, the Rust package manager. This command generates or updates a `Cargo.lock` file in your Rust project. The `--help` flag displays detailed usage information about this command, including its purpose, required arguments (none for `generate-lockfile`), and optional flags to customize its behavior. For example, it may allow you to specify an output path or force regeneration even if a `Cargo.lock` file already exists.'
        manifest-path: '[AI] The `cargo generate-lockfile --manifest-path` command is used in Rust programming language''s Cargo build tool to create or update a `Cargo.lock` file. This file records the exact dependencies and their versions specified in the `Cargo.toml` manifest file, ensuring reproducible builds and avoiding version conflicts among project dependencies.'
        quiet: '[AI] `cargo generate-lockfile` is a command used in Rust programming language''s build system, Cargo. This command generates and writes a new `Cargo.lock` file based on the current state of the project''s dependencies mentioned in the `Cargo.toml` file. The `--quiet` flag means that the command will not print any progress or status updates to the console, making the build process more silent.'
