# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: show-config
description: show the Nix configuration or the value of a specific setting
group: utility
flags:
    --debug: Set the logging verbosity level to 'debug'
    --json: Produce output in JSON format
    --log-format=: Set the format of log output
    --quiet: Decrease the logging verbosity level
    -L, --print-build-logs: Print full build logs on standard error
    -v, --verbose: Increase the logging verbosity level
documentation:
    command: |-
        [AI] The `nix-show-config` command is a part of Nix, a package manager for Linux and other systems. It's used to display the configuration of a specific Nix expression or configuration file, which helps in understanding how that particular expression or file is set up and what its current values are.

        When invoked with the path to an expression or a configuration file as an argument, `nix-show-config` will print out the whole configuration tree for that item in a readable format. This can be particularly helpful when debugging Nix configurations or when trying to understand the dependencies and settings of a given package or service managed by Nix.
    flag:
        debug: '[AI] `nix-show-config --debug` is a command used in Nix, a package manager for Linux and other Unix systems. This command displays debug information about a specific Nix configuration file. The flag `--debug` increases the verbosity of the output to provide more detailed information, which can be helpful for troubleshooting or understanding how Nix is configuring your system.'
        json: '[AI] `nix-show-config --json` is a command from Nix, a package manager for Linux and other systems. This command returns the current configuration of Nix as a JSON object. It provides detailed information about the installation, such as the Nix expression used, the channel (repository) being used, the user profile path, and more. Users may find this command useful for programmatically accessing and manipulating their Nix configurations.'
        log-format: '[AI] `nix-store` is a part of Nix OS, which manages software configuration and deployment using a store concept. The command `nix show-config --log-format` generates a log in a specified format about the configuration of a specific Nix expression or package. The output includes information such as the expression''s hash, file paths, and dependencies. The `--log-format` option specifies the desired output format, like JSON or plain text.'
        print-build-logs: '[AI] `nix-build` is a command in Nix package manager to build and install a specific package or project from a Nix expression. The `--print-build-logs` option, when used with the `show-config` subcommand of `nix`, displays the build logs of the last successful build of that package or project in Nix''s cache. It allows users to inspect the details of the build process and troubleshoot potential issues.'
        quiet: '[AI] The `nix-show-config --quiet` command is a Nix package manager utility that displays the configuration of a specified Nix expression or file in a minimal format with only essential output. It''s often used for programmatically accessing and parsing Nix configuration data without producing verbose output.'
        verbose: '[AI] `nix-show-config` is a command from the Nix Package Manager. The `--verbose` option increases the amount of output provided by the command. When used with `nix-show-config`, it displays detailed information about the configuration files managed by Nix for a given system or application. Specifically, it lists the paths to the configurations files and their corresponding Nix expressions, which define the content of those files. The verbose output also includes any options or settings overridden in the configuration.'
