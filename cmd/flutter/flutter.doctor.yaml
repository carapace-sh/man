# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: doctor
description: Show information about the installed tooling
flags:
    --android-licenses: Run the Android SDK manager tool to accept the SDK's licenses.
    -h, --help: Print this usage information.
documentation:
    command: '[AI] `flutter doctor` is a command-line tool in the Flutter framework used to check and report the status of your development environment. It checks for essential tools such as Dart SDK, Android Studio or Visual Studio Code, and the Flutter and Flutter plugins'' presence. Additionally, it verifies your system''s compatibility with Flutter and provides suggestions if any issues are detected. In summary, `flutter doctor` helps ensure a healthy development environment by identifying and reporting any missing tools or configurations that could impact building and running Flutter applications.'
    flag:
        android-licenses: '[AI] The `flutter doctor --android-licenses` command is used to accept or reject the licenses for the Android SDK components that are required to build and run Flutter apps. When you run this command, Flutter scans your system to find any Android SDK installations and then displays a list of the licenses associated with those installations. To proceed, you can either accept all the licenses by typing `y` or `yes` when prompted, or manually select which licenses you want to accept using their corresponding numbers. If you don''t have an accepted license for a required component, Flutter will not be able to build and run your app.'
        help: '[AI] `flutter doctor --help` is a command used in the Flutter framework to display help information about the `flutter doctor` tool. This command provides details on how to use `flutter doctor` for diagnosing and fixing issues related to your development environment, such as missing dependencies or outdated tools. The output includes options and their descriptions, usage examples, and other relevant information to assist users in maintaining a healthy Flutter development setup.'
