# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: insert
description: Prompt for and insert a new OTP secret
flags:
    -a, --account=: specify account
    -e, --echo: echo input
    -f, --force: overwrite existing
    -i, --issuer=: specify issuer
    -s, --secret: prompt for the secret value
documentation:
    command: |-
        [AI] The `pass otp insert` command in GPG (GNU Privacy Guard) is used to add one-time passwords (OTPs) to a keyring. An OTP is a time-sensitive password that can be used for an authenticated data exchange between two parties. With this command, you can add new OTPs or update existing ones in the keyring file. The general syntax of the command is:

        ```bash
        gpg --expert --keyid <KEYID> --edit-key --batch --reset-trustdb --no-default-keyring --keyring <PATH_TO_KEYRING> pass otp add <OTP-SECRET> [<label>] [--expire-days <EXPIRE_DAYS>]
        ```

        Replace `<KEYID>` with the ID of the key you want to manage, and `<PATH_TO_KEYRING>` with the file path to your keyring. The `<OTP-SECRET>` is the base32 encoded OTP secret that you receive from an authentication server. You can also specify a label for the OTP and the expiration days (default: 7).

        This command modifies the keyring in batch mode, which allows you to process multiple keys or actions in one go without user intervention during the operation.
    flag:
        account: '[AI] The `pass otp insert` command is a sub-command used in the password manager application, GnuPG''s `GPG-Agent`, and specifically within the `gnupg` or `KGP` keychain helpers for the `pass` utility. This command is used to add an One-Time Password (OTP) secret to an existing account in the keyring. The `--account` flag is optional and specifies the account name to be updated. When this command is invoked, it requires a valid OTP secret value as its argument and will add that secret to the specified account in the keyring, allowing for seamless integration of multi-factor authentication methods within the password manager system.'
        echo: '[AI] The command `pass otp insert` is used in the password manager "GNU Pass" to add a One-Time Password (OTP) for a specific account. The `--echo` option that follows the command is used to display the generated OTP on the terminal after creation. In summary, this command inserts a new OTP for an account and displays it upon execution.'
        force: '[AI] The `pass otp insert --force` command in the Pass (password manager) utility is used to insert a one-time password (OTP) into a login entry, even if there''s already an OTP associated with it. This can be helpful when the old OTP has expired or you have a new device that needs access to the same account. Using the `--force` option bypasses any confirmation prompts and inserts the new OTP directly into the database.'
        issuer: '[AI] The `pass otp insert` command with the `--issuer` flag in the Apple''s Pass library is used to add an One-Time Pass (OTP) with a specific issuer identifier to the Wallet app. This flag identifies the issuer of the OTP, ensuring proper association and verification during use. The command adds the OTP secret and the associated metadata (like issuer name, expiration date, etc.) to the existing or new pass object in the Pass bundle, allowing it to be provisioned and synced to the user''s Wallet app for authentication purposes.'
        secret: '[AI] The `pass otp insert` command in the Pass password manager is used to add a One-Time Password (OTP) secret for a particular website or service. The `--secret` option is used to provide the TOTP secret key that was generated by an external authenticator app like Google Authenticator or Authy. By using this command, you''re adding the OTP secret in your Pass database and enabling the automatic generation of OTPs for the respective account.'
