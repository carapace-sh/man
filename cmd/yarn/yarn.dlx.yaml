# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dlx
description: Run a package in a temporary environment
group: general
flags:
    -p, --package*=: The package(s) to install before running the command
    -q, --quiet: Only report critical errors instead of printing the full install logs
documentation:
    command: '[AI] `yarn dlx` is a command used with Yarn, a popular JavaScript package manager. The `dlx` (Decoupled Extensions) part of the command stands for running decoupled extensions, which are external tools that can be installed and executed independently from the main Yarn workflow. By using `yarn dlx <tool-name>`, you invoke a specific decoupled extension tool with the given name without affecting your normal Yarn workflow or project dependencies.'
    flag:
        package: '[AI] `yarn dlx` is a command-line tool that extends the functionality of Yarn, a popular JavaScript package manager. The `--package` option specifies the name of the plugin to use with `dlx`. For instance, if you have a plugin named `myplugin` installed locally or globally, you can run `yarn dlx --package myplugin` to execute that plugin''s command or function within your Yarn workflow. It is important to note that the plugin should be properly registered and available in your system PATH for the command to work correctly.'
        quiet: '[AI] `yarn dlx` is a command-line tool provided by Yarn package manager to execute extended plugins. The `--quiet` option is used for running the command with minimal output, meaning it will suppress all non-error messages and show only error messages or warnings if any. In simple terms, using `yarn dlx --quiet` will execute an extended plugin without displaying progress updates or informational messages.'
