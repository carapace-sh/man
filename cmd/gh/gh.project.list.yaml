# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - ls
description: List the projects for an owner
flags:
    --closed: Include closed projects
    --format=: 'Output format: {json}'
    --owner=: Login of the owner
    -L, --limit=: Maximum number of projects to fetch
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
    -w, --web: Open projects list in the browser
documentation:
    command: '[AI] The `gh project list` command is used in the GitHub CLI (Command Line Interface) tool to display a list of your current projects. These projects represent the repositories or organizations that you have starred, forked, or are collaborating on. This command helps users easily manage and access their GitHub projects from the terminal.'
    flag:
        closed: '[AI] The `gh project list --closed` command is used in GitHub''s `gh` CLI (Command Line Interface) tool to list all projects where you are a collaborator and have been closed. These projects may be repositories or organizations. By specifying the `--closed` option, only projects with closed status will be displayed in the output, providing a concise view of your involvement in closed projects on GitHub.'
        format: '[AI] `gh project list --format` is a command used in GitHub''s `gh` CLI (Command Line Interface) tool to list all projects associated with the authenticated GitHub account. The `--format` flag allows customizing the output format of the command by specifying a Go-template-like syntax. This can be useful for extracting specific information from the project list, such as displaying only the project name or ID, or formatting the output in a table. For example, `gh project list --format="{{{name}}}"` will print the name of each project on a new line.'
        jq: |-
            [AI] `gh project list --jq` is a command used in GitHub's CLI (Command Line Interface) tool, gh, to fetch a list of your GitHub projects and then filter or manipulate the output using jq, a lightweight and flexible data processing tool. In this specific command:

            1. `gh project list`: Retrieves a list of all your current GitHub projects (repositories).
            2. `--jq`: Passes this output to jq for further processing, instead of printing it directly.
            3. The exact filtering or transformation applied using jq depends on the provided query, which can be tailored to extract specific data from the JSON-formatted output of `gh project list`.
        limit: '[AI] `gh project list --limit` is a GitHub CLI (Command Line Interface) command used to list down projects associated with a GitHub account. The `--limit` option specifies the maximum number of projects to be displayed in the output. By default, it shows up to 10 projects; using `--limit` followed by a number allows you to customize this limit and display more or fewer projects as needed.'
        owner: '[AI] The `gh project list --owner` command is used in GitHub''s `gh` CLI (Command-Line Interface) tool to fetch a list of projects owned by a specific GitHub user. The `--owner` flag specifies the username of the owner whose projects should be displayed. This command helps users to easily view and manage their own or other''s projects within the GitHub ecosystem.'
        template: '[AI] `gh project list --template` is a command used in GitHub''s git-hub CLI tool. It lists all your projects, but with an added feature: it applies a custom template to output data in a specific format. The flag `--template` followed by the path to a file that contains the desired JSON or YAML templates for formatting the output. This command helps users manage and organize their GitHub projects more efficiently by providing them with easily digestible and structured information.'
        web: '[AI] The `gh project list --web` command is used with GitHub''s `gh` CLI (Command Line Interface) tool to list all projects associated with the currently authenticated GitHub account. The `--web` flag specifically requests that the output be formatted as an HTML table, which can be easily viewed in a web browser for better readability and navigation through the data.'
