# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list [<owner>]
aliases:
    - ls
description: List repositories owned by user or organization
group: General commands
flags:
    --archived: Show only archived repositories
    --fork: Show only forks
    --json*=: Output JSON with the specified `fields`
    --no-archived: Omit archived repositories
    --private&: Show only private repositories
    --public&: Show only public repositories
    --source: Show only non-forks
    --topic*=: Filter by topic
    --visibility=: 'Filter by repository visibility: {public|private|internal}'
    -L, --limit=: Maximum number of repositories to list
    -l, --language=: Filter by primary coding language
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] `gh repo list` is a GitHub CLI (Command Line Interface) command used to list all repositories associated with a GitHub account or an organization. It displays each repository''s name, URL, and the default branch. This command can be run locally after installing the GitHub CLI to manage and view your GitHub repositories easily from the terminal.'
    flag:
        archived: '[AI] `gh repo list --archived` is a GitHub CLI (Command Line Interface) command used to list repositories, both active and archived, in a GitHub account. The `--archived` flag filters the output to display only archived repositories, which are repositories that have been read-only and not actively updated for some time. This can be useful for managing multiple repositories or for identifying repositories that may no longer be in use.'
        fork: '[AI] The `gh repo list --fork` command is a GitHub CLI (Command Line Interface) command used to list forks of a specific repository. It displays a table with columns for the fork name, owner, and URL. This can be useful for exploring or managing forks of a project. The `--fork` flag filters the output to only show forks rather than the original repository and its branches.'
        jq: '[AI] `gh repo list --jq` is a command used with the GitHub CLI (gh) to list repositories and filter the output using jq, a lightweight and flexible command-line JSON processor. The `--jq` option passes the output of `repo list` to jq for processing, allowing users to extract specific information from the JSON response in a customizable way. For example, `gh repo list --jq ''.[].name''` lists all repository names, while `gh repo list --jq ''.[].full_name[]''` lists the full names of repositories and their forks.'
        json: '[AI] `gh repo list --json` is a command used in the GitHub CLI (git-hub) tool. It lists all your repositories in a JSON format, which can be easily parsed and processed by scripts or other applications for automation purposes. The `--json` option ensures that the output is returned as a JSON object, including keys such as "full_name", "description", and "html_url" among others, making it suitable for automated workflows.'
        language: '[AI] The `gh repo list --language` command is used with GitHub''s CLI (Command Line Interface) tool, `gh`. This specific command lists all repositories owned by the authenticated user under a given programming language. It filters down the repositories based on the specified language argument. For instance, `--language=Java` will display only Java-based repositories. The output includes each repository''s name, description, and language.'
        limit: '[AI] `gh repo list --limit` is a command used with the GitHub CLI (gh) to list repositories owned or collaborated on by a user, but it only shows up to the specified number of repositories indicated by the `--limit` argument. For instance, `gh repo list --limit 5` will display the first five repositories. This can be useful when dealing with large numbers of repositories and wanting to limit the output for better readability or focused management.'
        no-archived: '[AI] The `gh repo list --no-archived` command is a GitHub CLI (Command Line Interface) command used to list repositories owned or collaborated by a GitHub user, excluding the archived ones. In other words, it shows the current state of your GitHub repositories that are not in an archived state. Archived repositories are those which are read-only and cannot be modified or have active collaboration.'
        private: '[AI] `gh repo list --private` is a command used in the GitHub CLI (github-cli) tool to list all the private repositories associated with the authenticated GitHub account. The "--private" flag filters the output to only display private repositories, excluding any public ones.'
        public: '[AI] `gh repo list --public` is a command used with the GitHub CLI (git-hub) tool to list all publicly visible repositories in your GitHub account. The `--public` option filters the output to only show those repositories that have their visibility set to ''public''. This can be useful for quickly checking on or sharing a list of public projects associated with an account.'
        source: |-
            [AI] The `gh repo list --source` command is a GitHub CLI (gh-cli) command used to list repositories owned or forked by a user or an organization, but it specifically shows the source of each repository.

            Here's a brief explanation of its usage:

            1. `gh repo list`: This is the base command to list GitHub repositories. It can be used without any flags to display a simple list of all repositories under the authenticated user or organization.
            2. `--source`: This flag modifies the default behavior by adding an additional column to the output, displaying the source (HTTPS or SSH URL) of each repository. This can be helpful when you want to easily access or update remote URLs for your repositories in scripts or automated workflows.
        template: '[AI] `gh repo list --template` is a GitHub CLI (Command-Line Interface) command used to list repositories under a specific GitHub account or organization, and apply a custom template for output formatting. The `--template` option allows users to define how the output should be displayed using Mustache templates. This feature enables more efficient handling of large numbers of repositories by extracting only the desired information, making it easier to process and analyze the results.'
        topic: '[AI] `gh repo list --topic` is a command used in the GitHub CLI (git-hub) tool to list repositories under a specific topic. The `--topic` option filters the output to display only those repositories with a specified topic label assigned to them. This can help users quickly find and manage repositories related to a particular theme or project.'
        visibility: '[AI] The `gh repo list --visibility` command is a GitHub CLI (Command Line Interface) command used to list repositories owned or collaborated on by a user, but only showing those with the specified visibility: public, internal, or private. This helps users manage and filter their repositories based on their visibility settings.'
