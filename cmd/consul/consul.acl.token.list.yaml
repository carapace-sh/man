# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
description: List ACL tokens
flags:
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --meta: Indicates that token metadata such as the content hash and Raft indices should be shown for each entry
    --namespace=: Specifies the namespace to query.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: '[AI] The `consul acl token list` command is used in Consul, an open-source distributed computing platform, to retrieve a list of all available ACL (Access Control List) tokens and their corresponding display names. ACL tokens are used for granting permissions to securely access and manage Consul resources, such as keys, configs, or services. The command helps in managing and keeping track of the existing tokens within the Consul environment.'
    flag:
        ca-file: '[AI] `consul acl token list --ca-file` is a command used with Hashicorp''s Consul service to list Access Control Lists (ACL) tokens along with their associated X.509 certificates in PEM format, which are stored in the specified CA file. This command helps manage and maintain the security of your Consul ACL setup by providing a convenient way to check and update tokens, ensuring that only trusted entities have access to your Consul services.'
        ca-path: '[AI] The `consul acl token list --ca-path` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists the Access Control Lists (ACL) tokens along with their associated certificate authorities (CAs), specified by the `--ca-path` option. The CA path is the location of the CA certificates used to sign the tokens'' SSL/TLS certificates. This command helps in managing and keeping track of the security tokens and their associated certificates in a Consul datacenter environment.'
        client-cert: '[AI] The `consul acl token list --client-cert` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists the Access Control List (ACL) tokens along with their associated client certificates. In other words, it displays information about the ACL tokens, including the token name or ID and the public key certificate data that is used to authenticate requests made by services or clients under that token''s authority. This command can be useful for managing and monitoring security in a Consul environment.'
        client-key: '[AI] The `consul acl token list --client-key` command is used with the Consul Access Control List (ACL) tool to retrieve a list of tokens and their associated client keys in the Consul datacenter. The `--client-key` option filters the output to only display the client key for each token. This information can be useful when managing and tracking access control permissions within Consul.'
        datacenter: |-
            [AI] The `consul acl token list --datacenter` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists the Access Control Lists (ACL) tokens under a specific datacenter in Consul.

            In other words, it returns a JSON formatted list containing the names and IDs of all ACL tokens defined in the specified datacenter. These tokens are used to grant permissions for interacting with Consul's API. By using this command, users can manage their ACL tokens for their specific datacenter environment.
        format: '[AI] `consul acl token list --format` is a command used with the Consul Access Control List (ACL) tool to retrieve a list of tokens and their associated access policies. The `--format` option specifies the output format for the command results, typically in JSON or tabular format, allowing easy integration with other scripts or tools.'
        http-addr: '[AI] The `consul acl token list --http-addr` command is used with the Consul Access Control List (ACL) system. It retrieves a list of tokens currently registered in Consul, each associated with an access policy that grants specific permissions to resources within the Consul cluster. This command can be run against the Consul HTTP API server using the provided address.'
        meta: '[AI] The `consul acl token list --meta` command is used in Consul, an open-source tool for service discovery and configuration management. This command lists all available Access Control List (ACL) tokens and displays their associated metadata. Metadata may include details such as the token''s name, creation time, and policies assigned to that token. The output helps users understand and manage the different access permissions in a Consul datacenter.'
        namespace: '[AI] The `consul acl token list --namespace` command is used in Consul, an open-source tool for service discovery, configuration, and orchestration. This specific command lists all the Access Control List (ACL) tokens under a given Kubernetes namespace. ACL tokens are used to grant permissions to specific users or services to access various resources within Consul. By specifying a namespace, you can view the tokens associated with that particular namespace only.'
        stale: '[AI] `consul acl token list --stale` is a command used in Hashicorp Consul, an infrastructure service for connecting and coordinating applications, services and data across any network. This command lists out the Access Control List (ACL) tokens that are no longer actively in use but have not been explicitly revoked. These tokens are considered "stale" as they may pose a security risk if they fall into the wrong hands. By using this command, an administrator can identify and take appropriate action to manage these stale tokens.'
        tls-server-name: |-
            [AI] The `consul acl token list --tls` command is used in Hashicorp Consul, an open-source distributed computing platform, to retrieve a list of Access Control List (ACL) tokens along with their associated TLS server names.

            The `--tls-server-name` flag is optional and specifies the TLS server name or certificate to use when connecting to the Consul HTTP API over a secure connection. This can be useful in environments where multiple Consul servers have different certificates, allowing you to specify the correct one for authentication.
        token: '[AI] The `consul acl token list --token` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command lists all Access Control List (ACL) tokens along with their respective tokens. ACL tokens are used to grant granular access control permissions within Consul. The output of this command provides the token name and its corresponding token value, which can be used to manage and secure access to specific resources in a Consul datacenter.'
        token-file: '[AI] `consul acl token list --token-file` is a command used with the Consul Access Control List (ACL) tool. It lists all the tokens in the Consul ACL file specified by the `--token-file` argument, which is a local file containing the private keys for Consul connect-enabled clients or tokens for ACL policies. This command outputs each token''s name and ID as plain text. It does not display the actual token or key data for security reasons.'
