# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: search
description: Search for packages and display associated information
flags:
    --envs: Search all of the current user's environments.
    --json: Report all output as json.
    --offline: Offline mode.
    --override-channels: Do not search default or .condarc channels.
    --repodata-fn=: Specify name of repodata on remote server.
    --use-local: Use locally built packages.
    -C, --use-index-cache: Use cache of channel index files, even if it has expired.
    -h, --help: Show this help message and exit.
    -i, --info: Provide detailed information about each package.
    -k, --insecure: Allow conda to perform "insecure" SSL connections and transfers.
    -q, --quiet: Do not display progress bar.
    -v, --verbose: Use once for info, twice for debug, three times for trace.
documentation:
    command: |-
        [AI] `conda search` is a Command Line Interface (CLI) tool in Anaconda Distribution for querying and searching condahasellir.anaconda.org, the central Anaconda packages repository. It returns detailed information about packages, their versions, descriptions, dependencies, and other relevant metadata. Users often employ it to locate specific packages or explore available offerings. The command takes package names or keywords as arguments, and can be piped with other Unix utilities for further processing. For instance:

        ```bash
        conda search numpy
        ```

        This would output a list of all the available versions of the `numpy` package in the Anaconda repository.
    flag:
        envs: '[AI] `conda search --envs` is a command used in Anaconda or Miniconda distribution of Python and R data sciences environments. This command searches for and lists the names of all existing Anaconda environments in the current system. It does not download or install any packages; it only displays the names of the environments that match the given search criteria. The `--envs` option is used to specify that you are looking for environment names only.'
        help: '[AI] `conda search --help` is a command used in Anaconda and Miniconda distributions of the Conda package manager. The `--help` option requests displaying the help message, which provides information about how to use the `conda search` command effectively. The command searches for packages available on Conda channels and returns detailed information such as package name, version number, description, and installation size. This command is useful when looking for specific packages to install or update existing packages in your Conda environment.'
        info: '[AI] `conda search --info` is a command used in Anaconda and Miniconda distributions of the Python data science ecosystem. It searches for packages within the local or remote Conda channels and returns detailed information about each package, including its name, version number, description, file size, and dependencies. This command is useful when you want to gather comprehensive details about a specific package before installing it in your Conda environment.'
        insecure: '[AI] The `conda search --insecure` command is a functionality of Anaconda Distribution''s package manager, Conda. This command is used to search for packages in all available channels, including those that might have security vulnerabilities or other potential risks. By default, Conda only allows installing packages from verified sources to maintain the system''s security. However, using `--insecure` flag disables this verification and allows users to find and install packages from any channel, regardless of their security status. This command is typically used when there is a known issue with a specific package that is not available in verified channels or for testing purposes only. It should be noted that using this command might pose potential security risks and is generally discouraged unless necessary.'
        json: '[AI] `conda search --json` is a command in Anaconda Distribution''s conda package manager. This command searches the Anaconda and Conda Forge repositories for packages that match a given search query and returns the results as JSON format. The output includes fields such as name, version, build number, description, and other metadata about the packages. This command is useful for automating workflows that require retrieving package information from conda repositories in a structured format.'
        offline: '[AI] `conda search --offline` is a command used in Anaconda or Miniconda distributions of Python and R data science environments. It downloads and caches metadata for packages and their dependencies from the Conda store to the local file system, allowing offline package searches and installations without an internet connection. This can be particularly useful when working on a project where consistent package versions are required, or when access to the internet is limited or unreliable.'
        override-channels: '[AI] `conda search --override-flags channels` is a command used in Anaconda and Conda environments for package management. It searches for packages available from both default and custom channels, bypassing any channel prioritization set in the config files. This allows users to discover packages from all possible channels, including those that may not be part of their default configuration.'
        quiet: '[AI] The `conda search --quiet` command is a function in Anaconda''s Conda package manager. It searches the condo channels for specified packages and returns minimal output, displaying only the package name and version number without additional details or messages. This makes it useful for scripting and automation processes where only the package names and versions are required.'
        repodata-fn: '[AI] `conda search --repodata-fn` is a command used in Anaconda''s Conda package manager to download and query metadata from specific conda repositories. The `--repodata-fn` option specifies the local file path where the Conda metadata will be saved. This command facilitates offline repository access, enabling users to search for packages without an active internet connection.'
        use-index-cache: '[AI] `conda search --use-index-cache` is a command used in Anaconda or Miniconda distribution of Python and other data sciences packages. It searches for packages in the local conda cache, utilizing the index cache to speed up the search process. The index cache is an offline copy of metadata about packages available from conda''s remote channels. By using the index cache, `conda search` can provide faster results, especially when the network connection is slow or unavailable.'
        use-local: '[AI] `conda search --use-local` is a command in Anaconda''s Conda package manager. It searches for packages locally, meaning it looks in the user''s current conda environments before querying the remote Anaconda or Conda Forge repositories. This can be useful when trying to find and manage installed packages without an internet connection or when wanting to avoid downloading packages from external sources.'
        verbose: '[AI] `conda search --verbose` is a command used in Anaconda''s Conda packaging and distribution system. This command searches for packages available in Conda''s channels, displaying detailed and verbose output about each package''s version numbers, build numbers, file sizes, and other information. The primary purpose is to help users identify the specific package they need and gather comprehensive details about it before installation.'
