# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: cargo
description: Rust's package manager
flags:
    --explain=: Run `rustc --explain CODE`
    --list: List installed commands
    -C=: Change to DIRECTORY before doing anything (nightly-only)
    -V, --version: Print version info and exit
    -h, --help: Print help
    -q, --quiet: Do not print cargo log messages
persistentflags:
    --color=: 'Coloring: auto, always, never'
    --config*=: Override a configuration value
    --frozen: Require Cargo.lock and cache are up to date
    --locked: Require Cargo.lock is up to date
    --offline: Run without accessing the network
    -Z*=: Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for details
    -v, --verbose*: Use verbose output (-vv very verbose/build.rs output)
documentation:
    command: '[AI] "Cargo" is a package manager for the Rust programming language. It facilitates the installation, management, and build of Rust projects by downloading dependencies, compiling source code, and running tests or benchmarks. Using Cargo, developers can easily create new projects, add dependencies, and build executables or libraries.'
    flag:
        C: '[AI] The `cargo` command with the flag `-C` (or `--checked`) is used to run Rust''s built-in compiler, rustc, with checks and warnings but without actually building or running the project. It''s an alternative to a full build that allows you to see the output of the compiler without creating an executable or library. This flag can help in discovering potential issues early during development.'
        explain: '[AI] `cargo explain` is a command used with Cargo, Rust''s package manager. It provides detailed explanations about Cargo.toml files and their content, such as dependencies, build processes, and other metadata. When you run `cargo explain <path-to-Cargo.toml>`, it will display clear and concise output describing each field in the given toml file with a brief explanation of its purpose. It''s an excellent tool for understanding complex Cargo projects or learning more about specific aspects of Cargo configuration.'
        help: '[AI] `cargo --help` is a command used with Cargo, Rust''s package manager. This command displays detailed help information about Cargo and its subcommands. It provides an overview of what Cargo does, as well as explanations and usage examples for each command like `build`, `run`, `test`, etc. It also lists common options and their meanings that can be passed with these commands.'
        list: '[AI] `cargo list` is a command used in Rust programming language''s package manager, Cargo. It generates a listing of all the direct and transitive dependencies, as well as their versions, specified in the current project''s Cargo.toml file. The output can be used to verify or check for updates to the dependency tree within a project.'
        quiet: '[AI] The `--quiet` flag for Cargo, Rust''s package manager, instructs it to run with minimal output. Instead of displaying progress bars and detailed messages during build or test operations, it only prints errors, warnings, and success messages.'
        version: '[AI] `cargo --version` is a command used in Rust programming language''s build system, Cargo. It prints out the version number of Cargo itself, helping users check which version they are currently using.'
