# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: init [flags] [PATH]
description: Initialize a new Dagger module
group: module
flags:
    --license=: License identifier to generate - see https://spdx.org/licenses/
    --name=: Name of the new module (defaults to parent directory name)
    --sdk=: Optionally initialize module for development in the given SDK
    --source=: Directory to store the module implementation source code in (defaults to "dagger/ if "--sdk" is provided)
documentation:
    command: '[AI] `dagger init` is a command used in Dagger, a build tool for Java and Android projects. It initializes a new Dagger project or adds Dagger support to an existing one by generating necessary boilerplate code and configuration files. This includes setting up the build system, defining modules, components, and dependencies, as well as creating injection points in the application or library''s codebase.'
    flag:
        license: |-
            [AI] The `dagster init --license` command is used to initialize a new Dagster project with a specific open-source software license. Dagster is an open-source platform for building and executing data pipelines.

            The `--license` flag specifies which license you want to use for your project. Common options include MIT, Apache 2.0, and BSD-3-Clause. By default, Dagster projects are set up with the MIT License.

            When you run `dagster init --license=<LICENSE>`, Dagster will create a new project directory with the specified license file included. The license file is typically placed in the root directory of your project and is named according to the chosen license (e.g., "MIT-LICENSE" or "APACHE-2.0.md").

            Using this command ensures that you start your Dagster project with a clear and defined licensing agreement, making it easier for others to use and contribute to your codebase.
        name: '[AI] The command `dagger init --name` is used to initialize a new Dagger project in your local directory with the given name. Dagger is an open-source build tool for Java and Kotlin projects that automates the process of generating code for dependency injection and building your application. This command sets up the basic structure of a Dagger project including the necessary configuration files and directories. After running this command, you can continue to configure your project using Dagger''s annotations and conventions.'
        sdk: '[AI] `dagger init --sdk` is a command used with Dagger, an open-source build tool for Java and Android projects. This specific command initializes a new Dagger project and sets up the necessary configuration files based on the provided SDK (Software Development Kit) location. It automates the process of setting up Dependency Injection and other advanced features using Dagger.'
        source: '[AI] `dagger init --source` is a command used in Dagger, an open-source build tool for Kanban-style supply chains. This command initializes a new Dagger project and sets up the necessary configuration files based on an existing directory or Git repository specified by the `--source` option. It configures Dagger to use the source''s build system and dependencies, enabling developers to build their projects using Dagger with minimal setup.'
