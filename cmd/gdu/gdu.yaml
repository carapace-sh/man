# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: gdu
description: Pretty fast disk usage analyzer written in Go
flags:
    --enable-profiling: Enable collection of profiling data and provide it on http://localhost:6060/debug/pprof/
    --si: Show sizes with decimal SI prefixes (kB, MB, GB) instead of binary prefixes (KiB, MiB, GiB)
    -B, --show-relative-size: Show relative size
    -H, --no-hidden: Ignore hidden directories (beginning with dot)
    -I, --ignore-dirs-pattern*=: Absolute path patterns to ignore (separated by comma)
    -X, --ignore-from=: Read absolute path patterns to ignore from file
    -a, --show-apparent-size: Show apparent size
    -c, --no-color: Do not use colorized output
    -d, --show-disks: Show all mounted disks
    -f, --input-file=: Import analysis from JSON file
    -g, --const-gc: Enable memory garbage collection during analysis with constant level set by GOGC
    -h, --help: help for gdu
    -i, --ignore-dirs*=: Absolute paths to ignore (separated by comma)
    -l, --log-file=: Path to a logfile
    -m, --max-cores=: Set max cores that GDU will use. 4 cores available
    -n, --non-interactive: Do not run in interactive mode
    -o, --output-file=: Export all info into file as JSON
    -p, --no-progress: Do not show progress in non-interactive mode
    -s, --summarize: Show only a total in non-interactive mode
    -v, --version: Print version
    -x, --no-cross: Do not cross filesystem boundaries
documentation:
    command: '[AI] `gdu` is a command-line utility for Linux systems, which stands for "GNU Disk Usage." It provides an easy-to-understand output of disk usage statistics in human-readable format with various summary information such as size, used, free, and percentage utilization. It supports multiple file systems and can display information recursively for directories, making it a useful tool for identifying large files or directories that consume excessive disk space.'
    flag:
        const-gc: '[AI] `gdu` is a command-line utility for managing and checking btrfs filesystems. The option `--const-gc` is used to trigger a consistent garbage collection manually. Garbage collection is the process of recovering space occupied by deleted files or blocks marked as free but still in use, and making it available for reuse. By default, btrfs performs incremental garbage collection during normal file system operations. However, sometimes it may be necessary to force a full, consistent garbage collection to ensure data integrity. This is where the `--const-gc` flag comes in. It instructs `gdu` to perform a full garbage collection that will mark all blocks as used or free in a consistent manner, ensuring that no data is lost and all metadata remains intact.'
        enable-profiling: '[AI] `gdu` is a command-line utility for analyzing and optimizing the usage of disk space in Linux file systems. The option `--enable-profiling` is used to enable profiling when running `gdu`. Profiling gathers detailed statistics about the size and usage patterns of files and directories, which can be helpful for identifying trends, locating large or unnecessary files, and optimizing storage usage. This information is written to a profile file that can be later analyzed using other tools or visualizations.'
        help: |-
            [AI] `gdu` is a command-line tool for analyzing and reporting disk usage statistics on Linux filesystems. The `--help` option displays detailed help information about how to use this tool. Here's an overview:

            1. **Output formats**: Supports various output formats like plain text, JSON, and tab-separated values (TSV).
            2. **Filtering**: Allows filtering the results based on file size, type, age, and other attributes.
            3. **Recursive analysis**: Can analyze subdirectories recursively.
            4. **Colors**: Displays output with colors for better visualization of disk usage.
            5. **Detailed information**: Provides detailed statistics about each file or directory, including size, ownership, permissions, and more.
            6. **Quota support**: Supports analyzing filesystem quotas.
            7. **Sorting and grouping**: Allows sorting the output based on various criteria and grouping it by different attributes.
        ignore-dirs: '[AI] The `gdu` command with the option `--ignore-dirs` is a part of the `gdutils` package in Linux used for analyzing disk usage. This option tells `gdu` to ignore directories when calculating disk usage, meaning it will only consider files and not the contents of directories when displaying disk usage statistics. This can be useful if you want to focus on specific large files or directories, excluding the impact of nested subdirectories in the analysis.'
        ignore-dirs-pattern: '[AI] The `gdu` command is a disk usage analyzer for Linux. The option `--ignore-dirs-pattern` is used to exclude directories matching a given pattern from the analysis. For instance, if you use `gdu --ignore-dirs-pattern=".git|Documents"`, it will skip reporting on the size usage of directories named ".git" and "Documents". This can be useful when analyzing large file systems to ignore known directories that are not of interest for the analysis.'
        ignore-from: '[AI] `gdu` is a disk usage analysis tool for Linux. The option `--ignore-from <file>` allows you to create a file specifying paths to directories or files that should be ignored during the disk usage analysis. This can be useful when dealing with large or complex directory structures, where certain directories or files are known not to contribute significantly to the overall disk usage and including them in the analysis would only add unnecessary clutter to the output.'
        input-file: '[AI] `gdu` is a command-line utility for working with the GNU Parted disk labeling and partitioning scheme. The option `--input-file` is used to specify a file that contains one or more partitions descriptions to be read by `gdu`. Instead of manipulating disks interactively, you can modify them based on the contents of this file, making it useful for automating disk labeling and partitioning tasks.'
        log-file: '[AI] `gdu` is a disk usage analysis tool for Linux file systems. The option `--log-file` is used to specify a file where `gdu` will write its output in a machine-readable format, allowing further processing or analysis by other tools or scripts. This option can be useful when running `gdu` on large file systems or in automated scripts for monitoring and reporting disk usage statistics over time.'
        max-cores: '[AI] `gdu` is a disk usage analysis tool for Linux systems. The option `--max-cores` specifies the maximum number of cores to use during the analysis process. Using this option can speed up the analysis by parallelizing the workload across multiple cores, improving performance on multi-core systems.'
        no-color: '[AI] The `gdu --no-color` command is a usage of the `gdutil` tool in the GnuData project, which is used to manage and interact with GnuData databases. The `--no-color` flag is an option that disables colored output from the command. This means that the text displayed on the terminal will not have any color formatting applied. By using this flag, users can have a more plain text output, which might be preferred in certain environments or for scripting purposes.'
        no-cross: '[AI] `gdu` is a disk usage analysis tool in GNU Coreutils. The option `--no-cross` disables the display of size and usage statistics for directories and files in other mount points or file systems, helping to focus on the current file system''s usage only.'
        no-hidden: '[AI] The `gdu` command is a disk usage analyzer for Linux. The option `--no-hidden` is used to exclude hidden files and directories from the analysis. This means that the command will only display files and directories with names starting with a dot (.) that are not hidden, or files and directories that are not hidden at all. This option can be useful when you want to focus on non-hidden files and ignore hidden ones.'
        no-progress: '[AI] `gdu` is a disk usage analysis tool often used in Linux systems. The option `--no-progress` disables progress bar output during the analysis process. It''s useful for running `gdu` commands in scripts or batch processes where visual feedback might interfere or isn''t necessary, allowing for a more streamlined experience with a focus on efficiency and output data.'
        non-interactive: '[AI] `gdu` is a command-line utility for analyzing disk usage on Linux systems. The option `--non-interactive` is used to suppress interactive mode and display output in a more machine-readable format, making it suitable for scripts and automated processes. This flag prevents any prompts or questions from being displayed during the execution of the command.'
        output-file: '[AI] `gdu` is a command-line tool for analyzing disk usage on Linux systems. The option `--output-file` is used to specify a file where the output of the analysis will be saved, instead of printing it directly to the terminal. So, when you run a command like `gdu --output-file=report.txt /`, it will generate a detailed report about disk usage for the specified directory (in this case, the root directory) and save it in the file named "report.txt".'
        show-apparent-size: '[AI] The `gdu` command with the option `--show-apparent-size` is a utility from the GNU Parted project used for displaying detailed information about disk usage. With this specific option, it shows the apparent size of files and directories in the file system, which is the actual space they occupy on the disk, taking into account data compression and other factors that might affect the stored data''s true size. In simple terms, it helps users understand the actual disk consumption for files and directories.'
        show-disks: '[AI] The `gdu` (GNU Parted Utility) command with the option `--show-disks` is used to display information about the physical disks and partitions detected on a system. The flag outputs a list of available disks along with their size, file system type, and mount point if applicable. It''s primarily used for disk discovery and identification purposes in Linux systems.'
        show-relative-size: '[AI] The `gdu --show-relative-size` command is a part of the GNU Disk Usage Analyzer (gdu) tool in Linux. This option displays the file or directory sizes in a relative format as percentages of their parent directories, making it easier to understand how much space each item consumes in the hierarchy. For instance, `gdu --show-relative-size /path/to/directory` will output the size information with the percentage of the parent directory taken by each file or subdirectory.'
        si: '[AI] `gdu` is a disk usage analysis tool, and the command `gdu --si` is used to display the size information of files and directories in human-readable format (i.e., with unit suffixes like KB, MB, GB). The `--si` flag stands for "human-readable numbers in SI units."'
        summarize: '[AI] `gdu --summarize` is a command from the GNU Disk Usage Analyzer tool. It provides a summary of disk usage statistics for a given directory and its subdirectories in a tree format or a text report, including file types, sizes, and ownerships. It helps to quickly identify large files and directories and understand their contribution to the overall disk usage.'
        version: '[AI] `gdu` is a command-line utility for analyzing and reporting on the disk usage of files and directories in various file systems. The command `gdu --version` is used to display the version information of the installed `gdu` tool, including its name, version number, and other relevant details such as compilation date and operating system. This can be helpful for users to check if they have the latest version, identify compatibility issues, or troubleshoot any problems that might be related to the specific version of `gdu`.'
