# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: table
description: Render a table of data
flags:
    --border.align=: Text Alignment
    --border.background=: Background Color
    --border.bold: Bold text
    --border.border-background=: Border Background Color
    --border.border-foreground=: Border Foreground Color
    --border.border=: Border Style
    --border.faint: Faint text
    --border.foreground=: Foreground Color
    --border.height=: Text height
    --border.italic: Italicize text
    --border.margin=: Text margin
    --border.padding=: Text padding
    --border.strikethrough: Strikethrough text
    --border.underline: Underline text
    --border.width=: Text width
    --cell.align=: Text Alignment
    --cell.background=: Background Color
    --cell.bold: Bold text
    --cell.border-background=: Border Background Color
    --cell.border-foreground=: Border Foreground Color
    --cell.border=: Border Style
    --cell.faint: Faint text
    --cell.foreground=: Foreground Color
    --cell.height=: Text height
    --cell.italic: Italicize text
    --cell.margin=: Text margin
    --cell.padding=: Text padding
    --cell.strikethrough: Strikethrough text
    --cell.underline: Underline text
    --cell.width=: Text width
    --header.align=: Text Alignment
    --header.background=: Background Color
    --header.bold: Bold text
    --header.border-background=: Border Background Color
    --header.border-foreground=: Border Foreground Color
    --header.border=: Border Style
    --header.faint: Faint text
    --header.foreground=: Foreground Color
    --header.height=: Text height
    --header.italic: Italicize text
    --header.margin=: Text margin
    --header.padding=: Text padding
    --header.strikethrough: Strikethrough text
    --header.underline: Underline text
    --header.width=: Text width
    --height=: Table height
    --selected.align=: Text Alignment
    --selected.background=: Background Color
    --selected.bold: Bold text
    --selected.border-background=: Border Background Color
    --selected.border-foreground=: Border Foreground Color
    --selected.border=: Border Style
    --selected.faint: Faint text
    --selected.foreground=: Foreground Color
    --selected.height=: Text height
    --selected.italic: Italicize text
    --selected.margin=: Text margin
    --selected.padding=: Text padding
    --selected.strikethrough: Strikethrough text
    --selected.underline: Underline text
    --selected.width=: Text width
    -b, --border=: border style
    -c, --columns*=: Column names
    -f, --file=: file path
    -p, --print: static print
    -s, --separator=: Row separator
    -w, --widths*=: Column widths
documentation:
    command: '[AI] The `gum table` command is not a standard Linux or Unix command, but it seems to be related to GUM (Graphical User Management), which is a popular system configuration tool for Debian-based distributions like Ubuntu. This command is likely used to display tables of information related to the managed systems or services in a graphical format within the GUM interface. However, running this command directly from a terminal would not work since it requires the GUM application to be installed and running with the necessary privileges.'
    flag:
        border: '[AI] The `gum tab --border` command in PowerShell is used to list the table output of a cmdlet with added borders for better visual representation. The `--border` parameter enables the display of a border around each column in the table format. This makes it easier to distinguish between columns and their respective values, improving readability and clarity when dealing with large or complex data sets.'
        border.align: |-
            [AI] The `--border.align` option in Tableau's `GUM table` command (Generalized Unique Identifier) is used to specify how the borders of the resulting identity matrix are aligned. It accepts one of three values: "None", "Top", or "Both".

            * "None" means that no borders will be drawn around the cells in the identity matrix.
            * "Top" aligns the borders only at the top of each cell, creating a diagonal line pattern along the leading diagonal.
            * "Both" aligns the borders on all sides of each cell, framing the identity matrix with a square border.
        border.background: '[AI] The `--border.background` option in the `gum table` command is used to set the background color of the border surrounding the output table. When you run a gum script with this command, it will display tabular data with borders around each cell. The `--border.background` flag allows you to specify a color for the background of these borders. For example, `gum table --border.background=red` would generate a table with red border backgrounds.'
        border.bold: '[AI] The `gum` is a popular Node.js package for creating interactive CLI applications. The command `gum table --border.bold` generates an ASCII table using the Gum package with bold borders around each column. This makes the table easier to read and visually appealing in the terminal.'
        border.border: '[AI] The `--flag "gum table --border.border"` is a command-line option used with the GUM (GNU Unified Modeling Language) tool, specifically for the `table` command. This flag enables the rendering of a border around each cell in the generated ASCII art table.'
        border.border-background: |-
            [AI] The `--flag "gum table --border.border-background"` is a command used in the GUM (Git Updater Manager) tool, specifically for the `gum table` subcommand. This flag sets the background color of the border around tables generated by `gum table`.

            For example, if you have a Markdown file with tables and want to customize their appearance when using `gum table` to display a preview or update the file in your terminal, you can use this flag to change the border's background color.

            Here is an example of how to use it:

            ```bash
            $ gum init # Initialize GUM
            $ gum install table-tool # Install the table plugin
            $ echo "| Column1 | Column2 |" > myfile.md # Create a Markdown file with tables
            $ cat myfile.md | gum table --border --border-background red # Generate a table with a red border background
            ```

            Replace `red` in the example above with any valid color name or hex code to customize the border's background color.
        border.border-foreground: '[AI] The `--flag "gum table --border.border-foreground"` is a command-line argument used with the GUM (Git Understandings Matrix) tool in Git. This flag sets the foreground color of the border around tables generated by GUM to be displayed on the terminal. It allows users to customize the appearance of the tables for better visibility and readability.'
        border.faint: '[AI] The `gum tabler --border.faint` command in Git is used to display ASCII tables with Git file statuses, but with faint borders for a cleaner output. This option makes the border lines less prominent, making it easier to distinguish between added, modified, and deleted files without being distracted by thick borders around the table.'
        border.foreground: '[AI] The command `gum table --border.foreground` is used in Gum, a CLI tool for building and running data pipelines, to configure the foreground color of the border around tables displayed in its output. This flag sets the color of the border to the value of the terminal''s foreground property by default. It allows customization of the appearance of tables when working with large datasets or debugging complex workflows.'
        border.height: '[AI] The `--border.height` option in the `gum table` command is used to set the height of the border around the output table. It takes a value in pixels, and adjusts the thickness of the border accordingly. For instance, `gum table --border.height 2` sets the border height to be 2 pixels. The default border height is usually dependent on the terminal''s color scheme or user preference, so using this option can help customize the output appearance.'
        border.italic: '[AI] The `gum` CLI (Command Line Interface) tool''s `table` subcommand is used to display data in a tabular format. The option `--border.italic` is used to make the border of the table italicized. It enhances the visual appeal and readability of the output by making the border stand out. This can be helpful when dealing with large or complex tables.'
        border.margin: '[AI] The `gum tabler --border.margin` command is used in Gum, a Node.js testing utility for asynchronous code, to generate tables with borders and set the margin of the border. Specifically, it sets the size of the space outside the table cells and inside the border. The argument `--border.margin` allows passing custom values to define this margin.'
        border.padding: '[AI] The `--border.padding` option under the `gum tabler` command in Gum, a JavaScript test runner and assertion library, sets the padding size for the borders of tables displayed during test reporting. It takes a string argument representing horizontal and vertical padding values in pixels (e.g., "10px 20px"). This helps customize the appearance of the output tables to better fit into the console or test report view.'
        border.strikethrough: '[AI] The command `gum table --border.strikethrough` is used in Gum, a popular CLI (Command-Line Interface) library for Node.js. This command generates an output in the form of a table with strikethrough borders around each cell in every row. The data to be displayed in the table must be provided as input, usually as an array or object. By default, Gum does not display borders at all, so adding `--border.strikethrough` specifies that borders should be present and have a strikethrough style.'
        border.underline: '[AI] The command `gum table --border.underline` is used in Gum, a CLI tool for managing tables and lists, to display a table with an underlined border style. This means that each column in the table will have a line underneath it when the data is rendered.'
        border.width: '[AI] The `--border.width` option in the `gum tab` command is used to set the width of the border around a table created using the Gum library in Node.js. The value specified is usually in pixels and defines the thickness of the line that outlines the table. For example, `--border.width 2` sets the border width to 2 pixels. This option helps customize the appearance of tables generated by Gum.'
        cell.align: '[AI] `gum table --cell.align` is a command used in Git Upgrade Migration (GUM) tool to configure the alignment of cells within a table format during migration or upgrade processes. The `--cell.align` option sets the horizontal alignment of cell contents within each column. This can be useful for ensuring that data appears neatly formatted during the display or export of migration results. For example, you might use `left`, `right`, or `center` to align text accordingly.'
        cell.background: '[AI] The `gum table` command is a part of the GUM (GNU Unix-like) utilities used for manipulating tables in the terminal. The `--cell.background` option sets the background color for cells in the table output. By providing a valid color code or name, this option customizes the appearance of the table to better suit your needs.'
        cell.bold: '[AI] `gum` is a popular Node.js library used for enhancing terminal output with styled text and animations. The command `gum table --cell.bold` creates a simple table using the `gum` library, where all cells in the table will have their text formatted in bold.'
        cell.border: '[AI] The `gum table --cell.border` command is used in the Gum CLI (Command Line Interface) tool for tabular data processing. It sets the border style for all cells in a table output generated by Gum. By default, there is no border. Using this flag will add borders around each cell to improve the visual representation of the data and make it easier to read.'
        cell.border-background: '[AI] The `--flag "gum table --cell.border-background"` is a command-line argument used with the GUM (Gulp Universal Modifier) library in Node.js, specifically for the `table` task. It sets the border background color of table cells within the generated HTML output. This flag customizes the appearance of tables created using Gum''s table functionality.'
        cell.border-foreground: '[AI] The `--flag gum table --cell.border-foreground` is a command-line argument used with the Git Unified Model (GUM) tool, specifically for its table filter. This flag sets the color of the border foreground in the output of the table. It does not change the data or behavior of the table itself but only alters the visual appearance by specifying a custom foreground color for the cell borders.'
        cell.faint: '[AI] The `--flag gum table --cell.faint` is a command option used in Git, specifically with the Git Unified Diff (Git UDiff or Gum) tool. It''s used to modify the output of Git UDiff when dealing with tables, making faint cells less distinguishable from their corresponding background. This can be useful when there are only minor differences between cells or rows in a table and you want to minimize clutter in the diff output.'
        cell.foreground: '[AI] The `gum table --cell.foreground` command is used in GitUpMate (Gum), a popular Git interface for PowerShell, to change the foreground color of cells in the output of Git commands. The `--cell.foreground` option sets the color of text within a cell, and this command specifically applies that setting to cells with the given properties or context. For more information on how to use this command effectively, refer to Gum''s documentation or the PowerShell Help files.'
        cell.height: |-
            [AI] `gum` is a popular Node.js library for handling WebRTC connections in peer-to-peer applications. The `--cell.height` option under the `gum table` command is used to set the height of each cell in the output table that displays the media streams being exchanged between peers during a call.

            This flag helps adjust the layout of the table, ensuring that the size of each stream cell fits well within the terminal window and enhances the user experience.
        cell.italic: '[AI] `gum` is a popular CLI testing library for Node.js projects. The `--cell.italic` flag is an option used with the `gum table` command to control the formatting of output tables. Specifically, it applies italic formatting to the cells in the table. This can be helpful for highlighting certain cells or making them stand out visually. For example, you might use this flag to distinguish test cases that failed from those that passed.'
        cell.margin: |-
            [AI] The `--cell.margin` option in the `gum tabulate` command (alias `gum table`) is used to set the margin size for each cell in the output table. The margin is the blank space surrounding the content within each cell. By providing a value with this flag, you can control how much whitespace will appear between the content and the cell borders. The value can be specified as a single number or a pair of numbers (horizontal and vertical), indicating pixels or other length units supported by your terminal or text editor. For instance:

            ```bash
            gum table data.js --cell.margin=2
            # Or:
            gum table data.js --cell.margin="1em 0.5em"
            ```

            This will add a horizontal margin of 2 pixels or 1 em and a vertical margin of 0.5 pixels or 0.5 em for each cell in the output table.
        cell.padding: '[AI] The `--cell.padding` flag in Tableau''s `Gummap` command (`gum table`) modifies the amount of padding between cells in a Tableau worksheet or dashboard. It accepts a value in pixels, increasing this value will add more space around each cell and decrease clutter while maintaining proportions between cells. For instance, `gum table --cell.padding 10` sets a 10-pixel padding for all cells. This flag helps customize the layout of your Tableau visualizations, making them cleaner and easier to read.'
        cell.strikethrough: '[AI] The `--cell.strikethrough` flag in PowerShell''s `Get-Help` command, when used with the `tabulate` output formatter in the `gum` module (`gum table --cell.strikethrough`), is used to apply strikethrough formatting to specific cells within the tabulated output. This flag makes the specified text appear crossed out, visually conveying information such as deleted or obsolete data.'
        cell.underline: '[AI] The `--cell.underline` flag in PowerShell, specifically when used with the `Get-WmiObject` cmdlet and its alias `gum`, is used to underline the cells containing object property names in the output table. It does not affect the data within those cells. This formatting option can be helpful for distinguishing between property names and values in the table.'
        cell.width: '[AI] The `gum table --cell.width` command is related to the GUM (Generic Utility Modules) library in Node.js, specifically its table module. This command sets the width of cells in the generated table. By providing a numerical value, you define the maximum column width for each cell. If no value is given, the default behavior is to use the natural width of the content inside each cell.'
        columns: '[AI] The `gum tab --columns` command is a part of Gum, a CLI tool for GitHub Actions and Workflows. This specific command is used to display the list of columns or properties that can be displayed for resources in a table format when using Gum''s `tab` command for interacting with GitHub resources like issues, pull requests, and projects. The output shows the name of each column followed by its alias (if it has one), data type, and a brief description.'
        file: '[AI] The `gum tab --file` command is a part of Gum, a CLI tool for GitHub actions and workflows. This specific command is used to manage tab completions for files in a GitHub repository. The `--file` option specifies the path to a JSON file that defines custom tab completions. The contents of this file follow the Tab Completion File format, which includes an array of completion objects. Each object describes the label and the filter function used to match the suggested completions for a given context (like a file path or a branch name). This command allows you to define custom suggestions that will appear when using GitHub''s tab completion feature.'
        header.align: '[AI] The `--header.align` option in the `gum tabulate` command is used to specify the alignment of columns headers in the output table. This option accepts a string argument that can be set to one of the following values: ''left'', ''right'', or ''center''. By default, column headers are left-aligned. This option allows users to customize the appearance of their tabular output by adjusting the alignment of their headers.'
        header.background: '[AI] `gum` is a popular CLI testing tool for Node.js projects. The `--header.background` option under the `gum table` command is used to customize the background color of the header in the output table generated by gum. It takes a valid ANSI escape code or a hexadecimal color code as its value. For example, `--header.background=#F00` sets the header background to red. This option helps make the test results more visually distinct and easier to read.'
        header.bold: '[AI] The command `gum table --header.bold` is used in Node.js with the Gum package for tabular output. This specific command formats the header rows of the table with bold text. It enhances the visibility and readability of the table headers.'
        header.border: '[AI] The `--header.border` option in the `gum tab` command is used to add a border to the headers of the output table. This makes it easier to visually distinguish the header rows from the rest of the data in the table. By default, `gum tab` does not display any borders, but you can enable them by passing this option. For example: `gum tab --header.border`.'
        header.border-background: '[AI] The `--header.border-background` option in the `gum tab` command refers to setting the background color of the border around the header in the output of the tabular data generated by Gum, a popular data transformation tool for Node.js. By providing this flag with a valid hexadecimal color code or named color, users can customize the appearance of their terminal output to better suit their preferences or needs.'
        header.border-foreground: '[AI] The `--header.border-foreground` flag in `gt`, or `gum table`, is used to set the color of the border around the header rows in the output table. By default, it''s usually set to the automatic or "bright" contrast color relative to the background color for optimal visibility. Users can override this with a custom color value by specifying it as an argument to this flag.'
        header.faint: '[AI] The `gum tabler --header.faint` command in Git is used to display a tabular output of git objects with faint headers for column titles. Faint headers make the column titles appear dimmed or less intense, which can be helpful when viewing large tables or when the terminal color scheme makes it difficult to distinguish between header and data rows. This command does not modify the data displayed in the table but only affects the appearance of the column headers.'
        header.foreground: '[AI] The `--header.foreground` option in the `gum` CLI (Command Line Interface) tool is used to specify the foreground color for header text displayed in the terminal when outputting tabular data. It allows users to customize the appearance of their output by setting the color using ANSI escape codes or other supported formats. For example, `--header.foreground red` would make the header text appear in red color.'
        header.height: '[AI] The `gum table --header.height` command is used in Gum, a popular Node.js test runner and assertion library, to set the height of header rows in text-based tables produced during test reporting. A number value can be provided to specify the desired height in pixels or lines. This option allows for customization of table appearance and improves readability by ensuring that headers stand out clearly from the data below.'
        header.italic: '[AI] The `--header.italic` option in the `gum` CLI (Command Line Interface) tool is used to italicize header text when displaying a table. For instance, if you have a table with column headers and want some or all of them to be displayed as italicized text, you can use this flag during the table generation process. This helps emphasize certain headers and makes the output more visually appealing or easier to read depending on the context.'
        header.margin: '[AI] The `--header.margin` option in `gum table` is used to set the margin or padding around the header row of the output table. It takes a value in pixels, which adjusts the spacing between the header and the data rows. For instance, `gum table --header.margin 2` sets a margin of 2 pixels for the header row.'
        header.padding: '[AI] The `--header.padding` option in the `gum tabulate` command is used to specify the padding for the columns'' headers in the output table. It takes an integer value that represents the number of spaces between the header text and the column boundaries, helping to align and format the headers properly.'
        header.strikethrough: '[AI] The `--header.strikethrough` flag in the `gum` table command is used to apply a strikethrough style to specified table headers when displaying the output. This can be useful for indicating obsolete or deleted data, for example. The flag should be passed as an argument when invoking `gum table`, e.g., `gum table --header.strikethrough <input>`.'
        header.underline: '[AI] The `--header.underline` option in the `gum` table command is used to add an underline to the header row of the displayed table. This makes it easier to distinguish the header from the rest of the data in the table.'
        header.width: '[AI] The `--header.width` option in the `gum tab` command (specific to the Gum CLI tool) sets the width of the columns in the output table header. This can be useful when dealing with long headers or trying to ensure a neatly formatted table appearance. The width is specified as an integer value, and the flag ensures that the header''s width doesn''t exceed this limit. For example, `gum tab --header.width 50` would set the maximum width of each header cell to 50 characters.'
        height: '[AI] The `--height` option in the `gum table` command is used to set the height of the output table in the terminal. This allows users to control how much vertical space the table takes up, making it easier to view other content on the screen. For example, `gum table --height 10` would display a table with a maximum height of 10 lines.'
        print: '[AI] `gum table --print` is a command used in GUM (Git Utilities for Mac), a Git client for macOS. This command generates a text-based output of all currently stored Git tables, which are collections of data arranged in tabular format and stored under the `.git/tables` directory in a Git repository. The `--print` option instructs Gum to display this information in plain text format.'
        selected.align: '[AI] The `--selected.align` option in the `gum tab` command of PowerShell relates to aligning selected columns in a table output. It ensures that the columns with data are aligned properly based on their content, making the output more readable and visually organized.'
        selected.background: '[AI] The `--selected.background` option in the `gum tab` command is used to set the background color of the selected tab in the Gum terminal application. This allows users to customize the look and feel of their terminal interface by changing the appearance of the selected tab. When this option is specified, it should be followed by a valid color code or name in order to apply the desired background color. For example, `--selected.background="blue"` would set the background color of the selected tab to blue.'
        selected.bold: '[AI] `gum` is a popular Node.js package for creating interactive and colorful terminal outputs. The command `gum table --selected.bold` generates a table using `gum`, where the selected rows are highlighted in bold format. It does not display anything by itself, but instead returns an object that can be used to output the formatted table in other parts of your code.'
        selected.border: '[AI] The `--selected.border` option in the `gum tab` command in PowerShell is used to apply a border around the selected tab in the GUM (Graphical User Interface for PowerShell Modules) window. This helps users easily identify which tab is currently selected within the GUI, improving usability and organization of multiple open tabs.'
        selected.border-background: '[AI] The `--flag gum table --selected.border-background` is a command flag used in PowerShell or PowerCLI scripts specifically for the GUM (Graphical User Interface) module of PowerCLI. This flag sets the border background color for selected items in the GUM tables. It does not affect the data displayed in the table, but rather how the selected item(s) are visually distinguished within the table.'
        selected.border-foreground: '[AI] The `--flag "gum table --selected.border-foreground"` is a command-line argument used with the Gum CLI (Command Line Interface) tool for GitOps Unified Modeling. This flag sets the border foreground color of selected tables in the output of Gum''s tabular display. The effect of this flag is to change the color of the border around the selected table in the terminal interface, making it easier to distinguish from other tables.'
        selected.faint: '[AI] The `--selected.faint` flag in the `gum tab` command (which is a part of the AstroPy GUM library for managing tables) is used to display only the faintly selected sources in the table, while hiding those with stronger selection signals. It''s a filtering option that helps users focus on the fainter objects which may be less prominent in the analysis but still significant for certain scientific studies.'
        selected.foreground: '[AI] The `--selected.foreground` option in the `gum tab` command of PowerShell or PowerCLI is used to set the foreground color of the selected item in the GUM (Graphical User Interface) shell. This allows for better visual differentiation between selected and non-selected items within the UI, enhancing the user experience.'
        selected.height: '[AI] The `gum tab --selected.height` command is a part of the Gum CLI (Command Line Interface) in PowerShell, which is used for tab expansion and completion. This specific command returns the height of the currently selected tab in the terminal window. It retrieves this information from the Gum session data and displays the value in units of rows.'
        selected.italic: '[AI] The `--selected.italic` flag is an option used with PowerShell''s `Get-WmiObject` or similar cmdlets, such as `gum`, which is not a standard PowerShell cmdlet but might be part of a custom script or module. This flag is used to retrieve selected WMI objects and display their names in italic font for better visual identification in the PowerShell console. So, the whole command `gum table --selected.italic` would list all the WMI objects with the selected ones being displayed in italics.'
        selected.margin: '[AI] The `--selected.margin` flag in the `gum table` command is used to set the margin around the selected cells in the output table. It takes a value indicating the size of the margin in characters, which can be specified either as a number or as a length with a unit suffix (e.g., `2`, `"2px"`, `"0.5em"`). By default, there is no selected cell margin.'
        selected.padding: '[AI] The `--selected.padding` option in the `gum tab` command (used with tools like zsh or PowerShell) sets the padding size for the selected items in the tab completion list. It allows users to customize the amount of space between the selected item and the edges of the terminal window, improving visibility and readability.'
        selected.strikethrough: '[AI] The `--selected.strikethrough` flag in the `gum` command (specifically for the `table` subcommand) is used to apply a strikethrough formatting style to the selected items in the outputted table. This can be useful for visually indicating that certain rows or columns should not be considered or have been removed from comparison.'
        selected.underline: '[AI] The command `gum table --selected.underline` is used in Git Upgrade Manager (Gum), a PowerShell module for Git repository management. This command underlines the selected items in the output of a Gum table command, such as a list of available Git upgrades or branches. By default, the table output does not provide any visual indication of the selected item, so this command adds an underscore (_) underneath the name of the currently selected item for easier identification.'
        selected.width: '[AI] `gum` is a popular Node.js library for handling user input in the terminal. The command `gum table --selected.width` is used to display the width of the currently selected column in a tabular output generated by `gum table`. This can be helpful when working with large datasets and wanting to adjust the column width for better viewing.'
        separator: '[AI] The `--separator` option in the `gum` CLI (Command Line Interface) tool is used to specify a custom character or string that will be used as a separator between multiple items displayed in the output. When you run a command with `gum`, such as `gum list`, and pipe the result into `gum table`, you can use `--separator` option to change the default character used to separate each item from the next one, for example, instead of using the default tab or space characters, you could set it to a dash `-` or comma `,`. It will make the output more readable and visually consistent with your desired format.'
        widths: '[AI] The `--widths` option in the `gum` CLI (Command Line Interface) tool, when used with the `table` command, specifies that the output should include the column widths for tabular data. This can be helpful for ensuring columns are displayed consistently across different outputs or terminal windows.'
