# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: nvim
description: edit text
flags:
    --api-info: Write msgpack-encoded API metadata to stdout
    --cmd=: Execute <cmd> before any config
    --embed: Use stdin/stdout as a msgpack-rpc channel
    --headless: Don't start a user interface
    --listen=: Serve RPC API from this address
    --noplugin: Don't load plugins
    --startuptime=: Write startup timing messages to <file>
    -M: Modifications in text not allowed
    -O=: 'Open N vertical windows (default: one per file)'
    -R: Read-only mode
    -S=: Source <session> after loading the first file
    -V=: Verbose [level][file]
    -Z: Restricted mode
    -b: Binary mode
    -d: Diff mode
    -h, --help: Print this help message
    -i=: Use this shada file
    -m: Modifications (writing files) not allowed
    -n: No swap file, use memory only
    -o=: 'Open N windows (default: one per file)'
    -p=: 'Open N tab pages (default: one per file)'
    -r=: Recover edit state for this file
    -s=: Read Normal mode commands from <scriptin>
    -u=: Use this config file
    -v, --version: Print version information
documentation:
    command: '[AI] `nvim` is a popular open-source Integrated Development Environment (IDE) for text editing, built on the Vim architecture. It stands for NeoVim, which is a modified and improved version of the original Vim text editor, offering more features, better performance, and a modern user interface. With `nvim`, users can efficiently write, edit, and navigate through code, supporting various programming languages and markup languages. It''s known for its customizability, extensibility, and the vast range of plugins available to enhance functionality.'
    flag:
        M: '[AI] The `-M` flag is an option for the Vim text editor, which stands for "make" or "monitored." When used with the `nvim` command to start the editor, this flag enables file monitoring. With this option, any changes made to files that are being edited in another instance of Vim will be automatically detected and loaded into the current editing session. This can be useful for collaborative editing or when working on large projects where files may be frequently modified by others.'
        O: '[AI] The `-O` flag is a command-line option for the Neovim text editor. It stands for "overwrite" or "force overwrite." When used, it tells Neovim to replace existing files without asking for confirmation. This can be useful when scripting automation tasks where file overwriting is expected and desired. However, be careful as using this option may result in accidental data loss if not used cautiously.'
        R: '[AI] The command `nvim -R` is used to launch Vim or Neovim (NVIM) in remote-terminal mode. When you run this command, NVIM will connect to a specified remote server using SSH and open a file or enter the interactive command-line interface on that server. The ''-R'' flag stands for ''remote- terminal.'' This mode allows you to edit files and navigate directories remotely from your local NVIM instance.'
        S: '[AI] The command `nvim -S` is used to start Vim or Neovim (nvim) editor with a specified initialization file, also known as a vimscript or init.vim file. The `-S` option follows the path to the desired file. For example, if the path is `~/.config/nvim/init.vim`, then the command would be `nvim -S ~/.config/nvim/init.vim`. This allows users to customize their editing environment with personalized settings and plugins.'
        V: '[AI] The command `nvim -V` is used to display version information about the Vim editor that is installed on your system, specifically the version of Vim implemented in Neovim. The `-V` option is a flag that requests this version output without starting the text editor itself.'
        Z: '[AI] The command `nvim -Z` is used to start Vim in Zero Width mode with the `-Z` flag being a Vim-specific argument. In this mode, no terminal or GUI window is opened for the editor and it will only run as a background process. This can be useful when integrating Vim into scripts or other automated workflows where a separate editor window is not required. The main Vim process runs in the current terminal or shell, receiving input through standard input and outputting its results to standard output.'
        api-info: '[AI] `nvim --api-info` is a command used in Neovim, a popular open-source text editor based on Vi. This command generates and displays documentation for Neovim''s APIs (Application Programming Interfaces). It provides details on the functions, events, and options that developers can use when writing plugins or extending Neovim''s functionality. This information is output in a Lua format, allowing users to easily explore and understand the capabilities of Neovim''s API.'
        b: '[AI] The `-b` flag is a command-line argument for the Neovim text editor. It stands for "background" mode, which means that Neovim will continue running in the background after being detached from the terminal or shell. This can be useful when running long-running tasks or scripts within Neovim. For example, you might use it to build or test code in a separate terminal window while continuing to edit files in Neivm.'
        cmd: '[AI] The `--cmd` flag in Vim and Neovim (nvim) is used to specify a Vimscript command-line to be executed when starting the editor. This can be useful for setting up specific configurations or running scripts automatically upon launching the editor. For example, `nvim --cmd ''source ~/.vimrc''` would load the user''s VimRC file upon startup.'
        d: '[AI] `nvim` is a popular text editor derived from Vim. The option `-d` or `--debian` is a flag used when starting `nvim` from the command line. It is specifically designed for use in Debian-based Linux distributions to configure the editor with system-wide settings, respecting the user''s `.vimrc` file and other distribution-specific configurations. This flag allows users to benefit from Debian''s Vim package while maintaining their personal configuration preferences.'
        embed: '[AI] `nvim --embed` is a command-line argument used with Neovim, a popular text editor, to start it in an embedded mode. In this mode, Neovim runs inside another application as a plugin or an extension. Instead of opening a separate window, it integrates directly into the host application''s interface, allowing for seamless editing within the parent application. This is useful for customizing IDEs and code editors with Neovim functionality.'
        headless: '[AI] The `--headless` flag is an option for the Neovim text editor. When used, Neovim runs in "batch mode," which means it does not open a graphical user interface (GUI) window. Instead, it processes files or commands provided on the command line and returns its output to the terminal or script that invoked it. This flag is often used for automating text editing tasks or writing scripts that use Neovim as a library.'
        help: '[AI] `nvim --help` is a command used in the Neovim text editor to display detailed information about available commands and options. It shows a comprehensive list of help topics, each describing the functionality and usage of various features in Neovim. The output can be navigated using standard Vi/Vim keys or searched with regular expressions for quick access to specific topics.'
        i: '[AI] The command `nvim -i` is used to open the Vi/Vim text editor in interactive mode directly on a file, without the need to open it in read-only mode first. The `-i` flag tells Vim that changes should be written to the file upon saving and exiting the editor. For example, if you want to edit a file named "example.txt" with Vim, you can use the command `nvim -i example.txt` instead of `nvim example.txt`. This will open the file in Vim with write permissions by default.'
        listen: '[AI] The `--listen` flag for the Vim editor (specifically, its enhanced version NVim) causes it to start in a mode where it waits for incoming connections from other applications via Inter-Process Communication (IPC). This allows other programs to send commands or data to NVim and control it remotely. It''s often used in automation scripts or testing environments.'
        m: '[AI] The `-m` flag is a command-line option for the Neovim text editor. It stands for "maxmemmap" or "maximum memory mapping." When used, Neovim will allocate as much memory as necessary for swap files, which can be helpful when working on large files that don''t fit entirely in available RAM. This flag can increase the overall performance and stability of Neovim while handling such files but may consume more system resources.'
        "n": '[AI] The flag `-n` used with the VIm text editor, including its advanced version NeoVim (nvim), stands for "no name" or "non-stop" mode. In this mode, nvim will continue running commands in the terminal without waiting for user confirmation after each command. This can be useful for scripts or automation tasks where quick succession of commands is desired without interruptions.'
        noplugin: '[AI] The `--noplugin` flag is a command-line argument for the Neovim text editor. It disables all built-in and user-installed plugins at start up, providing a minimal configuration for users who prefer a lightweight editing environment. In essence, it starts Neovim without loading any plugins.'
        o: '[AI] The `-o` flag is an option used with the `nvim` (NeoVim) text editor. It stands for "vertical split opening." When you open a file or run a command using this option, NeoVim will create a new window splitting the current one vertically, and displaying the new content in the lower half of the new window. If a file is specified, it will be loaded in the newly created window. If no file is specified, the user can enter commands as if they were in a regular `nvim` session.'
        p: '[AI] `nvim -p` is a command used in Neovim, a popular text editor, to open multiple files or directories in split windows or tabs, with the new windows appearing next to the existing ones. The `-p` flag specifies this behavior. This can be useful for editing related files or navigating through a project, keeping all files easily accessible within the same instance of Neovim.'
        r: '[AI] `nvim` is a popular text editor, short for Neo Visionary Implamentation of Vi. The option `-r` stands for "replace in files." When you use `nvim -r`, it starts Vim in replace mode, allowing you to search and replace specific text patterns across multiple files within a project or directory.'
        s: '[AI] The `-s` option when starting the Vim editor with the `nvim` command is used to specify a Vim script file to be sourced upon starting the editor. This allows for automating various tasks or customizing the editor''s behavior before opening a file or starting a session. For example, `nvim -s myscript.vim filename.txt` will source the contents of the `myscript.vim` file before loading and editing `filename.txt`.'
        startuptime: '[AI] The `--startuptime` flag is an option in Neovim, a popular text editor derived from Vim. It is used to enable or disable the start-up time tracking feature. When this flag is set, Neovim will record the time taken to load all plugins and scripts during startup and display it at the end of the loading process. This information can be helpful in identifying slow-loading components for optimization purposes. Without `--startuptime`, Neovim would start up as quickly as possible, without providing any details about the loading times of individual elements.'
        u: '[AI] The `nvim` command with the `-u` option is used to load or apply a Vim script file as an init.vim file when starting the Vim editor (`nvim` in this case). This allows for customizing the editor settings, key mappings, and plugins at startup. For example, `nvim -u my_init.vim` will use the content of `my_init.vim` as the user init file.'
        version: '[AI] The `nvim --version` command is used to display version information about the Nvim text editor. When executed in a terminal or command prompt, it will print out a message containing the name of the editor (Nvim), its version number, and compilation options if available. This can be helpful for checking which version of Nvim is installed and being used in the current environment.'
