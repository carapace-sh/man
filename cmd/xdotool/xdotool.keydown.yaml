# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: keydown
description: Send keydown event for a given keystroke
flags:
    --clearmodifiers: Clear modifiers before sending keystrokes
    --delay=: Delay between keystrokes
    --window=: Send keystrokes to a specific window id
documentation:
    command: '[AI] `xdotool` is a versatile tool for automating interactions with the X11 graphical system. The `keydown` command is used to simulate a keypress event in an X11 application. It takes the name or keycode of the key as its argument, e.g., `xdotool keydown F2`. The key will remain pressed until another command is executed.'
    flag:
        clearmodifiers: '[AI] The command `xdotool keydown --clearmodifiers <key>` is a command-line tool used in Linux and Unix systems for automating keyboard input. This specific command sends a raw keyboard event to the X server, simulating a keypress with the specified key (e.g., "F1" or "Tab") without any modifier keys (shift, control, alt, etc.) being activated. The `--clearmodifiers` option ensures that no modifier keys are active when the key is pressed.'
        delay: '[AI] `xdotool` is a versatile tool for automating interaction with X11 applications. The command `xdotool keydown --delay <milliseconds>` instructs it to simulate a keyboard key press, followed by a delay of the specified number of milliseconds before releasing the key. This can be useful in scripts to mimic human-like input with short pauses between keystrokes.'
        window: |-
            [AI] `xdotool` is a versatile command-line tool for interacting with the X Window System graphical environment in Linux and other Unix-like systems. The `keydown` command is used to simulate keyboard keys being pressed.

            The option `--window <id>` specifies which window to send the key event to. This can be an ID of a specific window, such as its title or class name, or its XID (a unique identifier for each drawing primitive in the X Window System). By using this option, you can precisely target the desired window and send it keyboard events accordingly.
