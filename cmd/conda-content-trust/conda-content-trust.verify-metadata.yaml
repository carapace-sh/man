# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: verify-metadata
description: Verify metadata file
flags:
    -h, --help: show this help message and exit
documentation:
    command: '[AI] The `conda-content-trust` utility''s `verify-metadata` command is used to check the digital signatures in Anaconda or Miniconda repository metadata files for authenticity and integrity. This operation ensures that the metadata downloaded from the specified channel has not been tampered with before being used to install or update packages. The command is run in the terminal or command prompt, and it returns success if all signatures are valid or an error message indicating failed verification if any issue is detected.'
    flag:
        help: |-
            [AI] The `conda-content-trust verify-metadata` command is used in Anaconda/Miniconda distribution of Python for checking the authenticity and integrity of conda metadata indexes before installing or updating packages. The `--help` option provides information on how to use this command effectively:

            1. `verify-metadata [index-url]`: Verify the metadata of a specified conda index URL. If no URL is provided, it uses the default index ( Annie's File Exchange, Conda Forge, and MaxCompute).
            2. `--key-file <path>`: Specify an optional SSH key file for authentication when accessing remote indices.
            3. `--trust-pinned <filename>`: Verify metadata against a trusted local snapshot to ensure it hasn't been tampered with. The filename is the path of the trusted snapshot.
            4. `--no-deps`: Do not verify dependencies during this operation. This can speed up the process if you only want to check the index metadata itself.
            5. `--verify-signature`: Verify the signature of the conda-forge.yml file (or other index files) before using it. By default, it's enabled for Anaconda and MaxCompute indices, but not Conda Forge. This option makes it mandatory for all indices.
            6. `--update-index-cache`: Update the local index cache after verification. By default, this is done automatically when new metadata is found. Using this option ensures that you have the most recent index data before making installation decisions.
            7. `--print-errors`: If an error occurs during verification, print detailed information about it instead of just exiting silently.
            8. `--quiet`: Suppress all output except for errors and warnings.
            9. `--verbose`: Print more detailed information about the progress of verification.
