# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: validate
description: Validate config files/directories
flags:
    --config-format=: Config files are in this format irrespective of their extension.
    --quiet: When given, a successful run will produce no output.
documentation:
    command: '[AI] `consul validate` is a command provided by Hashicorp''s Consul service discovery and configuration management tool. It checks the syntax and validity of various configuration files, such as HCL (HashiCorp Configuration Language) files used with Consul. The command identifies any errors or warnings in the specified configurations and provides suggestions for resolution if needed. This helps ensure consistent and error-free configurations before implementing them in a production environment.'
    flag:
        config-format: |-
            [AI] The `consul validate` command is a part of Hashicorp's Consul service, which is used for service discovery, configuration, and orchestration. The `--config-format` option specifies the format of the configuration file being validated.

            The Consul CLI supports multiple configuration formats such as HCL (Hashicorp Configuration Language), TOML, JSON, and YAML. By using this flag, you ensure that your configuration file adheres to the expected format before attempting to use it with Consul. If the specified file is not in the correct format, `consul validate` will exit with an error message indicating the issue.

            In summary, `consul validate --config-format <format>` checks if a configuration file is valid based on the provided format (HCL, TOML, JSON, or YAML), helping to prevent potential errors in your Consul setup.
        quiet: '[AI] `consul validate` is a command-line tool for Consul, an open-source service discovery and configuration management platform. The `--quiet` flag is used to suppress detailed output from the validation process. With this option enabled, only error messages will be displayed if there are any issues found during the validation of your configuration files or templates. This can be useful in automated workflows where you don''t need to see the full log but want to quickly check for errors before continuing with other processes.'
