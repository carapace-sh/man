# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: basename
description: strip directory and suffix from filenames
flags:
    --help: display this help and exit
    --version: output version information and exit
    -a, --multiple: support multiple arguments and treat each as a NAME
    -s, --suffix=: remove a trailing SUFFIX; implies -a
    -z, --zero: end each output line with NUL, not newline
documentation:
    command: '[AI] `basename` is a command in Unix-based operating systems used to extract the base name or the last part of a file path, i.e., the file name without its directory path or suffix if specified with an option. For instance, given a path like "/path/to/file.txt", using `basename` would return just "file.txt". It can also be used in conjunction with `dirname` to extract only the directory part of a file path.'
    flag:
        help: |-
            [AI] `basename` is a command-line utility in Unix-like operating systems, including GNU and BSD variants. It is used to extract the base name of a file or a path, i.e., the part after the last directory separator.

            To get help on how to use this command, you can invoke it with the `--help` flag:

            ```bash
            basename --help
            ```

            The output will display detailed information about the usage, options, and examples for the `basename` command. Here's a brief summary of what you might see:

            1. **Usage**: This section explains how to call the command with basic arguments, such as `basename <file>` or `basename <directory>/<file>`.
            2. **Options**: This section lists any available options for the command. For example, there is an option called `-a` that will only print the base names of files in a directory (not directories). There might also be options to change the output suffix or prefix, among others.
            3. **Examples**: This section shows examples of using the command with various arguments and flags. For instance, it may demonstrate extracting just the filename from a path, extracting the base name without an extension, or extracting multiple base names in parallel.
            4. **Bugs and Reporting**: This section explains how to report any bugs or issues you encounter when using the command. It usually includes contact information for the maintainers or developers.
        multiple: '[AI] `basename` is a utility in Unix-like operating systems for extracting base names of files or paths, while `--multiple` is an option that allows handling multiple file or path inputs and returning multiple output basenames separated by specified delimiters (default: space). In summary, `basename --multiple` returns the base names of multiple input files or paths as separate outputs.'
        suffix: '[AI] The `basename` command in Unix or Unix-like operating systems is used to extract the base name from a file path. The option `--suffix` (or just `-s`) modifies its behavior to return only the suffix portion of the file name, that is, the characters after the last dot (if any) in the file name. For example, if you run `basename --suffix filename.txt`, the output will be `.txt`.'
        version: '[AI] `basename --version` is a command used in Unix-like operating systems, specifically within the GNU Core Utilities package. This command displays the version information of the `basename` utility itself. When executed with this specific argument, it outputs the name and revision of the software along with the build date and time, helping users to check for updates or identify which version of the tool is currently being used.'
        zero: '[AI] The `basename` command with the `--zero` option in Linux or Unix operates on filenames by returning only the base name of a file, discarding any directories and suffixes. The output is returned as a string without leading or trailing slashes and null bytes are added at the end to preserve binary files'' original null terminator. In summary, `basename --zero <file>` returns the base name of a file with a null byte at the end if it was originally a binary file.'
