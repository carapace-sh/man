# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: gulp
description: Command Line Interface for gulp
flags:
    --color: Will force gulp and gulp plugins to display colors.
    --compact-tasks: Reduce the output of task dependency tree.
    --continue: Continue execution of tasks upon failure.
    --cwd=: Manually set the CWD.
    --depth=: Specify the depth of the task dependency tree.
    --log-level=: Set the loglevel.
    --no-color: Will force gulp and gulp plugins to not display colors.
    --require=: Will require a module before running the gulpfile.
    --series: Run tasks given on the CLI in series.
    --sort-tasks: 'Will sort top tasks of task dependency tree. '
    --tasks-depth=: Specify the depth of the task dependency tree.
    --tasks-json: Print the task dependency tree, in JSON format.
    --tasks-simple: Print a plaintext list of tasks for the loaded gulpfile.
    --verify: Will verify plugins referenced in project's package.json.
    -L*: Set the loglevel.
    -S, --silent: Suppress all gulp logging.
    -T, --tasks: Print the task dependency tree for the loaded gulpfile.
    -f, --gulpfile=: Manually set path of gulpfile.
    -h, --help: Show this help.
    -v, --version: Print the global and local gulp versions.
documentation:
    command: '[AI] `gulp` is a popular open-source automation tool for JavaScript projects, built on Node.js. It runs automated tasks defined in a `gulpfile.js`, often used for building, testing, and compiling assets in real time for web development projects. It provides a streaming API to handle multiple tasks concurrently, making the build process more efficient.'
    flag:
        L: '[AI] `gulp -L` is a command used in Gulp.js, a popular JavaScript task runner. The `-L` flag, also known as the `--log-level:error` option, changes the logging level of Gulp to only display error messages during the execution of tasks. This can be helpful for debugging issues and filtering out informational or verbose logs.'
        color: '[AI] `gulp --color` is a command used with the Gulp JavaScript task runner. The `--color` option enables the output of color-coded formatting in the console for more readable and visually distinct error messages and progress indicators during the execution of Gulp tasks.'
        compact-tasks: '[AI] `gulp --compact-tasks` is a command used with the Gulp JavaScript task runner. It is an option that enables Gulp to merge multiple tasks into a single one, thereby reducing the number of intermediary steps and streamlining the build process. This can lead to improved performance and simpler task dependencies.'
        continue: '[AI] `gulp --continue` is a command used in Gulp.js, a popular JavaScript task runner. This command is used to tell Gulp to continue running tasks from where it left off after an error or interruption without having to start over again from the beginning. When you use `gulp.start()` to run a task list and an error occurs or the terminal is interrupted, Gulp stops executing tasks. To resume the execution of the remaining tasks, use `gulp --continue`. This helps save time by not repeating already completed tasks.'
        cwd: '[AI] `gulp` is a popular JavaScript task runner. The `--cwd` option (short for "current working directory") is a command-line argument used with `gulp` to specify the base directory from which `gulp` should resolve all relative paths in the `gulpfile.js` and other related tasks files. This allows using the same `gulpfile.js` across multiple projects, each located in different directories.'
        depth: '[AI] `gulp --depth` is a command-line option for the Gulp JavaScript task runner. It specifies that only files at the current level of the directory tree should be processed during a task, and not any deeper levels. This can help prevent unintended processing of certain files or reduce the scope of a task to focus on specific files in a large project.'
        gulpfile: '[AI] `gulp --gulpfile` is a command used with Gulp.js, a popular JavaScript task runner. The `--gulpfile` option specifies the path to the main Gulp configuration file, which contains instructions for defining tasks and workflows to automate various development processes. This flag tells Gulp to read and execute the specified file upon initialization.'
        help: '[AI] `gulp --help` is a command used in Node.js based task runners, specifically with Gulp.js. This command displays comprehensive help information about Gulp and its available tasks, plugins, and usage instructions. It assists users in understanding how to write, run, and configure their own automation workflows using the Gulp framework.'
        log-level: |-
            [AI] The `gulp` command with the option `--log-level` is used to configure the logging level in Gulp.js, a popular JavaScript task runner. By default, Gulp displays informational logs during task execution. However, you can increase or decrease the verbosity by specifying a log level:

            1. `--log-level quiet`: Suppresses all logs (only error messages are displayed).
            2. `--log-level silent`: Similar to quiet but also suppresses error messages.
            3. `--log-level standard`: Displays the default informational logs.
            4. `--log-level verbose`: Increases the logging level to display more detailed information about each task and its progress.
            5. `--log-level debug`: Enables the most detailed logging, including task sources, errors, and individual stream events.

            Using this option allows you to fine-tune your development experience by adjusting the amount of output from Gulp.
        no-color: '[AI] `gulp --no-color` is a command used with the Gulp.js task runner. The `--no-color` option disables colored output in the terminal when running Gulp tasks. This can be useful for those who prefer a plain text output or are working in environments where color may not be supported, such as in scripts or continuous integration systems.'
        require: '[AI] `gulp --require` is a command used in the Gulp JavaScript task runner. The `--require` option is used to specify a Node.js module that should be required before any other tasks are run. This can be useful when you have a custom plugin or set of plugins that need to be loaded before your Gulp tasks can function properly. For example, if you have a custom plugin called `myplugin.js`, you could run `gulp --require myplugin` to ensure it is loaded before any other tasks are executed.'
        series: '[AI] `gulp --series` is a command used in Gulp.js, a popular JavaScript task runner. It instructs Gulp to run a series of tasks one after another without creating new streams for each task. This means that the output of one task becomes the input for the next task in the series, improving performance and simplifying the workflow.'
        silent: '[AI] `gulp` is a popular JavaScript task runner. The `--silent` flag, when used with `gulp`, suppresses all output from the command line, making it run in quiet mode and hiding messages such as success, error, or warning notifications. This can be useful when running automated scripts where you don''t need to see the console output.'
        sort-tasks: '[AI] `gulp --sort-tasks` is a command used with Gulp, a popular JavaScript task runner. This command is used to run a Gulp task list in a specific order based on the tasks'' dependencies rather than their appearance in the file. By default, Gulp executes tasks in the order they are defined in the task list file. However, using `--sort-tasks` ensures that the tasks are executed in the correct order based on their dependencies to maintain the intended workflow and avoid unexpected results.'
        tasks: '[AI] `gulp --tasks` is a command used with the Gulp JavaScript task runner. This command displays a list of available tasks that can be run with Gulp. It does not actually execute any tasks, but rather provides information about what tasks are defined in your Gulpfile or other related configuration files.'
        tasks-depth: '[AI] `gulp --tasks-depth` is a command-line option for the Gulp.js task runner. It sets the maximum depth of nested tasks to be displayed in the output when using the `gulp info` or similar commands. A deeper value results in more detailed output, revealing more information about the task hierarchy. By default, this option is set to a depth of 3. Setting it to a larger value can help in debugging complex Gulp workflows.'
        tasks-json: '[AI] `gulp --tasks-json` is a command used with Gulp, a popular JavaScript task runner. This command is used to specify a custom tasks file in JSON format instead of using the default `gulpfile.js`. The tasks file lists all available Gulp tasks and their dependencies, enabling easier management and organization of tasks within a project.'
        tasks-simple: '[AI] `gulp --tasks-simple` is a command used with Gulp, a popular JavaScript task runner. This specific command is used to run all tasks defined in a Gulpfile.js without showing their individual progress messages or timings. The "--tasks-simple" option enables "plain text output mode," making the output more succinct and focused on errors if any occur during the build process.'
        verify: '[AI] `gulp --verify` is a command used with the Gulp JavaScript task runner. This specific command runs the default Gulp task while enabling the verification of plugins and tasks in the Gulpfile.js configuration. If any issues or errors are detected during the task execution, they will be reported to help ensure the correctness and reliability of your automation workflow.'
        version: '[AI] `gulp --version` is a command used in Node.js projects that utilize Gulp.js, a popular JavaScript task runner. This command is executed in the terminal or command prompt to display the version number of the installed and currently active Gulp installation. It provides essential information for debugging and troubleshooting issues related to compatibility between the project dependencies and the installed Gulp version.'
