# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: ssh-agent
description: OpenSSH authentication agent
flags:
    -D: Foreground mode
    -E=: Specifies the hash algorithm used when displaying key fingerprints
    -P=: Specify a pattern-list of acceptable paths for PKCS#11 provider and FIDO authenticator
    -a=: Bind the agent to the UNIX-domain socket bind_address
    -c: Generate C-shell commands on stdout
    -d: Debug mode
    -k: Kill the current agent
    -s: Generate Bourne shell commands on stdout
    -t=: Set a default value for the maximum lifetime of identities added to the agent
documentation:
    command: '[AI] `ssh-agent` is a background process in OpenSSH that manages and stores your SSH private keys securely using the SSH authentication agent mechanism. It keeps the keys in memory so they can be forwarded to SSH clients, allowing you to use passphrase-less login to remote servers without having to enter your passphrase every time. You interact with it using the `ssh-add` command to add keys to the agent and `ssh-keyscan` for other tasks.'
    flag:
        D: '[AI] The `ssh-agent -D` command is used to start an SSH agent in daemon mode with SOCKS proxy support. The `-D` option enables local and remote forwarding of port 1080 on all interfaces, allowing the agent to act as a SOCKS proxy for other applications to use when making SSH connections. This can be useful for securing SSH traffic when using third-party clients or tools that do not support SSH keys directly. The daemonized agent runs in the background and can be controlled with the `ssh-add` command.'
        E: '[AI] The `ssh-agent -E` command is used to extract the identity files (private keys) stored in an SSH agent. The `-E` option is a short form for `--edgekey`, which is an SSH agent subsystem that allows managing RSA keys using OpenSSH format (default) or PKCS11 key providers. By running `ssh-agent -E`, you can print out the contents of your private keys in base64 encoding, which can be useful for copying them to other systems or configuring other SSH clients.'
        P: '[AI] `ssh-agent -P` is a command used in OpenSSH to display the private keys currently held by the SSH agent. The `-P` option stands for "list-keys" and it outputs the key ID, creation time, and the path to the private key file for each key managed by the SSH agent. This information can be useful for identifying which keys are being used in your SSH sessions and ensuring that they are still trusted.'
        a: '[AI] `ssh-agent -a` is a command used in Unix-based systems to add or list keys in the SSH agent. The `ssh-agent` is a program that helps manage and securely store private keys for Secure Shell (SSH) connections. By adding keys with `-a`, you are loading them into the agent''s memory, allowing you to use those keys when establishing an SSH connection without having to enter the passphrase each time. This improves security by reducing the need to expose your key in plaintext repeatedly.'
        c: '[AI] `ssh-agent -c` is a command used in OpenSSH to list or inspect the currently loaded keys in an SSH agent. The `-c` option stands for "check" or "status." When run with this option, the ssh-agent program displays information about the keys it manages, including their serial numbers and whether they are protected by a passphrase. It returns an exit status of 0 if successful and non-zero otherwise.'
        d: '[AI] `ssh-agent -d` is a command used in Unix-based systems for managing SSH keys with the OpenSSH `ssh-agent` program. The `-d` option is short for "detach," and it instructs `ssh-agent` to run in the background as a detached process. When you start `ssh-agent` with this flag, it doesn''t attach a terminal or open a new window, but instead runs as a background process that can be controlled through environment variables or other mechanisms. This is useful for keeping your SSH keys available across multiple terminal sessions or login shells.'
        k: '[AI] `ssh-agent -k` is a command used in OpenSSH to stop and remove an existing SSH agent session. The `-k` option stands for "kill" or "terminate." When executed, it sends the SIGTERM signal to the running ssh-agent process, terminating the current session. After the agent has been killed, any keys loaded in memory are deleted as well. This command is typically used when you want to disconnect from an ssh-agent session or remove all loaded keys for security reasons.'
        s: '[AI] `ssh-agent -s` is a command used in Unix-like operating systems to start or list the SSH agents. The `-s` option is specifically used to list the currently running SSH agent and its process ID (PID). This can be helpful for users who want to check if an SSH agent is already running, and if so, obtain its PID to interact with it using other commands or tools.'
        t: '[AI] `ssh-agent -t` is a command used in Unix-based systems to display the remaining lifetime of an SSH key stored in the OpenSSH agent. The `-t` option stands for "time left until expiration" and outputs the time in seconds before the private key will need to be reloaded or added again to the SSH agent. This command is useful for checking the validity of keys used for secure shell connections, ensuring that they have not expired and are still active.'
