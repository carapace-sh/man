# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: set PROPERTY_NAME PROPERTY_VALUE
description: Set an individual value in a kubeconfig file
flags:
    --set-raw-bytes?: When writing a []byte PROPERTY_VALUE, write the given string directly without base64 decoding.
documentation:
    command: |-
        [AI] `kubectl config set` is a sub-command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command is used to modify configuration settings in the current `kubeconfig` file, which defines the connection details for communicating with a Kubernetes cluster.

        The basic syntax of this command is: `kubectl config set <context>/<key> <value>`. Here, `<context>` refers to the name or the index of the context in the `kubeconfig` file that you want to modify, and `<key>` is the configuration key whose value you want to change. Finally, `<value>` represents the new value for the given configuration key.

        For example, if you want to set the cluster URL for a context named "my-cluster" to "https://my-kubernetes-cluster.com:6443", you would use the following command:
        ```
        kubectl config set contexts.my-cluster.cluster.server https://my-kubernetes-cluster.com:6443
        ```
        After running this command, the updated configuration will be saved in your `kubeconfig` file, and subsequent `kubectl` commands will use the new connection details for that context.
    flag:
        set-raw-bytes: |-
            [AI] `kubectl config set --set-raw-bytes` is a command used with the Kubernetes command-line interface (CLI) tool, `kubectl`. This command allows setting raw bytes for a specific configuration key in a Kubernetes context or cluster. The syntax is as follows:

            ```bash
            kubectl config set --set-raw-bytes=<key> <context/cluster>/<key> <hexadecimal_bytes>
            ```

            Replace `<key>` with the name of the configuration key, `<context/cluster>` with the name of the context or cluster, and `<hexadecimal_bytes>` with the raw bytes to be set in hexadecimal format. This command can be useful for setting specific configurations like certificates, service account tokens, or other binary data that cannot be stored as plain text.
