# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: version
description: Display the clients version information
flags:
    --envsubst: Substitute environment variables in stack.yml file
    --short-version: Just print Git SHA
    --tls-no-verify: Disable TLS validation
    --warn-update: Check for new version and warn about updating
    -g, --gateway=: Gateway URL starting with http(s)://
    -k, --token=: Pass a JWT token to use instead of basic auth
documentation:
    command: '[AI] The `faas-cli version` command is used with the FaaS (Function-as-a-Service) CLI tool to check and print the current version of the Faas CLI installed on your system. It helps in ensuring that you have the latest version of the CLI for better compatibility and access to new features.'
    flag:
        envsubst: '[AI] `faas-cli version --envsubst` is a command used with the FaaS-CLI (Function-as-a-Service Command Line Interface) tool. The `--envsubst` option is used to perform environment variable substitution in YAML files before building and deploying serverless functions. It replaces predefined variables with their actual values from the CLI or environment, allowing for dynamic configuration of function deployments.'
        gateway: '[AI] The `--gateway` option in the `faas-cli version` command relates to the FaaS (Function-as-a-Service) Gateway, which is a component of the OpenFaaS platform. When this option is used, the `faas-cli version` command will display information about the installed and active OpenFaaS Gateway version along with the FaaS CLI version. This helps users to ensure they have the correct versions of both components for optimal functionality.'
        short-version: '[AI] The `faas-cli version --short-function` command is a part of FaaS-CLI (Function as a Service Command Line Interface), which is a tool for deploying, managing, and developing serverless functions using OpenFaaS. The specific command returns the short version of Faas-CLI installed on your system. It''s used to check the currently active version and ensure that you have the latest updates if needed.'
        tls-no-verify: '[AI] The `--tls-no-verify` flag in the `faas-cli version` command disables TLS certificate verification during API interactions with OpenFaaS. This means that the client will not check the authenticity of the server''s SSL certificate, potentially exposing the communication to man-in-the-middle attacks or other security risks. It is recommended to use this option only in trusted environments where certificate verification can be assured.'
        token: '[AI] The `faas-cli version --token` command is used with the FaaS-CLI (Function-as-a-Service Command Line Interface) tool to display the current version of the CLI and your Function Service API key (also known as a token). This command helps you verify that you are using the latest version of the Faas-CLI and that your API key is still valid for interacting with your chosen FaaS (Function-as-a-Service) provider, such as OpenFaaS or AWS Lambda.'
        warn-update: |-
            [AI] `faas-cli version --warn-update` is a command in the FaaS CLI (Function-as-a-Service Command Line Interface) tool for checking and managing serverless functions using FaaS platforms like OpenFaas, OpenWhisk, or Cloud Events.

            This specific command displays a warning message if a newer version of the Faas-CI is available than the one currently installed. It helps developers keep their tooling up-to-date to ensure they have access to new features, bug fixes, and security improvements. By running this command, you can proactively update your CLI or be informed about an available update before significant issues arise in your FaaS projects.
