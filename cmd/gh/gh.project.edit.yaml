# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: edit [<number>]
description: Edit a project
flags:
    --format=: 'Output format: {json}'
    --owner=: Login of the owner. Use "@me" for the current user.
    --readme=: New readme for the project
    --title=: New title for the project
    --visibility=: 'Change project visibility: {PUBLIC|PRIVATE}'
    -d, --description=: New description of the project
    -q, --jq=: Filter JSON output using a jq `expression`
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
documentation:
    command: '[AI] `gh project edit` is a GitHub CLI (Command Line Interface) command used to edit and update project settings in GitHub. It allows users to change various aspects of a project, such as its name, description, or visibility level. After running the command, you''ll be prompted to authenticate with your GitHub account and select the desired project. Once selected, you''ll be presented with an interactive interface where you can make the desired changes before saving them back to your repository.'
    flag:
        description: '[AI] The `gh project edit --description` command is used in GitHub''s `gh` CLI tool to update the description of a specific GitHub Project. This command requires you to provide the project ID or slug as an argument and allows you to pass a new description as an argument or through standard input. It modifies the project information on GitHub and reflects the changes in real-time.'
        format: '[AI] `gh project edit --format` is a GitHub CLI (Command Line Interface) command used to update a project file in your local GitHub repository with a new `.github/workflows` format. This command allows you to modify the YAML syntax of your workflow files and apply those changes directly to your GitHub Project. In summary, it is a tool for managing and configuring GitHub Actions using the GitHub CLI.'
        jq: '[AI] `gh project edit` is a command from GitHub''s CLI (Command-Line Interface) tool, gh, used to modify a GitHub Project. The `--jq` option is used to apply JSON queries using the jq tool after the command has executed. In other words, it processes and filters the output of `gh project edit` in JSON format using jq before displaying the result. This can be useful for extracting specific data or manipulating the structure of the JSON response.'
        owner: |-
            [AI] The `gh project edit --owner` command is used with the GitHub CLI (gh) to update the ownership of a GitHub project. This means that you can change who is the primary maintainer or collaborator on a project by using this command followed by specifying the new owner's GitHub username or organization name. For example:

            ```
            gh project edit PROJECT_NAME --owner=NEW_OWNER_USERNAME
            ```

            Or, to edit an organization-owned project:

            ```
            gh project edit PROJECT_NAME --owner=ORGANIZATION_NAME
            ```
        readme: '[AI] `gh project edit --readme` is a command used in the GitHub CLI (Command Line Interface) tool. This command is used to edit the README file of a specific GitHub project. When you run this command, it opens the README file for editing in your default text editor or IDE. After making changes, save and exit the file, then commit and push the changes back to GitHub. This helps keep the project''s documentation up-to-date and accurate.'
        template: '[AI] The `gh project edit --template` command is used in GitHub''s `gh` CLI (Command Line Interface) tool to modify the template of a GitHub Project. This means you can update the default file or directory that will be used as a starting point when creating new repositories or projects using this template. This command takes the name or ID of the project and any necessary options, such as the path to a new template file, as arguments.'
        title: '[AI] `gh project edit` is a GitHub CLI command used to update the title of a specific GitHub Project. The `--title` option is used in conjunction with this command to specify the new title for the project. Together, these arguments allow users to easily modify the title of their projects from the command line without having to visit the GitHub website.'
        visibility: '[AI] The `gh project edit --visibility` command is used in GitHub''s `git-hub` CLI tool to modify the visibility settings of a specific GitHub project. This command takes no arguments by itself, but instead requires you to provide a project ID or URL as an argument to specify which project to modify. The `--visibility` flag determines the new visibility level for the project, which can be set to one of three values: "public", "internal", or "private". Public projects are accessible to anyone and can be viewed by anyone on GitHub, while internal and private projects are only accessible to members of specific organizations. With this command, you can easily change a project''s visibility level as needed for your organization''s security and collaboration requirements.'
