# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: delete <id> [flags]
description: Delete a CI/CD pipeline
flags:
    --dry-run: simulate process, but do not delete anything
    -s, --status=: 'delete pipelines by status: {running|pending|success|failed|canceled|skipped|created|manual}'
documentation:
    command: '[AI] `glab ci delete` is a GitLab CI/CD command used to remove an existing GitLab CI/CD pipeline configuration from a repository. This command is typically run in the context of a GitLab project, and it deletes the specified pipeline definition by updating the `.gitlab-ci.yml` file or other pipeline configuration files. It''s important to note that deleting pipelines can impact the continuous integration, delivery, and deployment processes for your application, so use this command with caution.'
    flag:
        dry-run: '[AI] `glab ci delete --dry-run` is a command used in GitLab''s Glab CLI tool to simulate the deletion of a Continuous Integration (CI) pipeline without actually executing it. This operation can help you understand the impact of deleting a specific pipeline configuration before applying the change in a production environment. The `--dry-run` flag is an option that previews the effect of a command without making any permanent changes, allowing users to review the differences and make informed decisions.'
        status: '[AI] The `glab ci delete --status` command is used in GitLab to delete a specific Continuous Integration (CI) environment or pipeline configuration with the `glab` CLI tool. The `--status` flag is optional and it will only show the status of the deletion process without actually executing the deletion. If you want to delete the CI environment or pipeline configuration immediately, use `glab ci delete` without the `--status` flag.'
