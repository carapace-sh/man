# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: create
description: Create an ACL binding rule
flags:
    --bind-name=: Name to bind on match.
    --bind-type=: Type of binding to perform.
    --ca-file=: Path to a CA file to use for TLS when communicating with Consul.
    --ca-path=: Path to a directory of CA certificates to use for TLS when communicating with Consul.
    --client-cert=: Path to a client cert file to use for TLS when 'verify_incoming' is enabled.
    --client-key=: Path to a client key file to use for TLS when 'verify_incoming' is enabled.
    --datacenter=: Name of the datacenter to query.
    --description=: A description of the binding rule.
    --format=: Output format.
    --http-addr=: The `address` and port of the Consul HTTP agent.
    --meta: Indicates that binding rule metadata such as the raft indices should be shown for each entry.
    --method=: The auth method's name for which this binding rule applies.
    --namespace=: Specifies the namespace to query.
    --selector=: Selector is an expression that matches against verified identity attributes returned from the auth method during login.
    --stale: Permit any Consul server (non-leader) to respond to this request.
    --tls-server-name=: The server name to use as the SNI host when connecting via TLS.
    --token-file=: File containing the ACL token to use in the request.
    --token=: ACL token to use in the request.
documentation:
    command: |-
        [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp's Consul service discovery and configuration management tool. This command allows you to define specific access permissions for Consul resources based on ACL policies and rules, enabling fine-grained control over who can access or modify different parts of your Consul infrastructure.

        The basic syntax of the command is: `consul acl binding-rule create <rule-name> --policy <policy> --rules <rules>`

        * `<rule-name>`: The name you want to give to the new binding rule.
        * `--policy <policy>`: The ACL policy that defines the overall access level for this binding rule, such as "read", "write", or "execute".
        * `--rules <rules>`: A JSON-formatted list of specific rules defining the conditions under which the policy applies. These rules can specify criteria like the Consul data center, capabilities, or the identity of the principal making the request.
    flag:
        bind-name: '[AI] The `consul acl bind-name create` command is used in Hashicorp Consul, an open-source multi-purpose service discovery, configuration, and orchestration tool. This command creates a new ACL (Access Control List) binding rule with the specified name under the current ACL context. The `create` flag indicates that this is a new rule, and `--bind-name` specifies the name of the entity being bound to the rule, such as a service or node in Consul''s catalog. This command grants permissions to the named entity based on the rule''s configuration, helping to secure and manage access to resources within your Consul environment.'
        bind-type: |-
            [AI] The `consul acl bind-type create --bind-rule` is a command used in Hashicorp's Consul service to define and create Access Control List (ACL) rules with the "bind-type" set to "create".

            Consul ACL rules control access to various resources within the Consul system, such as keys, services, or nodes. The `--bind-type create` flag specifies that the rule will be of type "Create", which means it grants the right to create new resources in a particular scope.

            For example, creating an ACL rule with the following command:

            ```bash
            consul acl binding-rule create --name my_rule --bind-type create --binding-id my_binding_id --pattern service.my_service --mode allow --source-id my_source_id
            ```

            Would result in an ACL rule that allows the source with ID `my_source_id` to create new services with the name `my_service`.
        ca-file: |-
            [AI] `consul acl binding-rule create` is a command used in Hashicorp Consul, an open-source solution for service discovery, configuration, and orchestration. This specific command is part of the Access Control List (ACL) feature, which allows defining rules to control access to different resources within Consul.

            The `--ca-file` option is a flag that specifies the file path to a certificate authority (CA) file. The CA file contains the public key of the entity that has issued the certificates for the client and server in an SSL/TLS encrypted communication. By providing this file, Consul ensures secure communications between different components, such as when creating ACL binding rules. This flag is important for maintaining the security and integrity of your Consul deployment.
        ca-path: '[AI] `consul acl binding-rule create` is a command used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. The `--ca-path` option specifies the path to the CA (Certificate Authority) certificates when creating ACL (Access Control List) binding rules in a Consul KV (Key-Value) store. These certificates authenticate and encrypt communication between Consul servers and clients, ensuring secure access to the data managed by Consul. The `binding-rule create` command allows defining access control policies for specific paths or tokens in the KV store, based on the presented CA certificates.'
        client-cert: |-
            [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command specifically creates a rule that binds to client certificates.

            When you use the `--client-cert` flag with this command, you are defining an ACL rule based on the client certificate presented during authentication to Consul's HTTP API. The rule specifies which actions (e.g., read, write, or execute) a client with that particular certificate is authorized to perform on specific resources (keys, values, or other services) within your Consul environment.

            This command helps you enforce fine-grained access control policies for your team or applications, ensuring secure and isolated communication between services in your infrastructure.
        client-key: '[AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Consul, a connectivity and service discovery tool. The `--client-key` flag specifies the secret key of the client making the request. This key is used for authentication and authorization purposes, ensuring that only authorized clients can create or modify ACL rules within the Consul environment.'
        datacenter: |-
            [AI] The `consul acl binding-rule create --datacenter` command is used in Hashicorp Consul, an open-source distributed, highly available, and data center ready solution to connect and secure services. This command creates a new Access Control List (ACL) binding rule within a specific datacenter context.

            The `consul acl binding-rule create` subcommand defines the creation of a new ACL binding rule, which allows or denies access to Consul resources based on specified conditions. The `--datacenter` flag indicates that this operation will be performed within a specific datacenter context in a multi-datacenter setup. This means that the created binding rule applies only to the services and clients running in the selected datacenter.
        description: |-
            [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Consul, an open-source tool for service discovery, configuration, and orchestration.

            The `--description` flag is optional and is used to provide a brief explanation or label for the binding rule being created. This description will be stored alongside the rule and can help make it easier to understand the purpose of the rule within the larger ACL policy.
        format: '[AI] `consul acl binding-rule create --format` is a command used with Hashicorp''s Consul service, which creates a new Access Control List (ACL) binding rule and outputs the result in a specified format for further processing or display. The `--format` option specifies the desired output format such as JSON, HCL, or Tabular. This command helps administrators to define and manage granular access control policies within Consul.'
        http-addr: |-
            [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration.

            The `--http-addr` option specifies the HTTP address (and optional port number) on which Consul should listen for ACL requests. This is typically used to restrict access to the Consul ACL API to specific IP addresses or networks. By setting `--http-addr`, you can secure your Consul installation by limiting access only to trusted sources.
        meta: '[AI] The `consul acl binding-rule create --meta` command is used to create a new Access Control List (ACL) binding rule in Consul, which is a data center and service management tool. The `--meta` flag allows for the specification of custom metadata key-value pairs to be attached to the binding rule. These metadata can be useful for providing additional information or tags associated with the rule. For example, you might use metadata to indicate the environment (e.g., "production" or "staging"), the team responsible, or any other relevant information. Overall, this command creates a new binding rule with specified metadata, which helps in managing and organizing access control policies in Consul.'
        method: |-
            [AI] The `consul acl binding-rule create --method` command is used to create a new Access Control List (ACL) binding rule in Hashicorp's Consul service. This command follows the `create` sub-command, which is used to create new resources in Consul. In this specific case, we are creating a new binding rule with the `--method` flag indicating how the rule should be evaluated.

            There are several methods available: `principal`, `rule`, or `expression`. The method chosen determines how the rule will make access control decisions. For example, using the `principal` method means that the rule will evaluate based on the identity of the principal (e.g., a user or service), while using the `rule` method means that the rule will be evaluated based on a specific condition (e.g., IP address, HTTP verb, etc.).

            In summary, this command is used to create a new Consul ACL binding rule with a specified method for evaluating access control decisions.
        namespace: |-
            [AI] The `consul acl binding-rule create --namespace` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, a service discovery and configuration management tool. This specific command applies only to rules within a given Kubernetes namespace.

            When run, it takes the following syntax: `consul acl binding-rule create <rule-name> --namespace <k8s-namespace> --bind <principal> --permissions <permissions>`. Here, `<rule-name>` is the desired name for the new rule, `<k8s-namespace>` specifies the target Kubernetes namespace, and `<principal>` represents an entity (e.g., a user or service) that will be granted permissions by this rule. Lastly, `<permissions>` define the access rights the principal is granted within the specified namespace.

            The created binding rule sets up fine-grained access control for resources in Consul's Kubernetes connect integration, enabling more secure cluster management and configuration.
        selector: |-
            [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, a popular service discovery and configuration management tool.

            The `--selector` option specifies a Comma Separated Value (CSV) list of keys that the binding rule will be applied to. These keys identify resources in Consul, such as services, keys, or nodes. The binding rule defines access control permissions for these resources based on the principle of least privilege, enabling granular access management within the Consul environment.
        stale: |-
            [AI] The `consul acl binding-rule create --stale` command is used in Hashicorp Consul, an open-source tool for service discovery, configuration, and orchestration. This command creates a new Access Control List (ACL) binding rule with the `--stale` flag enabling the creation of stale rules.

            Stale rules are rules that have expired but continue to be applied due to a delay in Consul's ability to propagate updates across all members in the Consul datacenter. When creating a new ACL binding rule with `--stale true`, it will bypass Consul's normal checks for conflicting or outdated rules and apply the new rule immediately, even if it would normally conflict or be overridden by another rule.

            This command is useful when you need to quickly create a new ACL rule that takes precedence over any existing rules, but cannot wait for Consul to propagate updates across all members before making the change. However, keep in mind that using stale rules may introduce inconsistencies and conflicts in your Consul environment. It's recommended to use this feature with caution and monitor your Consul setup closely when working with stale ACL rules.
        tls-server-name: |-
            [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, a service discovery, configuration, and orchestration tool. The specific flag `--tls-server-name` sets the TLS server name for this binding rule.

            When using TLS with Consul, each server certificate has a unique Common Name (CN) or Subject Alternative Name (SAN). The `--tls-server-name` flag allows specifying the exact name that should match in order to apply the ACL rule. This is useful when dealing with multiple servers and ensuring only specific ones are granted access to certain resources.
        token: |-
            [AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, a distributed config management, service registration, and discovery tool. This command requires the use of a token for authentication.

            The `--token` flag is used to specify the ACL token that has the necessary permissions to create a binding rule. The token acts as a form of access control for performing this action within Consul's ACL system. Once the token is provided, Consul will create the specified binding rule according to the given configuration.
        token-file: '[AI] The `consul acl binding-rule create` command is used to create a new Access Control List (ACL) binding rule in Hashicorp Consul, an open-source service discovery and configuration management tool. The `--token-file` flag is an argument that specifies the path to a file containing an ACL token. This token is required for creating or modifying ACL rules, and provides the necessary permissions to perform these actions in the Consul system. By using this flag, you can securely provide the token without having to hardcode it into the command.'
