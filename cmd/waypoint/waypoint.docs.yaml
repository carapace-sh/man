# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: docs
description: Show documentation for components
flags:
    --builtin: Show documentation on all builtin plugins The default is false.
    --label=: Labels to set for this operation.
    --markdown: Show documentation in markdown format The default is false.
    --plain: Plain output
    --plugin=: Only show documentation for plugins with this name
    --remote: True to use a remote runner to execute.
    --remote-source=: Override configurations for how remote runners source data.
    --type=: Only show documentation for this type of plugin
    --var-file=: HCL or JSON file containing variable values to set for this operation.
    --var=: Variable value to set for this operation.
    -a, --app=: App to target.
    -p, --project=: Project to target.
    -w, --workspace=: Workspace to operate in.
documentation:
    command: '[AI] The `waypoint docs` command is used in Waypoint, an open-source infrastructure automation tool by Google. This command generates and updates documentation for Waypoint modules (configurations), making it easier to understand their usage and structure. It extracts metadata from the module files and formats them into various output formats such as Markdown or HTML. This information can then be accessed via Waypoint''s web interface, local file system, or other methods.'
    flag:
        app: '[AI] The command `flag "waypoint docs" --app` in Waypoint, an open-source application delivery platform by Hashicorp, is used to generate Markdown documentation for a specific Waypoint application. The `docs` flag triggers the generation of documentation, while the `--app` flag specifies the name or label of the target application. The generated documents provide detailed information about the application''s configuration and deployment status.'
        builtin: '[AI] `flag "waypoint docs --built-in"` is a command-line option in Hashicorp''s Waypoint configuration tool. This option, when set, instructs Waypoint to generate and display its internal documentation instead of applying configurations or managing resources. It is useful for exploring the capabilities and syntax of Waypoint without executing any active tasks.'
        label: '[AI] The `waypoint docs --label` command is a sub-command used in Waypoint, an open-source application delivery and infrastructure automation platform. This command is responsible for generating and updating documentation for Waypoint modules (custom extensions or templates). By using the `--label` flag, users can specify a label for the generated documentation file, facilitating easier identification and organization of related documents.'
        markdown: '[AI] `flag "waypoint docs --markdown"` is a command used in Waypoint, an open-source application delivery and infrastructure management platform by Google. This flag is responsible for generating or updating documentation in Markdown format for the defined resources in Waypoint configuration files. It reads and processes YAML manifests, then converts them to clear and easy-to-understand Markdown files, making it easier for developers and users to understand the infrastructure being managed.'
        plain: '[AI] The `waypoint docs --plain` command is used with Waypoint, an open-source application delivery platform from Hashicorp. This command generates plain text documentation for Waypoint modules. The output will include module name, description, inputs, outputs, and other relevant metadata in a human-readable format. It''s useful for quickly reviewing or documenting the configuration of Waypoint modules without having to use the web UI or complex YAML files.'
        plugin: '[AI] `flag "waypoint docs --plugin"` is a command used with Waypoint, an open-source application delivery and infrastructure automation tool from Hashicorp. This specific flag is used to generate plugin documentation for Waypoint plugins, which are custom extensions that can be developed to extend the functionality of Waypoint. By running this command, Waypoint will process the plugin source code and generate comprehensive Markdown documentation files for each exported API and configuration option. These files can then be easily viewed or published using various documentation platforms, enabling other users to effectively utilize your custom plugins.'
        project: '[AI] The `waypoint docs --project` command is used with Waypoint, an open-source project management tool by Google. This command generates and updates documentation for a specified Waypoint project using various integrated documentation tools like Dockerfile, Helm charts, or Kubernetes manifests. The output is typically in the Markdown format and can be found in the `docs` directory of the project.'
        remote: '[AI] `waypoint docs --remote` is a command used with Waypoint, an open-source application delivery and infrastructure automation tool by Google. This specific command retrieves and displays documentation for remote projects configured in Waypoint. It connects to the specified remote servers, fetches their configuration files, and generates Markdown documents from them. These documents provide valuable information such as project descriptions, deployment configurations, and other metadata. By using `--remote`, you can access and review documentation for remote projects without having to be physically present on those machines.'
        remote-source: '[AI] `waypoint docs --remote-source` is a command used with Waypoint, an open-source tool for managing infrastructure as code. This specific command generates documentation for Waypoint modules, which define the configuration of applications or services, from remote sources instead of from local files. This allows users to document their infrastructure definitions in version control systems and keep the docs in sync with the configuration changes.'
        type: '[AI] The `waypoint docs --type` command is used in Waypoint, an open-source application delivery and infrastructure automation platform developed by Hashicorp. This command is used to generate documentation for Waypoint modules with the specified type. For example, `--type component` would generate documentation for component types, while `--type job` would generate documentation for job types. The generated documentation can be useful for understanding how to use and configure specific modules within Waypoint.'
        var: '[AI] The `flag "waypoint docs --var"` is used with Waypoint, an open-source Argo project for managing dynamic infrastructure as code. This flag is used to generate or update documentation for variables defined in Waypoint configuration files. It reads the variable values from environment or a HCL file, and generates Markdown documents that describe each variable, including its name, description, and default value. These generated documents can be used to document and share information about the infrastructure being managed with the team or other stakeholders.'
        var-file: '[AI] The `--var-file` flag used with the `kubectl apply` or `kubectl create` commands in Kubernetes, when used with Helm charts or Kubernetes YAML files, specifies a file containing variable values to be passed during deployment. The variables can be used to customize the configuration of the application without modifying the chart or YAML file directly. This flag enhances flexibility and ease of managing configurations across multiple environments.'
        workspace: '[AI] The `waypoint docs --workspace` command is used with Waypoint, an open-source multi-cloud application deployment and management tool by Google. This command generates documentation for all the applications defined in a specific Waypoint workspace. It creates Markdown files containing detailed information about each application''s configuration, including its metadata, input variables, and outputs. These documents can be used to understand and manage the applications within that workspace effectively.'
