# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: telnet
description: User interface to TELNET
flags:
    --usage: give a short usage message
    -?, --help: give this help list
    -4, --ipv4: use only IPv4
    -6, --ipv6: use only IPv6
    -8, --binary: use an 8-bit data transmission
    -E, --no-escape: use no escape character
    -K, --no-login: do not automatically login to the remote system
    -L, --binary-output: use an 8-bit data transmission for output only
    -V, --version: print program version
    -a, --login: attempt automatic login
    -c, --no-rc: do not read the user's .telnetrc file
    -d, --debug: turn on debugging
    -e, --escape=: use CHAR as an escape character
    -l, --user=: attempt automatic login as USER
    -n, --trace=: record trace information into FILE
    -r, --rlogin: use a user-interface similar to rlogin
documentation:
    command: '[AI] `telnet` is a network protocol and client application used to establish a connection to a remote server or device over the internet. It provides a bidirectional interactive text-based communication channel, enabling users to access and interact with applications running on the remote system as if they were locally installed. It''s often used for debugging, testing, or managing networked services that support Telnet protocol, such as routers, switches, or other network devices. However, please note that Telnet doesn''t provide encryption by default and therefore it is generally replaced with secure alternatives like SSH (Secure Shell) for sensitive data transmission.'
    flag:
        binary: '[AI] The `telnet --binary` command is used in Unix-like operating systems to establish a Telnet connection using raw binary data instead of text-based commands and responses. This option bypasses the normal Telnet protocol negotiation and data encoding, allowing direct transfer of binary data between the local and remote machines. It''s typically used for specific applications that require low-level control or data exchange without the intermediation of human interaction or additional processing.'
        binary-output: '[AI] The `telnet --binary-output` option is used with the Telnet protocol tool in Unix-like operating systems. It changes the behavior of Telnet to send binary data instead of textual output over the network connection. This can be useful for specific applications, such as graphical user interfaces or other non-text-based data transmissions. By default, Telnet sends and receives textual data, which is interpreted by the receiving end based on its specific encoding. However, with `--binary-output`, Telnet sends raw binary data without interpretation, allowing for more efficient and precise data transfer.'
        debug: '[AI] The `telnet --debug` command is used to initiate a Telnet session with debug output. This means that detailed information about the data being transmitted and received during the session will be printed on the console or terminal. It''s primarily used for troubleshooting network connectivity issues, protocol errors, or other communication problems between two devices. The debug mode provides more insight into what is happening at a low level, making it easier to diagnose and resolve any complications that arise during the session.'
        escape: '[AI] The `--escape` option in Telnet is used to enable or disable character escape processing. When this option is enabled, certain characters (by default, the 255th character in the transport''s character set) are treated as an escape character. Any sequence that follows the escape character will be interpreted as a special command by the Telnet client or server, allowing for the negotiation of options and features between them. Without this option, any non-standard characters sent over the connection could be misinterpreted, leading to potential communication issues.'
        help: '[AI] `telnet --help` is a command used in Unix-like operating systems to display information about how to use the Telnet application. The `--help` option requests that the command prints out detailed usage instructions, available options, and other relevant information for the Telnet program. This can help users understand how to connect to remote servers using Telnet and configure various settings if needed.'
        ipv4: '[AI] The `telnet --ipv4` command is used in Unix-based systems to establish a connection using the Telnet protocol over IPv4 network. Telnet is a client-server application that provides a bidirectional interactive text-oriented communication session between two entities over a TCP connection. By specifying `--ipv4`, you ensure that the connection is established using IPv4 addresses instead of IPv6 addresses.'
        ipv6: '[AI] The `telnet --ipv6` command is used to establish a connection using Telnet protocol over IPv6 addresses. Telnet is a remote access protocol that provides interactive text-based communication between two devices over a network. By specifying the `--ipv6` option, we are telling the Telnet client to use IPv6 addresses instead of IPv4 while connecting to the remote server. This allows us to communicate with IPv6 enabled servers and services.'
        login: |-
            [AI] The `telnet --login` command is used in Unix-like operating systems to initiate a Telnet connection with the specified host and automatically log in using the given username, if provided. It's essentially an abbreviated form of `telnet [hostname or IP address] [username]`, where the square brackets denote optional parameters.

            When you run `telnet --login hostname`, it establishes a Telnet connection to the given host, and if there is no username specified, it will prompt you for one at the remote end. However, if you provide a username along with the command (`telnet --login hostname username`), then the session begins with that username already entered, allowing you to bypass the initial login prompt. This can be useful for accessing remote servers where you always use the same account.
        no-escape: '[AI] The `telnet --no-escape` command is used in Unix-like operating systems to establish a Telnet connection with a remote server without the Esc key triggering the Telnet escape sequence. This can be useful when working with applications that send data which might accidentally trigger an escape sequence over the Telnet session, causing disruptions or errors. The `--no-escape` option tells the Telnet client not to send the escape character by default.'
        no-login: '[AI] The `telnet --no-login` command is used in Unix or Linux environments to establish a Telnet connection to a remote host without going through the login process. This can be useful for testing network configurations or troubleshooting issues with network services that use Telnet as their protocol, such as FTP (File Transfer Protocol) or SMTP (Simple Mail Transfer Protocol). The `--no-login` flag prevents the client from sending a username and password during connection initiation.'
        no-rc: '[AI] The `telnet --no-rc` command is used in Unix-like operating systems to initiate a Telnet connection without automatically sending any initial initialization strings or commands (often referred to as "rc files") upon connection. The `--no-rc` option disables the use of rc files, allowing for a barebone Telnet session. This can be useful in certain situations where you want to manually send commands over the Telnet connection instead of having any automated initialization take place.'
        rlogin: '[AI] The `telnet --rlogin` command is used to establish a session using the Remote Login (RLOGIN) protocol over Telnet in Unix-like operating systems. This allows users to log into remote machines securely and interactively, transferring data between them. It''s important to note that RLOGIN is less secure than SSH and should only be used on trusted networks. The telnet client creates a connection to the specified remote host and server using the RLOGIN method by default, allowing authentication based on usernames and passwords stored in the .rhosts files.'
        trace: '[AI] The `telnet --trace` command is not a valid option for the Telnet client utility in most operating systems. However, in some specialized contexts or custom implementations of Telnet, this option might be used to enable extensive debugging and tracing of all data transmitted between the Telnet client and server. This can include detailed information about packets sent and received, options negotiation, and error messages. The output is typically written to a file or displayed on the terminal in real-time. Keep in mind that using excessive tracing might affect performance and potentially expose sensitive information, so it should be used with caution.'
        usage: '[AI] The `telnet --usage` command is used to display the usage information for the Telnet utility in Unix-like operating systems. It provides details on how to use Telnet to establish a connection to a remote host and interact with it as if the user were physically present at that location. This includes options to specify the remote host''s address and port number, as well as any required login credentials.'
        user: '[AI] The `--user` option in the `telnet` command is used to specify a particular username for authentication when connecting to a remote host using Telnet protocol. This option ensures that the given username is sent to the server during the login process, allowing for single sign-on or automated login scripts. It''s essential when accessing systems that require explicit user identification before granting access.'
        version: '[AI] The `telnet --version` command is used to display the version information of the Telnet client software installed on your system. When executed in a terminal or command prompt, it will output the name of the Telnet application, its version number, and sometimes additional details such as compilation dates or other build information. This can be helpful for troubleshooting or ensuring that you have the latest version of the client installed.'
