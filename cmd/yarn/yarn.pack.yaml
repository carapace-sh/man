# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: pack
description: Generate a tarball from the active workspace
group: general
flags:
    --install-if-needed: Run a preliminary yarn install if the package contains build scripts
    --json: Format the output as an NDJSON stream
    -n, --dry-run: Print the file paths without actually generating the package archive
    -o, --out=: Create the archive at the specified path
documentation:
    command: '[AI] The `yarn pack` command is a feature provided by Yarn, a popular JavaScript package manager. It bundles and prepaces your projects'' dependencies for production use in an output file or directory. This output file can then be easily shared with others or deployed to a server without requiring them to install all the dependencies individually. The resulting file contains optimized and minified code for faster delivery and reduced bandwidth usage.'
    flag:
        dry-run: '[AI] `yarn pack --dry-run` is a command used with Yarn, a popular package manager for JavaScript projects. The `--dry-run` option is used to perform a simulation of the actual operation without actually making any changes. In this case, `yarn pack` is the command for generating production-ready bundles of your project''s dependencies. So, `yarn pack --dry-run` will show you what files would be created or changed if you were to actually run the `yarn pack` command. This can help you understand and preview the output before executing it in a real environment.'
        install-if-needed: '[AI] `yarn pack --install-if-needed` is a command used in Yarn, a popular package manager for JavaScript projects. This command instructs Yarn to pack your project''s dependencies into a single file or folder for shipping to production environments. The `--install-if-needed` flag ensures that only the missing dependencies will be added and packed into the output file during the packaging process. In other words, it checks if all required packages are already installed in the current project, and installs only the ones that are missing before creating the packaged output.'
        json: '[AI] `yarn pack --json` is a command used with Yarn, a popular JavaScript package manager. This command is used to bundle and create a production-ready static output of your application''s dependencies, alongside generating a JSON manifest file. The JSON file contains important metadata such as the entries (i.e., modules) in the output, their sizes, and hashes for caching purposes. It helps improve cacheability and performance by allowing consumers to validate the bundled assets against the included hash.'
        out: '[AI] `yarn pack --out` is a command used with Yarn, a popular package manager for JavaScript projects. This command is used to bundle and prepare your application''s code for production deployment. The `--out` flag specifies the output directory where the bundled files will be saved after the process is completed. It helps simplify the deployment workflow by automating the packaging step, making it easier to serve your application from a consistent build.'
