# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: lf
description: terminal file manager
flags:
    --command=: command to execute on client initialization
    --config=: path to the config file
    --cpuprofile=: path to the file to write the CPU profile
    --doc: show documentation
    --last-dir-path=: path to the file to write the last dir on exit (to use for cd)
    --memprofile=: path to the file to write the memory profile
    --remote=: send remote command to server
    --selection-path=: path to the file to write selected files on open
    --server: start server (automatic)
    --single: start a client without server
    --version: show version
documentation:
    command: '[AI] `lf` is a file manager for the terminal, similar to `ls` but with additional features. It provides a preview pane, quick navigation, and filtering capabilities. It''s designed to be more efficient for interactive use in the command-line interface. To use it, simply type `lf` followed by the directory path (if desired) and press Enter. Interact with it using keyboard shortcuts to navigate, select, and perform actions on files.'
    flag:
        command: '[AI] `lf` is a file manager for Unix-like operating systems, and the command `lf --command` is used to execute a custom command on selected files or directories. The `--command` option takes a shell command as an argument, which will be executed when an entry is selected and the user presses the "enter" key. This feature can be useful for automating tasks, such as renaming multiple files with a specific pattern or applying a custom filter to selected items.'
        config: '[AI] `lf` is a modern file manager for Unix-like operating systems, known for its fuzzy finding and columnized output features. The `--config` option is used to load or save the configuration file of `lf`. This file contains various settings that customize the behavior and appearance of `lf`, such as keybindings, color schemes, and default actions. By providing a filename with `--config`, you can specify a custom configuration file; otherwise, `lf` will use its default one. The `--save-config` option is used to save the current configuration to a file instead of loading one.'
        cpuprofile: '[AI] `lf` is a lightweight file manager for Unix-like operating systems. The option `--cpuprofile` is not a flag specific to `lf`, but rather an option for the built-in profiling tool `perf`. When using `lf` with `perf`, `--cpuprofile` instructs `perf` to generate a CPU profile in a LTTng (Linux Trace Tooling framework) format, which can be inspected and analyzed later using other tools or visualizations. The flag doesn''t change the behavior of `lf` itself, but rather how an attached profiling session is recorded.'
        doc: '[AI] The `lf` (Lowest Common Ancestor Finder) is a command-line tool used for finding the lowest common ancestor of two or more nodes in a tree structure. The option `--doc` is used to generate documentation for the given `lf` installation. It creates an HTML file that contains detailed information about the commands, options, and usage examples of `lf`. This can be useful for users who want to learn how to use `lf` effectively and understand its various features in depth.'
        last-dir-path: '[AI] The `lf` (LeetFTPd) command `--last-dir-path` is an option used to set or retrieve the last working directory of a particular FTP user. It allows FTP administrators to maintain the default remote directory for a specific user upon login, ensuring a consistent experience and streamlining common workflows.'
        memprofile: '[AI] The `lf --memprofile` command is a part of the "Golang memory profiler" tool, `lpprof`, which comes bundled with the Go programming language. This specific command generates a detailed memory profile in a human-readable format for the Go program that has been previously executed with the `GO_PROF_DIR` environment variable set to a valid directory path. The output provides information about memory allocations, stack traces, and retention rates, allowing developers to identify memory leaks or excessive memory usage in their Go applications.'
        remote: '[AI] The `lf` (Leess) is a terminal file manager for Unix-like operating systems. The `--remote` option, when used with `lf`, enables the usage of SSH or other remote access protocols to interact with files on a remote system as if they were local. With this option, you can navigate and manage directories and files on a remote server directly from your terminal, providing greater flexibility and convenience in managing distributed file systems.'
        selection-path: '[AI] The `lf` (List Files) is a terminal application for interactively browsing and managing files in a directory tree. The option `--selection-path` is used to show the full path of the selected file or selection of files in the output, in addition to the filename itself. This can be useful when dealing with multiple files or directories with similar names, as it provides the necessary context for identifying and operating on the desired items.'
        server: '[AI] `lf` is a terminal file manager for Unix-like operating systems. The option `--server` is used to start `lf` in server mode. In this mode, instead of opening an interactive session in the terminal, `lf` acts as a background service, allowing other clients to connect and interact with the files using the `lf` client. This can be useful for setting up a shared file browsing experience across multiple terminals or sessions.'
        single: '[AI] The `lf` (short for "list files") is a terminal application used for listing directory contents with various customizations. The option `--single` is used to display only one file per line instead of the default multiple files per line.'
        version: '[AI] The `lf` (Lowest Common Ancestor Finder) is a popular Linux command-line tool used for finding common ancestors in a hierarchical tree structure, such as directories or files in a file system. The command `lf --version` is used to display the version information of the installed `lf` utility. This includes the specific version number, compilation date, and other relevant build details. It provides users with essential information about the installed software, allowing them to check for updates and ensure compatibility with their current system configuration.'
