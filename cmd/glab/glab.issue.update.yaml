# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: update <id>
description: Update issue
flags:
    --lock-discussion: Lock discussion on issue
    --unassign: unassign all users
    --unlock-discussion: Unlock discussion on issue
    -a, --assignee*=: assign users via username, prefix with '!' or '-' to remove from existing assignees, '+' to add, otherwise replace existing assignees with given users
    -c, --confidential: Make issue confidential
    -d, --description=: Issue description; set to "-" to open an editor
    -l, --label*=: add labels
    -m, --milestone=: title of the milestone to assign, pass "" or 0 to unassign
    -p, --public: Make issue public
    -t, --title=: Title of issue
    -u, --unlabel*=: remove labels
documentation:
    command: '[AI] The `glab issue update` command is used with GitLab''s CLI tool, Glab. This command allows you to update an existing issue in a GitLab project without having to visit the web interface. You provide the issue number and any necessary updates as arguments. For instance, `glab issue update 123 --title "New Title" --description "Updated description"` would modify the title and description of issue #123.'
    flag:
        assignee: '[AI] `glab` is a Git wrapper for GitHub''s REST API, providing an alternative command-line interface to interact with GitHub repositories. The command `glab issue update --assignee <username>` is used to update the assignee of a specific issue in a GitHub repository. It takes an argument `<username>` representing the new assignee''s GitHub username. By running this command, you can change the person responsible for addressing and resolving the issue, making it more efficient in collaborative development environments.'
        confidential: '[AI] The `glab` command-line tool is a GitLab CLI client used to interact with GitLab projects. The `issue update` sub-command is used to update an existing issue, and the `--confidential` flag is optional. When this flag is included in the command, it indicates that the updates being made contain confidential information. Using this flag ensures that the changes are encrypted during transfer and stored as confidential in GitLab. This can be useful when sensitive information needs to be shared within an issue while maintaining security.'
        description: |-
            [AI] `glab` is a Git wrapper for TUI (Text User Interface) tools, providing a more user-friendly experience for Git operations. The command `glab issue update --description <new_description>` is used to update the description of an issue in a GitHub repository. Here's a breakdown:

            1. `glab`: A Git wrapper tool.
            2. `issue`: Specifies that we are working with GitHub issues, not Git commits or branches.
            3. `update`: Indicates that we want to modify an existing issue.
            4. `--description`: Informs the command that we will be updating the description of the issue.
            5. `<new_description>`: The new description for the issue, replacing the current one.
        label: '[AI] `glab` is a Git interface for PowerShell and is used to manage Git repositories from the command line in PowerShell. The command `glab issue update --label <new_label>` is used to update an existing issue label with a new label in a Git repository managed by Glab. This command takes a single argument, `<new_label>`, which specifies the new label that will be assigned to the issue. When executed, this command will interactively prompt you for the number or name of the issue to update and then apply the new label to the selected issue in the Git repository.'
        lock-discussion: |-
            [AI] `glab`, a Git wrapper for GitLab, provides several commands to manage GitLab repositories more efficiently. The command `glab issue update --lock-discussion` is used to lock the discussion of an issue in a GitLab project.

            When you run this command followed by an issue number, it sets a lock on that specific issue's discussion section. This means no new comments can be added by team members until the lock is removed. The primary use case for using `--lock-discussion` is to prevent further commenting while deciding important matters within your team or organization concerning the issue at hand.

            It's essential to note that only project members with the "Edit Issue" permission can use this command. Additionally, a user cannot lock an issue if someone else already has it locked. To remove the lock, simply run `glab issue update <issue_number> --unlock-discussion`.
        milestone: |-
            [AI] The `glab` command-line tool is a GitLab client for interacting with GitLab repositories from the terminal. The specific command, `glab issue update --milestone`, is used to update the milestone assignment of an existing issue in a GitLab project.

            Here's a brief explanation of each part of the command:

            - `glab`: Invokes the Glab tool.
            - `issue`: Specifies that we want to work with issues.
            - `update`: Indicates that we will be updating an existing issue.
            - `--milestone`: Informs Glab that we intend to update the milestone assignment for the issue.

            When you run this command, you'll need to provide some arguments, such as the project name or ID, the access token (if required), and the issue number you want to update. For example: `glab issue update 123 --milestone 42`. This would assign issue #123 to milestone #42 in your GitLab project.
        public: '[AI] `glab` is a Git interface tool for working with multiple Git repositories, similar to `git stash apply` but more powerful. The command `glab issue update --public <issue_number>` updates a public GitHub issue by applying the latest changes from the default branch of the local repository associated with that issue to the issue''s description or comments. This can be useful for keeping an issue description up-to-date with the current state of the codebase, or for creating new issues from uncommitted work in progress. The `--public` flag ensures that the update is made to a publicly visible issue, as opposed to a private one.'
        title: |-
            [AI] `glab` is a Git interface for PowerShell, and the command `issue update --title <new_title>` is used to update the title of an existing GitHub Issue. The flag `glab` specifies which tool is being used to execute this command.

            Here's a breakdown of what each part does:

            1. `issue`: This identifies that we want to work with issues in GitHub, using `glab`.
            2. `update`: This flag instructs `glab` to update an existing issue, rather than creating a new one.
            3. `--title`: The `--title` flag followed by the `<new_title>` argument specifies the new title for the issue when it is updated.
        unassign: '[AI] The `glab` command-line tool is a Git interface for GitLab written by the GitLab community. The specific command `glab issue update --unassign` is used to unassign an issue in GitLab. When you assign an issue to someone, it means that person is responsible for addressing the issue. Unassigning an issue removes that responsibility and makes it available for others to claim. This can be useful when an assigned developer no longer has time or capacity to work on the issue. The `--unassign` flag tells `glab` to perform this action, updating the issue record accordingly in GitLab.'
        unlabel: '[AI] `glab` is a Git interface for GitHub written in Rust, and the command `glab issue update --unlabel <issue_number>` is used to remove labels from an specific issue on GitHub. With this command, you can modify the state of an issue by removing any existing labels without changing its title or description. This action might be useful when a label is no longer relevant for the issue and needs to be removed to keep accurate issue tracking.'
        unlock-discussion: '[AI] The `glab issue update --unlock-discussion` command is used in GitLab''s CLI (Command Line Interface) tool, Glab, to unlock an issue discussion. When an issue is locked, users can no longer comment on it. Unlocking the discussion allows new comments to be added. This command can be useful when there is ongoing discussion related to the issue and additional input or clarification is required.'
