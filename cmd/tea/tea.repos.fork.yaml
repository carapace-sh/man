# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: fork
aliases:
    - f
description: Fork an existing repository
flags:
    -O, --owner=: name of fork's owner, defaults to current user
    -R, --remote=: Discover Gitea login from remote. Optional
    -l, --login=: Use a different Gitea Login. Optional
    -r, --repo=: Override local repository path or gitea repository slug to interact with. Optional
documentation:
    command: '[AI] The `tea repos fork` command is used in the TEASQL (TeaSQL Question Language) shell for Git version control systems. It creates a new repository as a copy of an existing one under a different account or personal namespace, typically on platforms like GitHub or GitLab. This command forks a repository, meaning you make a copy of it with the ability to modify the content and create branches, while leaving the original repository unchanged. This is often done when contributors want to contribute changes back to the upstream project but prefer to do so through their own account first.'
    flag:
        login: |-
            [AI] The command `git tea repos fork --login` is used in Git, a version control system, for creating a new repository as a fork of an existing one on the GitHub platform. Here's a breakdown of each part:

            * `git`: It signifies that this is a Git command.
            * `tea`: This refers to the Tea interface for GitHub, which provides an easier way to interact with GitHub using Git commands. It's an alias for GitHub's SSH configuration.
            * `repos`: It tells Git to work with repositories instead of other GitHub features.
            * `fork`: This command creates a new repository as a fork of an existing one. It makes a copy of the original repository under your own account, allowing you to make changes independently without affecting the original repository.
            * `--login`: The flag `--login` is used when interacting with GitHub over SSH using your login credentials (instead of using HTTPS). This can be more convenient for automating tasks or maintaining security.
        owner: '[AI] The `git` command `tea repos fork --owner <username>` is used to create a new repository as a fork of an existing one, owned by a specific GitHub user named `<username>`. It forks the original repository under your own GitHub account, allowing you to make changes and submit pull requests for potential inclusion into the original project.'
        remote: '[AI] The `git` command `tea repos fork --remote` creates a new repository on a remote Git server by forking an existing repository. The `--remote` option specifies that this is a remote repository, meaning it will be located outside of the local Git workflow and must be accessed over a network. This command is often used to create a copy of an upstream project for modification and collaboration.'
        repo: |-
            [AI] The `git tea rebase --fork --repo` command is used in Git version control system to create a new repository as a fork of an existing one, and then start a rebasing process on the forked repository with the upstream branch being the original repository.

            Here's a breakdown of each part:

            * `tea`: This refers to 'Teapot', a Git extension for working with remote repositories in a more comfortable way, especially when dealing with forks.
            * `rebase`: This is a Git command that applies changes from one branch onto another branch, moving or "rebasing" the tip of the current branch to be based at a new base commit instead of the initial commit.
            * `--fork`: This option creates a new repository as a fork of an existing one before starting the rebasing process. It sets up the remote relationship between the local and original repositories, making it easier to contribute changes back upstream.
            * `--repo`: This option specifies the path or URL to the local directory or remote URL for the new repository being created.
