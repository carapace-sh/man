# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: list
aliases:
    - ls
description: List pull requests in a repository
group: General commands
flags:
    --app=: Filter by GitHub App author
    --json*=: Output JSON with the specified `fields`
    -A, --author=: Filter by author
    -B, --base=: Filter by base branch
    -H, --head=: Filter by head branch
    -L, --limit=: Maximum number of items to fetch
    -S, --search=: Search pull requests with `query`
    -a, --assignee=: Filter by assignee
    -d, --draft: Filter by draft state
    -l, --label*=: Filter by label
    -q, --jq=: Filter JSON output using a jq `expression`
    -s, --state=: 'Filter by state: {open|closed|merged|all}'
    -t, --template=: Format JSON output using a Go template; see "gh help formatting"
    -w, --web: List pull requests in the web browser
documentation:
    command: '[AI] The `gh pr list` command is used with the GitHub CLI (gh) to display a list of open and closed pull requests for a specific repository or user. It shows essential information, such as the PR number, title, status, and last updated time. Users can apply various filters based on branch, state, labels, assignees, and sorting to narrow down the search results.'
    flag:
        app: '[AI] `gh pr list --app` is a command used in GitHub''s CLI (Command Line Interface) tool, called "gh". This command lists all pull requests for a specific GitHub application instead of a repository. The flag "--app" specifies the name or owner and repo of the GitHub application. For instance, `gh pr list --app myorg/myapp` will display a list of open and closed pull requests for the given application.'
        assignee: '[AI] `gh pr list --assignee` is a GitHub CLI command used to list pull requests (PRs) assigned to a specific user. The PRs will be displayed with their numbers, titles, and other relevant information such as the repository name, status, and creator. This command can help users quickly view PRs they are responsible for in multiple repositories without having to navigate to each one individually.'
        author: '[AI] `gh pr list --author` is a command used in GitHub''s CLI (Command Line Interface) tool, called `gh`. This command lists all pull requests (PRs) created by a specific author. The `--author` option filters the results to display only PRs where the given author is the committer. It helps users to quickly view PRs contributed by a particular collaborator in a GitHub project.'
        base: '[AI] `gh pr list --base` is a command used in GitHub''s `gh` CLI tool. It lists pull requests (PRs) against a specific branch, usually the base branch of a repository. The base branch is often the main or master branch. This command displays PR titles, numbers, authors, and other relevant information, allowing users to review and manage PRs effectively.'
        draft: '[AI] The `gh pr list --draft` command is used in GitHub''s command-line interface (CLI) tool, `gh`, to list all draft pull requests for a specific repository or user. Draft pull requests are those that have been started but not yet ready to be merged into the main branch, often containing changes that require review before being merged. By using this command, you can easily view and manage your or your team''s draft pull requests in one place.'
        head: '[AI] `gh pr list --head` is a command used in GitHub''s Command-line Interface (CLI) tool, `gh`. This specific command lists all pull requests for the current repository with their branch heads - i.e., the branches that the pull requests were created from or are merging into. It provides information such as pull request number, title, and base branch, allowing users to easily manage and track their pull requests.'
        jq: '[AI] `gh pr list --jq` is a command used with the GitHub CLI (gh) to list pull requests. The `--jq` flag indicates that the output of the `pr list` command will be processed by JQ, a lightweight and flexible JSON processor. This command allows filtering, transforming, and extracting specific data from the raw JSON output of the GitHub API in a human-readable format. The result is a customized display of pull requests with selected details.'
        json: '[AI] `gh pr list --json` is a command used in GitHub''s command-line tool (Git Hub for Desktop or GitHub CLI) to fetch a list of pull requests as JSON data. This command displays detailed information about each pull request, such as number, title, status, creation and update dates, merged branch, and more. The output is in the JSON format, which can be easily parsed by scripts and tools for further processing or analysis.'
        label: '[AI] The `gh pr list --label` command is used with GitHub''s `gh` CLI (Command Line Interface) tool to retrieve a list of pull requests from a GitHub repository. The `--label` flag filters the results based on a specific label value, allowing users to view and manage only the pull requests with that particular label. This can be useful for focusing on specific work or project aspects.'
        limit: '[AI] `gh pr list --limit` is a GitHub CLI command used to list pull requests in a GitHub repository. The `--limit` option specifies the maximum number of pull requests to be returned in the output. This command allows users to view a limited number of pull requests, which can be useful when dealing with large numbers of open PRs.'
        search: '[AI] The `gh pr list --search` command is used in GitHub''s `gh` CLI (Command Line Interface) tool to search for pull requests that match a given query. The query can include keywords, authors, labels, or other filters to narrow down the results. The output displays various information about each pull request such as number, title, author, created at, and merged at date. This command is useful when you want to find specific pull requests across multiple repositories without having to navigate through each one individually.'
        state: '[AI] `gh pr list --state` is a GitHub CLI (Command Line Interface) command used to list pull requests in a repository with a specified state. The "--state" option specifies the filter for the pull requests, which can be one of several values such as "open", "closed", or "all". The command returns information about each pull request including the number, title, author, and status. It is often used to quickly view pull requests based on their state in a GitHub-hosted repository.'
        template: '[AI] The `gh pr list --template` command is used with GitHub''s `gh` CLI (Command Line Interface) tool to list pull requests. The `--template` option specifies a custom format for the output using Mustache templates. This allows users to extract specific information from the pull request list, making it easier to process and filter the results programmatically.'
        web: '[AI] `gh pr list --web` is a GitHub CLI command used to list all open pull requests for a specific repository in a web browser. The `--web` flag opens the URLs of the pull requests in your default web browser, allowing you to easily view and manage them directly on GitHub.'
