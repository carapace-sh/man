# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: unplug
description: Force the unpacking of a list of packages
group: general
flags:
    --json: Format the output as an NDJSON stream
    -A, --all: Unplug direct dependencies from the entire project
    -R, --recursive: Unplug both direct and transitive dependencies
documentation:
    command: '[AI] `yarn unplug` is a command provided by Yarn, a popular JavaScript package manager. It allows developers to remove an installed workspace from a Yarn workspaces project. When you run `yarn unplug <workspace-name>`, it will unlink the specified workspace from the root package.json file and also delete the `.yarn-integrity` file, but leave all the installed packages within that workspace in place. This command is useful when you want to remove a workspace from your project without losing the packages it installed for other projects or your global installation.'
    flag:
        all: '[AI] `yarn unplug --all` is a command used in Yarn, a popular package manager for JavaScript projects. This command disables all installed Yarn integrations or plugins, which are added functionalities that enhance the usage of Yarn. By using `--all`, you disable all currently active plugins at once. This can be helpful when you want to temporarily stop the use of certain plugins or troubleshoot potential issues in your project.'
        json: '[AI] `yarn unplug --json` is a command used in Yarn, a popular package manager for JavaScript projects. This command is used to extract detailed metadata about installed packages in a Yarn workspace into a JSON file. By running `yarn unplug --json`, you can generate a file containing information such as package versions, dependencies, and other relevant data, which can be useful for various use cases like automated testing, continuous integration, or inventory management.'
        recursive: '[AI] `yarn unplug --recursive` is a command used in Yarn, a popular JavaScript package manager. This command is used to remove or "unplug" an installed local package and all of its dependencies that were installed recursively from the global Yarn cache. The `--recursive` flag ensures that not only the directly dependent packages are removed but also their transitive dependencies. This can be useful when you want to remove a specific package along with all its dependencies from your project, for instance, before publishing it or sharing it with others.'
