# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: csview
description: A high performance csv viewer with cjk/emoji support
flags:
    --sniff=: Limit column widths sniffing to the specified number of rows
    -H, --no-headers: Specify that the input has no header row
    -V, --version: Print version information
    -d, --delimiter=: Specify the field delimiter
    -h, --help: Print help information
    -i, --indent=: Specify global indent for table
    -p, --padding=: Specify padding for table cell
    -s, --style=: Specify the border style
    -t, --tsv: Use '\t' as delimiter for tsv
documentation:
    command: '[AI] `csview` is a command used in Autodesk AutoCAD software for accessing and managing external references (XREFs) or blocks in a drawing. It opens the XREF or block palette, allowing users to toggle the visibility of XREFs or blocks on or off, reload them, or manage their properties. The command can be run by typing `CSVIEW` in the AutoCAD command line and pressing Enter.'
    flag:
        delimiter: '[AI] The `csview` command with the `--delimiter` option is used in IBM''s Db2 database management system for processing data in a tabular format, where each column is delimited by a specified character. This option allows specifying a different delimiter other than the default tab or space character when working with external files or tables. For instance, if CSV (Comma Separated Values) files are being processed, the `--delimiter` flag would be set to a comma character.'
        help: |-
            [AI] `csview` is a command-line tool for viewing and searching CSV (Comma Separated Values) files. The `--help` option provides information about how to use the `csview` command, including valid arguments, options, and their descriptions. It prints out detailed usage instructions and examples. For instance, you may see messages like:

            ```sh
            $ csview --help
            Usage: csview [OPTIONS] [FILE [QUERY]]

            View and search CSV files using various filters and projections

            Options:
              -h, --help            Show this message and exit.
              -V, --version         Print version information and exit.
              --delimiter DELIM     Set custom delimiter character (default: ',')
              --header              Assume input file has a header row.
              ...

            Examples:
              $ csview mydata.csv
              # Display all records in the CSV file

              $ csview mydata.csv column1 > output.csv
              # Select column1 and export results to output.csv
            ```

            In summary, `csview --help` is used to display the documentation for the `csview` command. It helps you understand its usage, available options, and examples.
        indent: |-
            [AI] `csview` is a command-line tool in CSVKit, a library for working with CSV files. The `--indent` option is used to control the indentation level of tabular output when viewing CSV data.

            With this option, you can specify the number of spaces or tabs for each level of nesting in nested data structures. For instance, if your data includes arrays or dictionaries, the output will be indented accordingly to show the hierarchy. The default indentation is usually two spaces per level, but you can change that with `--indent`.

            Here's a brief example:

            ```bash
            csview myfile.csv --indent 4
            ```

            This command would output CSV data with an indentation of four spaces per level when viewing nested structures.
        no-headers: '[AI] `csview` is a command-line tool in csvkit, a Python library for working with CSV files. The `--no-headers` option is used when reading a CSV file without expecting it to have a header row. When this flag is passed, `csview` will not print the header row while displaying the contents of the CSV file.'
        padding: '[AI] `csview` is a command-line tool for viewing and filtering CSV (Comma Separated Values) files in the CSIS (Common Statistics Informatics System) environment. The `--padding` option is used to specify how missing values should be handled when displaying data. With `--padding`, missing values are replaced by a specified character or string, allowing for more consistent and readable output. For instance, `csview myfile.csv --padding=''NA''` will replace missing values with the string "NA" in the output.'
        sniff: '[AI] `csview --sniff` is a command in the CSToolkit (CSV Toolkit) software suite, used for handling and manipulating CSV (Comma-Separated Values) files. The `--sniff` option enables automatic file format detection or "guessing" based on the initial bytes of the file. When you use `csview --sniff filename.csv`, the tool attempts to identify if the given file is indeed a CSV file and sets appropriate configuration settings accordingly, such as delimiter and encoding. This can be helpful when dealing with files that may not have an explicit file extension or contain unexpected characters, allowing for easier processing of CSV data.'
        style: |-
            [AI] The `csview` command is a tool in IBM Rational DOORS Next Generation for viewing and comparing variations of documents, such as requirements or specifications. The `--style` option specifies the visual representation of the differences between the documents.

            There are various predefined styles available to choose from, including "Unified", "Side by side", and "Context". Each style offers a different way of displaying the changes, helping users better understand and manage the differences. For example, in Unified style, all changes are shown in context within the document, while Side by side shows each document separately with the difference highlighted.

            In summary, `csview --style` is used to set the visual representation of differences when comparing documents using the IBM Rational DOORS Next Generation tool.
        tsv: '[AI] `csview` is a command-line tool in csvkit, a Python library for working with CSV files. The `--tsv` option stands for Tab-separated Values. It instructs `csview` to read the input CSV file as Tab-separated Values instead of the default Comma-separated Values format. This means that each field in the data is separated by a tab character rather than a comma. The output will also be written with tab separators between fields when used with other tools from csvkit like `csplit` or `csvformat`.'
        version: '[AI] The `csview` command with the `--version` option is used to display the version information of the CSView software. This includes the major and minor release numbers, as well as any build or revision number. It helps users determine if they have the latest version of the software and provides them with relevant information for troubleshooting or compatibility issues.'
