# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: pr-upload
description: Apply the bottle commit and publish bottles to a host
group: developer
flags:
    --committer: Specify a committer name and email in `git`'s standard author format.
    --debug: Display any debugging information.
    --dry-run: Print what would be done rather than doing it.
    --help: Show this message.
    --keep-old: If the formula specifies a rebuild version, attempt to preserve its value in the generated DSL.
    --no-commit: Do not generate a new commit before uploading.
    --quiet: Make some output more quiet.
    --root-url: Use the specified <URL> as the root of the bottle's URL instead of Homebrew's default.
    --root-url-using: Use the specified download strategy class for downloading the bottle's URL instead of Homebrew's default.
    --upload-only: Skip running `brew bottle` before uploading.
    --verbose: Make some output more verbose.
    --warn-on-upload-failure: Warn instead of raising an error if the bottle upload fails. Useful for repairing bottle uploads that previously failed.
documentation:
    command: '[AI] `brew pr-upload` is a Homebrew command used to upload a bottle (precompiled binary package) for a specific formula to PR (Pull Request) on GitHub for Homebrew Tap repositories. This command helps in sharing custom or proprietary bottled software with others without revealing the original source code, maintaining security and privacy. To use it effectively, you need to have Homebrew, Git, and an active internet connection installed. Also, make sure your formula is properly configured and built using `brew bottle` before executing this command.'
    flag:
        committer: '[AI] The `brew pr-upload` command is a part of Homebrew, a popular package manager for macOS. This specific command is used to upload a Pull Request (PR) prepared locally with changes using Homebrew''s brew file to the Homebrew repository on GitHub. The `--committer` option sets the committer name and email for the PR commit, allowing you to identify the commit in Git history.'
        debug: '[AI] The `brew pr-upload --debug` command is used in Homebrew, a popular package manager for macOS, to upload a Pull Request (PR) for review or submission to the Homebrew project. The `--debug` flag enables verbose output, providing more detailed information about the upload process, which can be helpful for troubleshooting or understanding what''s happening behind the scenes.'
        dry-run: '[AI] The `brew pr-upload --dry-run` command is a part of Homebrew, a popular package manager for macOS. This specific command is used to simulate and preview the upload of a Pull Request (PR) to the Homebrew Core repository without actually submitting it. The `--dry-run` option runs the command in a mode that only shows what would be done if executed in a real environment, making it useful for testing changes before committing them.'
        help: |-
            [AI] `brew pr-upload` is a command provided by Homebrew, a popular package manager for macOS and Linux. This command is used to upload a PR (Pull Request) bundle to GitHub or another version control platform.

            The `--help` option is used to display detailed information about how to use the command. When you run `brew pr-upload --help`, you will see a message that explains:

            1. The command name is `brew pr-upload`.
            2. It requires no arguments, but it accepts an optional Git remote and branch as arguments.
            3. The command checks out the HEAD commit of the specified branch locally.
            4. It then creates a PR bundle (a tarball or zip archive) of the changes.
            5. Finally, it uploads this bundle to the specified Git remote using SSH keys for authentication.

            In summary, `brew pr-upload --help` provides detailed instructions on how to use the `brew pr-upload` command to create and upload a PR bundle to a Git repository.
        keep-old: '[AI] The `brew pr-upload --keep-old` command is used in Homebrew, a popular package manager for macOS, to upload a pull request (PR) to the Homebrew repository. The `--keep-old` flag tells Homebrew to keep the old version of the formula (the code that defines the software package) after the PR has been uploaded. This allows the maintainer to easily compare the changes made in the PR with the previous version, facilitating review and collaboration on the changes.'
        no-commit: '[AI] `brew pr-upload` is a Homebrew command used to upload a pulled request (PR) branch to a remote repository for review. The `--no-commit` flag prevents Homebrew from committing and pushing the changes in the PR branch after it''s uploaded, keeping the local and remote branches in sync without creating a new commit. This is often used when the PR contains multiple commits or needs more modifications before being merged.'
        quiet: '[AI] The command `brew pr-upload --quiet` is used in Homebrew, a popular package manager for macOS. This command uploads a pull request to a GitHub repository for Homebrew, specifically to the Homebrew Core project. The `--quiet` option suppresses any output or progress messages during the upload process. In summary, this command uploads a Homebrew pull request without displaying any status updates.'
        root-url: '[AI] The command `brew pr-upload --root-url` is a sub-command used in Homebrew, a popular package manager for macOS. This specific command is responsible for uploading a pull request to a GitHub repository using the given root URL. When you make changes to a Homebrew formula or other part of the project and want to submit those changes back to the Homebrew community, you can create a pull request on GitHub. The `brew pr-upload` command simplifies this process by automatically creating a new Git branch, adding your changes to that branch, and then uploading it as a pull request to the Homebrew repository specified by the root URL.'
        root-url-using: '[AI] The `brew pr-upload --root-url-using` command is a Homebrew (a popular package manager for macOS) subcommand used to upload pull requests with attached files or binaries directly to the GitHub repository, using the root URL provided by GitHub. It automates the process of creating and submitting pull requests, making it easier for Homebrew tap maintainers to distribute new or updated software packages to their users.'
        upload-only: '[AI] `brew pr-upload --upload-only` is a Homebrew command used to upload changes made in a Pull Request (PR) to the Homebrew formulae repository for review. The `--upload-only` flag means that only the changes will be uploaded without creating or merging the PR, allowing collaborators to review and provide feedback before it''s merged. This process ensures that formulae are thoroughly tested and reviewed before being added to Homebrew.'
        verbose: '[AI] The command `brew pr-upload --verbose` is a Homebrew (a popular package manager for macOS) subcommand used to upload pull requests to the Homebrew core repository. The `--verbose` option increases the amount of output displayed during the process, providing more detailed information about each step involved in creating and submitting the pull request. In essence, it allows users to see the progress and potential issues that may arise during the submission process.'
        warn-on-upload-failure: |-
            [AI] The `brew pr-upload` command is a part of Homebrew, a popular package manager for macOS and Linux. This specific command is used to upload pull requests from a local repository to a remote GitHub or GitLab repository.

            The `--warn-on-upload-failure` flag modifies the behavior of this command. With this flag, if an error occurs during the upload process, it will only print a warning message and continue with the rest of the commands. If this flag is not used, an error would cause the entire operation to fail.

            In summary, `brew pr-upload --warn-on-upload-failure` uploads pull requests while displaying warnings instead of errors upon failure.
