# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: verify
description: Read the commit-graph file and verify its contents against the object database
flags:
    --no-progress: Turn progress off explicitly
    --object-dir=: Use given directory for the location of packfiles and commit-graph file
    --progress: Turn progress on explicitly
    --shallow: Only check the tip commit-graph file in a chain of split commit-graphs
documentation:
    command: '[AI] `git commit-graph verify` is a Git command used to validate the consistency of a given commit graph or ref log. It reads the commit graph data from a provided file, typically generated by other Git tools like `git rerere` or `git bisect`, and checks if the commits form a valid chain of ancestry according to Git''s commit rules. If the commit graph is verified as valid, Git will output "Verified: <commit-hash>" for each provided commit hash, otherwise it will print an error message indicating inconsistencies in the commit graph.'
    flag:
        no-progress: |-
            [AI] The `git commit-graph verify` command is used to check the validity of a Git commit graph, which is a data structure representing the ordered sequence of commits in a Git repository. It ensures that the parent-child relationships between commits are consistent with the commit message timestamps and other metadata.

            The `--no-progress` option disables the progress bar display during the verification process, making it run faster by suppressing the output of intermediate steps. So, in summary, `git commit-graph verify --no-progress` checks the integrity of a Git commit graph without showing the progress bar.
        object-dir: '[AI] `git commit-graph verify` is a command used in Git to validate the consistency of a given commit graph. The option `--object-dir` specifies the directory containing the object database that the verification will be performed on. This command ensures that all commits in the specified commit graph exist and have valid parent-child relationships, without performing any changes or creating new commits. It''s useful for ensuring data integrity and consistency when dealing with large or complex Git repositories.'
        progress: |-
            [AI] The `git commit-graph verify` command is used to check the validity of a given Git commit graph, which is a directed acyclic graph (DAG) representing the ancestor-descendant relationships between commits in a Git repository.

            The `--progress` option provides a progress report during the verification process, showing the status of each batch of commits being checked. It can be useful when dealing with large repositories or when running the command in the background.

            When you run `git commit-graph verify --progress`, Git will traverse the commit graph to ensure that all commits have valid parents and that there are no cycles or other invalid structures, such as multiple heads or detached branches. If any issues are found during this process, Git will report an error, and the verification will be aborted. Otherwise, Git will indicate successful completion of the verification.
        shallow: '[AI] `git commit-graph verify` is a Git command used to validate the integrity of a Git commitment graph in a repository, ensuring that all commits are reachable from the current branch tip and there are no cycles or missing parents. The `--shallow` option specifies that only the local shallow clone should be verified instead of the entire history. This is useful when working with partial clones where not all of the history is available locally.'
