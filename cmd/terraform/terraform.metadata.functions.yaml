# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: functions -json
description: Show signatures and descriptions for the available functions
flags:
    -json: Prints out a json representation of the available function signatures
documentation:
    command: |-
        [AI] Terraform's `metadata` functions are a set of built-in functions used to read, write, and interact with metadata associated with Terraform resources and data sources. These functions can be used to:

        1. Set and retrieve arbitrary key-value pairs as metadata during resource configuration.
        2. Pass metadata between modules or across the calls in a workflow.
        3. Conditionalize resource creation based on input metadata values.

        Some common uses of `metadata` functions include:

        * Setting custom tags, labels, or other attributes for resources.
        * Storing and accessing configuration data derived from variables or external sources.
        * Implementing dynamic resource configurations based on input metadata.
    flag:
        json: '[AI] The `-json` flag in Terraform when used with the `metadata` function calls modifies the output format to JSON instead of the default HCL (Hashicorp Configuration Language). This flag is useful for interacting with APIs or other systems that require data to be in a JSON format. For example, `output "example_output" { value = jsonencode(data.example.id) }` followed by `terraform apply -json metadata=true` would output the metadata for resource ''example'' as JSON.'
