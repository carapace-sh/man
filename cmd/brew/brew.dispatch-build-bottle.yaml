# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: dispatch-build-bottle
description: Build bottles for these formulae with GitHub Actions
group: developer
flags:
    --debug: Display any debugging information.
    --help: Show this message.
    --issue: If specified, post a comment to this issue number if the job fails.
    --linux: Dispatch bottle for Linux (using GitHub runners).
    --linux-self-hosted: Dispatch bottle for Linux (using self-hosted runner).
    --linux-wheezy: Use Debian Wheezy container for building the bottle on Linux.
    --macos: macOS version (or comma-separated list of versions) the bottle should be built for.
    --quiet: Make some output more quiet.
    --tap: 'Target tap repository (default: `homebrew/core`).'
    --timeout: 'Build timeout (in minutes, default: 60).'
    --upload: Upload built bottles.
    --verbose: Make some output more verbose.
    --workflow: 'Dispatch specified workflow (default: `dispatch-build-bottle.yml`).'
documentation:
    command: '[AI] `brew dispatch-build-bottle` is a Homebrew command used to initiate the process of building and bottling (creating a bottle file for distribution) a specific Homebrew formula on macOS using Apple''s Xcode tools. This command sends a background job to build the required package, which can be useful when you want to start the build process but don''t wish to wait for its completion before continuing with other tasks. The bottled packages are saved in the `/usr/local/Cellar` directory by default.'
    flag:
        debug: '[AI] `brew dispatch-build-bottle --debug` is a command used in Homebrew, a popular package manager for macOS, to build and create a bottle (a container holding compiled binaries and their dependencies) for a specific Homebrew formula with debugging information enabled. This command triggers Homebrew''s under-the-hood process called "Bottling," which downloads the formula''s source, compiles it, bottles the resulting binaries, and stores them in the Cellar directory. The `--debug` flag enables verbose output during this process, providing detailed information about each step for troubleshooting purposes.'
        help: |-
            [AI] `brew dispatch-build-bottle` is a Homebrew command used to build bottled versions of packages, which are precompiled binaries for various platforms and architectures. The `--help` option provides information about how to use this command effectively. Here's what it does:

            1. It displays a brief usage message that explains the purpose of the command, as well as its syntax: `brew dispatch-build-bottle [FORMULA...]`
            2. It describes the function of each argument: `[FORMULA...]` refers to one or more package formulae, which can be specified individually or through a file (using the `--files` option).
            3. It lists the various flags that can be used with this command, such as `--quiet`, `--verbose`, `--no-casks`, and others. These flags can influence how the command runs, such as reducing output for a quieter build or preventing the installation of Cask dependencies.
            4. It explains what happens when you run the command: it dispatches builds for one or more formulae, creating bottled packages in the `/usr/local/Cellar` directory.
            5. It provides examples of how to use the command: `brew dispatch-build-bottle my_formula` or `brew dispatch-build-bottles file.list`.
        issue: '[AI] `brew dispatch-build-bottle --issue` is a command used in Homebrew, a popular package manager for macOS. This command triggers the building and bottling of a specific Homebrew formula with an open issue tagged against it. The `dispatch-build-bottle` workflow ensures that multiple bottle builds are processed concurrently to save time. When using this command, Homebrew will identify formulas with the specified issue label in their GitHub repository and begin building and bottling those packages. Once complete, the bottles are stored in the Cellar directory for installation or upgrade.'
        linux: '[AI] `brew dispatch-build-bottle --linux` is a command used with Homebrew, a popular package manager for macOS. This command triggers the building of a bottled version of a Homebrew formula targeting Linux systems. The bottle is an archived representation of the built software packaged with its dependencies and necessary system configurations, which can be easily installed on other platforms, including Linux distributions.'
        linux-self-hosted: '[AI] `brew dispatch-build-bottle` is a Homebrew command used to build bottled versions of packages that can be installed on Linux systems using Homebrew''s self-hosted Apple MacOS installation. The `--linux-self-hosted` option specifies the use of a Linux machine for building the bottles, which allows users to create and distribute Linux packages without requiring a MacOS environment. This command fetches the formula, builds the package, creates a bottle (an archive containing the package, its dependencies, and their shared libraries), and stores it in the Homebrew Cellar for future installation on Linux systems.'
        linux-wheezy: '[AI] `brew dispatch-build-bottle` is a Homebrew command used to build and bottle software packages for other platforms, specifically in this case, Linux Wheezy. The flag `--linux-wheezy` specifies the target platform for the bottled package. This command triggers Homebrew''s automated build process to download, compile, and package the software for that specific operating system. Once completed, Homebrew stores the bottle files in its Cellar directory, making them available for later installation on systems running Linux Wheezy.'
        macos: |-
            [AI] The `brew dispatch-build-bottle --macOS` command is used in Homebrew, a popular package manager for macOS. This command initiates the build process for installing or updating a Homebrew formula with a bottled installation.

            In simple terms, it triggers the compilation of source code into an installable package (a bottle) that includes all required dependencies, optimized for specific macOS versions and architectures. The resulting bottle is stored in Homebrew's Cellar directory and can be installed without requiring the original source code or build environment.
        quiet: '[AI] `brew dispatch-build-bottle` is a Homebrew command used to build and bottle a specific formula, creating an installable package. The `--quiet` option is used for running the command in quiet mode, which means that Homebrew will suppress most output during the build process, displaying only errors or warnings if they occur.'
        tap: '[AI] `brew dispatch-build-bottle` is a command used with Homebrew, a popular package manager for macOS. This command triggers the building of a bottle (precompiled binary package) for a specific Homebrew formula, without installing it right away. The --tap option specifies the name of the Homebrew tap (repository) where the formula is located. After running this command, the bottle will be built and stored in the Homebrew Cellar directory, ready to be installed with `brew install` when needed.'
        timeout: '[AI] `brew dispatch-build-bottle` is a Homebrew command used to build and bottle a specific formula or package, creating a standalone installer package for macOS. The `--timeout` option sets a time limit in seconds for the build process before it gets interrupted. If the build process exceeds this set time, an error will be thrown. This can help prevent long-running builds from blocking other processes.'
        upload: '[AI] `brew dispatch-build-bottle --upload` is a command used in Homebrew, a package manager for macOS. This command triggers Homebrew to build bottled versions of installed packages that are not yet available on the Homebrew tap server. The `--upload` flag automatically uploads these newly built bottles to be shared with the larger Homebrew community after successful builds.'
        verbose: '[AI] `brew dispatch-build-bottle --verbose` is a command used in Homebrew, a popular package manager for macOS. This command triggers the building of a bottle (i.e., a precompiled binary package) for a specific Homebrew formula with increased verbosity. The `--verbose` option makes the process print detailed information about each step involved in the bottle creation, allowing users to better understand and monitor the build progress.'
        workflow: '[AI] The command `brew dispatch-build-bottle --workflow` is used with Homebrew, a popular package manager for macOS. This command triggers Homebrew to build bottles (self-contained packages) for all formulae (software packages) that have unbuilt dependencies or are not up-to-date in the system''s Cellar directory. The `--workflow` option enables Homebrew''s continuous integration workflow, which runs the commands in parallel and reports status updates to the Homebrew CI server.'
