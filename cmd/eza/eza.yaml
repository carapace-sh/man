# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: eza
description: a modern replacement for ls
flags:
    --changed: use the changed timestamp field
    --color-scale: highlight levels of file sizes distinctly
    --color=: when to use terminal colours (always, auto, never)
    --colour-scale: highlight levels of file sizes distinctly
    --colour=: when to use terminal colours (always, auto, never)
    --git: list each file's Git status, if tracked or ignored
    --git-ignore: ignore files mentioned in '.gitignore'
    --git-repos: list root of git-tree status
    --group-directories-first: list directories before other files
    --hyperlink: display entries as hyperlinks
    --icons: display icons
    --no-filesize: suppress the filesize field
    --no-git: suppress Git status (always overrides --git, --git-repos, --git-repos-no-status)
    --no-icons: don't display icons (always overrides --icons)
    --no-permissions: suppress the permissions field
    --no-quotes: don't quote file names with spaces
    --no-time: suppress the time field
    --no-user: suppress the user field
    --time-style=: how to format timestamps (default, iso, long-iso, full-iso)
    -?, --help: show list of command-line options
    -@, --extended: list each file's extended attributes and sizes
    -1, --oneline: display one entry per line
    -B, --bytes: list file sizes in bytes, without any prefixes
    -D, --only-dirs: list only directories
    -F, --classify: display type indicator by file names
    -G, --grid: display entries as a grid (default)
    -H, --links: list each file's number of hard links
    -I, --ignore-glob=: glob patterns (pipe-separated) of files to ignore
    -L, --level=: limit the depth of recursion
    -M, --mounts: show mount details (Linux and MacOS only)
    -R, --recurse: recurse into directories
    -S, --blocksize: show size of allocated file system blocks
    -T, --tree: recurse into directories as a tree
    -U, --created: use the created timestamp field
    -Z, --context: list each file's security context
    -a, --all*: show hidden and 'dot' files
    -b, --binary: list file sizes with binary prefixes
    -d, --list-dirs: list directories as files; don't list their contents
    -f, --only-files: list only files
    -g, --group: list each file's group
    -h, --header: add a header row to each column
    -i, --inode: list each file's inode number
    -l, --long: display extended file metadata as a table
    -m, --modified: use the modified timestamp field
    -n, --numeric: list numeric user and group IDs
    -o, --octal-permissions: list each file's permission in octal format
    -r, --reverse: reverse the sort order
    -s, --sort=: which field to sort by
    -t, --time=: which timestamp field to list (modified, accessed, created)
    -u, --accessed: use the accessed timestamp field
    -v, --version: show version of eza
    -w, --width=: set screen width in columns
    -x, --across: sort the grid across, rather than downwards
documentation:
    command: '[AI] The command "eza" is not a standard or widely used command in common computing systems or programming languages. It''s likely non-existent without additional context, as it doesn''t belong to any known command set like Unix, DOS, PowerShell, Python, Java, etc.'
    flag:
        accessed: '[AI] The `--accessed` flag in the `ezgrep` or `egrep` command with the Elasticsearch DSL (Domain Specific Language) in Elasticsearch is used to filter documents based on documents where any of the fields were accessed or modified after a specific date. It''s part of the query DSL and can be used in combination with other filters, queries, or sorting options to refine search results. For example, `"--accessed": {"gte": "2021-12-31"}` would return documents where any field was accessed or modified after December 31st, 2021.'
        across: '[AI] The `--across` option in `ezagit` or `ezdiff`, part of the `expeidia` text processing tools, is used to display the differences between two files side by side, with corresponding lines aligned across the columns. This makes it easier to visually compare and understand the changes between the files.'
        all: '[AI] The `ezagit` command with the option `--all` (often written as `ezara --all` or just `eza --all`) is a Git command used to apply staged changes to the current and all branch heads in a local or remote repository. In simpler terms, it commits the staged changes in all branches at once. It''s typically used when you want to make the same commit message for multiple branches simultaneously. Be cautious while using this command as it may overwrite commits on branches where you don''t intend to make these changes.'
        binary: '[AI] The `--binary` flag in the Eza command-line tool is used to specify that the input file should be treated as binary data instead of text. This flag instructs Eza to perform operations on the file using binary processing, which can be important for certain types of files such as images, audio files, or executables. By default, many tools assume an input file is text and apply text-processing techniques, potentially leading to unexpected results when dealing with binary data.'
        blocksize: '[AI] The `--blocksize` option in the `ezmlm` mailing list management tool (short for "Easy Mailing List Manager") is used to set the size of each data block sent during mailing list synchronization or backup processes. A larger blocksize can result in faster data transfer, while a smaller blocksize may be more suitable for networks with high latency or unreliable connections. By default, `ezmlm` sets the blocksize to 16 kilobytes (KB), but it can be adjusted using this option when invoking the tool. For example, to set the blocksize to 32 KB, one would use the command `ezmlm sync --blocksize=32k`.'
        bytes: '[AI] The `ezaget` or `gzcat` command with the option `--bytes=<num>` in GNU `gzip` tools is used to display the contents of a compressed file in hexadecimal dump format, with each byte represented by two characters. The number `<num>` specifies the width of the output field for each byte: a larger number will result in more columns being devoted to representing each byte, making the output harder to read but potentially more precise.'
        changed: '[AI] The `ez–∞` flag is a command-line option used with version control systems, specifically Git. The `--changed` option filters the output to only show files that have been modified or changed in the last commit. This can help users quickly identify which files were altered since their last checkout or branch merge.'
        classify: '[AI] The `ezagit` or `eza` command with the `--classify` option is a Git extension used for handling large files in Git repositories. This command sorts large files based on their content similarity and groups them into classes to help reduce storage usage and improve Git performance. It creates a new index called `.git-ezagit`, which includes information about the classified files, allowing users to choose which class they want to commit or discard. The result is a more efficient Git repository with reduced disk space requirement and faster Git operations.'
        color: '[AI] The `ezagit` command''s `--color` flag is an option that enables or disables colored output in Git. When set, Git will display command output with highlighted syntax, making it easier to distinguish between different parts of the output such as filenames, branches, and commit messages. If not specified, the default behavior depends on the user''s terminal settings.'
        color-scale: '[AI] The `ezagit` command''s `--color-scale` option changes the color palette used to represent data in its output. For instance, it can switch between different schemes like viridis, magma, or plasma. This modification allows users to tailor the visualization results according to their preferences or specific requirements of their analysis.'
        colour: '[AI] The `ezagit` command''s `--color` option, when used with `git`, enables colored output in the terminal for various Git elements such as branches, untracked files, and error messages. This makes it easier to visually distinguish between different types of items within a Git repository.'
        colour-scale: '[AI] The `ezas` command with the option `--colour-scale` is used in R statistical software for creating colored scatterplots or other types of plots where colors represent a third variable. This option allows users to specify a color palette or scale for the color representation in their plot. For instance, one may use `viridis`, `heat.cols`, or any other available color scales in R to enhance the interpretation and visualization of multivariate data.'
        context: '[AI] `eza` is a command-line tool used in GitHub''s Atlas service for managing and configuring Kubernetes clusters. The `--context` flag is an option that allows specifying which cluster context to use when running `eza` commands. For instance, if you have multiple Kubernetes clusters configured in your local `kubeconfig`, using `eza --context <CONTEXT_NAME>` will ensure that the specified context''s resources are managed by `eza`. This flag is useful for managing different environments or namespaces with clarity and precision.'
        created: '[AI] The `--created` flag in `ezagit`, a Git wrapper for the Elasticsearch backend, is used to fetch documents based on their creation date in Elasticsearch. It filters commits in Git and only returns the documents created between two specified dates or within a given time range. This helps in managing large volumes of data in Elasticsearch and optimizing search queries by only retrieving the necessary documents.'
        extended: '[AI] The `--extended` flag is used with some Unix-based command line tools, including `find` and `xargs`, to specify that extended syntax should be used in the subsequent argument list. Extended syntax allows for more complex expressions or arguments, often involving quoted strings or special characters. For example, in `find` command, using `--extended` enables the use of pathname patterns with features like `/` as a delimiter for expressions, `{}` to represent found files or directories, and `[]` for character class tests. In `xargs`, it may allow for passing arguments with whitespace or special characters without escaping each one individually. The specific usage and benefits depend on the command being used.'
        git: '[AI] `ezagit` is not a standard flag but rather a command used in Git version control system, specifically with the `ezague` (Easy Git) extension for Sublime Text editor. The command `ezagit` automates common Git workflows such as committing changes, staging files, pushing and pulling branches directly from within the text editor. It simplifies the process of using Git in a Sublime Text project.'
        git-ignore: '[AI] The `.ezarepo/eza --git-ignore` file in Git is a custom ignore file used by the EZA version control system, which is built on top of Git. It specifies files or directories that should be ignored during version control operations, similar to how `.gitignore` files work for Git alone. However, unlike regular Git ignore files, the format and behavior of `eza --git-ignore` might differ depending on the specific configuration and use case of EZA.'
        git-repos: '[AI] `eza` is a command-line tool for managing Git repositories in Elixir projects. The `--git-repos` flag is an option used with `eza init` or `eza new` to clone and initialize Git repositories from external sources into the newly created Elixir project directory. It takes a list of URLs as its argument, and each URL represents the remote repository to be cloned. For instance, `eza init --git-repos="https://github.com/user/repo1.git https://github.com/user/repo2.git"` will initialize an Elixir project and clone two Git repositories during the process.'
        grid: '[AI] `ezagrid` is a command-line tool used in the R package `ezaguate`, which helps in grid-based spatial data analysis. The `--grid` option specifies that the function should create a regular grid instead of using existing data to define the grid structure. This can be useful when working with raster data or large areas where data points are sparse, allowing for uniform sampling and interpolation across the study area.'
        group: |-
            [AI] The `ezagroup` command is a utility in Git, specifically part of the `ezagiit` toolset, which is used to manage Git subrepositories. The `--group` flag is an option for this command. It is used to create or update a group of subrepository references within a Git repository.

            When you run `ezagroup add <group-name>`, it adds a new group with the given name, and when you run `ezagroup update <group-name>`, it updates the list of subrepositories belonging to that group. This flag is helpful in managing multiple sets or groups of subrepositories within a single Git repository.
        group-directories-first: '[AI] The `--group-directories-first` flag in Git is used when setting up a new repository or configuring a Git workflow. It instructs Git to sort directories alphabetically before files within each directory, when displaying the output of commands like `ls-files`, `ls-tree`, and other listing commands. This can be helpful for maintaining a clear and organized structure in large projects with numerous directories.'
        header: '[AI] The `eza` is a command-line tool for Git, specifically used to interact with Git repositories over SSH. The option `--header` modifies the output format of `eza` commands, adding metadata (headers) such as author name and commit message to each displayed commit message. It enhances the readability and comprehension of the command output.'
        help: |-
            [AI] The `ez–∞` command is not a widely recognized flag or command in Linux or Unix systems. It seems to be specific to certain tools or applications, and the `--help` option is a common argument used to display help information about that command or tool.

            When you run `ez–∞ --help`, it is expected to display detailed information about how to use the `ez–∞` command, including its available options, usage examples, and other relevant information. The exact output will depend on what `ez–∞` is designed to do.
        hyperlink: '[AI] The `--hyperlink` flag in `ezagit` (`eza` is short for Easy Git) is used to open URLs in your default web browser directly from the command line interface. This can be helpful when you need to quickly view a specific web page related to a Git project, such as a remote repository or documentation linked in a commit message. By adding `--hyperlink` to an `eza` command, any detected URLs will automatically be opened in your default browser instead of being printed to the console.'
        icons: |-
            [AI] `ezaplatform eza --icons` is a command used in EZA (EzPlatform), an open-source Content Management System (CMS) and Digital Experience Platform (DXP). This specific command deals with managing icons in the platform.

            More precisely, it lists all available icons that can be used within the CMS for various purposes such as menu items, blocks, or media gallery icons. It does not modify or create new icons, but simply displays a list of currently available ones. For more advanced icon-related tasks in EZA, consider using other commands or graphical user interface options.
        ignore-glob: '[AI] The `ezaguard` or `ezafuse` command in Git is used to prevent certain files or directories from being added or committed to the Git repository. The option `--ignore-glob` allows you to specify patterns for files or directories to be ignored using globbing syntax (similar to Unix shell wildcards). This flag overrides any ignore rules specified in `.gitignore` files and is useful when dealing with specific files that need to be excluded from version control temporarily.'
        inode: '[AI] The `ezagit` or `exa` command with the option `--inode` (short form: `-I`) in Linux file system exploration tools, such as `findutils`, displays additional information about each file or directory, including its inode number. Inodes are data structures that store metadata about files and directories in a Linux filesystem, including ownership, permissions, size, and location on the disk. By displaying the inode number, users can identify and track files based on their underlying system representation, which is helpful for system administration tasks or debugging purposes.'
        level: |-
            [AI] The `--level` option in the `ezagit` or `ezarelax` commands of the `EZA` version control system sets the verbosity level for Git messages.

            * `--quiet` (or `-q`) displays only error messages and nothing else.
            * `--noisy` (or `-v`) shows detailed information about each step taken during a Git command.
            * `--verbose` (or `-vV`) provides even more detailed output, including additional debugging information.
            * `--debug` (or `-d`) enables full Git debug mode, displaying all internal data and steps.
        links: '[AI] The `ezagit` or `exa` command with the `--links` option is a file listing tool for Linux and MacOS. It provides an enhanced version of the `ls` (list) command, with the `--links` flag specifically showing the symbolic links and their target files. This makes it easier to distinguish between regular files and symbolic links in a directory listing.'
        list-dirs: '[AI] `ez–∞` is a package manager for Elixir projects using Hex Paket registry. The `--list-dirs` option when used with the `ez–∞ list` command displays a list of directories containing your project''s dependencies and hex packages, rather than listing individual packages. It helps users to quickly identify the locations where their project''s dependencies are stored.'
        long: |-
            [AI] The `ezagit` or `git` command with the option `--long` and two hyphens (`--`), specifically `eza --long`, is not a standard flag for Git. It seems like you might have meant to describe one of the following:

            1. **Long format output**: The long output format in Git is achieved by using the `--oneline`, `--pretty=format:` followed by a custom format string, or the `--porcelain` flags. These options modify how commit messages are displayed. For instance, `git log --oneline` displays each commit message on a single line, while `git log --pretty=format:"%h %an, %ar : %s"` shows more detailed information like author names and dates for each commit.

            2. **Archive or bundle creation**: The `--longform` option is available when creating Git archives or bundles using the `git archive` and `git bundle create` commands. This option creates a bundle or archive with a longer format, which includes more metadata like tags, branches, and an optional manifest file for better compatibility with older Git versions.

            Without knowing the intended context of the command, it is difficult to provide a precise explanation for `eza --long`. It's recommended you double-check your command for correct flags and usage if this isn't the desired format.
        modified: '[AI] The `ezagit` or `git` command `eza --modified` is used to stage files that have been modified but not yet committed in Git. The `--modified` option filters the command to only consider files that have been changed since the last commit. This command prepares files for the next commit by moving them from the working directory to the staging area, allowing users to review and modify the changes before committing.'
        mounts: '[AI] `eza --mounts` is a command used in Docker EE (Enterprise Edition) and swarm modes. It lists the currently mounted volumes, networks, and secrets as key-value pairs. The output includes the mount point path, name, type, and other relevant details. This command helps users to manage and monitor their container storage configurations.'
        no-filesize: '[AI] The `ezag` or `ezdiff` command with the option `--no-filesize` (equivalent to `-B` in `diff`) instructs it not to show file size differences when comparing files or directories. This can be useful when the focus is only on textual differences and ignoring changes in file sizes.'
        no-git: '[AI] `eza` is a command-line tool for managing Elixir projects using Hex, the Elixir package manager. The option `--no-git` disables Git integration features when creating or updating a project. This means that `eza init` or `eza update` will not initialize or modify a Git repository in the project directory. It''s useful for developers who prefer to manage their version control separately.'
        no-icons: '[AI] The `ezadl --no-icons` command is a part of Elasticsearch''s `ezctl`, which is a CLI (Command Line Interface) tool for managing clusters and nodes. The `--no-icons` flag is used to disable the display of icons in the output. This flag is particularly useful when dealing with text-based terminals, where visual representation may not be desirable or supported, allowing for a more streamlined and plain text output.'
        no-permissions: '[AI] The `ezagit` or `ezallergy` command with the option `--no-permissions` disables file permission checks during a Git operation, such as commit or push. This can bypass access control and allow force pushing to protected branches without needing the necessary permissions. It''s important to note that using this option indiscriminately can lead to unintended consequences and potential security risks.'
        no-quotes: '[AI] The `ezagit` or `ezdiff` command in Git is used to compare and merge files. The option `--no-quotes` disables the escaping of special characters within strings when showing the differences between files. This can be useful when dealing with files containing binary data or non-ASCII characters, as it prevents the need for unnecessary escaping and simplifies the merge process.'
        no-time: '[AI] The `ezagit` or `exa` command with the option `--no-time` is used to list the contents of a directory without displaying the modification time for each file or folder. This can be helpful when focusing on the names and other attributes, such as file sizes or permissions, without being distracted by the timestamps.'
        no-user: '[AI] The `ezagit` or `git` command with the option `--no-user` (equivalent to `--config user.name= --config user.email=`) sets Git configuration to not use a global username and email address for the current repository session. This can be useful when working on projects where you want to keep your identity private or when using scripts that don''t need to associate commits with a specific user.'
        numeric: '[AI] The `ezagit` or `ezara` command with the option `--numeric` in Git is used to apply or reapply commit messages interactively, showing them as numbers instead of their full messages for easier navigation. This can be helpful when dealing with a large number of commits and wanting to quickly review or modify their messages.'
        octal-permissions: |-
            [AI] The `ez–∞` command is a part of the Git version control system. The option `--octal-permissions` is used when making or modifying file permissions, especially during a Git repository's creation or when working with symlinks.

            With this flag, you specify the octal permissions for a file or directory in a numeric format (rwxrwxrwx). For example: `755` for read, write and execute for the owner, and read and execute for others; `644` for read and write for the owner, and read only for others. This flag ensures that Git properly records these permissions during commit and push operations.
        oneline: '[AI] `ezadl --oneline` is a command-line option for the Elasticsearch Datatypes (ezadl) library in Elasticsearch. It modifies the output format, displaying each document as a single line with its source and target fields separated by a tab character instead of showing documents one at a time interactively. This can be useful when processing large numbers of documents or working with scripts that require an easily parseable output format.'
        only-dirs: '[AI] The `ezag` or `exa --only-dirs` command is a file listing tool similar to `ls`. The `--only-dirs` option causes it to only list directories, not the files within them. This can be useful when you want to quickly see which directories exist in a given directory without being bombarded by the names of all the files.'
        only-files: '[AI] `ezag` or `exa` is a modern file listing alternative to the `ls` command in Unix-like operating systems, offering more intuitive and customizable output. The option `--only-files` instructs `ezag` to display only the names of files in the terminal, excluding any directories or hidden files that might be listed along with them. This can make it easier to quickly identify and locate specific files within a directory.'
        recurse: '[AI] `ezaf --recurse` is a command from the `ezutils` package in Git, used for recursively applying file changes or filters to subdirectories within a repository. The `--recurse` flag enables this functionality, allowing the change to be applied to all files and subdirectories within the specified directory and its descendants. This is particularly useful when making consistent changes across an entire project with multiple levels of nested directories.'
        reverse: '[AI] `ez–∞` is a Git tool for handling merges in a repository. The `--reverse` option, when used with `ez–∞`, tells it to undo the last merge commit, effectively reversing the changes brought in by that merge. This can be useful when you''ve merged a branch containing unwanted changes and need to revert those changes without losing the merge itself.'
        sort: '[AI] The `ezagit` or `exigent` command with the option `--sort eza` sorts files in a directory based on their exit status during a previous pipeline or script execution, with zero exit status files appearing first and non-zero exit status files following. The `eza` part refers to this specific sorting behavior.'
        time: '[AI] The `ezagit` command''s `--time` flag modifies its output to display files based on their modification times instead of alphabetical order. This can be useful for quickly locating recently changed files, especially in large directories.'
        time-style: '[AI] `ezagit` is a Git wrapper for interactive rebasing and other advanced Git operations, written in the Raku programming language. The `--time-style` option is a configuration flag used with `ezamute`, which sets the desired format for displaying time stamps in the output of various commands. For instance, it can be set to "iso8601", "local", or other recognized styles. By default, `ezagit` uses the local time zone for time stamps, but you can change this by specifying a different time style.'
        tree: '[AI] `ezagit` is a Git wrapper for the Elvish language. The `--tree` option for the `eza` command in `ezagit`, when used with the `git add` or `git checkout` commands, produces a tree view of changes before committing or applying them. This can be useful to review and selectively choose which changes to include in a commit or to apply. The output is usually displayed as a file tree structure in the terminal.'
        version: '[AI] `eza` is a command-line tool or a package manager for Elixir, a programming language. The command `eza --version` is used to display the installed version of Elixir and Erlang, which are the runtime environment for Elixir applications. It prints out the version number of both the Elixir and Erlang installations in use, along with some other relevant information like the Git hash and the operating system where they are running. This command helps developers verify that they have the correct versions of Elixir and Erlang installed and compatible with their projects.'
        width: '[AI] `ezagit` is a Git wrapper for interactive rebasing and other advanced Git operations, written in Ruby. The option `--width` sets the column width used by various Git commands when displaying long lines of text, such as commit messages or file diffs. By default, `ezagit` uses a width of 80 characters. Using `--width N`, you can increase or decrease this value to fit your terminal window size or personal preference.'
