# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: torsocks
description: Shell wrapper to simplify the use of the torsocks(8) library to transparently torify an application
flags:
    --shell: Spawn a torified shell
    --version: Show version
    -P, --port=: Specify Tor port
    -d, --debug: Set debug mode.
    -h, --help: Show this help
    -i, --isolate: Automatic tor isolation. Can't be used with -u/-p
    -p, --pass=: Password for the SOCKS5 authentication
    -u, --user=: Username for the SOCKS5 authentication
documentation:
    command: '[AI] `torsocks` is a Unix utility that allows users to run applications with their network traffic encrypted through The Onion Router (Tor) network, providing enhanced anonymity and security. It creates a SOCKS proxy using Tor''s socks5 protocol, enabling applications to access the internet indirectly through Tor without requiring modification of those applications themselves.'
    flag:
        debug: '[AI] `torsocks` is a Unix utility used to force all outgoing traffic from a program to go through the Tor anonymity network for enhanced privacy and security. The option `--debug` is used to enable debug mode in `torsocks`, which increases the amount of output and provides more detailed information about the Tor connection and traffic flowing through it. This can be useful for troubleshooting or for understanding the inner workings of `torsocks`.'
        help: |-
            [AI] `torsocks` is a SOCKS proxy wrapper for various networking applications. Its main goal is to provide anonymity and privacy by routing network traffic through the Tor network.

            The command `torsocks --help` displays the usage information and available options for the `torsocks` application. Here's a concise breakdown:

            1. `--help`: This option is used to display the help message, including details on all the available commands, options, and their descriptions.
            2. `torsocks [COMMAND]`: The basic command structure of using `torsocks`. It is followed by the specific command (e.g., `bind`, `connect`, or `run`) to perform various tasks with Tor-routed network traffic.
            3. Available commands and their brief descriptions:
               - `bind [PORT]`: Bind a local socket to a specified port while using Tor as proxy.
               - `connect [HOST]:[PORT]`: Establish a connection to a remote host and port through the Tor network.
               - `run [COMMAND] [OPTIONS...]`: Execute a command or application with all its traffic routed through Tor.

            For detailed information about each option, you can refer to the complete help message generated by running `torsocks --help`.
        isolate: '[AI] `torsocks` is a Unix utility that allows users to run applications over Tor anonymously. The `--isolate` option is used with `torsocks` to configure it to only route specified applications'' traffic through Tor, while bypassing the Tor proxy for all other network connections. This provides better control and improved performance by minimizing unnecessary Tor usage, as some applications may not require anonymity or may work more efficiently without it.'
        pass: '[AI] `torsocks` is a Unix utility that proxies all outgoing network traffic through The Onion Router (Tor) network for enhanced anonymity and privacy. The option `--pass` or `-p` is used to specify a list of programs or ports that should bypass the Tor proxy and use the system''s default sockets instead. This can be useful when connecting to trusted servers or services where using Tor might not be necessary, while keeping other traffic anonymous. For example, `torsocks --pass="8.8.8.8:53"` would route all DNS queries to Google''s public DNS server directly without going through the Tor network.'
        port: '[AI] `torsocks` is a tool used to route all outgoing traffic through the Tor network for improved anonymity. The `--port` option specifies which port number `torsocks` should use as its SOCKS proxy port when establishing connections. This can be useful in certain environments where specific ports are blocked or monitored. For instance, `--port 8080` sets the SOCKS proxy port to 8080.'
        shell: '[AI] `torsocks` is a SOCKS proxy tool for Unix systems, which enables anonymous and secure access to the Internet by routing all network traffic through the Tor network. The command `torsocks --shell` starts a new shell (such as bash or zsh) with all its child processes running through the Tor network via `torsocks`. This provides enhanced privacy and security for terminal-based applications as they also use the encrypted Tor connection, in addition to web browsers.'
        user: '[AI] `torsocks` is a Unix utility that proxies network traffic through The Onion Router (Tor) network to enhance privacy and anonymity. The `--user` option is used to specify a custom Tor user identity, which is a random string representing the user agent for outgoing HTTP(S) requests. This option allows users to make their web browsing or other Tor-enabled applications appear as if they originate from different sources, adding another layer of anonymity.'
        version: '[AI] `torsocks --version` is a command used in Unix-like operating systems to check the version information of Torsocks, a SOCKS5 and SOCKS4 proxy client for Tor. When executed, it displays output containing the name of the application, its version number, and any additional build information such as compilation date or commit hash. This command helps users ensure they have the latest version of Torsocks installed and enables them to identify potential compatibility issues with other software.'
