# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: killall
description: kill processes by name
flags:
    -I, --ignore-case: case insensitive process name match
    -V, --version: display version information
    -e, --exact: require exact match for very long names
    -g, --process-group: kill process group instead of process
    -i, --interactive: ask for confirmation before killing
    -l, --list: list all known signal names
    -n, --ns=: match processes that belong to the same namespaces as PID
    -o, --older-than=: kill processes older than TIME
    -q, --quiet: don't print complaints
    -r, --regexp: interpret NAME as an extended regular expression
    -s, --signal=: send this signal instead of SIGTERM
    -u, --user=: kill only process(es) running as USER
    -v, --verbose: report if the signal was successfully sent
    -w, --wait: wait for processes to die
    -y, --younger-than=: kill processes younger than TIME
documentation:
    command: '[AI] `killall` is a Linux command used to send signals to processes based on their names. It allows terminating one or more processes without requiring knowledge of their process IDs (PIDs). The command takes the name of the process as an argument and sends a signal, usually SIGTERM (15), which requests the process to gracefully shut down. If the process does not respond, `killall` can be used with additional options to send more forceful signals such as SIGKILL (9) that immediately terminates the process.'
    flag:
        exact: '[AI] `killall` is a command-line utility in Unix and Linux systems used to send signals to processes based on their names. The `--exact` option, when used with `killall`, ensures that only the process with an exact match to the given name is terminated. This option helps avoid unintended consequences of killing multiple processes sharing a similar name.'
        ignore-case: '[AI] `killall` is a command-line utility in Unix-based systems for sending signals to processes based on their names. The option `--ignore-case` makes `killall` match process names without regard to case. For instance, if you run `killall --ignore-case firefox`, it will terminate both "Firefox" and "firefox" instances. This can be useful when you''re not sure about the capitalization of a process name or want to kill multiple instances with different casings.'
        interactive: '[AI] `killall` is a Linux command used to send signals to processes based on their names. The `--interactive` option, when used with `killall`, makes the command prompt you before sending the signal, allowing you to confirm or cancel each process termination. This is useful when you want to carefully select which processes to terminate and avoid accidentally killing important ones.'
        list: '[AI] `killall --list` is a command used in Unix-based operating systems to display a list of all the processes with names that match a given pattern. The `killall` utility sends signals to processes based on their name, but the `--list` option is used only to display the matching process IDs without terminating them. It''s important to note that using this command without specifying a pattern will display a list of all running processes.'
        ns: |-
            [AI] The `killall` command with the `--ns` option is used in Linux and Unix-based systems to send signals to processes based on their names, but within a specific namespace. This option allows you to kill processes that belong to a certain namespace group, which can be useful in containerized environments or when dealing with systemd services.

            In simple terms, `killall` is a command-line utility for sending signals to processes, while the `--ns` option restricts the target selection to a specific namespace. When used together, this command helps manage and control processes more precisely within complex system configurations.
        older-than: '[AI] `killall` is a command-line utility in Unix and Linux systems used to send signals to processes. The option `--older-than` followed by a time argument allows sending SIGTERM or SIGKILL signals to all processes with a name matching the given pattern that have been running for longer than the specified time (in seconds). This is useful for terminating long-running processes that may be unresponsive or causing issues. For example, `killall --older-than 120 firefox` would send a signal to all Firefox processes running for more than 120 seconds. If no response is received, a SIGKILL signal can be used instead (specified with the `--signal=9` option).'
        process-group: '[AI] `killall` is a Linux command used to send signals to processes based on their names. The `--process-group` option specifies that all processes with the same process group ID as the specified process should be terminated. This can be useful when dealing with hung or unresponsive processes in a terminal session, for example, when a background script goes awry and needs to be forcefully stopped. The signal sent by default is TERM, which politely asks the process to terminate; however, other signals like KILL (which forces immediate termination) can be specified as well.'
        quiet: '[AI] `killall` is a Linux command used to send signals to processes based on their names. The `--quiet` option is used with it to suppress the default output of process identifiers (PIDs) that are killed. In simple terms, using `killall --quiet <process-name>` will silently terminate all instances of the specified process without displaying any confirmation messages or PID lists.'
        regexp: '[AI] `killall` is a Unix command used to send signals to processes based on their names or process groups. The option `--regexp` allows specifying a regular expression pattern to match against the process names when selecting which processes to signal. For example, `killall --regexp ''mysqld''` would signal all processes whose names contain the string ''mysqld''. The default signal sent is usually TERM, which requests that the process gracefully terminate itself. However, you can use other signals such as KILL to forcefully terminate the process.'
        signal: '[AI] `killall` is a command-line utility in Unix and Unix-like operating systems used to send signals to processes based on their names. The `--signal` option allows specifying a specific signal to be sent. Common signals include `SIGTERM` (default, politely asking the process to terminate), `SIGKILL` (forcefully terminating a process) and others. So, `killall --signal SIGTERM <process-name>` sends the `SIGTERM` signal to all processes with the given name, while `killall --signal SIGKILL <process-name>` sends the `SIGKILL` signal, forcing them to terminate immediately.'
        user: '[AI] The `killall` command with the `--user` option is used to send signals to processes running under a specific user account. This allows you to terminate processes belonging to that user without having to know their individual process IDs (PIDs). It''s useful in situations where you need to end all instances of a particular application or service for a specific user, for example, when performing system maintenance tasks or troubleshooting. The basic syntax is `killall [OPTION]... [NAME]... --user USER`, where "USER" is the name or ID of the target user account.'
        verbose: '[AI] `killall` is a Linux command used to send signals to processes based on their names. The `--verbose` option is used with it to provide detailed information about which processes are being terminated. When you run `killall --verbose <process-name>`, it displays the process IDs (PIDs) and other relevant details of each process that matches the given name before terminating them, making it easier for users to confirm if they intended to kill the correct process.'
        version: '[AI] `killall --version` is a command used in Unix-like operating systems to display the version information of the `killall` utility. The `killall` command is used to send signals to processes based on their names, terminating them if signaled with the appropriate signal (default is SIGTERM). By appending the `--version` option, it will output the version number and other relevant information such as compilation date, operating system, and other details.'
        wait: '[AI] `killall` is a Linux utility used to send signals to processes based on their names. The option `--wait` causes `killall` to wait until all processes with the given name have been terminated before exiting. This can be useful when you want to ensure that all instances of a particular process are stopped before moving on to other tasks.'
        younger-than: '[AI] `killall` is a command-line utility in Unix and Unix-like operating systems used to send signals to processes based on their names. The option `-- younger-than <PID>` specifies that only the processes with PIDs younger than the given PID should be killed. This can be useful when trying to terminate a related group of processes without affecting others, for instance during system shutdown or forcefully closing resource-intensive applications.'
