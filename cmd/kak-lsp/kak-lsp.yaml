# yaml-language-server: $schema=https://carapace.sh/schemas/command.json
name: kak-lsp
description: Kakoune Language Server Protocol Client
flags:
    --initial-request: Read initial request from stdin
    --kakoune: Generate commands for Kakoune to plug in kak-lsp
    --log=: File to write the log into instead of stderr
    --request: Forward stdin to kak-lsp server
    -V, --version: Prints version information
    -c, --config=: Read config from FILE
    -d, --daemonize: Daemonize kak-lsp process (server only)
    -h, --help: Prints help information
    -s, --session=: Session id to communicate via unix socket
    -t, --timeout=: Session timeout in seconds (default 1800)
    -v: Sets the level of verbosity (use up to 4 times)
documentation:
    command: '[AI] `kak-lsp` is a command for Kakoune text editor, which stands for "Kakoune Language Server Protocol." It''s an interface that enables Kakoune to interact with external language servers, such as LuaLaTeX or Clangd for better code completion, syntax checking, and other advanced features. This command helps in providing a more robust development experience within the text editor.'
    flag:
        config: '[AI] `kak-lsp` is a Language Server Protocol (LSP) client for the Kakoune text editor. The `--config` option is used to specify the path to a configuration file for `kak-lsp`. This file can include settings such as which language servers to use and their respective options, enabling or disabling features like signature help and code formatting, among others.'
        daemonize: '[AI] `kak-lsp` is a language server process for the Kakoune text editor. The `--daemonize` flag is an option that instructs `kak-lsp` to run as a background daemon when started, rather than waiting for a connection request from an editor client. This allows the language server to be always ready to provide syntax checking, code completion, and other language services to Kakoune as needed.'
        help: |-
            [AI] `kak-lsp` is a Language Server Protocol (LSP) client for the text editor Kakoune. The command `kak --help` displays help information about `kak-lsp`. Here's a brief explanation of each part:

            * `kak-`: Prefix indicating this is a plugin or extension for Kakoune.
            * `lsp`: Stands for "Language Server Protocol". It's a communication protocol between editors and language servers that enables rich editing features, such as autocompletion, syntax checking, etc.
            * The hyphen (`--`) indicates the start of command-line options.
            * `help`: This option requests help information to be displayed. In this context, it's asking for detailed information about how to use the plugin with Kakoune.
        initial-request: '[AI] `kak-lsp` is a Language Server Protocol (LSP) client for the text editor Kakoune. The `--initial-request` flag is an option used when starting `kak-lsp`. It instructs `kak-lsp` to send an initial connection request to an LSP server, enabling features like autocompletion, syntax highlighting, and error checking right from the start of editing a file. This helps in improving coding productivity within Kakoune.'
        kakoune: '[AI] The `kak-lsp` flag is used with the Kakoune text editor to enable the Language Server Protocol (LSP) integration. This allows for better code completion, syntax highlighting, and other advanced features when editing source code files. With this flag, Kakoune communicates with an external language server, sending text snippets and receiving responses, enhancing the editing experience for specific programming languages.'
        log: '[AI] `kak` is a text editor for the KDE desktop environment. The command `kak --log` followed by `--lsp` enables Language Server Protocol support for syntax checking and code completion in `kak`. With this flag, the editor logs its interactions with the language server to a file for debugging or analysis purposes.'
        request: '[AI] `kak-lsp --request` is a command used in the Kakoune text editor to activate Language Server Protocol (LSP) support. LSP is a set of standards for building software tools that develop and understand source code, allowing advanced features like autocomplete, syntax highlighting, and error checking. The `--request` flag is optional and specifies the type of LSP request, such as starting a new client connection or forwarding a file to an existing one.'
        session: '[AI] `kak` is a text editor for the Korn Shell (ksh). The command `kak --session` starts or opens an existing session of the text editor, which can be saved and restored later. The option `--session` specifies that the given argument is the name or path to the session file to use. For example: `kak --session my_editing_session` would open the text editing session named "my\_editing\_session" if it exists, otherwise it would create a new one with that name.'
        timeout: '[AI] The `--timeout` flag in the `kak` and `lsp` (Language Server Protocol) commands is used to set a timeout for waiting for a response from an LSP server. If the server does not respond within the specified time, the command will terminate with an error. This flag helps prevent unnecessary delays or deadlocks caused by unresponsive servers. The value of the timeout can be specified in milliseconds or other time units recognized by the command line tool or scripting language being used.'
        v: '[AI] `kak-lsp` is a Language Server Protocol (LSP) client for the text editor Kakoune. The flag `-v` is used to enable verbose output, which means that more detailed information about the LSP communication between the editor and the language server will be displayed in the terminal.'
        version: '[AI] `kak-lsp` is a language server process for the Kakoune text editor. The command `kak-lsp --version` is used to check the version of the installed `kak-lsp` language server. When executed, it returns the version number or information about the installed language server, allowing users to ensure they have the latest version or troubleshoot potential compatibility issues.'
